{
    "args": {
        "data_type": "spider",
        "split": "test",
        "k_shot": 0,
        "prompt_repr": "NUMBERSIGN",
        "example_type": null,
        "selector_type": null,
        "max_seq_len": 4096,
        "max_ans_len": 200,
        "tokenizer": "gpt-3.5-turbo",
        "scope_factor": 100,
        "pre_test_result": null
    },
    "costs": {
        "prompt_tokens_per_prompt": 0.0,
        "gpt-4": 13.24,
        "gpt-3.5-turbo": 0.662,
        "text-davinci-003": 6.62,
        "example_quality": 1,
        "pattern_similarity": 1
    },
    "questions": [
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### How many 'end trip' activities are there in the event log?\nSELECT ",
            "response": "count(*) FROM event_log WHERE activity = 'End trip'",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "1_0"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### How many 'end trip' activities do we have?\nSELECT ",
            "response": "count(*) FROM event_log WHERE activity = 'End trip'",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "1_1"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### How many times was the 'end trip' activity performed?\nSELECT ",
            "response": "count(*) FROM event_log WHERE activity = 'End trip'",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "1_2"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### How many occurrences of the 'end trip' activity are there in the event log?\nSELECT ",
            "response": "count(*) FROM event_log WHERE activity = 'End trip'",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "1_3"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### How many times did the 'end trip' activity occur?\nSELECT ",
            "response": "count(*) FROM event_log WHERE activity = 'End trip'",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "1_4"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### How many events related to the 'end trip' activity are there in the event log?\nSELECT ",
            "response": "count(*) FROM event_log WHERE activity = 'End trip'",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "1_5"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### How many times was the activity named 'end trip' performed?\nSELECT ",
            "response": "count(*) FROM event_log WHERE activity = 'End trip'",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "1_6"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Report the number of times the 'end trip' activity was performed.\nSELECT ",
            "response": "count(*) FROM event_log WHERE activity = 'End trip'",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "1_7"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Report the number of occurrences of the 'end trip' activity.\nSELECT ",
            "response": "count(*) FROM event_log WHERE activity = 'End trip'",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "1_8"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Report the number of occurrences of the activity named 'end trip'.\nSELECT ",
            "response": "count(*) FROM event_log WHERE activity = 'End trip'",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "1_9"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### How many times was the end of a trip recorded?\nSELECT ",
            "response": "count(*) FROM event_log WHERE activity = 'End trip'",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "1_10"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### How many performances of the 'end trip' activity were performed by the James resource?\nSELECT ",
            "response": "count(*) FROM event_log WHERE activity = 'End trip' AND resource = 'James'",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "2_0"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### How many activities do we have that were updated by the James resource and that refer to the 'end trip'?\nSELECT ",
            "response": "count(*) FROM event_log WHERE activity = 'End trip' AND resource = 'James'",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "2_1"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### How many activity performances were updated by the James resource and refer to the 'end trip'?\nSELECT ",
            "response": "count(*) FROM event_log WHERE activity = 'End trip' AND resource = 'James'",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "2_2"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### How many times was the 'end trip' activity performed by the James resource?\nSELECT ",
            "response": "count(*) FROM event_log WHERE activity = 'End trip' AND resource = 'James'",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "2_3"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### How many times was the activity named 'end trip' performed by the James resource?\nSELECT ",
            "response": "count(*) FROM event_log WHERE activity = 'End trip' AND resource = 'James'",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "2_4"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### How many events related to the 'end trip' activity are linked to the James resource?\nSELECT ",
            "response": "count(*) FROM event_log WHERE activity = 'End trip' AND resource = 'James'",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "2_5"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### How many events related to the 'end trip' activity are also linked to the James resource?\nSELECT ",
            "response": "count(*) FROM event_log WHERE activity = 'End trip' AND resource = 'James'",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "2_6"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Report the number of times the activity named 'end trip' was performed by the James resource.\nSELECT ",
            "response": "count(*) FROM event_log WHERE activity = 'End trip' AND resource = 'James'",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "2_7"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Report the number of occurrences of the 'end trip' activity associated with the James resource.\nSELECT ",
            "response": "count(*) FROM event_log WHERE activity = 'End trip' AND resource = 'James'",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "2_8"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### How many times did the employee James register the finalization of a trip?\nSELECT ",
            "response": "count(*) FROM event_log WHERE activity = 'End trip' AND resource = 'James'",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "2_9"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### How many activities updated by James refer to the end of a trip?\nSELECT ",
            "response": "count(*) FROM event_log WHERE activity = 'End trip' AND resource = 'James'",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "2_10"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### What is the number of events performed by each of the resources?\nSELECT ",
            "response": "resource,COUNT(*) FROM event_log GROUP BY resource",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "3_0"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Show the number of events associated with each resource.\nSELECT ",
            "response": "resource,COUNT(*) FROM event_log GROUP BY resource",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "3_1"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### How many events is each of the resources associated with?\nSELECT ",
            "response": "resource,COUNT(*) FROM event_log GROUP BY resource",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "3_2"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### In how many events did each of the resources act?\nSELECT ",
            "response": "resource,COUNT(*) FROM event_log GROUP BY resource",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "3_3"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Report the number of events performed by each of the resources.\nSELECT ",
            "response": "resource,COUNT(*) FROM event_log GROUP BY resource",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "3_4"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### How many times does each of the resources appear in the event log?\nSELECT ",
            "response": "resource,COUNT(*) FROM event_log GROUP BY resource",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "3_5"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Report the number of times each of the resources appears in the event log.\nSELECT ",
            "response": "resource,COUNT(*) FROM event_log GROUP BY resource",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "3_6"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Report how many events each resource is involved in.\nSELECT ",
            "response": "resource,COUNT(*) FROM event_log GROUP BY resource",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "3_7"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### How many activity performances is each resource involved in?\nSELECT ",
            "response": "resource,COUNT(*) FROM event_log GROUP BY resource",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "3_8"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### What is the number of activity performances that each resource is involved in?\nSELECT ",
            "response": "resource,COUNT(*) FROM event_log GROUP BY resource",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "3_9"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Quantify the performance of each employee in terms of actions taken on travel declarations.\nSELECT ",
            "response": "resource,COUNT(*) FROM event_log GROUP BY resource",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "3_10"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### How many events were performed by the 'Peter' resource?\nSELECT ",
            "response": "count(*) FROM event_log WHERE resource = 'Peter'",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "4_0"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### How many times has the 'Peter' resource performed an activity?\nSELECT ",
            "response": "count(*) FROM event_log WHERE resource = 'Peter'",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "4_1"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### How many times has the employee 'Peter' performed an activity?\nSELECT ",
            "response": "count(*) FROM event_log WHERE resource = 'Peter'",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "4_2"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### How many events were run by the employee 'Peter'?\nSELECT ",
            "response": "count(*) FROM event_log WHERE resource = 'Peter'",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "4_3"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Report the number of times the 'Peter' resource was responsible for an activity.\nSELECT ",
            "response": "count(*) FROM event_log WHERE resource = 'Peter'",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "4_4"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Report the number of times the employee 'Peter' was responsible for an activity.\nSELECT ",
            "response": "count(*) FROM event_log WHERE resource = 'Peter'",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "4_5"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Quantify the performance of the employee Peter in terms of actions taken on travel declarations.\nSELECT ",
            "response": "count(*) FROM event_log WHERE resource = 'Peter'",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "4_6"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Show all cases that terminated in March 2018.\nSELECT ",
            "response": "idcase FROM event_log GROUP BY idcase HAVING strftime('%Y-%m', MAX(timestamp)) = '2018-03'",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "5_0"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Show all cases that ended in March 2018.\nSELECT ",
            "response": "idcase FROM event_log GROUP BY idcase HAVING strftime('%Y-%m', MAX(timestamp)) = '2018-03'",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "5_1"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Report the identifier of cases that terminated in March 2018.\nSELECT ",
            "response": "idcase FROM event_log GROUP BY idcase HAVING strftime('%Y-%m', MAX(timestamp)) = '2018-03'",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "5_2"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Report the identifier for cases that ended in March 2018.\nSELECT ",
            "response": "idcase FROM event_log GROUP BY idcase HAVING strftime('%Y-%m', MAX(timestamp)) = '2018-03'",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "5_3"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Report the identifier of all cases whose last event occurred in March 2018.\nSELECT ",
            "response": "idcase FROM event_log GROUP BY idcase HAVING strftime('%Y-%m', MAX(timestamp)) = '2018-03'",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "5_4"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Which cases terminated in March 2018?\nSELECT ",
            "response": "idcase FROM event_log GROUP BY idcase HAVING strftime('%Y-%m', MAX(timestamp)) = '2018-03'",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "5_5"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Which cases ended in March 2018?\nSELECT ",
            "response": "idcase FROM event_log GROUP BY idcase HAVING strftime('%Y-%m', MAX(timestamp)) = '2018-03'",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "5_6"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Which declarations ended in March 2018?\nSELECT ",
            "response": "idcase FROM event_log GROUP BY idcase HAVING strftime('%Y-%m', MAX(timestamp)) = '2018-03'",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "5_7"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Show all cases that went through the 'declaration rejected by pre-approver' activity, except those in which the activity was performed by the Douglas resource.\nSELECT ",
            "response": "DISTINCT idcase FROM event_log WHERE activity = 'Declaration rejected by pre-approver' AND resource != 'Douglas'",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "6_0"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Show the identifiers of the cases that went through the 'declaration rejected by pre-approver' activity, except those in which the activity was performed by the Douglas 'resource'.\nSELECT ",
            "response": "DISTINCT idcase FROM event_log WHERE activity = 'Declaration rejected by pre-approver' AND resource != 'Douglas'",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "6_1"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Show all cases that went through the 'declaration rejected by pre-approver' activity, except those in which the activity was carried out by the Douglas resource.\nSELECT ",
            "response": "DISTINCT idcase FROM event_log WHERE activity = 'Declaration rejected by pre-approver' AND resource != 'Douglas'",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "6_2"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Show the identifiers of the cases that went through the 'declaration rejected by pre-approver' activity, except those in which the activity was carried out by the Douglas resource.\nSELECT ",
            "response": "DISTINCT idcase FROM event_log WHERE activity = 'Declaration rejected by pre-approver' AND resource != 'Douglas'",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "6_3"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Report the identifiers of the cases that went through the 'declaration rejected by pre-approver' activity, except those in which the activity was performed by the Douglas 'resource'.\nSELECT ",
            "response": "DISTINCT idcase FROM event_log WHERE activity = 'Declaration rejected by pre-approver' AND resource != 'Douglas'",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "6_4"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Retrieve the identifiers of cases that went through the 'declaration rejected by pre-approver' activity, except those in which the activity was performed by Douglas 'resource'.\nSELECT ",
            "response": "DISTINCT idcase FROM event_log WHERE activity = 'Declaration rejected by pre-approver' AND resource != 'Douglas'",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "6_5"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### List the identifiers of the cases that went through the 'declaration rejected by pre-approver' activity, except those in which the activity was performed by the Douglas 'resource'.\nSELECT ",
            "response": "DISTINCT idcase FROM event_log WHERE activity = 'Declaration rejected by pre-approver' AND resource != 'Douglas'",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "6_6"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### List all cases that went through the 'declaration rejected by pre-approver' activity, except those in which the activity was performed by the Douglas resource.\nSELECT ",
            "response": "DISTINCT idcase FROM event_log WHERE activity = 'Declaration rejected by pre-approver' AND resource != 'Douglas'",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "6_7"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Report all cases that went through the 'declaration rejected by pre-approver' activity, except those in which the activity was performed by the Douglas resource.\nSELECT ",
            "response": "DISTINCT idcase FROM event_log WHERE activity = 'Declaration rejected by pre-approver' AND resource != 'Douglas'",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "6_8"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Retrieve all cases that went through the 'declaration rejected by pre-approver' activity, except those in which the activity was performed by the Douglas resource.\nSELECT ",
            "response": "DISTINCT idcase FROM event_log WHERE activity = 'Declaration rejected by pre-approver' AND resource != 'Douglas'",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "6_9"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### In which cases was the 'declaration rejected by pre-approver' activity not performed by the Douglas resource?\nSELECT ",
            "response": "DISTINCT idcase FROM event_log WHERE activity = 'Declaration rejected by pre-approver' AND resource != 'Douglas'",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "6_10"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Which declarations were rejected by a pre-approver other than Douglas?\nSELECT ",
            "response": "DISTINCT idcase FROM event_log WHERE activity = 'Declaration rejected by pre-approver' AND resource != 'Douglas'",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "6_11"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Show all declarations rejected by the pre-approver other than Douglas.\nSELECT ",
            "response": "DISTINCT idcase FROM event_log WHERE activity = 'Declaration rejected by pre-approver' AND resource != 'Douglas'",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "6_12"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### How many different resources are there in the event log?\nSELECT ",
            "response": "COUNT(DISTINCT resource) FROM event_log",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "7_0"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### How many distinct resources are there in the event log?\nSELECT ",
            "response": "COUNT(DISTINCT resource) FROM event_log",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "7_1"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### How many resources are there in the event log?\nSELECT ",
            "response": "COUNT(DISTINCT resource) FROM event_log",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "7_2"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### How many different people performed activities?\nSELECT ",
            "response": "COUNT(DISTINCT resource) FROM event_log",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "7_3"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### How many different resources are there in the log?\nSELECT ",
            "response": "COUNT(DISTINCT resource) FROM event_log",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "7_4"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### How many different people appear in the event log?\nSELECT ",
            "response": "COUNT(DISTINCT resource) FROM event_log",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "7_5"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Report how many different resources performed activities.\nSELECT ",
            "response": "COUNT(DISTINCT resource) FROM event_log",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "7_6"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### How many different resources appear in the event log?\nSELECT ",
            "response": "COUNT(DISTINCT resource) FROM event_log",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "7_7"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### How many different resources performed activities?\nSELECT ",
            "response": "COUNT(DISTINCT resource) FROM event_log",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "7_8"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Report how many different resources there are in the event log.\nSELECT ",
            "response": "COUNT(DISTINCT resource) FROM event_log",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "7_9"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Report how many different people appear in the event log.\nSELECT ",
            "response": "COUNT(DISTINCT resource) FROM event_log",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "7_10"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Report how many employees were involved in processing the declarations.\nSELECT ",
            "response": "COUNT(DISTINCT resource) FROM event_log",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "7_11"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### How many employees worked on processing the declarations?\nSELECT ",
            "response": "COUNT(DISTINCT resource) FROM event_log",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "7_12"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### What is the total number of events related to each resource?\nSELECT ",
            "response": "COUNT(*), resource FROM event_log GROUP BY resource",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "8_0"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### What is the total number of events each resource worked on?\nSELECT ",
            "response": "COUNT(*), resource FROM event_log GROUP BY resource",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "8_1"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### What is the total number of events in which each resource was involved?\nSELECT ",
            "response": "COUNT(*), resource FROM event_log GROUP BY resource",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "8_2"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### What is the total number of actions performed by each employee during the processing of the declarations?\nSELECT ",
            "response": "COUNT(*), resource FROM event_log GROUP BY resource",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "8_3"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### What are the cases with cost events greater than 2,225?\nSELECT ",
            "response": "DISTINCT idcase FROM event_log WHERE cost > 2225",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "9_0"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Report the identifiers of cases that have events with costs greater than 2,225.\nSELECT ",
            "response": "DISTINCT idcase FROM event_log WHERE cost > 2225",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "9_1"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### What are the cases associated with events that cost more than 2,225?\nSELECT ",
            "response": "DISTINCT idcase FROM event_log WHERE cost > 2225",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "9_2"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Which declarations are associated with actions that cost more than 2,225?\nSELECT ",
            "response": "DISTINCT idcase FROM event_log WHERE cost > 2225",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "9_3"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Report the identifier of declarations in which any action had a cost greater than 2,225.\nSELECT ",
            "response": "DISTINCT idcase FROM event_log WHERE cost > 2225",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "9_4"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Which resources participated in the most events?\nSELECT ",
            "response": "resource FROM event_log GROUP BY resource HAVING COUNT(*) = (SELECT COUNT(*) FROM event_log GROUP BY resource ORDER BY COUNT(*) DESC LIMIT 1)",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "10_0"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Which resources had the most related events?\nSELECT ",
            "response": "resource FROM event_log GROUP BY resource HAVING COUNT(*) = (SELECT COUNT(*) FROM event_log GROUP BY resource ORDER BY COUNT(*) DESC LIMIT 1)",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "10_1"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Which resources had the greatest number of related events?\nSELECT ",
            "response": "resource FROM event_log GROUP BY resource HAVING COUNT(*) = (SELECT COUNT(*) FROM event_log GROUP BY resource ORDER BY COUNT(*) DESC LIMIT 1)",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "10_2"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### What resources were related to the greatest number of events?\nSELECT ",
            "response": "resource FROM event_log GROUP BY resource HAVING COUNT(*) = (SELECT COUNT(*) FROM event_log GROUP BY resource ORDER BY COUNT(*) DESC LIMIT 1)",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "10_3"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Which resources were responsible for executing the most events?\nSELECT ",
            "response": "resource FROM event_log GROUP BY resource HAVING COUNT(*) = (SELECT COUNT(*) FROM event_log GROUP BY resource ORDER BY COUNT(*) DESC LIMIT 1)",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "10_4"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Which resources were responsible for executing the greatest number of events?\nSELECT ",
            "response": "resource FROM event_log GROUP BY resource HAVING COUNT(*) = (SELECT COUNT(*) FROM event_log GROUP BY resource ORDER BY COUNT(*) DESC LIMIT 1)",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "10_5"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Which were the resources that had the most related events?\nSELECT ",
            "response": "resource FROM event_log GROUP BY resource HAVING COUNT(*) = (SELECT COUNT(*) FROM event_log GROUP BY resource ORDER BY COUNT(*) DESC LIMIT 1)",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "10_6"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Which resources participated in the greatest number of events?\nSELECT ",
            "response": "resource FROM event_log GROUP BY resource HAVING COUNT(*) = (SELECT COUNT(*) FROM event_log GROUP BY resource ORDER BY COUNT(*) DESC LIMIT 1)",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "10_7"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Which resources were related to the most events?\nSELECT ",
            "response": "resource FROM event_log GROUP BY resource HAVING COUNT(*) = (SELECT COUNT(*) FROM event_log GROUP BY resource ORDER BY COUNT(*) DESC LIMIT 1)",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "10_8"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Which resources were related to the greatest number of events?\nSELECT ",
            "response": "resource FROM event_log GROUP BY resource HAVING COUNT(*) = (SELECT COUNT(*) FROM event_log GROUP BY resource ORDER BY COUNT(*) DESC LIMIT 1)",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "10_9"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Which employees work the most during the processing of declarations?\nSELECT ",
            "response": "resource FROM event_log GROUP BY resource HAVING COUNT(*) = (SELECT COUNT(*) FROM event_log GROUP BY resource ORDER BY COUNT(*) DESC LIMIT 1)",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "10_10"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Which resources are related to most events and how many events are they related to?\nSELECT ",
            "response": "resource, COUNT(*) FROM event_log GROUP BY resource HAVING COUNT(*) = (SELECT COUNT(*) FROM event_log GROUP BY resource ORDER BY COUNT(*) DESC LIMIT 1)",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "11_0"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Which resources are related to the greatest number of events and how many events are they related to?\nSELECT ",
            "response": "resource, COUNT(*) FROM event_log GROUP BY resource HAVING COUNT(*) = (SELECT COUNT(*) FROM event_log GROUP BY resource ORDER BY COUNT(*) DESC LIMIT 1)",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "11_1"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Which resources were most related to events and how many events were they related to?\nSELECT ",
            "response": "resource, COUNT(*) FROM event_log GROUP BY resource HAVING COUNT(*) = (SELECT COUNT(*) FROM event_log GROUP BY resource ORDER BY COUNT(*) DESC LIMIT 1)",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "11_2"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Which resources were responsible for executing more events and how many events were under their responsibility?\nSELECT ",
            "response": "resource, COUNT(*) FROM event_log GROUP BY resource HAVING COUNT(*) = (SELECT COUNT(*) FROM event_log GROUP BY resource ORDER BY COUNT(*) DESC LIMIT 1)",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "11_3"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### What resources were responsible for executing the greatest number of events and how many events were under their responsibility?\nSELECT ",
            "response": "resource, COUNT(*) FROM event_log GROUP BY resource HAVING COUNT(*) = (SELECT COUNT(*) FROM event_log GROUP BY resource ORDER BY COUNT(*) DESC LIMIT 1)",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "11_4"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Which resources participated in the most events and how many events are there?\nSELECT ",
            "response": "resource, COUNT(*) FROM event_log GROUP BY resource HAVING COUNT(*) = (SELECT COUNT(*) FROM event_log GROUP BY resource ORDER BY COUNT(*) DESC LIMIT 1)",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "11_5"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Which resources participated in the greatest number of events and how many events were there?\nSELECT ",
            "response": "resource, COUNT(*) FROM event_log GROUP BY resource HAVING COUNT(*) = (SELECT COUNT(*) FROM event_log GROUP BY resource ORDER BY COUNT(*) DESC LIMIT 1)",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "11_6"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Who are the most productive employees and how many times did they act on the declarations already registered?\nSELECT ",
            "response": "resource, COUNT(*) FROM event_log GROUP BY resource HAVING COUNT(*) = (SELECT COUNT(*) FROM event_log GROUP BY resource ORDER BY COUNT(*) DESC LIMIT 1)",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "11_7"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### List all resources and how many events each one is related to, in descending order of the number of events.\nSELECT ",
            "response": "resource, COUNT(*) FROM event_log GROUP BY resource ORDER BY COUNT(*) DESC",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "12_0"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### List all resources accompanied by how many events each one is related to and sort the answer in descending order by number of events.\nSELECT ",
            "response": "resource, COUNT(*) FROM event_log GROUP BY resource ORDER BY COUNT(*) DESC",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "12_1"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### List all resources and the number of events each is responsible for. Sort the answer in descending order in relation to the number of events.\nSELECT ",
            "response": "resource, COUNT(*) FROM event_log GROUP BY resource ORDER BY COUNT(*) DESC",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "12_2"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### List all resources and how many events each resource participated in. Sort the answer in descending order considering the number of events.\nSELECT ",
            "response": "resource, COUNT(*) FROM event_log GROUP BY resource ORDER BY COUNT(*) DESC",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "12_3"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### List the resources and the number of times they performed activities. Sort the answer in descending order by number of activity performances.\nSELECT ",
            "response": "resource, COUNT(*) FROM event_log GROUP BY resource ORDER BY COUNT(*) DESC",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "12_4"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Make an ordered list of employees, from most productive to least productive, stating how many times each one was involved in processing declarations.\nSELECT ",
            "response": "resource, COUNT(*) FROM event_log GROUP BY resource ORDER BY COUNT(*) DESC",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "12_5"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Which events have a cost other than null?\nSELECT ",
            "response": "* FROM event_log WHERE cost IS NOT NULL",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "13_0"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Which events have a non-null cost?\nSELECT ",
            "response": "* FROM event_log WHERE cost IS NOT NULL",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "13_1"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### List the events that have a non-null cost.\nSELECT ",
            "response": "* FROM event_log WHERE cost IS NOT NULL",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "13_2"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### What are the events in which the cost is not null?\nSELECT ",
            "response": "* FROM event_log WHERE cost IS NOT NULL",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "13_3"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### List the events that have a cost other than null.\nSELECT ",
            "response": "* FROM event_log WHERE cost IS NOT NULL",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "13_4"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Which events have a reported cost?\nSELECT ",
            "response": "* FROM event_log WHERE cost IS NOT NULL",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "13_5"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### What are the events for which there is a cost reported?\nSELECT ",
            "response": "* FROM event_log WHERE cost IS NOT NULL",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "13_6"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### List the events that have a reported cost.\nSELECT ",
            "response": "* FROM event_log WHERE cost IS NOT NULL",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "13_7"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### List the events for which there is a reported cost.\nSELECT ",
            "response": "* FROM event_log WHERE cost IS NOT NULL",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "13_8"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Report all occurrences in the processing of declarations where costs were communicated to the university\nSELECT ",
            "response": "* FROM event_log WHERE cost IS NOT NULL",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "13_9"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### What information is associated with events relating to the 'start trip' or 'request payment' activities?\nSELECT ",
            "response": "* FROM event_log WHERE activity = 'Start trip' OR activity = 'Request payment'",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "14_0"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Return event data related to the performance of the 'start trip' or 'request payment' activities.\nSELECT ",
            "response": "* FROM event_log WHERE activity = 'Start trip' OR activity = 'Request payment'",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "14_1"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Return information associated with events related to 'start trip' or 'request payment' activities.\nSELECT ",
            "response": "* FROM event_log WHERE activity = 'Start trip' OR activity = 'Request payment'",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "14_2"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### List the data relating to the events associated with the activity instances named 'start trip' or 'request payment'.\nSELECT ",
            "response": "* FROM event_log WHERE activity = 'Start trip' OR activity = 'Request payment'",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "14_3"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### I need information associated with the actions that mark the start of a trip and the actions that indicate that a payment request has been made.\nSELECT ",
            "response": "* FROM event_log WHERE activity = 'Start trip' OR activity = 'Request payment'",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "14_4"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### What are the most frequent activities?\nSELECT ",
            "response": "activity FROM event_log GROUP BY activity HAVING COUNT(*) = (SELECT COUNT(*) FROM event_log GROUP BY activity ORDER BY COUNT(*) DESC LIMIT 1)",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "15_0"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### What are the most frequently activities performed?\nSELECT ",
            "response": "activity FROM event_log GROUP BY activity HAVING COUNT(*) = (SELECT COUNT(*) FROM event_log GROUP BY activity ORDER BY COUNT(*) DESC LIMIT 1)",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "15_1"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Which activities appear most frequently in the event log?\nSELECT ",
            "response": "activity FROM event_log GROUP BY activity HAVING COUNT(*) = (SELECT COUNT(*) FROM event_log GROUP BY activity ORDER BY COUNT(*) DESC LIMIT 1)",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "15_2"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Retrieve the names of the activities that are most frequently performed in this business process.\nSELECT ",
            "response": "activity FROM event_log GROUP BY activity HAVING COUNT(*) = (SELECT COUNT(*) FROM event_log GROUP BY activity ORDER BY COUNT(*) DESC LIMIT 1)",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "15_3"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### What activities does the university perform most during the processing of declarations?\nSELECT ",
            "response": "activity FROM event_log GROUP BY activity HAVING COUNT(*) = (SELECT COUNT(*) FROM event_log GROUP BY activity ORDER BY COUNT(*) DESC LIMIT 1)",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "15_4"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Return the name of the activities and how many times they occur in the event log, ordering the list in descending order by the number of activity occurrences.\nSELECT ",
            "response": "activity, COUNT(*) FROM event_log GROUP BY activity ORDER BY COUNT (*) DESC",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "16_0"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### What are the activities of this business process and how many times were they performed? Order your response in relation to the frequency of performing the activities, from the most frequent to the least frequent\nSELECT ",
            "response": "activity, COUNT(*) FROM event_log GROUP BY activity ORDER BY COUNT (*) DESC",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "16_1"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Retrieve the name of the activities and the number of times they were performed. Order the answer according to the frequency of performing the activities, from the most frequent to the least frequent.\nSELECT ",
            "response": "activity, COUNT(*) FROM event_log GROUP BY activity ORDER BY COUNT (*) DESC",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "16_2"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Make a list of activities performed during the processing of declarations. The list must be ordered from the most frequent activity to the least frequent and must clearly indicate how many times each activity was performed.\nSELECT ",
            "response": "activity, COUNT(*) FROM event_log GROUP BY activity ORDER BY COUNT (*) DESC",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "16_3"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### What are the events that happened in the year 2017?\nSELECT ",
            "response": "* FROM event_log WHERE timestamp BETWEEN '2017-01-01' AND '2018-01-01'",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "17_0"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### List events with 'timestamp' in 2017.\nSELECT ",
            "response": "* FROM event_log WHERE timestamp BETWEEN '2017-01-01' AND '2018-01-01'",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "17_1"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### What events occurred in the year 2017?\nSELECT ",
            "response": "* FROM event_log WHERE timestamp BETWEEN '2017-01-01' AND '2018-01-01'",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "17_2"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### List the events whose 'timestamp' refers to the year 2017.\nSELECT ",
            "response": "* FROM event_log WHERE timestamp BETWEEN '2017-01-01' AND '2018-01-01'",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "17_3"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### What events took place in 2017?\nSELECT ",
            "response": "* FROM event_log WHERE timestamp BETWEEN '2017-01-01' AND '2018-01-01'",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "17_4"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### What events took place during 2017?\nSELECT ",
            "response": "* FROM event_log WHERE timestamp BETWEEN '2017-01-01' AND '2018-01-01'",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "17_5"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### What events occurred in 2017?\nSELECT ",
            "response": "* FROM event_log WHERE timestamp BETWEEN '2017-01-01' AND '2018-01-01'",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "17_6"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### What events occurred during the year 2017?\nSELECT ",
            "response": "* FROM event_log WHERE timestamp BETWEEN '2017-01-01' AND '2018-01-01'",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "17_7"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### What events took place during the year 2017?\nSELECT ",
            "response": "* FROM event_log WHERE timestamp BETWEEN '2017-01-01' AND '2018-01-01'",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "17_8"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### What events occurred during 2017?\nSELECT ",
            "response": "* FROM event_log WHERE timestamp BETWEEN '2017-01-01' AND '2018-01-01'",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "17_9"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### I need to know everything that took place during the year 2017 in the processing of declarations.\nSELECT ",
            "response": "* FROM event_log WHERE timestamp BETWEEN '2017-01-01' AND '2018-01-01'",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "17_10"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Make a report informing everything that happened during the processing of declarations in the year 2017.\nSELECT ",
            "response": "* FROM event_log WHERE timestamp BETWEEN '2017-01-01' AND '2018-01-01'",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "17_11"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Report everything that occurred during the year 2017 in the processing of declarations.\nSELECT ",
            "response": "* FROM event_log WHERE timestamp BETWEEN '2017-01-01' AND '2018-01-01'",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "17_12"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### What was performed during the year 2017 during the processing of declarations?\nSELECT ",
            "response": "* FROM event_log WHERE timestamp BETWEEN '2017-01-01' AND '2018-01-01'",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "17_13"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### What actions were taken when processing declarations during the year 2017?\nSELECT ",
            "response": "* FROM event_log WHERE timestamp BETWEEN '2017-01-01' AND '2018-01-01'",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "17_14"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### What are the declarations with up to 20 events?\nSELECT ",
            "response": "idcase FROM event_log GROUP BY idcase HAVING count(*) <= 20",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "18_0"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Which declarations have up to 20 associated events?\nSELECT ",
            "response": "idcase FROM event_log GROUP BY idcase HAVING count(*) <= 20",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "18_1"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### In which declarations were up to 20 events performed?\nSELECT ",
            "response": "idcase FROM event_log GROUP BY idcase HAVING count(*) <= 20",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "18_2"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### In which declarations were up to 20 activity occurrences performed?\nSELECT ",
            "response": "idcase FROM event_log GROUP BY idcase HAVING count(*) <= 20",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "18_3"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### List all declarations that have up to 20 associated events.\nSELECT ",
            "response": "idcase FROM event_log GROUP BY idcase HAVING count(*) <= 20",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "18_4"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### List all declarations in which the trace has up to 20 events.\nSELECT ",
            "response": "idcase FROM event_log GROUP BY idcase HAVING count(*) <= 20",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "18_5"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### List all declarations in which the performance has up to 20 events.\nSELECT ",
            "response": "idcase FROM event_log GROUP BY idcase HAVING count(*) <= 20",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "18_6"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### List the five resources that worked on the most cases.\nSELECT ",
            "response": "resource from event_log GROUP BY resource HAVING COUNT(DISTINCT idcase) IN (SELECT COUNT(DISTINCT idcase) FROM event_log GROUP BY resource ORDER BY COUNT(DISTINCT idcase) desc LIMIT 5)",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "19_0"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Retrieve the five resources associated with the most cases.\nSELECT ",
            "response": "resource from event_log GROUP BY resource HAVING COUNT(DISTINCT idcase) IN (SELECT COUNT(DISTINCT idcase) FROM event_log GROUP BY resource ORDER BY COUNT(DISTINCT idcase) desc LIMIT 5)",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "19_1"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Return the five resources requested in the greatest number of cases.\nSELECT ",
            "response": "resource from event_log GROUP BY resource HAVING COUNT(DISTINCT idcase) IN (SELECT COUNT(DISTINCT idcase) FROM event_log GROUP BY resource ORDER BY COUNT(DISTINCT idcase) desc LIMIT 5)",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "19_2"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### What are the top 5 resources with the most cases?\nSELECT ",
            "response": "resource from event_log GROUP BY resource HAVING COUNT(DISTINCT idcase) IN (SELECT COUNT(DISTINCT idcase) FROM event_log GROUP BY resource ORDER BY COUNT(DISTINCT idcase) desc LIMIT 5)",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "19_3"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Report the five employees who made the most declarations.\nSELECT ",
            "response": "resource from event_log GROUP BY resource HAVING COUNT(DISTINCT idcase) IN (SELECT COUNT(DISTINCT idcase) FROM event_log GROUP BY resource ORDER BY COUNT(DISTINCT idcase) desc LIMIT 5)",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "19_4"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### List the five resources that worked on the most events.\nSELECT ",
            "response": "resource from event_log GROUP BY resource HAVING COUNT(*) IN (SELECT COUNT(*) FROM event_log GROUP BY resource ORDER BY COUNT(*) desc LIMIT 5)",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "20_0"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Retrieve the five resources associated with the greatest number of events.\nSELECT ",
            "response": "resource from event_log GROUP BY resource HAVING COUNT(*) IN (SELECT COUNT(*) FROM event_log GROUP BY resource ORDER BY COUNT(*) desc LIMIT 5)",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "20_1"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Return the five resources requested in the greatest number of events.\nSELECT ",
            "response": "resource from event_log GROUP BY resource HAVING COUNT(*) IN (SELECT COUNT(*) FROM event_log GROUP BY resource ORDER BY COUNT(*) desc LIMIT 5)",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "20_2"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### What are the top 5 resources with the greatest number of events?\nSELECT ",
            "response": "resource from event_log GROUP BY resource HAVING COUNT(*) IN (SELECT COUNT(*) FROM event_log GROUP BY resource ORDER BY COUNT(*) desc LIMIT 5)",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "20_3"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Report the five employees who worked most during the processing of the declarations.\nSELECT ",
            "response": "resource from event_log GROUP BY resource HAVING COUNT(*) IN (SELECT COUNT(*) FROM event_log GROUP BY resource ORDER BY COUNT(*) desc LIMIT 5)",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "20_4"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### How many occurrences of the 'start trip' activity do we have for each resource in the year 2016?\nSELECT ",
            "response": "count(*), resource FROM event_log WHERE activity = 'Start trip' AND timestamp LIKE '2016%' GROUP BY resource",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "21_0"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### How many occurrences of the 'start trip' activity are there associated with each resource in the year 2016?\nSELECT ",
            "response": "count(*), resource FROM event_log WHERE activity = 'Start trip' AND timestamp LIKE '2016%' GROUP BY resource",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "21_1"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### How many performances of the 'start trip' activity are associated with each resource in the year 2016?\nSELECT ",
            "response": "count(*), resource FROM event_log WHERE activity = 'Start trip' AND timestamp LIKE '2016%' GROUP BY resource",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "21_2"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### How many occurrences of the activity named 'start trip' are there associated with each resource in 2016?\nSELECT ",
            "response": "count(*), resource FROM event_log WHERE activity = 'Start trip' AND timestamp LIKE '2016%' GROUP BY resource",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "21_3"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### How many performances of the activity named 'start trip' are associated with each resource in 2016?\nSELECT ",
            "response": "count(*), resource FROM event_log WHERE activity = 'Start trip' AND timestamp LIKE '2016%' GROUP BY resource",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "21_4"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Report the number of occurrences of the activity named 'start trip' associated with each resource in 2016.\nSELECT ",
            "response": "count(*), resource FROM event_log WHERE activity = 'Start trip' AND timestamp LIKE '2016%' GROUP BY resource",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "21_5"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Report the total number of occurrences of the activity named 'start trip' performed by each resource in 2016.\nSELECT ",
            "response": "count(*), resource FROM event_log WHERE activity = 'Start trip' AND timestamp LIKE '2016%' GROUP BY resource",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "21_6"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### How many actions were performed by each employee to record the start of trips during 2016?\nSELECT ",
            "response": "count(*), resource FROM event_log WHERE activity = 'Start trip' AND timestamp LIKE '2016%' GROUP BY resource",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "21_7"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### How many activities related to the start of the trip do we have for each resource in 2016?\nSELECT ",
            "response": "count(*), resource FROM event_log WHERE activity = 'Start trip' AND timestamp LIKE '2016%' GROUP BY resource",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "21_8"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### How many times did each resource perform the 'declaration rejected by supervisor' activity?\nSELECT ",
            "response": "count(*), resource FROM event_log WHERE activity = 'Declaration rejected by supervisor' GROUP BY resource",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "22_0"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### How many occurrences of the 'declaration rejected by supervisor' activity are there for each resource?\nSELECT ",
            "response": "count(*), resource FROM event_log WHERE activity = 'Declaration rejected by supervisor' GROUP BY resource",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "22_1"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### How many performances of the 'declaration rejected by supervisor' activity are associated with each resource?\nSELECT ",
            "response": "count(*), resource FROM event_log WHERE activity = 'Declaration rejected by supervisor' GROUP BY resource",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "22_2"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### How many occurrences of the activity named 'declaration rejected by supervisor' are there for each resource?\nSELECT ",
            "response": "count(*), resource FROM event_log WHERE activity = 'Declaration rejected by supervisor' GROUP BY resource",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "22_3"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### How many performances of the activity named 'declaration rejected by supervisor' are there for each resource?\nSELECT ",
            "response": "count(*), resource FROM event_log WHERE activity = 'Declaration rejected by supervisor' GROUP BY resource",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "22_4"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### How many occurrences of the activity called 'declaration rejected by supervisor' are there for each resource?\nSELECT ",
            "response": "count(*), resource FROM event_log WHERE activity = 'Declaration rejected by supervisor' GROUP BY resource",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "22_5"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### How many performances of the activity called 'declaration rejected by supervisor' are there for each resource?\nSELECT ",
            "response": "count(*), resource FROM event_log WHERE activity = 'Declaration rejected by supervisor' GROUP BY resource",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "22_6"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Report the amount of occurrences of the 'declaration rejected by supervisor' activity associated with each resource.\nSELECT ",
            "response": "count(*), resource FROM event_log WHERE activity = 'Declaration rejected by supervisor' GROUP BY resource",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "22_7"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Report the number of occurrences of the 'declaration rejected by supervisor' activity associated with each resource.\nSELECT ",
            "response": "count(*), resource FROM event_log WHERE activity = 'Declaration rejected by supervisor' GROUP BY resource",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "22_8"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Report the total number of occurrences of the 'declaration rejected by supervisor' activity associated with each resource.\nSELECT ",
            "response": "count(*), resource FROM event_log WHERE activity = 'Declaration rejected by supervisor' GROUP BY resource",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "22_9"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### How many times did each employee reject a declaration in the role of supervisor?\nSELECT ",
            "response": "count(*), resource FROM event_log WHERE activity = 'Declaration rejected by supervisor' GROUP BY resource",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "22_10"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### What are the cases that have more than 20 activity occurrences?\nSELECT ",
            "response": "idcase FROM event_log GROUP BY idcase HAVING count(*) > 20",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "23_0"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### List all cases that have more than 20 activity occurrences.\nSELECT ",
            "response": "idcase FROM event_log GROUP BY idcase HAVING count(*) > 20",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "23_1"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### In which cases are there more than 20 occurrences of activities performed?\nSELECT ",
            "response": "idcase FROM event_log GROUP BY idcase HAVING count(*) > 20",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "23_2"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### In which cases are there more than twenty occurrences of activities performed?\nSELECT ",
            "response": "idcase FROM event_log GROUP BY idcase HAVING count(*) > 20",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "23_3"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Which process instances have more than 20 activities performed?\nSELECT ",
            "response": "idcase FROM event_log GROUP BY idcase HAVING count(*) > 20",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "23_4"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### List all process instances that have more than 20 activity occurrences.\nSELECT ",
            "response": "idcase FROM event_log GROUP BY idcase HAVING count(*) > 20",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "23_5"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### In which process instances are there more than 20 occurrences of activities performed?\nSELECT ",
            "response": "idcase FROM event_log GROUP BY idcase HAVING count(*) > 20",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "23_6"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### In which process instances are there more than twenty occurrences of activities performed?\nSELECT ",
            "response": "idcase FROM event_log GROUP BY idcase HAVING count(*) > 20",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "23_7"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### What are the declarations whose processing went through more than twenty interventions?\nSELECT ",
            "response": "idcase FROM event_log GROUP BY idcase HAVING count(*) > 20",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "23_8"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Which cases have the greatest number of events?\nSELECT ",
            "response": "idcase FROM event_log GROUP BY idcase HAVING COUNT(*) = (SELECT COUNT(*) FROM event_log GROUP BY idcase ORDER BY count(*) DESC LIMIT 1)",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "24_0"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### What are the cases in which there are most activity performances?\nSELECT ",
            "response": "idcase FROM event_log GROUP BY idcase HAVING COUNT(*) = (SELECT COUNT(*) FROM event_log GROUP BY idcase ORDER BY count(*) DESC LIMIT 1)",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "24_1"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Retrieve the identifiers of the cases that have the greatest number of events.\nSELECT ",
            "response": "idcase FROM event_log GROUP BY idcase HAVING COUNT(*) = (SELECT COUNT(*) FROM event_log GROUP BY idcase ORDER BY count(*) DESC LIMIT 1)",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "24_2"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Report the identifiers of the cases with the most activities performed.\nSELECT ",
            "response": "idcase FROM event_log GROUP BY idcase HAVING COUNT(*) = (SELECT COUNT(*) FROM event_log GROUP BY idcase ORDER BY count(*) DESC LIMIT 1)",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "24_3"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Report the identifiers of the longest cases in terms of number of events.\nSELECT ",
            "response": "idcase FROM event_log GROUP BY idcase HAVING COUNT(*) = (SELECT COUNT(*) FROM event_log GROUP BY idcase ORDER BY count(*) DESC LIMIT 1)",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "24_4"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Report the identifiers of the longest cases in terms of activities performed.\nSELECT ",
            "response": "idcase FROM event_log GROUP BY idcase HAVING COUNT(*) = (SELECT COUNT(*) FROM event_log GROUP BY idcase ORDER BY count(*) DESC LIMIT 1)",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "24_5"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Retrieve the codes for the longest declarations in terms of number of actions performed.\nSELECT ",
            "response": "idcase FROM event_log GROUP BY idcase HAVING COUNT(*) = (SELECT COUNT(*) FROM event_log GROUP BY idcase ORDER BY count(*) DESC LIMIT 1)",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "24_6"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### What are the cases in which the 'Sara' resource appears and the 'request payment' activity has not yet been performed?\nSELECT ",
            "response": "DISTINCT idcase FROM event_log WHERE resource = 'Sara' AND idcase NOT IN (SELECT idcase FROM event_log WHERE activity = 'Request payment')",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "25_0"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Select all cases that the 'Sara' resource has worked on and that have not yet gone through the 'request payment' activity.\nSELECT ",
            "response": "DISTINCT idcase FROM event_log WHERE resource = 'Sara' AND idcase NOT IN (SELECT idcase FROM event_log WHERE activity = 'Request payment')",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "25_1"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Retrieve the identifiers of the cases in which the 'Sara' resource was involved and which have not yet gone through the 'request payment' activity.\nSELECT ",
            "response": "DISTINCT idcase FROM event_log WHERE resource = 'Sara' AND idcase NOT IN (SELECT idcase FROM event_log WHERE activity = 'Request payment')",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "25_2"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Select all cases in which the 'Sara' resource worked and the 'request payment' activity was not performed.\nSELECT ",
            "response": "DISTINCT idcase FROM event_log WHERE resource = 'Sara' AND idcase NOT IN (SELECT idcase FROM event_log WHERE activity = 'Request payment')",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "25_3"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### What are the cases that have not yet performed the 'request payment' activity and with which the 'Sara' resource is associated?\nSELECT ",
            "response": "DISTINCT idcase FROM event_log WHERE resource = 'Sara' AND idcase NOT IN (SELECT idcase FROM event_log WHERE activity = 'Request payment')",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "25_4"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Report the declarations in which the employee Sara was involved and for which a payment request has not yet been opened.\nSELECT ",
            "response": "DISTINCT idcase FROM event_log WHERE resource = 'Sara' AND idcase NOT IN (SELECT idcase FROM event_log WHERE activity = 'Request payment')",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "25_5"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Retrieve information for events that occurred between the dates '2017-01-10' and '2017-02-01' in the case with the identifier 'declaration 143598'\nSELECT ",
            "response": "* FROM event_log WHERE idcase = 'declaration 143598' AND timestamp BETWEEN '2017-01-10' AND '2017-02-01'",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "26_0"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Retrieve information for events of the 'declaration 143598' case that occurred between the dates '2017-01-10' and '2017-02-01'.\nSELECT ",
            "response": "* FROM event_log WHERE idcase = 'declaration 143598' AND timestamp BETWEEN '2017-01-10' AND '2017-02-01'",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "26_1"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Report the values of attributes of the events associated with the 'declaration 143598' case, which occurred between the dates '2017-01-10' and '2017-02-01'.\nSELECT ",
            "response": "* FROM event_log WHERE idcase = 'declaration 143598' AND timestamp BETWEEN '2017-01-10' AND '2017-02-01'",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "26_2"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Report the values of the attributes of the events that occurred between the dates '2017-01-10' and '2017-02-01' and are associated with the 'declaration 143598' case\nSELECT ",
            "response": "* FROM event_log WHERE idcase = 'declaration 143598' AND timestamp BETWEEN '2017-01-10' AND '2017-02-01'",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "26_3"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### I need all the information regarding the actions that occurred between January 10, 2017 and February 1, 2017 in the processing of declaration 143598.\nSELECT ",
            "response": "* FROM event_log WHERE idcase = 'declaration 143598' AND timestamp BETWEEN '2017-01-10' AND '2017-02-01'",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "26_4"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### How many cases was each resource associated with in the period from '2017-01-01' to '2017-05-31'?\nSELECT ",
            "response": "resource, count(DISTINCT idcase) FROM event_log WHERE timestamp BETWEEN '2017-01-01' AND '2017-05-31' GROUP BY resource",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "27_0"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Retrieve how many cases each resource was associated with in the period between '2017-01-01' and '2017-05-31'.\nSELECT ",
            "response": "resource, count(DISTINCT idcase) FROM event_log WHERE timestamp BETWEEN '2017-01-01' AND '2017-05-31' GROUP BY resource",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "27_1"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### How many cases did each resource work on in the period from '2017-01-01' to '2017-05-31'?\nSELECT ",
            "response": "resource, count(DISTINCT idcase) FROM event_log WHERE timestamp BETWEEN '2017-01-01' AND '2017-05-31' GROUP BY resource",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "27_2"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### In how many cases did each resource act in the period from '2017-01-01' to '2017-05-31'?\nSELECT ",
            "response": "resource, count(DISTINCT idcase) FROM event_log WHERE timestamp BETWEEN '2017-01-01' AND '2017-05-31' GROUP BY resource",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "27_3"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Considering the period from '2017-01-01' to '2017-05-31', how many cases was each resource associated with?\nSELECT ",
            "response": "resource, count(DISTINCT idcase) FROM event_log WHERE timestamp BETWEEN '2017-01-01' AND '2017-05-31' GROUP BY resource",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "27_4"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Considering the period from '2017-01-01' to '2017-05-31', how many cases did each resource work on?\nSELECT ",
            "response": "resource, count(DISTINCT idcase) FROM event_log WHERE timestamp BETWEEN '2017-01-01' AND '2017-05-31' GROUP BY resource",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "27_5"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Considering the period from '2017-01-01' to '2017-05-31', in how many cases did each resource act?\nSELECT ",
            "response": "resource, count(DISTINCT idcase) FROM event_log WHERE timestamp BETWEEN '2017-01-01' AND '2017-05-31' GROUP BY resource",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "27_6"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Considering the period from the first of January 2017 to the thirty-first of May 2017, how many cases was each resource associated with?\nSELECT ",
            "response": "resource, count(DISTINCT idcase) FROM event_log WHERE timestamp BETWEEN '2017-01-01' AND '2017-05-31' GROUP BY resource",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "27_7"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Considering the period from the first of January 2017 to the thirty-first of May 2017, how many cases did each resource work on?\nSELECT ",
            "response": "resource, count(DISTINCT idcase) FROM event_log WHERE timestamp BETWEEN '2017-01-01' AND '2017-05-31' GROUP BY resource",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "27_8"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Considering the period from the first of January 2017 to the thirty-first of May 2017, in how many cases did each resource act?\nSELECT ",
            "response": "resource, count(DISTINCT idcase) FROM event_log WHERE timestamp BETWEEN '2017-01-01' AND '2017-05-31' GROUP BY resource",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "27_9"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### How many declarations did each employee work on between the first of January 2017 to the thirty-first of May 2017?\nSELECT ",
            "response": "resource, count(DISTINCT idcase) FROM event_log WHERE timestamp BETWEEN '2017-01-01' AND '2017-05-31' GROUP BY resource",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "27_10"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### What are the 10 cases, in descending order, with the most activities performed?\nSELECT ",
            "response": "idcase FROM event_log GROUP BY idcase HAVING COUNT(*) IN (SELECT Count(*) FROM event_log GROUP BY idcase ORDER BY Count(*) Desc LIMIT 10) order by idcase DESC",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "28_0"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### What are the 10 cases with the greatest number of activities? List the cases in descending order.\nSELECT ",
            "response": "idcase FROM event_log GROUP BY idcase HAVING COUNT(*) IN (SELECT Count(*) FROM event_log GROUP BY idcase ORDER BY Count(*) Desc LIMIT 10) order by idcase DESC",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "28_1"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### What are the 10 cases in descending order with the most activities?\nSELECT ",
            "response": "idcase FROM event_log GROUP BY idcase HAVING COUNT(*) IN (SELECT Count(*) FROM event_log GROUP BY idcase ORDER BY Count(*) Desc LIMIT 10) order by idcase DESC",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "28_2"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### List the 10 cases, in descending order, with the most activity performances.\nSELECT ",
            "response": "idcase FROM event_log GROUP BY idcase HAVING COUNT(*) IN (SELECT Count(*) FROM event_log GROUP BY idcase ORDER BY Count(*) Desc LIMIT 10) order by idcase DESC",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "28_3"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### List, in descending order, the 10 cases that have the most activity performances.\nSELECT ",
            "response": "idcase FROM event_log GROUP BY idcase HAVING COUNT(*) IN (SELECT Count(*) FROM event_log GROUP BY idcase ORDER BY Count(*) Desc LIMIT 10) order by idcase DESC",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "28_4"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Provide a list in descending order of the 10 cases with the most activities.\nSELECT ",
            "response": "idcase FROM event_log GROUP BY idcase HAVING COUNT(*) IN (SELECT Count(*) FROM event_log GROUP BY idcase ORDER BY Count(*) Desc LIMIT 10) order by idcase DESC",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "28_5"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### List the ten process instances, in descending order, with the most activity performances.\nSELECT ",
            "response": "idcase FROM event_log GROUP BY idcase HAVING COUNT(*) IN (SELECT Count(*) FROM event_log GROUP BY idcase ORDER BY Count(*) Desc LIMIT 10) order by idcase DESC",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "28_6"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### List, in descending order, the ten process instances that have the most activity performances.\nSELECT ",
            "response": "idcase FROM event_log GROUP BY idcase HAVING COUNT(*) IN (SELECT Count(*) FROM event_log GROUP BY idcase ORDER BY Count(*) Desc LIMIT 10) order by idcase DESC",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "28_7"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Provide a list, in descending order, of the ten process instances with the most activities.\nSELECT ",
            "response": "idcase FROM event_log GROUP BY idcase HAVING COUNT(*) IN (SELECT Count(*) FROM event_log GROUP BY idcase ORDER BY Count(*) Desc LIMIT 10) order by idcase DESC",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "28_8"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### What are the ten declarations that involved the greatest number of actions? I need the results sorted in descending order according to the code of each declaration\nSELECT ",
            "response": "idcase FROM event_log GROUP BY idcase HAVING COUNT(*) IN (SELECT Count(*) FROM event_log GROUP BY idcase ORDER BY Count(*) Desc LIMIT 10) order by idcase DESC",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "28_9"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### What are the ten declarations, in descending code order, with the greatest number of actions?\nSELECT ",
            "response": "idcase FROM event_log GROUP BY idcase HAVING COUNT(*) IN (SELECT Count(*) FROM event_log GROUP BY idcase ORDER BY Count(*) Desc LIMIT 10) order by idcase DESC",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "28_10"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### What are the 10 cases, in descending order, with the most events?\nSELECT ",
            "response": "idcase from event_log GROUP BY idcase HAVING COUNT(*) IN (SELECT COUNT(*) FROM event_log GROUP BY idcase ORDER BY COUNT(*) Desc LIMIT 10) ORDER BY idcase DESC",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "29_0"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### What are the 10 cases in descending order with the greatest number of events?\nSELECT ",
            "response": "idcase from event_log GROUP BY idcase HAVING COUNT(*) IN (SELECT COUNT(*) FROM event_log GROUP BY idcase ORDER BY COUNT(*) Desc LIMIT 10) ORDER BY idcase DESC",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "29_1"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### What are the 10 cases with the greatest number of events? List the cases in descending order.\nSELECT ",
            "response": "idcase from event_log GROUP BY idcase HAVING COUNT(*) IN (SELECT COUNT(*) FROM event_log GROUP BY idcase ORDER BY COUNT(*) Desc LIMIT 10) ORDER BY idcase DESC",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "29_2"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### List the 10 cases, in descending order, with the most events.\nSELECT ",
            "response": "idcase from event_log GROUP BY idcase HAVING COUNT(*) IN (SELECT COUNT(*) FROM event_log GROUP BY idcase ORDER BY COUNT(*) Desc LIMIT 10) ORDER BY idcase DESC",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "29_3"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### List, in descending order, the 10 cases that have the most events.\nSELECT ",
            "response": "idcase from event_log GROUP BY idcase HAVING COUNT(*) IN (SELECT COUNT(*) FROM event_log GROUP BY idcase ORDER BY COUNT(*) Desc LIMIT 10) ORDER BY idcase DESC",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "29_4"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Provide a list in descending order of the 10 cases with the most events.\nSELECT ",
            "response": "idcase from event_log GROUP BY idcase HAVING COUNT(*) IN (SELECT COUNT(*) FROM event_log GROUP BY idcase ORDER BY COUNT(*) Desc LIMIT 10) ORDER BY idcase DESC",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "29_5"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Make a descending list of 10 declaration codes with the most actions performed during their processing.\nSELECT ",
            "response": "idcase from event_log GROUP BY idcase HAVING COUNT(*) IN (SELECT COUNT(*) FROM event_log GROUP BY idcase ORDER BY COUNT(*) Desc LIMIT 10) ORDER BY idcase DESC",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "29_6"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Return the cost for each case.\nSELECT ",
            "response": "idcase, SUM(cost) FROM event_log group by idcase",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "30_0"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Return the total cost for each case.\nSELECT ",
            "response": "idcase, SUM(cost) FROM event_log group by idcase",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "30_1"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Return the total cost of each case.\nSELECT ",
            "response": "idcase, SUM(cost) FROM event_log group by idcase",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "30_2"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### What are the total costs for each of the cases present in the event log?\nSELECT ",
            "response": "idcase, SUM(cost) FROM event_log group by idcase",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "30_3"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Report the total cost of each case present in the event log.\nSELECT ",
            "response": "idcase, SUM(cost) FROM event_log group by idcase",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "30_4"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Retrieve the total costs for each of the cases in the event log.\nSELECT ",
            "response": "idcase, SUM(cost) FROM event_log group by idcase",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "30_5"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Retrieve the total cost of each case.\nSELECT ",
            "response": "idcase, SUM(cost) FROM event_log group by idcase",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "30_6"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### How much did each declaration cost?\nSELECT ",
            "response": "idcase, SUM(cost) FROM event_log group by idcase",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "30_7"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### What was the cost of processing each declaration?\nSELECT ",
            "response": "idcase, SUM(cost) FROM event_log group by idcase",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "30_8"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Select all resources that acted in at least 100 events and sort the information in descending order of number of events per resource\nSELECT ",
            "response": "resource FROM event_log GROUP BY resource HAVING count(*) >= 100 ORDER BY count(*) DESC",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "31_0"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Report the resources that acted in at least 100 events and sort the information in descending order of number of events per resource\nSELECT ",
            "response": "resource FROM event_log GROUP BY resource HAVING count(*) >= 100 ORDER BY count(*) DESC",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "31_1"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Make a list of employees who have acted at least 100 times, organized in descending order by the number of actions performed.\nSELECT ",
            "response": "resource FROM event_log GROUP BY resource HAVING count(*) >= 100 ORDER BY count(*) DESC",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "31_2"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Retrieve all cases and their events, ordering them by case number and start date of their performance\nSELECT ",
            "response": "* FROM event_log ORDER BY idcase, timestamp",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "32_0"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Select all cases, and their respective events, ordered by case number and the start date of their performance\nSELECT ",
            "response": "* FROM event_log ORDER BY idcase, timestamp",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "32_1"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Retrieve the identifier of the cases and their events, ordering them by the case identifier and their start date.\nSELECT ",
            "response": "* FROM event_log ORDER BY idcase, timestamp",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "32_2"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Report the identifier of each case and its events, ordering them by case identifier and then by their start date.\nSELECT ",
            "response": "* FROM event_log ORDER BY idcase, timestamp",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "32_3"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### List all cases and their events, ordering them by case identifier and by their start date.\nSELECT ",
            "response": "* FROM event_log ORDER BY idcase, timestamp",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "32_4"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Organize all information about the processing of declarations and organize the data in a way ordered by the declaration code and by their start date.\nSELECT ",
            "response": "* FROM event_log ORDER BY idcase, timestamp",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "32_5"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### How many times was each resource responsible for performing the 'declaration approved by administration' activity?\nSELECT ",
            "response": "count(*), resource FROM event_log WHERE activity = 'Declaration approved by administration' GROUP BY resource",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "33_0"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### What is the total number of times each resource was responsible for performing the 'declaration approved by administration' activity?\nSELECT ",
            "response": "count(*), resource FROM event_log WHERE activity = 'Declaration approved by administration' GROUP BY resource",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "33_1"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Report the total number of times the 'declaration approved by administration' activity was performed by each of the resources.\nSELECT ",
            "response": "count(*), resource FROM event_log WHERE activity = 'Declaration approved by administration' GROUP BY resource",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "33_2"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### What is the number of occurrences in which the 'declaration approved by administration' activity was performed considering each of the resources available in this business process?\nSELECT ",
            "response": "count(*), resource FROM event_log WHERE activity = 'Declaration approved by administration' GROUP BY resource",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "33_3"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### How many times has each employee approved a declaration in the role of administrator?\nSELECT ",
            "response": "count(*), resource FROM event_log WHERE activity = 'Declaration approved by administration' GROUP BY resource",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "33_4"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### How many performance events of the 'declaration approved by administration' activity were carried out by each resource?\nSELECT ",
            "response": "count(*), resource FROM event_log WHERE activity = 'Declaration approved by administration' GROUP BY resource",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "34_0"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### In how many events was the 'declaration approved by administration' activity performed? Report the quantity grouped by resource.\nSELECT ",
            "response": "count(*), resource FROM event_log WHERE activity = 'Declaration approved by administration' GROUP BY resource",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "34_1"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### How many times did each employee serve as an administrator approving a declaration?\nSELECT ",
            "response": "count(*), resource FROM event_log WHERE activity = 'Declaration approved by administration' GROUP BY resource",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "34_2"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### How many instances of each activity did the 'Thomas' resource work on in 2017?\nSELECT ",
            "response": "count(*), activity FROM event_log WHERE resource = 'Thomas' AND timestamp BETWEEN '2017-01-01' AND '2018-01-01' GROUP BY activity",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "35_0"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### List the number of times the 'Thomas' resource performed each of the activities of this business process, in the year 2017.\nSELECT ",
            "response": "count(*), activity FROM event_log WHERE resource = 'Thomas' AND timestamp BETWEEN '2017-01-01' AND '2018-01-01' GROUP BY activity",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "35_1"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Report the number of occurrences of each activity carried out by the 'Thomas' resource during the year 2017.\nSELECT ",
            "response": "count(*), activity FROM event_log WHERE resource = 'Thomas' AND timestamp BETWEEN '2017-01-01' AND '2018-01-01' GROUP BY activity",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "35_2"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Report how many times Thomas acted on each of the declaration processing actions in the year 2017\nSELECT ",
            "response": "count(*), activity FROM event_log WHERE resource = 'Thomas' AND timestamp BETWEEN '2017-01-01' AND '2018-01-01' GROUP BY activity",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "35_3"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### How many times did the 'Thomas' resource perform an activity in 2017?\nSELECT ",
            "response": "count(*) FROM event_log WHERE resource = 'Thomas' AND timestamp BETWEEN '2017-01-01' AND '2018-01-01'",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "36_0"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### What was the number of occurrences of activity in which the 'Thomas' resource was involved in the year 2017?\nSELECT ",
            "response": "count(*) FROM event_log WHERE resource = 'Thomas' AND timestamp BETWEEN '2017-01-01' AND '2018-01-01'",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "36_1"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### How many activity performances were carried out by the 'Thomas' resource in 2017?\nSELECT ",
            "response": "count(*) FROM event_log WHERE resource = 'Thomas' AND timestamp BETWEEN '2017-01-01' AND '2018-01-01'",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "36_2"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### How many events was the 'Thomas' resource involved in in 2017?\nSELECT ",
            "response": "count(*) FROM event_log WHERE resource = 'Thomas' AND timestamp BETWEEN '2017-01-01' AND '2018-01-01'",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "36_3"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### How many times was the 'Thomas' resource involved in an event in the year 2017?\nSELECT ",
            "response": "count(*) FROM event_log WHERE resource = 'Thomas' AND timestamp BETWEEN '2017-01-01' AND '2018-01-01'",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "36_4"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### What was the workload of the employee Thomas in terms of performing actions for processing declarations in 2017?\nSELECT ",
            "response": "count(*) FROM event_log WHERE resource = 'Thomas' AND timestamp BETWEEN '2017-01-01' AND '2018-01-01'",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "36_5"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Report the most recent date of the performance of each activity.\nSELECT ",
            "response": "max(timestamp), activity FROM event_log GROUP BY activity",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "37_0"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Report the date of the most recent event for each of the activities present in the event log.\nSELECT ",
            "response": "max(timestamp), activity FROM event_log GROUP BY activity",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "37_1"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### What are the most recent performance dates for each of the activities present in the event log?\nSELECT ",
            "response": "max(timestamp), activity FROM event_log GROUP BY activity",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "37_2"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### When was the last performance of each of the business process activities represented by the event log?\nSELECT ",
            "response": "max(timestamp), activity FROM event_log GROUP BY activity",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "37_3"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### When was the latest performance of each of the business process activities represented by the event log?\nSELECT ",
            "response": "max(timestamp), activity FROM event_log GROUP BY activity",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "37_4"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### For each activity relevant to the event log, report the date of its last occurrence.\nSELECT ",
            "response": "max(timestamp), activity FROM event_log GROUP BY activity",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "37_5"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Most recent date of performance of each activity:\nSELECT ",
            "response": "max(timestamp), activity FROM event_log GROUP BY activity",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "37_6"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### On what date was the last record of each type of action taken when processing declarations?\nSELECT ",
            "response": "max(timestamp), activity FROM event_log GROUP BY activity",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "37_7"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### How many times were the 'declaration approved by supervisor' activity and 'permit rejected by employee' activity performed, considering the years 2017 and 2018 respectively?\nSELECT ",
            "response": "activity, count(*) FROM event_log WHERE activity = 'Declaration approved by supervisor' AND timestamp BETWEEN '2017-01-01' AND '2018-01-01' GROUP BY activity UNION SELECT activity, count(*) FROM event_log WHERE activity = 'Permit rejected by employee' AND timestamp BETWEEN '2018-01-01' AND '2019-01-01' GROUP BY activity",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "38_0"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### How many instances of the 'declaration approved by supervisor' activity were performed in 2017 and how many instances of the 'permit rejected by employee' activity were performed in 2018?\nSELECT ",
            "response": "activity, count(*) FROM event_log WHERE activity = 'Declaration approved by supervisor' AND timestamp BETWEEN '2017-01-01' AND '2018-01-01' GROUP BY activity UNION SELECT activity, count(*) FROM event_log WHERE activity = 'Permit rejected by employee' AND timestamp BETWEEN '2018-01-01' AND '2019-01-01' GROUP BY activity",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "38_1"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### How many events related to the 'declaration approved by supervisor' activity occurred in 2017 and how many related to the 'permit rejected by employee' activity occurred in 2018?\nSELECT ",
            "response": "activity, count(*) FROM event_log WHERE activity = 'Declaration approved by supervisor' AND timestamp BETWEEN '2017-01-01' AND '2018-01-01' GROUP BY activity UNION SELECT activity, count(*) FROM event_log WHERE activity = 'Permit rejected by employee' AND timestamp BETWEEN '2018-01-01' AND '2019-01-01' GROUP BY activity",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "38_2"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Count the number of times the 'declaration approved by supervisor' activity was performed in 2017 and the number of times the 'permit rejected by employee' activity was run in 2018.\nSELECT ",
            "response": "activity, count(*) FROM event_log WHERE activity = 'Declaration approved by supervisor' AND timestamp BETWEEN '2017-01-01' AND '2018-01-01' GROUP BY activity UNION SELECT activity, count(*) FROM event_log WHERE activity = 'Permit rejected by employee' AND timestamp BETWEEN '2018-01-01' AND '2019-01-01' GROUP BY activity",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "38_3"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### List the number of times that: the 'declaration approved by supervisor' activity was performed in 2017; the 'permit rejected by employee' activity was performed in '2018'.\nSELECT ",
            "response": "activity, count(*) FROM event_log WHERE activity = 'Declaration approved by supervisor' AND timestamp BETWEEN '2017-01-01' AND '2018-01-01' GROUP BY activity UNION SELECT activity, count(*) FROM event_log WHERE activity = 'Permit rejected by employee' AND timestamp BETWEEN '2018-01-01' AND '2019-01-01' GROUP BY activity",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "38_4"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### How many declaration approvals made by the supervisor occurred in 2017 and how many permits were rejected by an employee in 2018?\nSELECT ",
            "response": "activity, count(*) FROM event_log WHERE activity = 'Declaration approved by supervisor' AND timestamp BETWEEN '2017-01-01' AND '2018-01-01' GROUP BY activity UNION SELECT activity, count(*) FROM event_log WHERE activity = 'Permit rejected by employee' AND timestamp BETWEEN '2018-01-01' AND '2019-01-01' GROUP BY activity",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "38_5"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Retrieve the activity name, performance end date, and event identifier and sort by performance end date.\nSELECT ",
            "response": "activity, timestamp, id FROM event_log ORDER BY timestamp",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "39_0"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Retrieve the activity, performance end date, and event identifier and sort the result by performance end date.\nSELECT ",
            "response": "activity, timestamp, id FROM event_log ORDER BY timestamp",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "39_1"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### I want a list of all the actions performed when processing the declarations, including the activity performed, the performance end date and the action identifier. The list needs to be ordered by end date.\nSELECT ",
            "response": "activity, timestamp, id FROM event_log ORDER BY timestamp",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "39_2"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### How many times did the 'Thomas' resource act in the performance of the 'declaration submitted by employee' activity?\nSELECT ",
            "response": "count(*) FROM event_log WHERE resource = 'Thomas' AND activity = 'Declaration submitted by employee'",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "40_0"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Total 'declaration submitted by employee' activities performed by Thomas\nSELECT ",
            "response": "count(*) FROM event_log WHERE resource = 'Thomas' AND activity = 'Declaration submitted by employee'",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "40_1"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### In how many instances of the 'declaration submitted by employee' activity was the Thomas resource active?\nSELECT ",
            "response": "count(*) FROM event_log WHERE resource = 'Thomas' AND activity = 'Declaration submitted by employee'",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "40_2"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Calculate the number of occurrences of the 'declaration submitted by employee' activity performed by the Thomas resource.\nSELECT ",
            "response": "count(*) FROM event_log WHERE resource = 'Thomas' AND activity = 'Declaration submitted by employee'",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "40_3"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Report the number of times the Thomas resource performed the 'declaration submitted by employee' activity.\nSELECT ",
            "response": "count(*) FROM event_log WHERE resource = 'Thomas' AND activity = 'Declaration submitted by employee'",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "40_4"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Total number of declaration requests made by the employee Thomas.\nSELECT ",
            "response": "count(*) FROM event_log WHERE resource = 'Thomas' AND activity = 'Declaration submitted by employee'",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "40_5"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### In how many events associated with the Diana resource is there cost information?\nSELECT ",
            "response": "count(*) FROM event_log WHERE resource = 'Diana' AND cost IS NOT NULL",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "41_0"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### List the number of events that the Diana resource worked on and that have an associated cost\nSELECT ",
            "response": "count(*) FROM event_log WHERE resource = 'Diana' AND cost IS NOT NULL",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "41_1"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Count how many events with associated costs are linked to the Diana resource.\nSELECT ",
            "response": "count(*) FROM event_log WHERE resource = 'Diana' AND cost IS NOT NULL",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "41_2"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Retrieve all interventions carried out by the employee Diana when processing declarations, which have declared cost information.\nSELECT ",
            "response": "count(*) FROM event_log WHERE resource = 'Diana' AND cost IS NOT NULL",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "41_3"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Report the name of the activities in which the 'Diana' resource acted and how many events are associated with them with the existence of a cost.\nSELECT ",
            "response": "activity, count(*) FROM event_log WHERE resource = 'Diana' AND cost IS NOT NULL GROUP BY activity",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "42_0"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### How many events are associated with the Diana resource with cost existence? Group the response by activity name.\nSELECT ",
            "response": "activity, count(*) FROM event_log WHERE resource = 'Diana' AND cost IS NOT NULL GROUP BY activity",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "42_1"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Retrieve the type of action performed in the interventions carried out by the employee Diana when processing declarations, which has declared cost information.\nSELECT ",
            "response": "activity, count(*) FROM event_log WHERE resource = 'Diana' AND cost IS NOT NULL GROUP BY activity",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "42_2"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### How many resources acted in cases containing more than 3 events?\nSELECT ",
            "response": "COUNT (DISTINCT resource) FROM event_log WHERE idcase IN (SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(*) > 3)",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "43_0"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Count the active resources in cases containing more than 3 events.\nSELECT ",
            "response": "COUNT (DISTINCT resource) FROM event_log WHERE idcase IN (SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(*) > 3)",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "43_1"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### List the number of resources that acted in cases that have more than 3 events.\nSELECT ",
            "response": "COUNT (DISTINCT resource) FROM event_log WHERE idcase IN (SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(*) > 3)",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "43_2"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### List the number of resources associated with cases that have more than 3 events.\nSELECT ",
            "response": "COUNT (DISTINCT resource) FROM event_log WHERE idcase IN (SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(*) > 3)",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "43_3"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### How many employees acted in processing declarations that involved more than three interventions?\nSELECT ",
            "response": "COUNT (DISTINCT resource) FROM event_log WHERE idcase IN (SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(*) > 3)",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "43_4"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Which resources were responsible for the 'declaration rejected by pre-approver' activity?\nSELECT ",
            "response": "DISTINCT resource from event_log where activity = 'Declaration rejected by pre-approver'",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "44_0"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Which resources were associated with the 'declaration rejected by pre-approver' activity?\nSELECT ",
            "response": "DISTINCT resource from event_log where activity = 'Declaration rejected by pre-approver'",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "44_1"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### List the resources that were responsible for performing the 'declaration rejected by pre-approver' activity.\nSELECT ",
            "response": "DISTINCT resource from event_log where activity = 'Declaration rejected by pre-approver'",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "44_2"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### What were the resources associated with instances of the 'declaration rejected by pre-approver' activity?\nSELECT ",
            "response": "DISTINCT resource from event_log where activity = 'Declaration rejected by pre-approver'",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "44_3"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Report the resources that performed the 'declaration rejected by pre-approver' activity.\nSELECT ",
            "response": "DISTINCT resource from event_log where activity = 'Declaration rejected by pre-approver'",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "44_4"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Retrieve all resources that were responsible for performing the 'declaration rejected by pre-approver' activity.\nSELECT ",
            "response": "DISTINCT resource from event_log where activity = 'Declaration rejected by pre-approver'",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "44_5"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Which employees decided to reject a declaration in the pre-approval action?\nSELECT ",
            "response": "DISTINCT resource from event_log where activity = 'Declaration rejected by pre-approver'",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "44_6"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### How many cases went through the 'declaration final approved by director' activity between months 1 and 5 of 2017?\nSELECT ",
            "response": "count(DISTINCT idcase) from event_log where timestamp between '2017-01-01' and '2017-06-01' and activity = 'Declaration final approved by director'",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "45_0"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Report the number of cases in which there was at least one performance of the 'declaration final approved by director' activity between January and May 2017.\nSELECT ",
            "response": "count(DISTINCT idcase) from event_log where timestamp between '2017-01-01' and '2017-06-01' and activity = 'Declaration final approved by director'",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "45_1"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### How many cases exist in the event log that went through the 'declaration final approved by director' activity between January and May 2017?\nSELECT ",
            "response": "count(DISTINCT idcase) from event_log where timestamp between '2017-01-01' and '2017-06-01' and activity = 'Declaration final approved by director'",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "45_2"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### How many declarations achieved declaration final approved by a director status between January and May 2017?\nSELECT ",
            "response": "count(DISTINCT idcase) from event_log where timestamp between '2017-01-01' and '2017-06-01' and activity = 'Declaration final approved by director'",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "45_3"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Which cases had the Charles resource associated and had no events occurring in January 2018\nSELECT ",
            "response": "idcase from event_log where resource = 'Charles' except select idcase from event_log where timestamp between '2018-01-01' and '2018-02-01'",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "46_0"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### List the cases that the Charles resource worked on, disregarding those that have at least one event occurring in January 2018.\nSELECT ",
            "response": "idcase from event_log where resource = 'Charles' except select idcase from event_log where timestamp between '2018-01-01' and '2018-02-01'",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "46_1"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Considering cases that had no events in January 2018, report those that the Charles resource worked on.\nSELECT ",
            "response": "idcase from event_log where resource = 'Charles' except select idcase from event_log where timestamp between '2018-01-01' and '2018-02-01'",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "46_2"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Disregarding cases that had events occurring in January 2018, which are the ones that Charles resource worked on?\nSELECT ",
            "response": "idcase from event_log where resource = 'Charles' except select idcase from event_log where timestamp between '2018-01-01' and '2018-02-01'",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "46_3"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### What are the declarations that received interventions from the employee Charles, disregarding the interventions carried out in January 2018?\nSELECT ",
            "response": "idcase from event_log where resource = 'Charles' except select idcase from event_log where timestamp between '2018-01-01' and '2018-02-01'",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "46_4"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### What are the cases that have more than 3 different activities performed?\nSELECT ",
            "response": "idcase from event_log GROUP BY idcase HAVING COUNT(DISTINCT activity) > 3",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "47_0"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### List the case identifiers that have more than 3 different activities performed.\nSELECT ",
            "response": "idcase from event_log GROUP BY idcase HAVING COUNT(DISTINCT activity) > 3",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "47_1"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Cases that contain more than 3 different activities.\nSELECT ",
            "response": "idcase from event_log GROUP BY idcase HAVING COUNT(DISTINCT activity) > 3",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "47_2"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### In which cases were more than 3 different activities performed?\nSELECT ",
            "response": "idcase from event_log GROUP BY idcase HAVING COUNT(DISTINCT activity) > 3",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "47_3"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Cases that contain more than three different activities.\nSELECT ",
            "response": "idcase from event_log GROUP BY idcase HAVING COUNT(DISTINCT activity) > 3",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "47_4"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### List the case identifiers that have more than three different activities performed.\nSELECT ",
            "response": "idcase from event_log GROUP BY idcase HAVING COUNT(DISTINCT activity) > 3",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "47_5"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### What are the cases that have more than three different activities performed?\nSELECT ",
            "response": "idcase from event_log GROUP BY idcase HAVING COUNT(DISTINCT activity) > 3",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "47_6"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### In which cases were more than three different activities performed?\nSELECT ",
            "response": "idcase from event_log GROUP BY idcase HAVING COUNT(DISTINCT activity) > 3",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "47_7"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Which declarations have undergone more than three different interventions?\nSELECT ",
            "response": "idcase from event_log GROUP BY idcase HAVING COUNT(DISTINCT activity) > 3",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "47_8"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### List the case identifiers that have more than 3 events.\nSELECT ",
            "response": "idcase from event_log GROUP BY idcase HAVING COUNT(*) > 3",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "48_0"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Cases that contain more than 3 events.\nSELECT ",
            "response": "idcase from event_log GROUP BY idcase HAVING COUNT(*) > 3",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "48_1"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### What are the cases that have more than 3 events performed?\nSELECT ",
            "response": "idcase from event_log GROUP BY idcase HAVING COUNT(*) > 3",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "48_2"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### In which cases were more than 3 events performed?\nSELECT ",
            "response": "idcase from event_log GROUP BY idcase HAVING COUNT(*) > 3",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "48_3"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Cases that contain more than three events.\nSELECT ",
            "response": "idcase from event_log GROUP BY idcase HAVING COUNT(*) > 3",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "48_4"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### List the case identifiers that have more than three events.\nSELECT ",
            "response": "idcase from event_log GROUP BY idcase HAVING COUNT(*) > 3",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "48_5"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### What are the cases that have more than three events performed?\nSELECT ",
            "response": "idcase from event_log GROUP BY idcase HAVING COUNT(*) > 3",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "48_6"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### In which cases were more than three events performed?\nSELECT ",
            "response": "idcase from event_log GROUP BY idcase HAVING COUNT(*) > 3",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "48_7"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Which declarations were subject to more than three interventions?\nSELECT ",
            "response": "idcase from event_log GROUP BY idcase HAVING COUNT(*) > 3",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "48_8"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### How long did each case last?\nSELECT ",
            "response": "idcase, MAX(strftime('%s', timestamp)) - MIN(strftime('%s', timestamp)) FROM event_log GROUP BY idcase",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "49_0"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Approximate total time for each case.\nSELECT ",
            "response": "idcase, MAX(strftime('%s', timestamp)) - MIN(strftime('%s', timestamp)) FROM event_log GROUP BY idcase",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "49_1"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Calculate the approximate duration of each case.\nSELECT ",
            "response": "idcase, MAX(strftime('%s', timestamp)) - MIN(strftime('%s', timestamp)) FROM event_log GROUP BY idcase",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "49_2"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### How long does each case last?\nSELECT ",
            "response": "idcase, MAX(strftime('%s', timestamp)) - MIN(strftime('%s', timestamp)) FROM event_log GROUP BY idcase",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "49_3"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Report the duration of each case.\nSELECT ",
            "response": "idcase, MAX(strftime('%s', timestamp)) - MIN(strftime('%s', timestamp)) FROM event_log GROUP BY idcase",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "49_4"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### What is the duration of processing for each declaration?\nSELECT ",
            "response": "idcase, MAX(strftime('%s', timestamp)) - MIN(strftime('%s', timestamp)) FROM event_log GROUP BY idcase",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "49_5"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Which cases had the same resource allocated for all performances of their activities and what was the resource?\nSELECT ",
            "response": "idcase, resource from event_log group by idcase HAVING COUNT(DISTINCT resource) = 1",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "50_0"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Which cases had the same resource allocated to all their activities? Who was the resource?\nSELECT ",
            "response": "idcase, resource from event_log group by idcase HAVING COUNT(DISTINCT resource) = 1",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "50_1"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Which cases had the same resource allocated for all performances of their activities, and who was the resource?\nSELECT ",
            "response": "idcase, resource from event_log group by idcase HAVING COUNT(DISTINCT resource) = 1",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "50_2"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### List the cases and resource in which all activities are handled by the same resource.\nSELECT ",
            "response": "idcase, resource from event_log group by idcase HAVING COUNT(DISTINCT resource) = 1",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "50_3"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### List the cases and resource in which the activities were all allocated to the same resource.\nSELECT ",
            "response": "idcase, resource from event_log group by idcase HAVING COUNT(DISTINCT resource) = 1",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "50_4"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Find the cases and resource where the activities are all handled by the same resource.\nSELECT ",
            "response": "idcase, resource from event_log group by idcase HAVING COUNT(DISTINCT resource) = 1",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "50_5"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Find the cases and resource where all activities were allocated to the same resource.\nSELECT ",
            "response": "idcase, resource from event_log group by idcase HAVING COUNT(DISTINCT resource) = 1",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "50_6"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### For cases where the activities are all handled by the same resource, identify the case and that resource.\nSELECT ",
            "response": "idcase, resource from event_log group by idcase HAVING COUNT(DISTINCT resource) = 1",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "50_7"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### For cases where all activities have been allocated to the same resource, identify the case and that resource.\nSELECT ",
            "response": "idcase, resource from event_log group by idcase HAVING COUNT(DISTINCT resource) = 1",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "50_8"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Which declarations were entirely handled by a single employee and what is the name of that employee?\nSELECT ",
            "response": "idcase, resource from event_log group by idcase HAVING COUNT(DISTINCT resource) = 1",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "50_9"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Which cases arrived at the 'end trip' activity between 2016 and 2017?\nSELECT ",
            "response": "DISTINCT idcase FROM event_log WHERE activity = 'End trip' AND timestamp BETWEEN '2016-01-01' AND '2018-01-01'",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "51_0"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Which cases went through the 'end trip' activity between 2016 and 2017?\nSELECT ",
            "response": "DISTINCT idcase FROM event_log WHERE activity = 'End trip' AND timestamp BETWEEN '2016-01-01' AND '2018-01-01'",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "51_1"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### In which cases was the 'end trip' activity carried out between 2016 and 2017?\nSELECT ",
            "response": "DISTINCT idcase FROM event_log WHERE activity = 'End trip' AND timestamp BETWEEN '2016-01-01' AND '2018-01-01'",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "51_2"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### In which process instances was the 'end trip' activity performed between 2016 and 2017?\nSELECT ",
            "response": "DISTINCT idcase FROM event_log WHERE activity = 'End trip' AND timestamp BETWEEN '2016-01-01' AND '2018-01-01'",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "51_3"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### List the cases that arrived at the 'end trip' activity between 2016 and 2017.\nSELECT ",
            "response": "DISTINCT idcase FROM event_log WHERE activity = 'End trip' AND timestamp BETWEEN '2016-01-01' AND '2018-01-01'",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "51_4"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### List the cases that went through the 'end trip' activity between 2016 and 2017.\nSELECT ",
            "response": "DISTINCT idcase FROM event_log WHERE activity = 'End trip' AND timestamp BETWEEN '2016-01-01' AND '2018-01-01'",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "51_5"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### List the cases in which the 'end trip' activity was performed between 2016 and 2017.\nSELECT ",
            "response": "DISTINCT idcase FROM event_log WHERE activity = 'End trip' AND timestamp BETWEEN '2016-01-01' AND '2018-01-01'",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "51_6"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### List the process instances that arrived at the 'end trip' activity between 2016 and 2017.\nSELECT ",
            "response": "DISTINCT idcase FROM event_log WHERE activity = 'End trip' AND timestamp BETWEEN '2016-01-01' AND '2018-01-01'",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "51_7"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### List the process instances that went through the 'end trip' activity between 2016 and 2017.\nSELECT ",
            "response": "DISTINCT idcase FROM event_log WHERE activity = 'End trip' AND timestamp BETWEEN '2016-01-01' AND '2018-01-01'",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "51_8"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### List the process instances where the 'end trip' activity was performed between 2016 and 2017.\nSELECT ",
            "response": "DISTINCT idcase FROM event_log WHERE activity = 'End trip' AND timestamp BETWEEN '2016-01-01' AND '2018-01-01'",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "51_9"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Make a report listing all declarations in which the end of the trip was recorded in the period 2016 and 2017.\nSELECT ",
            "response": "DISTINCT idcase FROM event_log WHERE activity = 'End trip' AND timestamp BETWEEN '2016-01-01' AND '2018-01-01'",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "51_10"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### List all data on all events related to the performance of activities that have the word 'rejected' in their name.\nSELECT ",
            "response": "* FROM event_log WHERE activity LIKE '%rejected%'",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "52_0"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Present all information about events involving the performance of an activity with the word 'rejected' in the name.\nSELECT ",
            "response": "* FROM event_log WHERE activity LIKE '%rejected%'",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "52_1"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### For all performances of an activity with the word 'rejected' in the name, present all corresponding event information.\nSELECT ",
            "response": "* FROM event_log WHERE activity LIKE '%rejected%'",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "52_2"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### For all performances of an activity whose name contains the word 'rejected', display all associated event information.\nSELECT ",
            "response": "* FROM event_log WHERE activity LIKE '%rejected%'",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "52_3"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### For all performances of an activity whose name contains the word 'rejected', present all available information for the corresponding event.\nSELECT ",
            "response": "* FROM event_log WHERE activity LIKE '%rejected%'",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "52_4"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Present all available information on events associated with an activity containing the word 'rejected' in its name.\nSELECT ",
            "response": "* FROM event_log WHERE activity LIKE '%rejected%'",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "52_5"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Report data on interventions that result in a rejection of the declaration.\nSELECT ",
            "response": "* FROM event_log WHERE activity LIKE '%rejected%'",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "52_6"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Make a report of information regarding rejection interventions in the declarations.\nSELECT ",
            "response": "* FROM event_log WHERE activity LIKE '%rejected%'",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "52_7"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### What are the minimum and maximum costs recorded for each case in which a maximum cost of more than zero is reported?\nSELECT ",
            "response": "idcase, MIN(cost), MAX(cost) FROM event_log GROUP BY idcase HAVING MAX(cost) > 0",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "53_0"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### What are the minimum and maximum costs recorded for each case in which the maximum cost is more than zero?\nSELECT ",
            "response": "idcase, MIN(cost), MAX(cost) FROM event_log GROUP BY idcase HAVING MAX(cost) > 0",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "53_1"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### What are the minimum and maximum costs recorded for each case in which the maximum cost reported is more than zero?\nSELECT ",
            "response": "idcase, MIN(cost), MAX(cost) FROM event_log GROUP BY idcase HAVING MAX(cost) > 0",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "53_2"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### What are the minimum and maximum costs recorded for each case in which the maximum cost reported is greater than zero?\nSELECT ",
            "response": "idcase, MIN(cost), MAX(cost) FROM event_log GROUP BY idcase HAVING MAX(cost) > 0",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "53_3"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### List the minimum and maximum costs recorded for each case that had a maximum cost of more than zero reported.\nSELECT ",
            "response": "idcase, MIN(cost), MAX(cost) FROM event_log GROUP BY idcase HAVING MAX(cost) > 0",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "53_4"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### List the minimum and maximum costs recorded for each case that had a maximum cost of more than zero.\nSELECT ",
            "response": "idcase, MIN(cost), MAX(cost) FROM event_log GROUP BY idcase HAVING MAX(cost) > 0",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "53_5"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### List the minimum and maximum costs recorded for each case that had a maximum cost greater than zero.\nSELECT ",
            "response": "idcase, MIN(cost), MAX(cost) FROM event_log GROUP BY idcase HAVING MAX(cost) > 0",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "53_6"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### List the minimum and maximum costs recorded for each case in which the maximum cost of more than zero was filled out.\nSELECT ",
            "response": "idcase, MIN(cost), MAX(cost) FROM event_log GROUP BY idcase HAVING MAX(cost) > 0",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "53_7"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### List the minimum and maximum costs recorded for each case in which the maximum cost of more than zero is reported\nSELECT ",
            "response": "idcase, MIN(cost), MAX(cost) FROM event_log GROUP BY idcase HAVING MAX(cost) > 0",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "53_8"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### What are the minimum and maximum costs recorded for each case in which the maximum cost of more than zero was reported?\nSELECT ",
            "response": "idcase, MIN(cost), MAX(cost) FROM event_log GROUP BY idcase HAVING MAX(cost) > 0",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "53_9"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### What are the minimum and maximum costs recorded for each case in which the maximum cost reported was more than zero?\nSELECT ",
            "response": "idcase, MIN(cost), MAX(cost) FROM event_log GROUP BY idcase HAVING MAX(cost) > 0",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "53_10"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### What are the minimum and maximum costs recorded for each case in which the maximum cost reported was greater than zero?\nSELECT ",
            "response": "idcase, MIN(cost), MAX(cost) FROM event_log GROUP BY idcase HAVING MAX(cost) > 0",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "53_11"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### What are the minimum and maximum values of interventions carried out for each of the declarations in which the maximum cost reported was greater than zero?\nSELECT ",
            "response": "idcase, MIN(cost), MAX(cost) FROM event_log GROUP BY idcase HAVING MAX(cost) > 0",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "53_12"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### List the minimum and maximum costs recorded for each declaration that had a maximum cost more than zero filled out.\nSELECT ",
            "response": "idcase, MIN(cost), MAX(cost) FROM event_log GROUP BY idcase HAVING MAX(cost) > 0",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "53_13"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Show how long it took from the first event of a case to the event related to the activity indicating 'end trip' or to the event related to the activity indicating 'declaration rejected by employee' or the event related to the activity indicating 'payment handled'.\nSELECT ",
            "response": "p.idcase, strftime('%s', p.timestamp) - strftime('%s', e.start_time) as 'End trip', strftime('%s', x.timestamp) - strftime('%s', e.start_time) as 'Declaration rejected by employee', strftime('%s', y.timestamp) - strftime('%s', e.start_time) as 'Payment handled' from event_log p inner join (select MIN(timestamp) as start_time, idcase FROM event_log GROUP by idcase) e on e.idcase = p.idcase and p.activity = 'End trip' left join event_log x on x.idcase=e.idcase and x.activity = 'Declaration rejected by employee' left join event_log y on y.idcase=e.idcase and y.activity = 'Payment handled'",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "54_0"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Show how long it took from the first event of a case to the event related to the 'end trip' or 'declaration rejected by employee' or 'payment handled' activity.\nSELECT ",
            "response": "p.idcase, strftime('%s', p.timestamp) - strftime('%s', e.start_time) as 'End trip', strftime('%s', x.timestamp) - strftime('%s', e.start_time) as 'Declaration rejected by employee', strftime('%s', y.timestamp) - strftime('%s', e.start_time) as 'Payment handled' from event_log p inner join (select MIN(timestamp) as start_time, idcase FROM event_log GROUP by idcase) e on e.idcase = p.idcase and p.activity = 'End trip' left join event_log x on x.idcase=e.idcase and x.activity = 'Declaration rejected by employee' left join event_log y on y.idcase=e.idcase and y.activity = 'Payment handled'",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "54_1"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Calculate, for each case, the time elapsed from the first event to the event of interest associated with the 'end trip' or 'declaration rejected by employee' or 'payment handled' activity, and present the calculated time.\nSELECT ",
            "response": "p.idcase, strftime('%s', p.timestamp) - strftime('%s', e.start_time) as 'End trip', strftime('%s', x.timestamp) - strftime('%s', e.start_time) as 'Declaration rejected by employee', strftime('%s', y.timestamp) - strftime('%s', e.start_time) as 'Payment handled' from event_log p inner join (select MIN(timestamp) as start_time, idcase FROM event_log GROUP by idcase) e on e.idcase = p.idcase and p.activity = 'End trip' left join event_log x on x.idcase=e.idcase and x.activity = 'Declaration rejected by employee' left join event_log y on y.idcase=e.idcase and y.activity = 'Payment handled'",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "54_2"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### How long did it take between the first action taken on a declaration until an indication of the finalization of a trip, or until those actions that indicate that the declaration was rejected by an employee or that a payment has already been made?\nSELECT ",
            "response": "p.idcase, strftime('%s', p.timestamp) - strftime('%s', e.start_time) as 'End trip', strftime('%s', x.timestamp) - strftime('%s', e.start_time) as 'Declaration rejected by employee', strftime('%s', y.timestamp) - strftime('%s', e.start_time) as 'Payment handled' from event_log p inner join (select MIN(timestamp) as start_time, idcase FROM event_log GROUP by idcase) e on e.idcase = p.idcase and p.activity = 'End trip' left join event_log x on x.idcase=e.idcase and x.activity = 'Declaration rejected by employee' left join event_log y on y.idcase=e.idcase and y.activity = 'Payment handled'",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "54_3"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Show how long it took from the first intervention on a declaration to the intervention that indicates the end of the trip, or to those that indicate that the declaration was rejected by an employee or that indicate that a payment has already been made.\nSELECT ",
            "response": "p.idcase, strftime('%s', p.timestamp) - strftime('%s', e.start_time) as 'End trip', strftime('%s', x.timestamp) - strftime('%s', e.start_time) as 'Declaration rejected by employee', strftime('%s', y.timestamp) - strftime('%s', e.start_time) as 'Payment handled' from event_log p inner join (select MIN(timestamp) as start_time, idcase FROM event_log GROUP by idcase) e on e.idcase = p.idcase and p.activity = 'End trip' left join event_log x on x.idcase=e.idcase and x.activity = 'Declaration rejected by employee' left join event_log y on y.idcase=e.idcase and y.activity = 'Payment handled'",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "54_4"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Show how long it took from the first event of a case to the event related to 'end trip' and to possible 'declaration rejected by employee' or 'payment handled' activities. Furthermore, report the case and the activity treated as final in this context.\nSELECT ",
            "response": "p.idcase, strftime('%s', p.timestamp) - strftime('%s', e.start_time) as 'End trip', strftime('%s', x.timestamp) - strftime('%s', e.start_time) as 'Declaration rejected by employee', strftime('%s', y.timestamp) - strftime('%s', e.start_time) as 'Payment handled', f.activity from event_log p inner join (select MIN(timestamp) as start_time, idcase FROM event_log GROUP by idcase) e on e.idcase = p.idcase and p.activity = 'End trip' left join event_log x on x.idcase=e.idcase and x.activity = 'Declaration rejected by employee' left join event_log y on y.idcase=e.idcase and y.activity = 'Payment handled' inner join (select MAX(timestamp) as end_time, activity, idcase FROM event_log WHERE activity='End trip' or activity= 'Declaration rejected by employee' or activity='Payment handled' GROUP by idcase) f on f.idcase=e.idcase",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "55_0"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Show how long it took from the first event of a case to the event related to the activity that indicates the end of the trip ('end trip') or to events related to activities that indicate the rejection of declaration submission ('declaration rejected by employee') or related to activities that indicate payment made ('payment handled'). Along with this time, report the case and the activity considered to be the end of this interval.\nSELECT ",
            "response": "p.idcase, strftime('%s', p.timestamp) - strftime('%s', e.start_time) as 'End trip', strftime('%s', x.timestamp) - strftime('%s', e.start_time) as 'Declaration rejected by employee', strftime('%s', y.timestamp) - strftime('%s', e.start_time) as 'Payment handled', f.activity from event_log p inner join (select MIN(timestamp) as start_time, idcase FROM event_log GROUP by idcase) e on e.idcase = p.idcase and p.activity = 'End trip' left join event_log x on x.idcase=e.idcase and x.activity = 'Declaration rejected by employee' left join event_log y on y.idcase=e.idcase and y.activity = 'Payment handled' inner join (select MAX(timestamp) as end_time, activity, idcase FROM event_log WHERE activity='End trip' or activity= 'Declaration rejected by employee' or activity='Payment handled' GROUP by idcase) f on f.idcase=e.idcase",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "55_1"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Show how long it took from the first event of a case to the event related to the 'end trip' or 'declaration rejected by employee' or 'payment handled' activity. In addition to this time, return the case and activity considered at the end of this interval.\nSELECT ",
            "response": "p.idcase, strftime('%s', p.timestamp) - strftime('%s', e.start_time) as 'End trip', strftime('%s', x.timestamp) - strftime('%s', e.start_time) as 'Declaration rejected by employee', strftime('%s', y.timestamp) - strftime('%s', e.start_time) as 'Payment handled', f.activity from event_log p inner join (select MIN(timestamp) as start_time, idcase FROM event_log GROUP by idcase) e on e.idcase = p.idcase and p.activity = 'End trip' left join event_log x on x.idcase=e.idcase and x.activity = 'Declaration rejected by employee' left join event_log y on y.idcase=e.idcase and y.activity = 'Payment handled' inner join (select MAX(timestamp) as end_time, activity, idcase FROM event_log WHERE activity='End trip' or activity= 'Declaration rejected by employee' or activity='Payment handled' GROUP by idcase) f on f.idcase=e.idcase",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "55_2"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Calculate, for each case, the elapsed time from the first event to the event of interest associated with the 'end trip' or 'declaration rejected by employee' or 'payment handled' activity, and retrieve the case, the activity of the event of interest and the calculated time.\nSELECT ",
            "response": "p.idcase, strftime('%s', p.timestamp) - strftime('%s', e.start_time) as 'End trip', strftime('%s', x.timestamp) - strftime('%s', e.start_time) as 'Declaration rejected by employee', strftime('%s', y.timestamp) - strftime('%s', e.start_time) as 'Payment handled', f.activity from event_log p inner join (select MIN(timestamp) as start_time, idcase FROM event_log GROUP by idcase) e on e.idcase = p.idcase and p.activity = 'End trip' left join event_log x on x.idcase=e.idcase and x.activity = 'Declaration rejected by employee' left join event_log y on y.idcase=e.idcase and y.activity = 'Payment handled' inner join (select MAX(timestamp) as end_time, activity, idcase FROM event_log WHERE activity='End trip' or activity= 'Declaration rejected by employee' or activity='Payment handled' GROUP by idcase) f on f.idcase=e.idcase",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "55_3"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### How long does it take from the start of processing a declaration until the end of the trip is recorded or until it is rejected by an employee or payment is made?\nSELECT ",
            "response": "p.idcase, strftime('%s', p.timestamp) - strftime('%s', e.start_time) as 'End trip', strftime('%s', x.timestamp) - strftime('%s', e.start_time) as 'Declaration rejected by employee', strftime('%s', y.timestamp) - strftime('%s', e.start_time) as 'Payment handled', f.activity from event_log p inner join (select MIN(timestamp) as start_time, idcase FROM event_log GROUP by idcase) e on e.idcase = p.idcase and p.activity = 'End trip' left join event_log x on x.idcase=e.idcase and x.activity = 'Declaration rejected by employee' left join event_log y on y.idcase=e.idcase and y.activity = 'Payment handled' inner join (select MAX(timestamp) as end_time, activity, idcase FROM event_log WHERE activity='End trip' or activity= 'Declaration rejected by employee' or activity='Payment handled' GROUP by idcase) f on f.idcase=e.idcase",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "55_4"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Retrieve event data associated with 'request payment' activities existing in the event log.\nSELECT ",
            "response": "* FROM event_log WHERE activity = 'Request payment'",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "56_0"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Are there records of 'request payment' activity in the event log? If yes, show the event data associated with the records.\nSELECT ",
            "response": "* FROM event_log WHERE activity = 'Request payment'",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "56_1"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Are there declarations for which a payment request has already been made? If yes, supply the data from these requests.\nSELECT ",
            "response": "* FROM event_log WHERE activity = 'Request payment'",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "56_2"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Are there interventions that request payment for declarations? If so, report details of the performance of this intervention.\nSELECT ",
            "response": "* FROM event_log WHERE activity = 'Request payment'",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "56_3"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### What is the mean duration time of each type of activity?\nSELECT ",
            "response": "nkedEvents AS (SELECT id, activity, timestamp, LEAD(timestamp) OVER (PARTITION BY idcase ORDER BY timestamp) AS next_timestamp, idcase FROM event_log), DurationEvents AS (SELECT activity, (strftime('%s', next_timestamp) - strftime('%s', timestamp)) as duration FROM RankedEvents WHERE next_timestamp IS NOT NULL) SELECT activity, AVG(duration) AS average_duration FROM DurationEvents GROUP BY activity",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "57_0"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### What is the average duration time of each activity?\nSELECT ",
            "response": "nkedEvents AS (SELECT id, activity, timestamp, LEAD(timestamp) OVER (PARTITION BY idcase ORDER BY timestamp) AS next_timestamp, idcase FROM event_log), DurationEvents AS (SELECT activity, (strftime('%s', next_timestamp) - strftime('%s', timestamp)) as duration FROM RankedEvents WHERE next_timestamp IS NOT NULL) SELECT activity, AVG(duration) AS average_duration FROM DurationEvents GROUP BY activity",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "57_1"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### What is the mean duration time of each activity?\nSELECT ",
            "response": "nkedEvents AS (SELECT id, activity, timestamp, LEAD(timestamp) OVER (PARTITION BY idcase ORDER BY timestamp) AS next_timestamp, idcase FROM event_log), DurationEvents AS (SELECT activity, (strftime('%s', next_timestamp) - strftime('%s', timestamp)) as duration FROM RankedEvents WHERE next_timestamp IS NOT NULL) SELECT activity, AVG(duration) AS average_duration FROM DurationEvents GROUP BY activity",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "57_2"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### How long, on average, does each activity last?\nSELECT ",
            "response": "nkedEvents AS (SELECT id, activity, timestamp, LEAD(timestamp) OVER (PARTITION BY idcase ORDER BY timestamp) AS next_timestamp, idcase FROM event_log), DurationEvents AS (SELECT activity, (strftime('%s', next_timestamp) - strftime('%s', timestamp)) as duration FROM RankedEvents WHERE next_timestamp IS NOT NULL) SELECT activity, AVG(duration) AS average_duration FROM DurationEvents GROUP BY activity",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "57_3"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### What is each activity's mean duration?\nSELECT ",
            "response": "nkedEvents AS (SELECT id, activity, timestamp, LEAD(timestamp) OVER (PARTITION BY idcase ORDER BY timestamp) AS next_timestamp, idcase FROM event_log), DurationEvents AS (SELECT activity, (strftime('%s', next_timestamp) - strftime('%s', timestamp)) as duration FROM RankedEvents WHERE next_timestamp IS NOT NULL) SELECT activity, AVG(duration) AS average_duration FROM DurationEvents GROUP BY activity",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "57_4"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### What is the mean duration of each activity?\nSELECT ",
            "response": "nkedEvents AS (SELECT id, activity, timestamp, LEAD(timestamp) OVER (PARTITION BY idcase ORDER BY timestamp) AS next_timestamp, idcase FROM event_log), DurationEvents AS (SELECT activity, (strftime('%s', next_timestamp) - strftime('%s', timestamp)) as duration FROM RankedEvents WHERE next_timestamp IS NOT NULL) SELECT activity, AVG(duration) AS average_duration FROM DurationEvents GROUP BY activity",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "57_5"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### What is, on average, the duration of each activity?\nSELECT ",
            "response": "nkedEvents AS (SELECT id, activity, timestamp, LEAD(timestamp) OVER (PARTITION BY idcase ORDER BY timestamp) AS next_timestamp, idcase FROM event_log), DurationEvents AS (SELECT activity, (strftime('%s', next_timestamp) - strftime('%s', timestamp)) as duration FROM RankedEvents WHERE next_timestamp IS NOT NULL) SELECT activity, AVG(duration) AS average_duration FROM DurationEvents GROUP BY activity",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "57_6"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### What is each activity's average duration?\nSELECT ",
            "response": "nkedEvents AS (SELECT id, activity, timestamp, LEAD(timestamp) OVER (PARTITION BY idcase ORDER BY timestamp) AS next_timestamp, idcase FROM event_log), DurationEvents AS (SELECT activity, (strftime('%s', next_timestamp) - strftime('%s', timestamp)) as duration FROM RankedEvents WHERE next_timestamp IS NOT NULL) SELECT activity, AVG(duration) AS average_duration FROM DurationEvents GROUP BY activity",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "57_7"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### What is the average duration of each activity?\nSELECT ",
            "response": "nkedEvents AS (SELECT id, activity, timestamp, LEAD(timestamp) OVER (PARTITION BY idcase ORDER BY timestamp) AS next_timestamp, idcase FROM event_log), DurationEvents AS (SELECT activity, (strftime('%s', next_timestamp) - strftime('%s', timestamp)) as duration FROM RankedEvents WHERE next_timestamp IS NOT NULL) SELECT activity, AVG(duration) AS average_duration FROM DurationEvents GROUP BY activity",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "57_8"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### How long does each type of activity last on average?\nSELECT ",
            "response": "nkedEvents AS (SELECT id, activity, timestamp, LEAD(timestamp) OVER (PARTITION BY idcase ORDER BY timestamp) AS next_timestamp, idcase FROM event_log), DurationEvents AS (SELECT activity, (strftime('%s', next_timestamp) - strftime('%s', timestamp)) as duration FROM RankedEvents WHERE next_timestamp IS NOT NULL) SELECT activity, AVG(duration) AS average_duration FROM DurationEvents GROUP BY activity",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "57_9"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### How long does each activity last on average?\nSELECT ",
            "response": "nkedEvents AS (SELECT id, activity, timestamp, LEAD(timestamp) OVER (PARTITION BY idcase ORDER BY timestamp) AS next_timestamp, idcase FROM event_log), DurationEvents AS (SELECT activity, (strftime('%s', next_timestamp) - strftime('%s', timestamp)) as duration FROM RankedEvents WHERE next_timestamp IS NOT NULL) SELECT activity, AVG(duration) AS average_duration FROM DurationEvents GROUP BY activity",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "57_10"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Report the mean duration time of each type of activity\nSELECT ",
            "response": "nkedEvents AS (SELECT id, activity, timestamp, LEAD(timestamp) OVER (PARTITION BY idcase ORDER BY timestamp) AS next_timestamp, idcase FROM event_log), DurationEvents AS (SELECT activity, (strftime('%s', next_timestamp) - strftime('%s', timestamp)) as duration FROM RankedEvents WHERE next_timestamp IS NOT NULL) SELECT activity, AVG(duration) AS average_duration FROM DurationEvents GROUP BY activity",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "57_11"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Report what the mean duration time of each activity is.\nSELECT ",
            "response": "nkedEvents AS (SELECT id, activity, timestamp, LEAD(timestamp) OVER (PARTITION BY idcase ORDER BY timestamp) AS next_timestamp, idcase FROM event_log), DurationEvents AS (SELECT activity, (strftime('%s', next_timestamp) - strftime('%s', timestamp)) as duration FROM RankedEvents WHERE next_timestamp IS NOT NULL) SELECT activity, AVG(duration) AS average_duration FROM DurationEvents GROUP BY activity",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "57_12"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Report what each activity's mean duration time is.\nSELECT ",
            "response": "nkedEvents AS (SELECT id, activity, timestamp, LEAD(timestamp) OVER (PARTITION BY idcase ORDER BY timestamp) AS next_timestamp, idcase FROM event_log), DurationEvents AS (SELECT activity, (strftime('%s', next_timestamp) - strftime('%s', timestamp)) as duration FROM RankedEvents WHERE next_timestamp IS NOT NULL) SELECT activity, AVG(duration) AS average_duration FROM DurationEvents GROUP BY activity",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "57_13"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Report the mean duration time of each activity.\nSELECT ",
            "response": "nkedEvents AS (SELECT id, activity, timestamp, LEAD(timestamp) OVER (PARTITION BY idcase ORDER BY timestamp) AS next_timestamp, idcase FROM event_log), DurationEvents AS (SELECT activity, (strftime('%s', next_timestamp) - strftime('%s', timestamp)) as duration FROM RankedEvents WHERE next_timestamp IS NOT NULL) SELECT activity, AVG(duration) AS average_duration FROM DurationEvents GROUP BY activity",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "57_14"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Report how long, on average, each activity lasts.\nSELECT ",
            "response": "nkedEvents AS (SELECT id, activity, timestamp, LEAD(timestamp) OVER (PARTITION BY idcase ORDER BY timestamp) AS next_timestamp, idcase FROM event_log), DurationEvents AS (SELECT activity, (strftime('%s', next_timestamp) - strftime('%s', timestamp)) as duration FROM RankedEvents WHERE next_timestamp IS NOT NULL) SELECT activity, AVG(duration) AS average_duration FROM DurationEvents GROUP BY activity",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "57_15"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Report the mean duration of each type of activity.\nSELECT ",
            "response": "nkedEvents AS (SELECT id, activity, timestamp, LEAD(timestamp) OVER (PARTITION BY idcase ORDER BY timestamp) AS next_timestamp, idcase FROM event_log), DurationEvents AS (SELECT activity, (strftime('%s', next_timestamp) - strftime('%s', timestamp)) as duration FROM RankedEvents WHERE next_timestamp IS NOT NULL) SELECT activity, AVG(duration) AS average_duration FROM DurationEvents GROUP BY activity",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "57_16"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Report what the mean duration of each activity is.\nSELECT ",
            "response": "nkedEvents AS (SELECT id, activity, timestamp, LEAD(timestamp) OVER (PARTITION BY idcase ORDER BY timestamp) AS next_timestamp, idcase FROM event_log), DurationEvents AS (SELECT activity, (strftime('%s', next_timestamp) - strftime('%s', timestamp)) as duration FROM RankedEvents WHERE next_timestamp IS NOT NULL) SELECT activity, AVG(duration) AS average_duration FROM DurationEvents GROUP BY activity",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "57_17"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Report what each activity's mean duration is.\nSELECT ",
            "response": "nkedEvents AS (SELECT id, activity, timestamp, LEAD(timestamp) OVER (PARTITION BY idcase ORDER BY timestamp) AS next_timestamp, idcase FROM event_log), DurationEvents AS (SELECT activity, (strftime('%s', next_timestamp) - strftime('%s', timestamp)) as duration FROM RankedEvents WHERE next_timestamp IS NOT NULL) SELECT activity, AVG(duration) AS average_duration FROM DurationEvents GROUP BY activity",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "57_18"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Report the mean duration of each activity.\nSELECT ",
            "response": "nkedEvents AS (SELECT id, activity, timestamp, LEAD(timestamp) OVER (PARTITION BY idcase ORDER BY timestamp) AS next_timestamp, idcase FROM event_log), DurationEvents AS (SELECT activity, (strftime('%s', next_timestamp) - strftime('%s', timestamp)) as duration FROM RankedEvents WHERE next_timestamp IS NOT NULL) SELECT activity, AVG(duration) AS average_duration FROM DurationEvents GROUP BY activity",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "57_19"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Report what is, on average, the duration of each activity.\nSELECT ",
            "response": "nkedEvents AS (SELECT id, activity, timestamp, LEAD(timestamp) OVER (PARTITION BY idcase ORDER BY timestamp) AS next_timestamp, idcase FROM event_log), DurationEvents AS (SELECT activity, (strftime('%s', next_timestamp) - strftime('%s', timestamp)) as duration FROM RankedEvents WHERE next_timestamp IS NOT NULL) SELECT activity, AVG(duration) AS average_duration FROM DurationEvents GROUP BY activity",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "57_20"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Report what the average duration of each activity is.\nSELECT ",
            "response": "nkedEvents AS (SELECT id, activity, timestamp, LEAD(timestamp) OVER (PARTITION BY idcase ORDER BY timestamp) AS next_timestamp, idcase FROM event_log), DurationEvents AS (SELECT activity, (strftime('%s', next_timestamp) - strftime('%s', timestamp)) as duration FROM RankedEvents WHERE next_timestamp IS NOT NULL) SELECT activity, AVG(duration) AS average_duration FROM DurationEvents GROUP BY activity",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "57_21"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Report what each activity's average duration is.\nSELECT ",
            "response": "nkedEvents AS (SELECT id, activity, timestamp, LEAD(timestamp) OVER (PARTITION BY idcase ORDER BY timestamp) AS next_timestamp, idcase FROM event_log), DurationEvents AS (SELECT activity, (strftime('%s', next_timestamp) - strftime('%s', timestamp)) as duration FROM RankedEvents WHERE next_timestamp IS NOT NULL) SELECT activity, AVG(duration) AS average_duration FROM DurationEvents GROUP BY activity",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "57_22"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Report the average duration of each activity.\nSELECT ",
            "response": "nkedEvents AS (SELECT id, activity, timestamp, LEAD(timestamp) OVER (PARTITION BY idcase ORDER BY timestamp) AS next_timestamp, idcase FROM event_log), DurationEvents AS (SELECT activity, (strftime('%s', next_timestamp) - strftime('%s', timestamp)) as duration FROM RankedEvents WHERE next_timestamp IS NOT NULL) SELECT activity, AVG(duration) AS average_duration FROM DurationEvents GROUP BY activity",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "57_23"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Report how long each activity lasts on average.\nSELECT ",
            "response": "nkedEvents AS (SELECT id, activity, timestamp, LEAD(timestamp) OVER (PARTITION BY idcase ORDER BY timestamp) AS next_timestamp, idcase FROM event_log), DurationEvents AS (SELECT activity, (strftime('%s', next_timestamp) - strftime('%s', timestamp)) as duration FROM RankedEvents WHERE next_timestamp IS NOT NULL) SELECT activity, AVG(duration) AS average_duration FROM DurationEvents GROUP BY activity",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "57_24"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### How long, on average, does each type of intervention carried out during the processing of declarations last?\nSELECT ",
            "response": "nkedEvents AS (SELECT id, activity, timestamp, LEAD(timestamp) OVER (PARTITION BY idcase ORDER BY timestamp) AS next_timestamp, idcase FROM event_log), DurationEvents AS (SELECT activity, (strftime('%s', next_timestamp) - strftime('%s', timestamp)) as duration FROM RankedEvents WHERE next_timestamp IS NOT NULL) SELECT activity, AVG(duration) AS average_duration FROM DurationEvents GROUP BY activity",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "57_25"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Which are the cases with the highest cost?\nSELECT ",
            "response": "idcase FROM event_log GROUP BY idcase HAVING SUM(cost) = (SELECT SUM(cost) FROM event_log GROUP BY idcase ORDER BY SUM(cost) DESC LIMIT 1)",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "58_0"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Which cases have the highest cost?\nSELECT ",
            "response": "idcase FROM event_log GROUP BY idcase HAVING SUM(cost) = (SELECT SUM(cost) FROM event_log GROUP BY idcase ORDER BY SUM(cost) DESC LIMIT 1)",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "58_1"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Which cases have the maximum cost already recorded in the event log?\nSELECT ",
            "response": "idcase FROM event_log GROUP BY idcase HAVING SUM(cost) = (SELECT SUM(cost) FROM event_log GROUP BY idcase ORDER BY SUM(cost) DESC LIMIT 1)",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "58_2"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Present cases whose costs are equal to the highest cost.\nSELECT ",
            "response": "idcase FROM event_log GROUP BY idcase HAVING SUM(cost) = (SELECT SUM(cost) FROM event_log GROUP BY idcase ORDER BY SUM(cost) DESC LIMIT 1)",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "58_3"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Present cases whose costs are equal to the maximum cost already recorded in the event log.\nSELECT ",
            "response": "idcase FROM event_log GROUP BY idcase HAVING SUM(cost) = (SELECT SUM(cost) FROM event_log GROUP BY idcase ORDER BY SUM(cost) DESC LIMIT 1)",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "58_4"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Present the highest cost cases.\nSELECT ",
            "response": "idcase FROM event_log GROUP BY idcase HAVING SUM(cost) = (SELECT SUM(cost) FROM event_log GROUP BY idcase ORDER BY SUM(cost) DESC LIMIT 1)",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "58_5"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Which declarations represent the highest cost to the university?\nSELECT ",
            "response": "idcase FROM event_log GROUP BY idcase HAVING SUM(cost) = (SELECT SUM(cost) FROM event_log GROUP BY idcase ORDER BY SUM(cost) DESC LIMIT 1)",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "58_6"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### What are the events with the highest cost?\nSELECT ",
            "response": "* FROM event_log WHERE cost = (SELECT MAX(cost) FROM event_log)",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "59_0"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Which events have the highest cost?\nSELECT ",
            "response": "* FROM event_log WHERE cost = (SELECT MAX(cost) FROM event_log)",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "59_1"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Which events have the maximum cost?\nSELECT ",
            "response": "* FROM event_log WHERE cost = (SELECT MAX(cost) FROM event_log)",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "59_2"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Which events have the maximum cost amount?\nSELECT ",
            "response": "* FROM event_log WHERE cost = (SELECT MAX(cost) FROM event_log)",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "59_3"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Present the events whose costs are equal to the highest cost.\nSELECT ",
            "response": "* FROM event_log WHERE cost = (SELECT MAX(cost) FROM event_log)",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "59_4"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Present the events whose costs are maximum.\nSELECT ",
            "response": "* FROM event_log WHERE cost = (SELECT MAX(cost) FROM event_log)",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "59_5"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Present the highest-cost events.\nSELECT ",
            "response": "* FROM event_log WHERE cost = (SELECT MAX(cost) FROM event_log)",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "59_6"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Present the events whose cost amounts are the highest.\nSELECT ",
            "response": "* FROM event_log WHERE cost = (SELECT MAX(cost) FROM event_log)",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "59_7"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Present the events whose cost amounts are equal to the maximum cost.\nSELECT ",
            "response": "* FROM event_log WHERE cost = (SELECT MAX(cost) FROM event_log)",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "59_8"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Present the events with the highest cost amount.\nSELECT ",
            "response": "* FROM event_log WHERE cost = (SELECT MAX(cost) FROM event_log)",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "59_9"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Report the events whose costs are the highest.\nSELECT ",
            "response": "* FROM event_log WHERE cost = (SELECT MAX(cost) FROM event_log)",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "59_10"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Report the events whose costs are equal to the maximum cost.\nSELECT ",
            "response": "* FROM event_log WHERE cost = (SELECT MAX(cost) FROM event_log)",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "59_11"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Report the highest cost events.\nSELECT ",
            "response": "* FROM event_log WHERE cost = (SELECT MAX(cost) FROM event_log)",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "59_12"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Report the events whose cost amounts are the highest.\nSELECT ",
            "response": "* FROM event_log WHERE cost = (SELECT MAX(cost) FROM event_log)",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "59_13"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Report the events whose cost amounts are the maximum.\nSELECT ",
            "response": "* FROM event_log WHERE cost = (SELECT MAX(cost) FROM event_log)",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "59_14"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Report the events with the highest-cost amount.\nSELECT ",
            "response": "* FROM event_log WHERE cost = (SELECT MAX(cost) FROM event_log)",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "59_15"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Which interventions have their costs equal to the highest cost already recorded?\nSELECT ",
            "response": "* FROM event_log WHERE cost = (SELECT MAX(cost) FROM event_log)",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "59_16"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### List the events, with their attributes, that refer to the 'start trip' activity.\nSELECT ",
            "response": "* from event_log where activity = 'Start trip'",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "60_0"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### List the events, with their respective attributes, that refer to the 'start trip' activity.\nSELECT ",
            "response": "* from event_log where activity = 'Start trip'",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "60_1"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### List the events, with their attributes, that refer to the performance of the 'start trip' activity.\nSELECT ",
            "response": "* from event_log where activity = 'Start trip'",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "60_2"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### List the events, with their respective attributes, that refer to the performance of the 'start trip' activity.\nSELECT ",
            "response": "* from event_log where activity = 'Start trip'",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "60_3"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### List all available information about the events that relate to the 'start trip' activity.\nSELECT ",
            "response": "* from event_log where activity = 'Start trip'",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "60_4"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### List all available information about the events that relate to the performance of the 'start trip' activity.\nSELECT ",
            "response": "* from event_log where activity = 'Start trip'",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "60_5"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### List all available information regarding events related to the performance of the 'start trip' activity.\nSELECT ",
            "response": "* from event_log where activity = 'Start trip'",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "60_6"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### List all available information regarding the events resulting from the performance of the 'start trip' activity.\nSELECT ",
            "response": "* from event_log where activity = 'Start trip'",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "60_7"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Present the events, with their attributes, that refer to the 'start trip' activity.\nSELECT ",
            "response": "* from event_log where activity = 'Start trip'",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "60_8"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Present the events, with their respective attributes, that refer to the 'start trip' activity.\nSELECT ",
            "response": "* from event_log where activity = 'Start trip'",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "60_9"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Present the events, with their attributes, that refer to the performance of the 'start trip' activity.\nSELECT ",
            "response": "* from event_log where activity = 'Start trip'",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "60_10"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Present all available information about the events that relate to the 'start trip' activity.\nSELECT ",
            "response": "* from event_log where activity = 'Start trip'",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "60_11"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Present all available information about the events that refer to the 'start trip' activity.\nSELECT ",
            "response": "* from event_log where activity = 'Start trip'",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "60_12"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Present all available information about the events that relate to the performance of the 'start trip' activity.\nSELECT ",
            "response": "* from event_log where activity = 'Start trip'",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "60_13"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Present all available information referring to the events related to the performance of the 'start trip' activity.\nSELECT ",
            "response": "* from event_log where activity = 'Start trip'",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "60_14"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Present all available information referring to the events resulting from the performance of the 'start trip' activity.\nSELECT ",
            "response": "* from event_log where activity = 'Start trip'",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "60_15"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Make a report with all the information regarding the interventions that generated a record of the start of the trip.\nSELECT ",
            "response": "* from event_log where activity = 'Start trip'",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "60_16"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Extract data describing the interventions that determine the start of a trip.\nSELECT ",
            "response": "* from event_log where activity = 'Start trip'",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "60_17"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### What is the total number of records per activity?\nSELECT ",
            "response": "activity, count(*) from event_log group by activity",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "61_0"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### What is the total number of performances of each activity?\nSELECT ",
            "response": "activity, count(*) from event_log group by activity",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "61_1"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### What is the total quantity of performances of each activity?\nSELECT ",
            "response": "activity, count(*) from event_log group by activity",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "61_2"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### How many events are there associated with each activity?\nSELECT ",
            "response": "activity, count(*) from event_log group by activity",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "61_3"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### How many times was each activity performed?\nSELECT ",
            "response": "activity, count(*) from event_log group by activity",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "61_4"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### How many performances of each activity were recorded?\nSELECT ",
            "response": "activity, count(*) from event_log group by activity",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "61_5"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Report how many events are associated with the performance of each activity.\nSELECT ",
            "response": "activity, count(*) from event_log group by activity",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "61_6"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### For each activity, how many events are related to its performance?\nSELECT ",
            "response": "activity, count(*) from event_log group by activity",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "61_7"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Report, for each activity, the number of events resulting from its performance\nSELECT ",
            "response": "activity, count(*) from event_log group by activity",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "61_8"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### For each activity, how many events result from its performance?\nSELECT ",
            "response": "activity, count(*) from event_log group by activity",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "61_9"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Report, for each activity, the number of events related to its performance\nSELECT ",
            "response": "activity, count(*) from event_log group by activity",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "61_10"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### How many events are associated with the performance of each activity?\nSELECT ",
            "response": "activity, count(*) from event_log group by activity",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "61_11"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Report the total number of performances for each activity\nSELECT ",
            "response": "activity, count(*) from event_log group by activity",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "61_12"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Report the total quantity of performances for each activity\nSELECT ",
            "response": "activity, count(*) from event_log group by activity",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "61_13"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Report how many events there are associated with each activity\nSELECT ",
            "response": "activity, count(*) from event_log group by activity",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "61_14"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Report how many times each activity was performed\nSELECT ",
            "response": "activity, count(*) from event_log group by activity",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "61_15"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Report how many performances of each activity were recorded\nSELECT ",
            "response": "activity, count(*) from event_log group by activity",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "61_16"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Each type of possible action during the processing of a declaration is related to a number of interventions. Make a report on this quantity.\nSELECT ",
            "response": "activity, count(*) from event_log group by activity",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "61_17"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### When processing declarations, several actions are possible. How many times was each of these actions performed?\nSELECT ",
            "response": "activity, count(*) from event_log group by activity",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "61_18"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Make a report reporting the number of interventions that have already been registered for each type of possible action in processing declarations.\nSELECT ",
            "response": "activity, count(*) from event_log group by activity",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "61_19"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Report the number of interventions that were carried out in the declarations, considering each type of possible action.\nSELECT ",
            "response": "activity, count(*) from event_log group by activity",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "61_20"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### How many interventions have already been recorded for each type of possible action on declarations?\nSELECT ",
            "response": "activity, count(*) from event_log group by activity",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "61_21"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Recover the number of interventions that were carried out in the declarations, considering each type of possible action.\nSELECT ",
            "response": "activity, count(*) from event_log group by activity",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "61_22"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### How many interventions were made in the declarations, considering each type of possible action?\nSELECT ",
            "response": "activity, count(*) from event_log group by activity",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "61_23"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Present the cost of each event and the activity performed, ordered by the cost of the event.\nSELECT ",
            "response": "cost, activity from event_log order by cost",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "62_0"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Present the cost of the event and associated activity, ordered by the cost of the event.\nSELECT ",
            "response": "cost, activity from event_log order by cost",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "62_1"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Present the cost of each event and the corresponding activity performed, ordered by the cost of the event.\nSELECT ",
            "response": "cost, activity from event_log order by cost",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "62_2"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### List the cost of each event and associated activity, ordered by the cost of the event.\nSELECT ",
            "response": "cost, activity from event_log order by cost",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "62_3"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### List the cost of each event and the activity performed, ordered by the cost of the event.\nSELECT ",
            "response": "cost, activity from event_log order by cost",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "62_4"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### List the cost of each event and the corresponding activity performed, ordered by the cost of the event.\nSELECT ",
            "response": "cost, activity from event_log order by cost",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "62_5"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Create a report that informs how much each intervention carried out on the declarations costs, adding information about which action each intervention refers to. Present the report in order from highest to lowest cost already recorded.\nSELECT ",
            "response": "cost, activity from event_log order by cost",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "62_6"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Create a report on the costs of performing declaration processing tasks, presenting the information from highest to lowest cost.\nSELECT ",
            "response": "cost, activity from event_log order by cost",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "62_7"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### List all events, and their attributes, that are associated with 'permit' activities.\nSELECT ",
            "response": "* FROM event_log WHERE activity LIKE '%Permit%'",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "63_0"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### List all events, and their corresponding attribute values, that are associated with the 'permit' activity.\nSELECT ",
            "response": "* FROM event_log WHERE activity LIKE '%Permit%'",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "63_1"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Retrieve all events, and their attributes, that are associated with the 'permit' activity.\nSELECT ",
            "response": "* FROM event_log WHERE activity LIKE '%Permit%'",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "63_2"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### What are the events associated with performing the 'permit' activity? List all event attributes.\nSELECT ",
            "response": "* FROM event_log WHERE activity LIKE '%Permit%'",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "63_3"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### What are the events associated with performing the 'permit' activity? List all attributes of each event.\nSELECT ",
            "response": "* FROM event_log WHERE activity LIKE '%Permit%'",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "63_4"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### What are the events, and their corresponding attribute values, referring to the 'permit' activity?\nSELECT ",
            "response": "* FROM event_log WHERE activity LIKE '%Permit%'",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "63_5"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### The performances of the 'permit' activity are associated with which events? How are these events characterized?\nSELECT ",
            "response": "* FROM event_log WHERE activity LIKE '%Permit%'",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "63_6"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### What characterizes the events associated with the performance of the 'permit' activity?\nSELECT ",
            "response": "* FROM event_log WHERE activity LIKE '%Permit%'",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "63_7"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Show the attribute values of the events associated with the 'permit' activity.\nSELECT ",
            "response": "* FROM event_log WHERE activity LIKE '%Permit%'",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "63_8"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### The 'permit' activity is associated with which events? List the attribute values of these events.\nSELECT ",
            "response": "* FROM event_log WHERE activity LIKE '%Permit%'",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "63_9"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### What characterizes the interventions that generate a permit during the processing of a declaration?\nSELECT ",
            "response": "* FROM event_log WHERE activity LIKE '%Permit%'",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "63_10"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### What information is associated with permit interventions, within the processing of a declaration?\nSELECT ",
            "response": "* FROM event_log WHERE activity LIKE '%Permit%'",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "63_11"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### What is the highest event cost amount in the event log?\nSELECT ",
            "response": "MAX(cost) FROM event_log",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "64_0"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### What is the highest event cost amount in the log?\nSELECT ",
            "response": "MAX(cost) FROM event_log",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "64_1"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### What is the highest cost in the event log?\nSELECT ",
            "response": "MAX(cost) FROM event_log",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "64_2"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Report the highest cost already recorded in the event log.\nSELECT ",
            "response": "MAX(cost) FROM event_log",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "64_3"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Report the highest cost in the event log.\nSELECT ",
            "response": "MAX(cost) FROM event_log",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "64_4"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### What was the amount spent on the most expensive intervention already recorded during the processing of declarations?\nSELECT ",
            "response": "MAX(cost) FROM event_log",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "64_5"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### What were the cases in which both the 'Sara' and 'Thomas' resources participated?\nSELECT ",
            "response": "idcase FROM event_log WHERE resource = 'Sara' INTERSECT SELECT idcase FROM event_log WHERE resource = 'Thomas'",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "65_0"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Retrieve cases where both the 'Sara' resource and the 'Thomas' resource participated.\nSELECT ",
            "response": "idcase FROM event_log WHERE resource = 'Sara' INTERSECT SELECT idcase FROM event_log WHERE resource = 'Thomas'",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "65_1"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### List the identifiers of the cases in which the 'Sara' and 'Thomas' resources acted.\nSELECT ",
            "response": "idcase FROM event_log WHERE resource = 'Sara' INTERSECT SELECT idcase FROM event_log WHERE resource = 'Thomas'",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "65_2"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### The 'Sara' and 'Thomas' resources both participated in which cases?\nSELECT ",
            "response": "idcase FROM event_log WHERE resource = 'Sara' INTERSECT SELECT idcase FROM event_log WHERE resource = 'Thomas'",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "65_3"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### The 'Sara' and 'Thomas' resources participated together in which cases?\nSELECT ",
            "response": "idcase FROM event_log WHERE resource = 'Sara' INTERSECT SELECT idcase FROM event_log WHERE resource = 'Thomas'",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "65_4"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### What are the declarations in which both Sara and Thomas participated together?\nSELECT ",
            "response": "idcase FROM event_log WHERE resource = 'Sara' INTERSECT SELECT idcase FROM event_log WHERE resource = 'Thomas'",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "65_5"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### How many activities named 'declaration rejected by administration' were performed by each resource?\nSELECT ",
            "response": "COUNT(*), resource FROM event_log WHERE activity = 'Declaration rejected by administration' GROUP BY resource",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "66_0"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### How many activities marked as 'declaration rejected by administration' were performed by each resource?\nSELECT ",
            "response": "COUNT(*), resource FROM event_log WHERE activity = 'Declaration rejected by administration' GROUP BY resource",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "66_1"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Report how many activities named 'declaration rejected by administration' were performed by each resource.\nSELECT ",
            "response": "COUNT(*), resource FROM event_log WHERE activity = 'Declaration rejected by administration' GROUP BY resource",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "66_2"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Report how many activities marked as 'declaration rejected by administration' were performed by each resource.\nSELECT ",
            "response": "COUNT(*), resource FROM event_log WHERE activity = 'Declaration rejected by administration' GROUP BY resource",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "66_3"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### How many instances of performing the activity named 'declaration rejected by administration' were the responsibility of each resource?\nSELECT ",
            "response": "COUNT(*), resource FROM event_log WHERE activity = 'Declaration rejected by administration' GROUP BY resource",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "66_4"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### How many times was each resource responsible for carrying out an activity named 'declaration rejected by administration'?\nSELECT ",
            "response": "COUNT(*), resource FROM event_log WHERE activity = 'Declaration rejected by administration' GROUP BY resource",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "66_5"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Report the number of times each resource was associated with the performance of an activity named 'declaration rejected by administration'.\nSELECT ",
            "response": "COUNT(*), resource FROM event_log WHERE activity = 'Declaration rejected by administration' GROUP BY resource",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "66_6"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Report how many instances of executing the activity named 'declaration rejected by administration' were the responsibility of each resource.\nSELECT ",
            "response": "COUNT(*), resource FROM event_log WHERE activity = 'Declaration rejected by administration' GROUP BY resource",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "66_7"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### For each resource, retrieve information about how many times it has been associated with performing the 'declaration rejected by administration' activity.\nSELECT ",
            "response": "COUNT(*), resource FROM event_log WHERE activity = 'Declaration rejected by administration' GROUP BY resource",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "66_8"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### How many events associated with a 'declaration rejected by administration' were the responsibility of each resource?\nSELECT ",
            "response": "COUNT(*), resource FROM event_log WHERE activity = 'Declaration rejected by administration' GROUP BY resource",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "66_9"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### How many times was each employee responsible for rejecting a declaration performing the role of administrator?\nSELECT ",
            "response": "COUNT(*), resource FROM event_log WHERE activity = 'Declaration rejected by administration' GROUP BY resource",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "66_10"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Report how many activities named 'declaration rejected by administration' were performed by each resource in each case.\nSELECT ",
            "response": "COUNT(*), resource, idcase FROM event_log WHERE activity = 'Declaration rejected by administration' GROUP BY idcase, resource",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "67_0"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### How many activities marked as 'declaration rejected by administration' were performed by each resource in each case?\nSELECT ",
            "response": "COUNT(*), resource, idcase FROM event_log WHERE activity = 'Declaration rejected by administration' GROUP BY idcase, resource",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "67_1"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Report how many activities marked as 'declaration rejected by administration' were performed by each resource in each case.\nSELECT ",
            "response": "COUNT(*), resource, idcase FROM event_log WHERE activity = 'Declaration rejected by administration' GROUP BY idcase, resource",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "67_2"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### How many instances of performing the activity named 'declaration rejected by administration' were the responsibility of each resource in each case?\nSELECT ",
            "response": "COUNT(*), resource, idcase FROM event_log WHERE activity = 'Declaration rejected by administration' GROUP BY idcase, resource",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "67_3"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### How many times was each resource responsible for carrying out an activity named 'declaration rejected by administration' in each case?\nSELECT ",
            "response": "COUNT(*), resource, idcase FROM event_log WHERE activity = 'Declaration rejected by administration' GROUP BY idcase, resource",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "67_4"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Report the number of times each resource was associated with the performance of an activity named 'declaration rejected by administration', in each case.\nSELECT ",
            "response": "COUNT(*), resource, idcase FROM event_log WHERE activity = 'Declaration rejected by administration' GROUP BY idcase, resource",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "67_5"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Report how many instances of carrying out the activity named 'declaration rejected by administration' were the responsibility of each resource in each case?\nSELECT ",
            "response": "COUNT(*), resource, idcase FROM event_log WHERE activity = 'Declaration rejected by administration' GROUP BY idcase, resource",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "67_6"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### For each resource, retrieve information about how many times it was associated with executing the 'declaration rejected by administration' activity in each case.\nSELECT ",
            "response": "COUNT(*), resource, idcase FROM event_log WHERE activity = 'Declaration rejected by administration' GROUP BY idcase, resource",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "67_7"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### How many events associated with a 'declaration rejected by administration' were the responsibility of each resource in each case?\nSELECT ",
            "response": "COUNT(*), resource, idcase FROM event_log WHERE activity = 'Declaration rejected by administration' GROUP BY idcase, resource",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "67_8"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### How many times was each employee responsible for rejecting a declaration, performing the role of administrator, in each of the declarations already processed?\nSELECT ",
            "response": "COUNT(*), resource, idcase FROM event_log WHERE activity = 'Declaration rejected by administration' GROUP BY idcase, resource",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "67_9"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### What is the average event cost for activities other than 'start trip' and 'end trip'?\nSELECT ",
            "response": "AVG(cost) FROM event_log WHERE activity != 'Start trip' AND activity != 'End trip'",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "68_0"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### What is the average cost of events associated with activities other than 'start trip' and 'end trip'?\nSELECT ",
            "response": "AVG(cost) FROM event_log WHERE activity != 'Start trip' AND activity != 'End trip'",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "68_1"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### What is the mean cost of events associated with activities other than 'start trip' and 'end trip'?\nSELECT ",
            "response": "AVG(cost) FROM event_log WHERE activity != 'Start trip' AND activity != 'End trip'",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "68_2"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Report the average cost of events associated with activities other than 'start trip' and 'end trip'.\nSELECT ",
            "response": "AVG(cost) FROM event_log WHERE activity != 'Start trip' AND activity != 'End trip'",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "68_3"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Report the mean cost of events associated with activities other than 'start trip' and 'end trip'.\nSELECT ",
            "response": "AVG(cost) FROM event_log WHERE activity != 'Start trip' AND activity != 'End trip'",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "68_4"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Calculate the average cost of events associated with activities other than 'start trip' and 'end trip'.\nSELECT ",
            "response": "AVG(cost) FROM event_log WHERE activity != 'Start trip' AND activity != 'End trip'",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "68_5"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Calculate the mean cost of events associated with activities other than 'start trip' and 'end trip'.\nSELECT ",
            "response": "AVG(cost) FROM event_log WHERE activity != 'Start trip' AND activity != 'End trip'",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "68_6"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### What is the average cost of events associated with activities that do not relate to the labels 'start trip' and 'end trip'?\nSELECT ",
            "response": "AVG(cost) FROM event_log WHERE activity != 'Start trip' AND activity != 'End trip'",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "68_7"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### What is the average cost of events associated with activities that are not named 'start trip' and 'end trip'?\nSELECT ",
            "response": "AVG(cost) FROM event_log WHERE activity != 'Start trip' AND activity != 'End trip'",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "68_8"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### How much, on average, does an intervention cost, other than those that indicate the beginning or end of a trip?\nSELECT ",
            "response": "AVG(cost) FROM event_log WHERE activity != 'Start trip' AND activity != 'End trip'",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "68_9"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Retrieve the attributes of the five highest-cost events.\nSELECT ",
            "response": "* FROM event_log WHERE cost IN (SELECT DISTINCT cost FROM event_log ORDER BY cost DESC LIMIT 5)",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "69_0"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Select the five events with the highest costs. List all attributes of these events.\nSELECT ",
            "response": "* FROM event_log WHERE cost IN (SELECT DISTINCT cost FROM event_log ORDER BY cost DESC LIMIT 5)",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "69_1"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### What is the information on the 5 highest-cost events?\nSELECT ",
            "response": "* FROM event_log WHERE cost IN (SELECT DISTINCT cost FROM event_log ORDER BY cost DESC LIMIT 5)",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "69_2"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### List the attribute values of the five highest-cost events.\nSELECT ",
            "response": "* FROM event_log WHERE cost IN (SELECT DISTINCT cost FROM event_log ORDER BY cost DESC LIMIT 5)",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "69_3"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Select the five highest-cost events. List all attributes of these events.\nSELECT ",
            "response": "* FROM event_log WHERE cost IN (SELECT DISTINCT cost FROM event_log ORDER BY cost DESC LIMIT 5)",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "69_4"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Recover the attributes of the five highest-cost events.\nSELECT ",
            "response": "* FROM event_log WHERE cost IN (SELECT DISTINCT cost FROM event_log ORDER BY cost DESC LIMIT 5)",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "69_5"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### List the values of the attributes of the five highest-cost events.\nSELECT ",
            "response": "* FROM event_log WHERE cost IN (SELECT DISTINCT cost FROM event_log ORDER BY cost DESC LIMIT 5)",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "69_6"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Create a report that organizes data relating to the five most expensive interventions already recorded.\nSELECT ",
            "response": "* FROM event_log WHERE cost IN (SELECT DISTINCT cost FROM event_log ORDER BY cost DESC LIMIT 5)",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "69_7"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Select the five events with the highest costs.\nSELECT ",
            "response": "* FROM event_log WHERE cost IN (SELECT DISTINCT cost FROM event_log ORDER BY cost DESC LIMIT 5)",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "69_8"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### What are the 5 highest-cost events?\nSELECT ",
            "response": "* FROM event_log WHERE cost IN (SELECT DISTINCT cost FROM event_log ORDER BY cost DESC LIMIT 5)",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "69_9"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Recover the five highest-cost events.\nSELECT ",
            "response": "* FROM event_log WHERE cost IN (SELECT DISTINCT cost FROM event_log ORDER BY cost DESC LIMIT 5)",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "69_10"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### List five higher-cost events.\nSELECT ",
            "response": "* FROM event_log WHERE cost IN (SELECT DISTINCT cost FROM event_log ORDER BY cost DESC LIMIT 5)",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "69_11"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Select the five highest-cost events.\nSELECT ",
            "response": "* FROM event_log WHERE cost IN (SELECT DISTINCT cost FROM event_log ORDER BY cost DESC LIMIT 5)",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "69_12"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Recover the five highest-cost events.\nSELECT ",
            "response": "* FROM event_log WHERE cost IN (SELECT DISTINCT cost FROM event_log ORDER BY cost DESC LIMIT 5)",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "69_13"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### List the five highest-cost events.\nSELECT ",
            "response": "* FROM event_log WHERE cost IN (SELECT DISTINCT cost FROM event_log ORDER BY cost DESC LIMIT 5)",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "69_14"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### What were the five most costly interventions in the processing of declarations?\nSELECT ",
            "response": "* FROM event_log WHERE cost IN (SELECT DISTINCT cost FROM event_log ORDER BY cost DESC LIMIT 5)",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "69_15"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### What are the cases that have more than one event.\nSELECT ",
            "response": "idcase FROM event_log GROUP BY idcase HAVING COUNT(*) > 1",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "71_0"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Retrieve the cases that have more than one event.\nSELECT ",
            "response": "idcase FROM event_log GROUP BY idcase HAVING COUNT(*) > 1",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "71_1"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Report which cases have more than one event.\nSELECT ",
            "response": "idcase FROM event_log GROUP BY idcase HAVING COUNT(*) > 1",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "71_2"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### In which cases was more than one event performed?\nSELECT ",
            "response": "idcase FROM event_log GROUP BY idcase HAVING COUNT(*) > 1",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "71_3"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### In which cases did more than one event occur?\nSELECT ",
            "response": "idcase FROM event_log GROUP BY idcase HAVING COUNT(*) > 1",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "71_4"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Which declarations have undergone more than one intervention?\nSELECT ",
            "response": "idcase FROM event_log GROUP BY idcase HAVING COUNT(*) > 1",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "71_5"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### In which cases is there more than one occurrence of activity?\nSELECT ",
            "response": "DISTINCT idcase FROM event_log GROUP BY idcase, activity HAVING COUNT(*) > 1",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "72_0"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Retrieve the cases that have more than one instance of activity.\nSELECT ",
            "response": "DISTINCT idcase FROM event_log GROUP BY idcase, activity HAVING COUNT(*) > 1",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "72_1"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Report which cases have more than one occurrence of activity.\nSELECT ",
            "response": "DISTINCT idcase FROM event_log GROUP BY idcase, activity HAVING COUNT(*) > 1",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "72_2"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### In which cases was there more than one occurrence of activity?\nSELECT ",
            "response": "DISTINCT idcase FROM event_log GROUP BY idcase, activity HAVING COUNT(*) > 1",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "72_3"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### In which declarations did an action have to be performed more than once?\nSELECT ",
            "response": "DISTINCT idcase FROM event_log GROUP BY idcase, activity HAVING COUNT(*) > 1",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "72_4"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### What events, and their attributes, occurred on the dates '2018-10-01' and '2018-10-02'?\nSELECT ",
            "response": "* FROM event_log WHERE timestamp BETWEEN '2018-10-01' AND '2018-10-03'",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "73_0"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Which records occur on the dates '2018-10-01' and '2018-10-02'?\nSELECT ",
            "response": "* FROM event_log WHERE timestamp BETWEEN '2018-10-01' AND '2018-10-03'",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "73_1"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Retrieve the events, and their attributes, that occurred on the dates '2018-10-01' and '2018-10-02'.\nSELECT ",
            "response": "* FROM event_log WHERE timestamp BETWEEN '2018-10-01' AND '2018-10-03'",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "73_2"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### List the events, and their attributes, that occurred on the dates '2018-10-01' and '2018-10-02'.\nSELECT ",
            "response": "* FROM event_log WHERE timestamp BETWEEN '2018-10-01' AND '2018-10-03'",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "73_3"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Report the events, and their attributes, that occurred on the dates '2018-10-01' and '2018-10-02'.\nSELECT ",
            "response": "* FROM event_log WHERE timestamp BETWEEN '2018-10-01' AND '2018-10-03'",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "73_4"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### On the dates '2018-10-01' and '2018-10-02' which events occurred. List all their attributes.\nSELECT ",
            "response": "* FROM event_log WHERE timestamp BETWEEN '2018-10-01' AND '2018-10-03'",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "73_5"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### What is the information regarding the events that occurred on the dates '2018-10-01' and '2018-10-02'?\nSELECT ",
            "response": "* FROM event_log WHERE timestamp BETWEEN '2018-10-01' AND '2018-10-03'",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "73_6"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Retrieve data relating to events that occurred on the dates '2018-10-01' and '2018-10-02'.\nSELECT ",
            "response": "* FROM event_log WHERE timestamp BETWEEN '2018-10-01' AND '2018-10-03'",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "73_7"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### What happened in the declarations between '2018-10-01' and '2018-10-02'?\nSELECT ",
            "response": "* FROM event_log WHERE timestamp BETWEEN '2018-10-01' AND '2018-10-03'",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "73_8"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### What events, and their attributes, occurred on October first, 2018 and October second, 2018?\nSELECT ",
            "response": "* FROM event_log WHERE timestamp BETWEEN '2018-10-01' AND '2018-10-03'",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "73_9"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Retrieve the events, and their attributes, that occurred on the dates of October first, 2018 and October second, 2018.\nSELECT ",
            "response": "* FROM event_log WHERE timestamp BETWEEN '2018-10-01' AND '2018-10-03'",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "73_10"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### List the events, and their attributes, that occurred on the dates of October first, 2018 and October second, 2018.\nSELECT ",
            "response": "* FROM event_log WHERE timestamp BETWEEN '2018-10-01' AND '2018-10-03'",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "73_11"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Report the events, and their attributes, that occurred on the dates of October first, 2018 and October second, 2018.\nSELECT ",
            "response": "* FROM event_log WHERE timestamp BETWEEN '2018-10-01' AND '2018-10-03'",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "73_12"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### On dates October first, 2018 and October second, 2018 which events occurred? List all their attributes.\nSELECT ",
            "response": "* FROM event_log WHERE timestamp BETWEEN '2018-10-01' AND '2018-10-03'",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "73_13"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### What is the information regarding the events that occurred on the dates of October first, 2018 and October second, 2018?\nSELECT ",
            "response": "* FROM event_log WHERE timestamp BETWEEN '2018-10-01' AND '2018-10-03'",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "73_14"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Retrieve data relating to events that occurred on the dates of October first, 2018 and October second, 2018.\nSELECT ",
            "response": "* FROM event_log WHERE timestamp BETWEEN '2018-10-01' AND '2018-10-03'",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "73_15"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### What happened in the declarations between October first and second, 2018?\nSELECT ",
            "response": "* FROM event_log WHERE timestamp BETWEEN '2018-10-01' AND '2018-10-03'",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "73_16"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### What interventions were carried out between October first and October second of the year 2018?\nSELECT ",
            "response": "* FROM event_log WHERE timestamp BETWEEN '2018-10-01' AND '2018-10-03'",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "73_17"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### What was done in the declarations between October first, 2018 and October second of the same year?\nSELECT ",
            "response": "* FROM event_log WHERE timestamp BETWEEN '2018-10-01' AND '2018-10-03'",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "73_18"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Retrieve all events, and their attributes, that were performed by resources whose name starts with the letter 'M'.\nSELECT ",
            "response": "* FROM event_log WHERE resource LIKE 'M%'",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "75_0"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### What events were performed by resources whose name starts with the letter 'M'? List the events with all their attributes\nSELECT ",
            "response": "* FROM event_log WHERE resource LIKE 'M%'",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "75_1"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### List all events, and their attributes, that were performed by resources whose name starts with the letter 'M'.\nSELECT ",
            "response": "* FROM event_log WHERE resource LIKE 'M%'",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "75_2"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Report all events, and their attributes, that were performed by resources whose name starts with the letter 'M'.\nSELECT ",
            "response": "* FROM event_log WHERE resource LIKE 'M%'",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "75_3"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Retrieve all attributes of events that were performed by resources whose name starts with the letter 'M'.\nSELECT ",
            "response": "* FROM event_log WHERE resource LIKE 'M%'",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "75_4"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### What are the values of the attributes that characterize the events performed by resources whose name starts with the letter 'M'.\nSELECT ",
            "response": "* FROM event_log WHERE resource LIKE 'M%'",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "75_5"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### What have employees with names starting with the letter 'M' been doing during the processing of declarations?\nSELECT ",
            "response": "* FROM event_log WHERE resource LIKE 'M%'",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "75_6"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### What were the interventions carried out by employees whose name starts with 'M'? Report everything about these interventions.\nSELECT ",
            "response": "* FROM event_log WHERE resource LIKE 'M%'",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "75_7"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Which activities were performed more than five times?\nSELECT ",
            "response": "activity FROM event_log GROUP BY activity HAVING COUNT(*) > 5",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "76_0"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### What activities have more than 5 records?\nSELECT ",
            "response": "activity FROM event_log GROUP BY activity HAVING COUNT(*) > 5",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "76_1"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### What activities appear more than five times in the event log?\nSELECT ",
            "response": "activity FROM event_log GROUP BY activity HAVING COUNT(*) > 5",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "76_2"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Which activities have more than five occurrences in the event log?\nSELECT ",
            "response": "activity FROM event_log GROUP BY activity HAVING COUNT(*) > 5",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "76_3"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Which activities are associated with more than five events?\nSELECT ",
            "response": "activity FROM event_log GROUP BY activity HAVING COUNT(*) > 5",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "76_4"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Retrieve the names of activities that have more than five occurrences in the event log.\nSELECT ",
            "response": "activity FROM event_log GROUP BY activity HAVING COUNT(*) > 5",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "76_5"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Retrieve the names of activities that are associated with more than five events.\nSELECT ",
            "response": "activity FROM event_log GROUP BY activity HAVING COUNT(*) > 5",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "76_6"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Retrieve the names of activities that appear more than five times in the event log.\nSELECT ",
            "response": "activity FROM event_log GROUP BY activity HAVING COUNT(*) > 5",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "76_7"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Report activities that have more than five occurrences in the event log.\nSELECT ",
            "response": "activity FROM event_log GROUP BY activity HAVING COUNT(*) > 5",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "76_8"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Report activities that are associated with more than five events.\nSELECT ",
            "response": "activity FROM event_log GROUP BY activity HAVING COUNT(*) > 5",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "76_9"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Report activities that appear more than five times in the event log.\nSELECT ",
            "response": "activity FROM event_log GROUP BY activity HAVING COUNT(*) > 5",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "76_10"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Which actions were performed more than five times during the processing of declarations?\nSELECT ",
            "response": "activity FROM event_log GROUP BY activity HAVING COUNT(*) > 5",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "76_11"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Which activities were performed more than three times per case?\nSELECT ",
            "response": "DISTINCT activity FROM event_log GROUP BY activity, idcase HAVING count(activity) > 3",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "77_0"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### What activities appear more than three times in a single case?\nSELECT ",
            "response": "DISTINCT activity FROM event_log GROUP BY activity, idcase HAVING count(activity) > 3",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "77_1"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Which activities have more than three occurrences per case?\nSELECT ",
            "response": "DISTINCT activity FROM event_log GROUP BY activity, idcase HAVING count(activity) > 3",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "77_2"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Which activities are associated with more than three events per case?\nSELECT ",
            "response": "DISTINCT activity FROM event_log GROUP BY activity, idcase HAVING count(activity) > 3",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "77_3"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Retrieve the names of activities that have more than three occurrences in a single case.\nSELECT ",
            "response": "DISTINCT activity FROM event_log GROUP BY activity, idcase HAVING count(activity) > 3",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "77_4"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Retrieve the names of activities that are associated with more than three events in a single case.\nSELECT ",
            "response": "DISTINCT activity FROM event_log GROUP BY activity, idcase HAVING count(activity) > 3",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "77_5"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Retrieve the names of activities that appear more than three times per case.\nSELECT ",
            "response": "DISTINCT activity FROM event_log GROUP BY activity, idcase HAVING count(activity) > 3",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "77_6"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Report activities that have more than three occurrences per case.\nSELECT ",
            "response": "DISTINCT activity FROM event_log GROUP BY activity, idcase HAVING count(activity) > 3",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "77_7"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Report activities that are associated with more than three events per case.\nSELECT ",
            "response": "DISTINCT activity FROM event_log GROUP BY activity, idcase HAVING count(activity) > 3",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "77_8"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Report activities that appear more than three times in a single case.\nSELECT ",
            "response": "DISTINCT activity FROM event_log GROUP BY activity, idcase HAVING count(activity) > 3",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "77_9"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Analyze the declarations and check which actions were performed more than three times in each of them.\nSELECT ",
            "response": "DISTINCT activity FROM event_log GROUP BY activity, idcase HAVING count(activity) > 3",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "77_10"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### How many events occurred for the 'declaration 56300' case?\nSELECT ",
            "response": "count(*) FROM event_log WHERE idcase = 'declaration 56300'",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "78_0"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### What is the size of the trace associated with the 'declaration 56300' case?\nSELECT ",
            "response": "count(*) FROM event_log WHERE idcase = 'declaration 56300'",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "78_1"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### How many events occurred in the 'declaration 56300' case?\nSELECT ",
            "response": "count(*) FROM event_log WHERE idcase = 'declaration 56300'",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "78_2"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### How many events were performed in the 'declaration 56300' case?\nSELECT ",
            "response": "count(*) FROM event_log WHERE idcase = 'declaration 56300'",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "78_3"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### How many events does the 'declaration 56300' case have?\nSELECT ",
            "response": "count(*) FROM event_log WHERE idcase = 'declaration 56300'",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "78_4"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### How many events were performed for the 'declaration 56300' case?\nSELECT ",
            "response": "count(*) FROM event_log WHERE idcase = 'declaration 56300'",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "78_5"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Report how many actions happened in declaration 56300.\nSELECT ",
            "response": "count(*) FROM event_log WHERE idcase = 'declaration 56300'",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "78_6"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Which activities were performed more than once before 01/10/2017, and how many times were they performed?\nSELECT ",
            "response": "COUNT(*), activity FROM event_log WHERE timestamp < '2017-01-10' GROUP BY activity HAVING COUNT(*) > 1",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "79_0"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Report the activities that were performed more than once before 01/10/2017, and how many times they were performed.\nSELECT ",
            "response": "COUNT(*), activity FROM event_log WHERE timestamp < '2017-01-10' GROUP BY activity HAVING COUNT(*) > 1",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "79_1"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### List the activities that were performed more than once before 01/10/2017 and how many times they were performed.\nSELECT ",
            "response": "COUNT(*), activity FROM event_log WHERE timestamp < '2017-01-10' GROUP BY activity HAVING COUNT(*) > 1",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "79_2"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Retrieve activities that were performed more than once before 01/10/2017, and how many times they were performed.\nSELECT ",
            "response": "COUNT(*), activity FROM event_log WHERE timestamp < '2017-01-10' GROUP BY activity HAVING COUNT(*) > 1",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "79_3"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### If any activity was performed more than once before 01/10/2017, retrieve the name of the activity and how many times it was performed.\nSELECT ",
            "response": "COUNT(*), activity FROM event_log WHERE timestamp < '2017-01-10' GROUP BY activity HAVING COUNT(*) > 1",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "79_4"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### If any activity was performed more than once before 01/10/2017, list the name of the activity and how many times it was performed.\nSELECT ",
            "response": "COUNT(*), activity FROM event_log WHERE timestamp < '2017-01-10' GROUP BY activity HAVING COUNT(*) > 1",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "79_5"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### If any activity was performed more than once before 01/10/2017, report the name of the activity and how many times it was performed.\nSELECT ",
            "response": "COUNT(*), activity FROM event_log WHERE timestamp < '2017-01-10' GROUP BY activity HAVING COUNT(*) > 1",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "79_6"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Report the activities that were performed more than once before 01/10/2017, and the number of times they were performed.\nSELECT ",
            "response": "COUNT(*), activity FROM event_log WHERE timestamp < '2017-01-10' GROUP BY activity HAVING COUNT(*) > 1",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "79_7"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### List the activities that were performed more than once before 01/10/2017, and the number of times they were performed.\nSELECT ",
            "response": "COUNT(*), activity FROM event_log WHERE timestamp < '2017-01-10' GROUP BY activity HAVING COUNT(*) > 1",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "79_8"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### What actions were performed to process the declarations, before 01/10/2017, and how many times were they performed?\nSELECT ",
            "response": "COUNT(*), activity FROM event_log WHERE timestamp < '2017-01-10' GROUP BY activity HAVING COUNT(*) > 1",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "79_9"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Create a report stating how many times actions that were performed more than once occurred for processing performed before January 10, 2017.\nSELECT ",
            "response": "COUNT(*), activity FROM event_log WHERE timestamp < '2017-01-10' GROUP BY activity HAVING COUNT(*) > 1",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "79_10"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### In how many cases did each resource act?\nSELECT ",
            "response": "COUNT(DISTINCT idcase), resource FROM event_log GROUP BY resource",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "80_0"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### In how many process instances did each resource act?\nSELECT ",
            "response": "COUNT(DISTINCT idcase), resource FROM event_log GROUP BY resource",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "80_1"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Report the number of cases in which each resource acted.\nSELECT ",
            "response": "COUNT(DISTINCT idcase), resource FROM event_log GROUP BY resource",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "80_2"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Report the number of cases each resource worked on.\nSELECT ",
            "response": "COUNT(DISTINCT idcase), resource FROM event_log GROUP BY resource",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "80_3"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Report the number of cases in which each resource was involved.\nSELECT ",
            "response": "COUNT(DISTINCT idcase), resource FROM event_log GROUP BY resource",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "80_4"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Report the number of cases to which each resource was allocated.\nSELECT ",
            "response": "COUNT(DISTINCT idcase), resource FROM event_log GROUP BY resource",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "80_5"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### In how many cases did each resource act?\nSELECT ",
            "response": "COUNT(DISTINCT idcase), resource FROM event_log GROUP BY resource",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "80_6"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### How many cases was each resource allocated to?\nSELECT ",
            "response": "COUNT(DISTINCT idcase), resource FROM event_log GROUP BY resource",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "80_7"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### In how many process instances did each resource act?\nSELECT ",
            "response": "COUNT(DISTINCT idcase), resource FROM event_log GROUP BY resource",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "80_8"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### How many process instances was each resource associated with?\nSELECT ",
            "response": "COUNT(DISTINCT idcase), resource FROM event_log GROUP BY resource",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "80_9"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### How many declarations has each of our collaborators already worked on?\nSELECT ",
            "response": "COUNT(DISTINCT idcase), resource FROM event_log GROUP BY resource",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "80_10"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### How many events did each resource act on?\nSELECT ",
            "response": "COUNT(*), resource FROM event_log GROUP BY resource",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "81_0"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Retrieve the number of times a resource has been allocated.\nSELECT ",
            "response": "COUNT(*), resource FROM event_log GROUP BY resource",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "81_1"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### How many times did a resource act?\nSELECT ",
            "response": "COUNT(*), resource FROM event_log GROUP BY resource",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "81_2"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### How many events was each resource associated with?\nSELECT ",
            "response": "COUNT(*), resource FROM event_log GROUP BY resource",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "81_3"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### What is the number of occurrences of a resource acting?\nSELECT ",
            "response": "COUNT(*), resource FROM event_log GROUP BY resource",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "81_4"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Calculate the number of times a resource has been associated with executing activities.\nSELECT ",
            "response": "COUNT(*), resource FROM event_log GROUP BY resource",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "81_5"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Report the number of occurrences of a resource acting.\nSELECT ",
            "response": "COUNT(*), resource FROM event_log GROUP BY resource",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "81_6"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### How many interventions have been carried out by each employee?\nSELECT ",
            "response": "COUNT(*), resource FROM event_log GROUP BY resource",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "81_7"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### What are the cases that the Thomas, Diana, or Sara resource worked on?\nSELECT ",
            "response": "DISTINCT idcase FROM event_log where resource = 'Thomas' OR resource = 'Diana' OR resource = 'Sara'",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "82_0"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### List all cases that one of the following resources worked on: Thomas, Diana, or Sara.\nSELECT ",
            "response": "DISTINCT idcase FROM event_log where resource = 'Thomas' OR resource = 'Diana' OR resource = 'Sara'",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "82_1"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Retrieve the identifiers of the cases in which any of the following resources acted: Thomas, Diana, or Sara.\nSELECT ",
            "response": "DISTINCT idcase FROM event_log where resource = 'Thomas' OR resource = 'Diana' OR resource = 'Sara'",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "82_2"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### What are the cases in which one of the following resources acted: Thomas, Diana, or Sara?\nSELECT ",
            "response": "DISTINCT idcase FROM event_log where resource = 'Thomas' OR resource = 'Diana' OR resource = 'Sara'",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "82_3"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### What declarations were made by Thomas, Diana, or Sara?\nSELECT ",
            "response": "DISTINCT idcase FROM event_log where resource = 'Thomas' OR resource = 'Diana' OR resource = 'Sara'",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "82_4"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### In how many cases that occurred between 5/1/2017 and 6/1/2017 is each resource associated?\nSELECT ",
            "response": "COUNT(DISTINCT idcase), resource FROM event_log WHERE timestamp between '2017-05-01' and '2017-06-01' GROUP BY resource",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "83_0"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Report the number of cases that occurred between 5/1/2017 and 6/1/2017 with which each resource was associated.\nSELECT ",
            "response": "COUNT(DISTINCT idcase), resource FROM event_log WHERE timestamp between '2017-05-01' and '2017-06-01' GROUP BY resource",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "83_1"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### List the number of cases that occurred between 5/1/2017 and 6/1/2017 with which each resource was associated.\nSELECT ",
            "response": "COUNT(DISTINCT idcase), resource FROM event_log WHERE timestamp between '2017-05-01' and '2017-06-01' GROUP BY resource",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "83_2"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Retrieve the number of cases that occurred between 5/1/2017 and 6/1/2017 with which each resource was associated.\nSELECT ",
            "response": "COUNT(DISTINCT idcase), resource FROM event_log WHERE timestamp between '2017-05-01' and '2017-06-01' GROUP BY resource",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "83_3"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Calculate the number of cases that occurred between 5/1/2017 and 6/1/2017 with which each resource was associated.\nSELECT ",
            "response": "COUNT(DISTINCT idcase), resource FROM event_log WHERE timestamp between '2017-05-01' and '2017-06-01' GROUP BY resource",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "83_4"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### How many process instances that occurred between 5/1/2017 and 6/1/2017 is each resource associated with?\nSELECT ",
            "response": "COUNT(DISTINCT idcase), resource FROM event_log WHERE timestamp between '2017-05-01' and '2017-06-01' GROUP BY resource",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "83_5"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### In how many process instances, performed between 5/1/2017 and 6/1/2017, is each resource associated?\nSELECT ",
            "response": "COUNT(DISTINCT idcase), resource FROM event_log WHERE timestamp between '2017-05-01' and '2017-06-01' GROUP BY resource",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "83_6"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### In how many cases, performed between 5/1/2017 and 6/1/2017, is each resource associated?\nSELECT ",
            "response": "COUNT(DISTINCT idcase), resource FROM event_log WHERE timestamp between '2017-05-01' and '2017-06-01' GROUP BY resource",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "83_7"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### How many declarations processed between 5/1/2017 and 6/1/2017 were each employee allocated?\nSELECT ",
            "response": "COUNT(DISTINCT idcase), resource FROM event_log WHERE timestamp between '2017-05-01' and '2017-06-01' GROUP BY resource",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "83_8"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### How many cases, whose event occurred between 5/1/2017 and 6/1/2017, is each resource associated with?\nSELECT ",
            "response": "COUNT(DISTINCT idcase), resource FROM event_log WHERE timestamp between '2017-05-01' and '2017-06-01' GROUP BY resource",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "84_0"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### How many cases was each resource associated with, considering events that occurred between 5/1/2017 and 6/1/2017?\nSELECT ",
            "response": "COUNT(DISTINCT idcase), resource FROM event_log WHERE timestamp between '2017-05-01' and '2017-06-01' GROUP BY resource",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "84_1"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### How many declarations, that went through any intervention between 5/01/2017 and 6/01/2017, were each of our employees allocated to?\nSELECT ",
            "response": "COUNT(DISTINCT idcase), resource FROM event_log WHERE timestamp between '2017-05-01' and '2017-06-01' GROUP BY resource",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "84_2"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### List the activities and resources associated with events, disregarding those in which the Joshua and Teresa resources are involved.\nSELECT ",
            "response": "activity, resource FROM event_log WHERE resource != 'Joshua' AND resource != 'Teresa'",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "85_0"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Report the activities and resources associated with events, disregarding those in which the Joshua and Teresa resources are involved.\nSELECT ",
            "response": "activity, resource FROM event_log WHERE resource != 'Joshua' AND resource != 'Teresa'",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "85_1"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Retrieve the activity names and resource names associated with events, disregarding those in which the Joshua and Teresa resources are involved.\nSELECT ",
            "response": "activity, resource FROM event_log WHERE resource != 'Joshua' AND resource != 'Teresa'",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "85_2"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### I need to know what actions and employees were associated with interventions in the processing of the declarations that were not the responsibility of Joshua and Teresa.\nSELECT ",
            "response": "activity, resource FROM event_log WHERE resource != 'Joshua' AND resource != 'Teresa'",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "85_3"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### List all actions, and the respective responsible employee, associated with interventions in the declarations management process that were not under the responsibility of Joshua and Teresa.\nSELECT ",
            "response": "activity, resource FROM event_log WHERE resource != 'Joshua' AND resource != 'Teresa'",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "85_4"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### List the cases in which the 'start trip' or 'end trip' activities occurred and in which the 'request payment' and 'payment handled' activities did not occur.\nSELECT ",
            "response": "DISTINCT idcase from event_log WHERE (activity = 'Start trip' OR activity = 'End trip') and idcase NOT IN (SELECT idcase from event_log WHERE activity = 'Request payment' INTERSECT SELECT idcase from event_log WHERE activity = 'Payment handled')",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "86_0"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### List the process instances in which 'start trip' or 'end trip' activities occurred, however, 'request payment' and 'payment handled' activities did not occur.\nSELECT ",
            "response": "DISTINCT idcase from event_log WHERE (activity = 'Start trip' OR activity = 'End trip') and idcase NOT IN (SELECT idcase from event_log WHERE activity = 'Request payment' INTERSECT SELECT idcase from event_log WHERE activity = 'Payment handled')",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "86_1"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Report the cases in which 'start trip' or 'end trip' activities occurred and in which 'request payment' and 'payment handled' activities did not occur.\nSELECT ",
            "response": "DISTINCT idcase from event_log WHERE (activity = 'Start trip' OR activity = 'End trip') and idcase NOT IN (SELECT idcase from event_log WHERE activity = 'Request payment' INTERSECT SELECT idcase from event_log WHERE activity = 'Payment handled')",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "86_2"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Retrieve the process instances in which the 'start trip' or 'trip end' activities occurred but the 'request payment' and 'payment handled' activities did not occur.\nSELECT ",
            "response": "DISTINCT idcase from event_log WHERE (activity = 'Start trip' OR activity = 'End trip') and idcase NOT IN (SELECT idcase from event_log WHERE activity = 'Request payment' INTERSECT SELECT idcase from event_log WHERE activity = 'Payment handled')",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "86_3"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Retrieve the cases in which 'start trip' or 'end trip' activities occur but 'request payment' and 'payment handled' activities do not occur.\nSELECT ",
            "response": "DISTINCT idcase from event_log WHERE (activity = 'Start trip' OR activity = 'End trip') and idcase NOT IN (SELECT idcase from event_log WHERE activity = 'Request payment' INTERSECT SELECT idcase from event_log WHERE activity = 'Payment handled')",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "86_4"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Report all cases relating to activities started or completed for which payments have not yet been requested or made.\nSELECT ",
            "response": "DISTINCT idcase from event_log WHERE (activity = 'Start trip' OR activity = 'End trip') and idcase NOT IN (SELECT idcase from event_log WHERE activity = 'Request payment' INTERSECT SELECT idcase from event_log WHERE activity = 'Payment handled')",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "86_5"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### What are the cases in which there was a record of the beginning of the trip or the end of the trip but there was no record of payment request and execution?\nSELECT ",
            "response": "DISTINCT idcase from event_log WHERE (activity = 'Start trip' OR activity = 'End trip') and idcase NOT IN (SELECT idcase from event_log WHERE activity = 'Request payment' INTERSECT SELECT idcase from event_log WHERE activity = 'Payment handled')",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "86_6"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### In which instances of processes, marking the beginning or end of the trip, were the payment request and execution not observed?\nSELECT ",
            "response": "DISTINCT idcase from event_log WHERE (activity = 'Start trip' OR activity = 'End trip') and idcase NOT IN (SELECT idcase from event_log WHERE activity = 'Request payment' INTERSECT SELECT idcase from event_log WHERE activity = 'Payment handled')",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "86_7"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### In which travel declarations marking the beginning or end of the trip were the payment request and execution not observed?\nSELECT ",
            "response": "DISTINCT idcase from event_log WHERE (activity = 'Start trip' OR activity = 'End trip') and idcase NOT IN (SELECT idcase from event_log WHERE activity = 'Request payment' INTERSECT SELECT idcase from event_log WHERE activity = 'Payment handled')",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "86_8"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Which trips have started or ended and payments have still not yet been requested or made?\nSELECT ",
            "response": "DISTINCT idcase from event_log WHERE (activity = 'Start trip' OR activity = 'End trip') and idcase NOT IN (SELECT idcase from event_log WHERE activity = 'Request payment' INTERSECT SELECT idcase from event_log WHERE activity = 'Payment handled')",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "86_9"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### List all events that are not associated with resources.\nSELECT ",
            "response": "* FROM event_log WHERE resource IS NULL",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "87_0"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### List events in which resources were not used or reported.\nSELECT ",
            "response": "* FROM event_log WHERE resource IS NULL",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "87_1"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### What are the events that are not associated with resources?\nSELECT ",
            "response": "* FROM event_log WHERE resource IS NULL",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "87_2"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Retrieve events that are not associated with resources.\nSELECT ",
            "response": "* FROM event_log WHERE resource IS NULL",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "87_3"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### List all events for which no resources are associated.\nSELECT ",
            "response": "* FROM event_log WHERE resource IS NULL",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "87_4"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### What are the events that no resources have been associated with?\nSELECT ",
            "response": "* FROM event_log WHERE resource IS NULL",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "87_5"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Retrieve events with which no resource was associated.\nSELECT ",
            "response": "* FROM event_log WHERE resource IS NULL",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "87_6"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Make a report of all interventions in which employees were not allocated, or the allocation was not reported.\nSELECT ",
            "response": "* FROM event_log WHERE resource IS NULL",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "87_7"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Which cases had their first log record before March 2017?\nSELECT ",
            "response": "idcase from event_log GROUP BY idcase HAVING min(timestamp) < '2017-03-01'",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "88_0"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Which cases started before March 2017?\nSELECT ",
            "response": "idcase from event_log GROUP BY idcase HAVING min(timestamp) < '2017-03-01'",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "88_1"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### In which cases did the first performance of activity occur before March 2017?\nSELECT ",
            "response": "idcase from event_log GROUP BY idcase HAVING min(timestamp) < '2017-03-01'",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "88_2"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Which process instances started before March 2017?\nSELECT ",
            "response": "idcase from event_log GROUP BY idcase HAVING min(timestamp) < '2017-03-01'",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "88_3"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Which process instances had their first log record before March 2017?\nSELECT ",
            "response": "idcase from event_log GROUP BY idcase HAVING min(timestamp) < '2017-03-01'",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "88_4"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### In which process instances did the first activity performance occur before March 2017?\nSELECT ",
            "response": "idcase from event_log GROUP BY idcase HAVING min(timestamp) < '2017-03-01'",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "88_5"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Which declarations began to be processed before March 2017?\nSELECT ",
            "response": "idcase from event_log GROUP BY idcase HAVING min(timestamp) < '2017-03-01'",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "88_6"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Which declarations had the first intervention registered in the system before March 2017?\nSELECT ",
            "response": "idcase from event_log GROUP BY idcase HAVING min(timestamp) < '2017-03-01'",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "88_7"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### For which declarations was there an intervention record before March 2017?\nSELECT ",
            "response": "idcase from event_log GROUP BY idcase HAVING min(timestamp) < '2017-03-01'",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "88_8"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Processing records began occurring before March 2017 for which declarations?\nSELECT ",
            "response": "idcase from event_log GROUP BY idcase HAVING min(timestamp) < '2017-03-01'",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "88_9"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Which cases were started with the performance of the 'start trip' activity in March 2017.\nSELECT ",
            "response": "DISTINCT idcase FROM (select idcase, timestamp, activity FROM event_log GROUP BY idcase HAVING strftime('%Y-%m', MIN(timestamp)) = '2017-03') where activity = 'Start trip'",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "89_0"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### In which cases was the 'start trip' activity carried out first and in the period from 3/01/2017 to 3/31/2017?\nSELECT ",
            "response": "DISTINCT idcase FROM (select idcase, timestamp, activity FROM event_log GROUP BY idcase HAVING strftime('%Y-%m', MIN(timestamp)) = '2017-03') where activity = 'Start trip'",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "89_1"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### What are the cases initiated by executing the 'start trip' activity in March 2017?\nSELECT ",
            "response": "DISTINCT idcase FROM (select idcase, timestamp, activity FROM event_log GROUP BY idcase HAVING strftime('%Y-%m', MIN(timestamp)) = '2017-03') where activity = 'Start trip'",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "89_2"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### List the identifiers of the cases in which the 'start trip' activity associated with the first event was carried out, necessarily in March 2017.\nSELECT ",
            "response": "DISTINCT idcase FROM (select idcase, timestamp, activity FROM event_log GROUP BY idcase HAVING strftime('%Y-%m', MIN(timestamp)) = '2017-03') where activity = 'Start trip'",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "89_3"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Retrieve the process instances in which the 'start trip' activity was the first to be performed and within the period from 03/1/2017 to 03/31/2017. Report only the identifier of these process instances.\nSELECT ",
            "response": "DISTINCT idcase FROM (select idcase, timestamp, activity FROM event_log GROUP BY idcase HAVING strftime('%Y-%m', MIN(timestamp)) = '2017-03') where activity = 'Start trip'",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "89_4"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### List the identifiers of the process instances whose first event refers to the 'start trip' activity and occurred between 03/1/2017 and 03/31/2017.\nSELECT ",
            "response": "DISTINCT idcase FROM (select idcase, timestamp, activity FROM event_log GROUP BY idcase HAVING strftime('%Y-%m', MIN(timestamp)) = '2017-03') where activity = 'Start trip'",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "89_5"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Which declarations started with the start of the trip information in March 2017?\nSELECT ",
            "response": "DISTINCT idcase FROM (select idcase, timestamp, activity FROM event_log GROUP BY idcase HAVING strftime('%Y-%m', MIN(timestamp)) = '2017-03') where activity = 'Start trip'",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "89_6"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Which resources acted more than five times in the same case?\nSELECT ",
            "response": "DISTINCT resource FROM event_log GROUP BY resource, idcase HAVING COUNT(*) > 5",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "90_0"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### List all resources that acted more than five times in the same case.\nSELECT ",
            "response": "DISTINCT resource FROM event_log GROUP BY resource, idcase HAVING COUNT(*) > 5",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "90_1"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Which resources acted more than five times in the same case?\nSELECT ",
            "response": "DISTINCT resource FROM event_log GROUP BY resource, idcase HAVING COUNT(*) > 5",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "90_2"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### If a resource acted more than five times in the same case, list the name of the resource.\nSELECT ",
            "response": "DISTINCT resource FROM event_log GROUP BY resource, idcase HAVING COUNT(*) > 5",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "90_3"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### If a resource has acted on more than five events in the same case, list the name of this resource.\nSELECT ",
            "response": "DISTINCT resource FROM event_log GROUP BY resource, idcase HAVING COUNT(*) > 5",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "90_4"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### List the resources that worked on executing more than five events in the same case.\nSELECT ",
            "response": "DISTINCT resource FROM event_log GROUP BY resource, idcase HAVING COUNT(*) > 5",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "90_5"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### What resources were allocated to more than five events in the same case?\nSELECT ",
            "response": "DISTINCT resource FROM event_log GROUP BY resource, idcase HAVING COUNT(*) > 5",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "90_6"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Which resources acted more than five times on a declaration?\nSELECT ",
            "response": "DISTINCT resource FROM event_log GROUP BY resource, idcase HAVING COUNT(*) > 5",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "90_7"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Which resources acted more than five times on a single declaration?\nSELECT ",
            "response": "DISTINCT resource FROM event_log GROUP BY resource, idcase HAVING COUNT(*) > 5",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "90_8"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Which collaborators worked on more than five interventions in a single declaration?\nSELECT ",
            "response": "DISTINCT resource FROM event_log GROUP BY resource, idcase HAVING COUNT(*) > 5",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "90_9"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Which resources have more than 5 actions in a single declaration?\nSELECT ",
            "response": "DISTINCT resource FROM event_log GROUP BY resource, idcase HAVING COUNT(*) > 5",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "90_10"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Which activities appear most often in the event log?\nSELECT ",
            "response": "activity from event_log GROUP BY activity HAVING COUNT(*) = (SELECT COUNT(*) FROM event_log GROUP BY activity ORDER BY COUNT(*) desc LIMIT 1)",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "91_0"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### What are the most recurring activities in the log?\nSELECT ",
            "response": "activity from event_log GROUP BY activity HAVING COUNT(*) = (SELECT COUNT(*) FROM event_log GROUP BY activity ORDER BY COUNT(*) desc LIMIT 1)",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "91_1"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### What are the names of the activities that were performed most times in this business process?\nSELECT ",
            "response": "activity from event_log GROUP BY activity HAVING COUNT(*) = (SELECT COUNT(*) FROM event_log GROUP BY activity ORDER BY COUNT(*) desc LIMIT 1)",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "91_2"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Report the name of the most frequent activities in this event log.\nSELECT ",
            "response": "activity from event_log GROUP BY activity HAVING COUNT(*) = (SELECT COUNT(*) FROM event_log GROUP BY activity ORDER BY COUNT(*) desc LIMIT 1)",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "91_3"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### What are the most common actions when processing declarations?\nSELECT ",
            "response": "activity from event_log GROUP BY activity HAVING COUNT(*) = (SELECT COUNT(*) FROM event_log GROUP BY activity ORDER BY COUNT(*) desc LIMIT 1)",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "91_4"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Present, in descending order, the 10 resources that performed the most in the 'declaration final approved by supervisor' activity.\nSELECT ",
            "response": "resource FROM event_log where activity = 'Declaration final approved by supervisor' group by resource HAVING COUNT(*) IN (select COUNT(*) from event_log where activity = 'Declaration final approved by supervisor' group by resource order by count(*) DESC limit 10) ORDER BY COUNT(*) DESC",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "92_0"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Which 10 resources were most used in the 'declaration final approved by supervisor' activity? Considering from largest to smallest.\nSELECT ",
            "response": "resource FROM event_log where activity = 'Declaration final approved by supervisor' group by resource HAVING COUNT(*) IN (select COUNT(*) from event_log where activity = 'Declaration final approved by supervisor' group by resource order by count(*) DESC limit 10) ORDER BY COUNT(*) DESC",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "92_1"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### I need to know who are the ten employees who most approved a declaration, definitively, using the supervisor position. The list must be presented from the employee most allocated to the activity to the employee least allocated.\nSELECT ",
            "response": "resource FROM event_log where activity = 'Declaration final approved by supervisor' group by resource HAVING COUNT(*) IN (select COUNT(*) from event_log where activity = 'Declaration final approved by supervisor' group by resource order by count(*) DESC limit 10) ORDER BY COUNT(*) DESC",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "92_2"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### List the existing resources in the event log in descending order of the number of times each of them acted on the 'declaration final approved by supervisor' activity.\nSELECT ",
            "response": "resource from event_log where activity = 'Declaration final approved by supervisor' group by resource order by count(*) DESC",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "93_0"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### List all resources in descending order considering the number of times each one was associated with the performance of the 'declaration final approved by supervisor' activity.\nSELECT ",
            "response": "resource from event_log where activity = 'Declaration final approved by supervisor' group by resource order by count(*) DESC",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "93_1"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Present a list of the resources that acted in carrying out the 'declaration final approved by supervisor' activity. Sort the list by the number of times each resource was associated with the activity.\nSELECT ",
            "response": "resource from event_log where activity = 'Declaration final approved by supervisor' group by resource order by count(*) DESC",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "93_2"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Present the resources present in the event log in descending order according to the number of times each one acted on the 'declaration final approved by supervisor' activity.\nSELECT ",
            "response": "resource from event_log where activity = 'Declaration final approved by supervisor' group by resource order by count(*) DESC",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "93_3"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### I need to know who the employees are that definitively approved a declaration, using the position of supervisor. The list must be presented from the employee most allocated to the activity to the employee least allocated.\nSELECT ",
            "response": "resource from event_log where activity = 'Declaration final approved by supervisor' group by resource order by count(*) DESC",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "93_4"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### In how many cases were the Eugene or Marie resources associated with the performance of the 'declaration approved by budget owner' activity?\nSELECT ",
            "response": "count(distinct idcase) from event_log where activity = 'Declaration approved by budget owner' AND (resource = 'Marie' or resource = 'Eugene')",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "94_0"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### In how many cases was there an association between the Eugene or Marie resources and the performance of the 'declaration approved by budget owner' activity?\nSELECT ",
            "response": "count(distinct idcase) from event_log where activity = 'Declaration approved by budget owner' AND (resource = 'Marie' or resource = 'Eugene')",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "94_1"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Report the number of cases in which the 'declaration approved by budget owner' activity was associated with the Eugene or Marie resources.\nSELECT ",
            "response": "count(distinct idcase) from event_log where activity = 'Declaration approved by budget owner' AND (resource = 'Marie' or resource = 'Eugene')",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "94_2"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### In how many cases was the 'declaration approved by budget owner' activity associated with the Eugene or Marie resources?\nSELECT ",
            "response": "count(distinct idcase) from event_log where activity = 'Declaration approved by budget owner' AND (resource = 'Marie' or resource = 'Eugene')",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "94_3"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### In how many cases were events related to the 'declaration approved by budget owner' activity associated with the Eugene or Marie resources?\nSELECT ",
            "response": "count(distinct idcase) from event_log where activity = 'Declaration approved by budget owner' AND (resource = 'Marie' or resource = 'Eugene')",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "94_4"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### How many process instances was the 'declaration approved by budget owner' activity associated with the Eugine resource or the Marie resource?\nSELECT ",
            "response": "count(distinct idcase) from event_log where activity = 'Declaration approved by budget owner' AND (resource = 'Marie' or resource = 'Eugene')",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "94_5"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Report the number of cases in which the 'declaration approved by budget owner' activity was associated with the Eugine or Marie resources.\nSELECT ",
            "response": "count(distinct idcase) from event_log where activity = 'Declaration approved by budget owner' AND (resource = 'Marie' or resource = 'Eugene')",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "94_6"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Eugene or Marie approved how many declarations in their role as budget holders?\nSELECT ",
            "response": "count(distinct idcase) from event_log where activity = 'Declaration approved by budget owner' AND (resource = 'Marie' or resource = 'Eugene')",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "94_7"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### How many declarations were approved by Eugene or Marie, as budget holders?\nSELECT ",
            "response": "count(distinct idcase) from event_log where activity = 'Declaration approved by budget owner' AND (resource = 'Marie' or resource = 'Eugene')",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "94_8"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Which activities that exist in the 'declaration 49464' case do not occur in the 'declaration 76667' case?\nSELECT ",
            "response": "activity from event_log where idcase = 'declaration 49464' except select activity from event_log where idcase = 'declaration 76667'",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "95_0"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### List all activities that were performed in the 'declaration 49464' case but were not performed in the 'declaration 76667' case.\nSELECT ",
            "response": "activity from event_log where idcase = 'declaration 49464' except select activity from event_log where idcase = 'declaration 76667'",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "95_1"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Retrieve the names of activities that were part of the 'declaration 49464' case and were not part of the 'declaration 76667' case.\nSELECT ",
            "response": "activity from event_log where idcase = 'declaration 49464' except select activity from event_log where idcase = 'declaration 76667'",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "95_2"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### What occurred in declaration 49464 that did not occur in declaration 76667?\nSELECT ",
            "response": "activity from event_log where idcase = 'declaration 49464' except select activity from event_log where idcase = 'declaration 76667'",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "95_3"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### For each resource that acted in the 'declaration submitted by employee' activity more than twice, report the number of times this action occurred.\nSELECT ",
            "response": "resource, count(*) from event_log where activity = 'Declaration submitted by employee' group by resource having count(*) > 2",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "96_0"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Which resources worked on the 'declaration submitted by employee' activity more than twice? Also, list the performance count of each resource in this activity.\nSELECT ",
            "response": "resource, count(*) from event_log where activity = 'Declaration submitted by employee' group by resource having count(*) > 2",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "96_1"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Which resources acted in the 'declaration submitted by employee' activity more than twice? Also, list the performance count of each resource in this activity.\nSELECT ",
            "response": "resource, count(*) from event_log where activity = 'Declaration submitted by employee' group by resource having count(*) > 2",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "96_2"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Report how many times each resource acted in the 'declaration submitted by employee' activity if this occurred more than twice.\nSELECT ",
            "response": "resource, count(*) from event_log where activity = 'Declaration submitted by employee' group by resource having count(*) > 2",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "96_3"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### If a resource acted more than twice in the 'declaration submitted by employee' activity, report the name of the resource and the number of times this action occurred.\nSELECT ",
            "response": "resource, count(*) from event_log where activity = 'Declaration submitted by employee' group by resource having count(*) > 2",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "96_4"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### If a resource has acted in more than twice in event relating to the 'declaration submitted by employee' activity, report the name of this resource and the number of events in which this action occurred.\nSELECT ",
            "response": "resource, count(*) from event_log where activity = 'Declaration submitted by employee' group by resource having count(*) > 2",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "96_5"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Submit a report with the employee's name and the number of times they requested a declaration if they did so more than twice.\nSELECT ",
            "response": "resource, count(*) from event_log where activity = 'Declaration submitted by employee' group by resource having count(*) > 2",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "96_6"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Which cases went through the 'request payment' activity between '2017-05-01' and '2017-05-10'?\nSELECT ",
            "response": "DISTINCT idcase FROM event_log WHERE activity = 'Request payment' AND timestamp BETWEEN '2017-05-01' AND '2017-05-10'",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "97_0"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Which cases went through the 'request payment' activity in the first ten days of May 2017?\nSELECT ",
            "response": "DISTINCT idcase FROM event_log WHERE activity = 'Request payment' AND timestamp BETWEEN '2017-05-01' AND '2017-05-10'",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "97_1"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Which process instances performed the 'request payment' activity in the first ten days of May 2017?\nSELECT ",
            "response": "DISTINCT idcase FROM event_log WHERE activity = 'Request payment' AND timestamp BETWEEN '2017-05-01' AND '2017-05-10'",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "97_2"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Report the identifier of the cases that have a record of the performance of the 'request payment' activity between '2017-05-01' and '2017-05-10'.\nSELECT ",
            "response": "DISTINCT idcase FROM event_log WHERE activity = 'Request payment' AND timestamp BETWEEN '2017-05-01' AND '2017-05-10'",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "97_3"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Which cases went through the 'request payment' activity between May 1, 2017 and May 10, 2017?\nSELECT ",
            "response": "DISTINCT idcase FROM event_log WHERE activity = 'Request payment' AND timestamp BETWEEN '2017-05-01' AND '2017-05-10'",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "97_4"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Retrieve the identifiers of cases where events associated with the performance of the 'request payment' activity occurred between '2017-05-01' and '2017-05-10'.\nSELECT ",
            "response": "DISTINCT idcase FROM event_log WHERE activity = 'Request payment' AND timestamp BETWEEN '2017-05-01' AND '2017-05-10'",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "97_5"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Payment requests were registered between '2017-05-01' and '2017-05-10' for which declarations?\nSELECT ",
            "response": "DISTINCT idcase FROM event_log WHERE activity = 'Request payment' AND timestamp BETWEEN '2017-05-01' AND '2017-05-10'",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "97_6"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### For which declarations was the payment request made between May 1 and 10, 2017?\nSELECT ",
            "response": "DISTINCT idcase FROM event_log WHERE activity = 'Request payment' AND timestamp BETWEEN '2017-05-01' AND '2017-05-10'",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "97_7"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### How many resources worked on each case?\nSELECT ",
            "response": "idcase, count(distinct resource) FROM event_log group by idcase",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "98_0"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### How many 'resource' identifiers are there for each 'case' identifier?\nSELECT ",
            "response": "idcase, count(distinct resource) FROM event_log group by idcase",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "98_1"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Report how many resources were needed to execute each case.\nSELECT ",
            "response": "idcase, count(distinct resource) FROM event_log group by idcase",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "98_2"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Report the number of resources associated with each case.\nSELECT ",
            "response": "idcase, count(distinct resource) FROM event_log group by idcase",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "98_3"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### How many resources worked on each process instance?\nSELECT ",
            "response": "idcase, count(distinct resource) FROM event_log group by idcase",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "98_4"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Retrieve information about the number of resources that worked on executing each process instance.\nSELECT ",
            "response": "idcase, count(distinct resource) FROM event_log group by idcase",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "98_5"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### How many resources were needed to execute each case?\nSELECT ",
            "response": "idcase, count(distinct resource) FROM event_log group by idcase",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "98_6"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### How many employees were needed to process each of the declarations?\nSELECT ",
            "response": "idcase, count(distinct resource) FROM event_log group by idcase",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "98_7"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Which cases were entirely handled by Christopher?\nSELECT ",
            "response": "idcase from event_log group by idcase HAVING COUNT(DISTINCT resource) = 1 AND resource = 'Christopher'",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "99_0"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Which cases were fully handled by Christopher?\nSELECT ",
            "response": "idcase from event_log group by idcase HAVING COUNT(DISTINCT resource) = 1 AND resource = 'Christopher'",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "99_1"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Which instances of processes were entirely Christopher's responsibility?\nSELECT ",
            "response": "idcase from event_log group by idcase HAVING COUNT(DISTINCT resource) = 1 AND resource = 'Christopher'",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "99_2"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### In which cases did the Christopher resource act and was responsible for carrying out all activities?\nSELECT ",
            "response": "idcase from event_log group by idcase HAVING COUNT(DISTINCT resource) = 1 AND resource = 'Christopher'",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "99_3"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Report the cases in which the Christopher resource acted as the sole responsible party.\nSELECT ",
            "response": "idcase from event_log group by idcase HAVING COUNT(DISTINCT resource) = 1 AND resource = 'Christopher'",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "99_4"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Which process instances were entirely handled by the collaborator Christopher?\nSELECT ",
            "response": "idcase from event_log group by idcase HAVING COUNT(DISTINCT resource) = 1 AND resource = 'Christopher'",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "99_5"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Which process instances were fully handled by the employee Christopher?\nSELECT ",
            "response": "idcase from event_log group by idcase HAVING COUNT(DISTINCT resource) = 1 AND resource = 'Christopher'",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "99_6"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Which declarations were the sole responsibility of the employee Christopher?\nSELECT ",
            "response": "idcase from event_log group by idcase HAVING COUNT(DISTINCT resource) = 1 AND resource = 'Christopher'",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "99_7"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Which cases were entirely handled by the same resource?\nSELECT ",
            "response": "idcase from event_log group by idcase HAVING COUNT(DISTINCT resource) = 1",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "100_0"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Which process instances were entirely handled by the same resource?\nSELECT ",
            "response": "idcase from event_log group by idcase HAVING COUNT(DISTINCT resource) = 1",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "100_1"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Which cases were fully handled by a single resource?\nSELECT ",
            "response": "idcase from event_log group by idcase HAVING COUNT(DISTINCT resource) = 1",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "100_2"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### List the cases in which all activities were performed by the same resource.\nSELECT ",
            "response": "idcase from event_log group by idcase HAVING COUNT(DISTINCT resource) = 1",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "100_3"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### List the cases in which all events were associated with the same resource.\nSELECT ",
            "response": "idcase from event_log group by idcase HAVING COUNT(DISTINCT resource) = 1",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "100_4"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Which process instances were entirely the responsibility of the same collaborator?\nSELECT ",
            "response": "idcase from event_log group by idcase HAVING COUNT(DISTINCT resource) = 1",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "100_5"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Report which process instances were performed by the same employee.\nSELECT ",
            "response": "idcase from event_log group by idcase HAVING COUNT(DISTINCT resource) = 1",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "100_6"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Make a list of all declarations that were the responsibility of just one employee.\nSELECT ",
            "response": "idcase from event_log group by idcase HAVING COUNT(DISTINCT resource) = 1",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "100_7"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Which cases recorded multiple events in one day?\nSELECT ",
            "response": "DISTINCT(idcase) FROM (SELECT idcase, strftime('%Y-%m-%d', timestamp) as event_date, COUNT(*) as event_count FROM event_log GROUP BY idcase, event_date HAVING event_count > 1)",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "101_0"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Which cases recorded more than one event in one day?\nSELECT ",
            "response": "DISTINCT(idcase) FROM (SELECT idcase, strftime('%Y-%m-%d', timestamp) as event_date, COUNT(*) as event_count FROM event_log GROUP BY idcase, event_date HAVING event_count > 1)",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "101_1"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Retrieve all cases that went through more than one event record in a day.\nSELECT ",
            "response": "DISTINCT(idcase) FROM (SELECT idcase, strftime('%Y-%m-%d', timestamp) as event_date, COUNT(*) as event_count FROM event_log GROUP BY idcase, event_date HAVING event_count > 1)",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "101_2"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Report cases that are associated with multiple events in one day.\nSELECT ",
            "response": "DISTINCT(idcase) FROM (SELECT idcase, strftime('%Y-%m-%d', timestamp) as event_date, COUNT(*) as event_count FROM event_log GROUP BY idcase, event_date HAVING event_count > 1)",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "101_3"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### List the cases for which more than one event was recorded on the same day.\nSELECT ",
            "response": "DISTINCT(idcase) FROM (SELECT idcase, strftime('%Y-%m-%d', timestamp) as event_date, COUNT(*) as event_count FROM event_log GROUP BY idcase, event_date HAVING event_count > 1)",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "101_4"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### List the declarations that went through more than one intervention on the same day.\nSELECT ",
            "response": "DISTINCT(idcase) FROM (SELECT idcase, strftime('%Y-%m-%d', timestamp) as event_date, COUNT(*) as event_count FROM event_log GROUP BY idcase, event_date HAVING event_count > 1)",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "101_5"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Which declarations went through multiple interventions in a single day?\nSELECT ",
            "response": "DISTINCT(idcase) FROM (SELECT idcase, strftime('%Y-%m-%d', timestamp) as event_date, COUNT(*) as event_count FROM event_log GROUP BY idcase, event_date HAVING event_count > 1)",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "101_6"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### How many null cost events are associated with each resource in each case?\nSELECT ",
            "response": "idcase, resource, count(*) FROM event_log WHERE cost IS NULL GROUP BY idcase, resource",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "102_0"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### For each case, how many null cost events are there associated with each resource?\nSELECT ",
            "response": "idcase, resource, count(*) FROM event_log WHERE cost IS NULL GROUP BY idcase, resource",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "102_1"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### How many null cost events are there for each case, associated with each resource?\nSELECT ",
            "response": "idcase, resource, count(*) FROM event_log WHERE cost IS NULL GROUP BY idcase, resource",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "102_2"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### For each process instance, how many null cost events are there associated with each resource?\nSELECT ",
            "response": "idcase, resource, count(*) FROM event_log WHERE cost IS NULL GROUP BY idcase, resource",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "102_3"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### List how many null cost events are associated with each resource in each of the process instances.\nSELECT ",
            "response": "idcase, resource, count(*) FROM event_log WHERE cost IS NULL GROUP BY idcase, resource",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "102_4"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Report how many null cost events there are associated with each employee in each of the process instances recorded in the log.\nSELECT ",
            "response": "idcase, resource, count(*) FROM event_log WHERE cost IS NULL GROUP BY idcase, resource",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "102_5"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Make a report stating how many interventions by each employee did not report costs in the processing of declarations.\nSELECT ",
            "response": "idcase, resource, count(*) FROM event_log WHERE cost IS NULL GROUP BY idcase, resource",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "102_6"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### How many interventions, per employee, did not report costs during the processing of declarations?\nSELECT ",
            "response": "idcase, resource, count(*) FROM event_log WHERE cost IS NULL GROUP BY idcase, resource",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "102_7"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### What events are associated with the 'permit rejected by director' activity?\nSELECT ",
            "response": "* from event_log where activity = 'Permit rejected by director'",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "103_0"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### What are the events associated with the 'permit rejected by director' activity?\nSELECT ",
            "response": "* from event_log where activity = 'Permit rejected by director'",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "103_1"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### List the events associated with the 'permit rejected by director' activity.\nSELECT ",
            "response": "* from event_log where activity = 'Permit rejected by director'",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "103_2"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Report the events related to the performance of the 'permit rejected by the director' activity.\nSELECT ",
            "response": "* from event_log where activity = 'Permit rejected by director'",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "103_3"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Retrieve all events that concern the performance of the 'permit rejected by director' activity.\nSELECT ",
            "response": "* from event_log where activity = 'Permit rejected by director'",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "103_4"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### What are the events arising from the performance of the 'permit rejected by director' activity?\nSELECT ",
            "response": "* from event_log where activity = 'Permit rejected by director'",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "103_5"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### What are the interventions recorded in the processing of declarations regarding permit rejected by a director?\nSELECT ",
            "response": "* from event_log where activity = 'Permit rejected by director'",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "103_6"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### What are the interventions of a director rejecting a permit?\nSELECT ",
            "response": "* from event_log where activity = 'Permit rejected by director'",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "103_7"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### What is the total cost of events per day?\nSELECT ",
            "response": "strftime('%Y-%m-%d', timestamp), sum(cost) from event_log group by strftime('%Y-%m-%d', timestamp)",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "104_0"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### What is the total cost of all events occurred per day?\nSELECT ",
            "response": "strftime('%Y-%m-%d', timestamp), sum(cost) from event_log group by strftime('%Y-%m-%d', timestamp)",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "104_1"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Report the total cost of all events occurred per day.\nSELECT ",
            "response": "strftime('%Y-%m-%d', timestamp), sum(cost) from event_log group by strftime('%Y-%m-%d', timestamp)",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "104_2"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### List for each day, the total cost of the events occurred that day.\nSELECT ",
            "response": "strftime('%Y-%m-%d', timestamp), sum(cost) from event_log group by strftime('%Y-%m-%d', timestamp)",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "104_3"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### For each day, calculate the total cost of events occurred that day.\nSELECT ",
            "response": "strftime('%Y-%m-%d', timestamp), sum(cost) from event_log group by strftime('%Y-%m-%d', timestamp)",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "104_4"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Recover the sum of the costs of all events occurred each day.\nSELECT ",
            "response": "strftime('%Y-%m-%d', timestamp), sum(cost) from event_log group by strftime('%Y-%m-%d', timestamp)",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "104_5"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Calculate the sum of events for each day recorded in the event log.\nSELECT ",
            "response": "strftime('%Y-%m-%d', timestamp), sum(cost) from event_log group by strftime('%Y-%m-%d', timestamp)",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "104_6"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### What is the total cost of the declaration handling process each day?\nSELECT ",
            "response": "strftime('%Y-%m-%d', timestamp), sum(cost) from event_log group by strftime('%Y-%m-%d', timestamp)",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "104_7"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Which activities cost more than 1000 and were carried out under the responsibility of a supervisor or director?\nSELECT ",
            "response": "DISTINCT activity FROM event_log WHERE (activity LIKE '%supervisor%' OR activity LIKE '%director%' ) AND cost > 1000",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "105_0"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Of the activities that require a supervisor or director, which ones cost more than 1000?\nSELECT ",
            "response": "DISTINCT activity FROM event_log WHERE (activity LIKE '%supervisor%' OR activity LIKE '%director%' ) AND cost > 1000",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "105_1"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Report which activities cost more than 1000 and require a supervisor or director associated with their performance.\nSELECT ",
            "response": "DISTINCT activity FROM event_log WHERE (activity LIKE '%supervisor%' OR activity LIKE '%director%' ) AND cost > 1000",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "105_2"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### List the activities associated with supervisors or directors and whose performance cost more than 1000.\nSELECT ",
            "response": "DISTINCT activity FROM event_log WHERE (activity LIKE '%supervisor%' OR activity LIKE '%director%' ) AND cost > 1000",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "105_3"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Which actions have a cost greater than 1000 and require a supervisor or director?\nSELECT ",
            "response": "DISTINCT activity FROM event_log WHERE (activity LIKE '%supervisor%' OR activity LIKE '%director%' ) AND cost > 1000",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "105_4"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Of the activities that require a supervisor or director, which ones cost more than 1000?\nSELECT ",
            "response": "DISTINCT activity FROM event_log WHERE (activity LIKE '%supervisor%' OR activity LIKE '%director%' ) AND cost > 1000",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "105_5"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### What is the number of events per case?\nSELECT ",
            "response": "count (*), idcase FROM event_log group by idcase",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "106_0"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### What is the amount of events per case?\nSELECT ",
            "response": "count (*), idcase FROM event_log group by idcase",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "106_1"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### How many events were performed in each case?\nSELECT ",
            "response": "count (*), idcase FROM event_log group by idcase",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "106_2"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### How big is each case in terms of number of events?\nSELECT ",
            "response": "count (*), idcase FROM event_log group by idcase",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "106_3"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### List the number of events associated with each case.\nSELECT ",
            "response": "count (*), idcase FROM event_log group by idcase",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "106_4"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Retrieve how many events were performed in each process instance.\nSELECT ",
            "response": "count (*), idcase FROM event_log group by idcase",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "106_5"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### How many interventions were carried out in the processing of each declaration?\nSELECT ",
            "response": "count (*), idcase FROM event_log group by idcase",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "106_6"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### How many tasks were assigned to each resource?\nSELECT ",
            "response": "COUNT(*), resource FROM event_log GROUP BY resource",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "107_0"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### How many tasks were assigned per resource?\nSELECT ",
            "response": "COUNT(*), resource FROM event_log GROUP BY resource",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "107_1"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### How many activities were performed per resource?\nSELECT ",
            "response": "COUNT(*), resource FROM event_log GROUP BY resource",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "107_2"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### How many activities were associated with each resource?\nSELECT ",
            "response": "COUNT(*), resource FROM event_log GROUP BY resource",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "107_3"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Report the number of activities associated with each resource present in the event log.\nSELECT ",
            "response": "COUNT(*), resource FROM event_log GROUP BY resource",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "107_4"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### For each resource, list the number of tasks associated with it.\nSELECT ",
            "response": "COUNT(*), resource FROM event_log GROUP BY resource",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "107_5"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### How many actions were determined for each employee to perform?\nSELECT ",
            "response": "COUNT(*), resource FROM event_log GROUP BY resource",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "107_6"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### What cases were assigned to Alexis to solve and how many activities is she involved in per case?\nSELECT ",
            "response": "idcase, count(*) FROM event_log where resource = 'Alexis' GROUP by idcase",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "108_0"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### In which cases are there activities assigned to Alexis and how many activities is she involved in in each of these cases?\nSELECT ",
            "response": "idcase, count(*) FROM event_log where resource = 'Alexis' GROUP by idcase",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "108_1"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Which cases did Alexis work on and, for each case, report how many activities were associated with her in each case.\nSELECT ",
            "response": "idcase, count(*) FROM event_log where resource = 'Alexis' GROUP by idcase",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "108_2"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Report which cases Alexis worked on and also how many activities were associated with her in each of them.\nSELECT ",
            "response": "idcase, count(*) FROM event_log where resource = 'Alexis' GROUP by idcase",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "108_3"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### List the identifier of the cases in which Alexis appears as a resource and report how many activities she worked on in these cases.\nSELECT ",
            "response": "idcase, count(*) FROM event_log where resource = 'Alexis' GROUP by idcase",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "108_4"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### How many activities were assigned to Alexis in each of the cases in which she worked and what were these cases?\nSELECT ",
            "response": "idcase, count(*) FROM event_log where resource = 'Alexis' GROUP by idcase",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "108_5"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### What tasks were associated with Alexis in each of the process instances in which she worked and what are these instances?\nSELECT ",
            "response": "idcase, count(*) FROM event_log where resource = 'Alexis' GROUP by idcase",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "108_6"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### The collaborator Alexis worked on which declarations and how many actions did she engage in for each declaration in this set of declarations?\nSELECT ",
            "response": "idcase, count(*) FROM event_log where resource = 'Alexis' GROUP by idcase",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "108_7"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### How many cases went through the 'permit final approved by supervisor' activity before going through the 'start trip' activity?\nSELECT ",
            "response": "count(DISTINCT e1.idcase) FROM event_log e1 INNER JOIN event_log e2 ON e1.idcase = e2.idcase WHERE e1.activity = 'Permit final approved by supervisor' AND e2.activity = 'Start trip' AND e1.timestamp < e2.timestamp",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "109_0"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### In how many cases did the 'permit final approved by supervisor' activity occur before the 'start trip' activity?\nSELECT ",
            "response": "count(DISTINCT e1.idcase) FROM event_log e1 INNER JOIN event_log e2 ON e1.idcase = e2.idcase WHERE e1.activity = 'Permit final approved by supervisor' AND e2.activity = 'Start trip' AND e1.timestamp < e2.timestamp",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "109_1"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### In how many cases does the 'start trip' activity eventually follow the 'permit final approved by supervisor' activity?\nSELECT ",
            "response": "count(DISTINCT e1.idcase) FROM event_log e1 INNER JOIN event_log e2 ON e1.idcase = e2.idcase WHERE e1.activity = 'Permit final approved by supervisor' AND e2.activity = 'Start trip' AND e1.timestamp < e2.timestamp",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "109_2"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### In how many process instances does an event relating to the 'permit final approved by supervisor' activity occur before the event relating to the 'start trip' activity?\nSELECT ",
            "response": "count(DISTINCT e1.idcase) FROM event_log e1 INNER JOIN event_log e2 ON e1.idcase = e2.idcase WHERE e1.activity = 'Permit final approved by supervisor' AND e2.activity = 'Start trip' AND e1.timestamp < e2.timestamp",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "109_3"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### In how many cases does the 'start trip' activity occur after the 'permit final approved by supervisor' activity occurs?\nSELECT ",
            "response": "count(DISTINCT e1.idcase) FROM event_log e1 INNER JOIN event_log e2 ON e1.idcase = e2.idcase WHERE e1.activity = 'Permit final approved by supervisor' AND e2.activity = 'Start trip' AND e1.timestamp < e2.timestamp",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "109_4"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Report the number of declarations in which the start of the trip occurs after the permit with final approval from the supervisor.\nSELECT ",
            "response": "count(DISTINCT e1.idcase) FROM event_log e1 INNER JOIN event_log e2 ON e1.idcase = e2.idcase WHERE e1.activity = 'Permit final approved by supervisor' AND e2.activity = 'Start trip' AND e1.timestamp < e2.timestamp",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "109_5"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### In how many declarations does the permit with final approval from the supervisor record appear before the start of the trip record?\nSELECT ",
            "response": "count(DISTINCT e1.idcase) FROM event_log e1 INNER JOIN event_log e2 ON e1.idcase = e2.idcase WHERE e1.activity = 'Permit final approved by supervisor' AND e2.activity = 'Start trip' AND e1.timestamp < e2.timestamp",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "109_6"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### How many declarations were allowed with final approval from the supervisor before the start of the trip?\nSELECT ",
            "response": "count(DISTINCT e1.idcase) FROM event_log e1 INNER JOIN event_log e2 ON e1.idcase = e2.idcase WHERE e1.activity = 'Permit final approved by supervisor' AND e2.activity = 'Start trip' AND e1.timestamp < e2.timestamp",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "109_7"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Which events associated with the 'end trip' activity did not occur on December 12, 2017?\nSELECT ",
            "response": "* from event_log where activity = 'End trip' and strftime('%Y-%m-%d', timestamp) != '2017-12-12'",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "110_0"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### What events associated with the 'end trip' activity occurred before or after December 12, 2017?\nSELECT ",
            "response": "* from event_log where activity = 'End trip' and strftime('%Y-%m-%d', timestamp) != '2017-12-12'",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "110_1"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### List the event related to the performance of the 'end trip' activity that occurred before or after December 12, 2017.\nSELECT ",
            "response": "* from event_log where activity = 'End trip' and strftime('%Y-%m-%d', timestamp) != '2017-12-12'",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "110_2"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### List the event related to the performance of the 'end trip' activity, considering only those that occurred before or after December 12, 2017.\nSELECT ",
            "response": "* from event_log where activity = 'End trip' and strftime('%Y-%m-%d', timestamp) != '2017-12-12'",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "110_3"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### List the events that did not occur on December 12, 2017 and that are a result of the performance of the 'end trip' activity.\nSELECT ",
            "response": "* from event_log where activity = 'End trip' and strftime('%Y-%m-%d', timestamp) != '2017-12-12'",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "110_4"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### What events associated with the 'end trip' activity did not take place on December 12, 2017?\nSELECT ",
            "response": "* from event_log where activity = 'End trip' and strftime('%Y-%m-%d', timestamp) != '2017-12-12'",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "110_5"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Which actions indicating the end of a trip were not recorded on the twelfth of December, twenty seventeen?\nSELECT ",
            "response": "* from event_log where activity = 'End trip' and strftime('%Y-%m-%d', timestamp) != '2017-12-12'",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "110_6"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### How many events did each resource act on?\nSELECT ",
            "response": "count (*), resource FROM event_log group by resource",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "111_0"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### How many events did each resource work on?\nSELECT ",
            "response": "count (*), resource FROM event_log group by resource",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "111_1"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### How many events were associated with each resource?\nSELECT ",
            "response": "count (*), resource FROM event_log group by resource",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "111_2"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### How many activities did each person responsible perform?\nSELECT ",
            "response": "count (*), resource FROM event_log group by resource",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "111_3"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### How many events did each person in charge act in?\nSELECT ",
            "response": "count (*), resource FROM event_log group by resource",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "111_4"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### How many times did each responsible person act in processing declarations?\nSELECT ",
            "response": "count (*), resource FROM event_log group by resource",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "111_5"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### How many actions were the responsibility of each person involved in the trip declaration process?\nSELECT ",
            "response": "count (*), resource FROM event_log group by resource",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "111_6"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### In how many activities has each resource already acted?\nSELECT ",
            "response": "resource, COUNT(*) FROM event_log group by resource",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "112_0"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### In how many activities has each resource worked?\nSELECT ",
            "response": "resource, COUNT(*) FROM event_log group by resource",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "112_1"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### How many activities were associated with each of the resources?\nSELECT ",
            "response": "resource, COUNT(*) FROM event_log group by resource",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "112_2"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### List the number of activities that have already been associated with each of the resources.\nSELECT ",
            "response": "resource, COUNT(*) FROM event_log group by resource",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "112_3"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### For each resource, report the number of activities that have already been associated with it.\nSELECT ",
            "response": "resource, COUNT(*) FROM event_log group by resource",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "112_4"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### How many actions has each employee already acted in?\nSELECT ",
            "response": "resource, COUNT(*) FROM event_log group by resource",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "112_5"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### In which activities has the Virginia resource not yet acted?\nSELECT ",
            "response": "activity FROM event_log EXCEPT SELECT activity FROM event_log where resource = 'Virginia'",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "113_0"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### List the label of activities that the Virginia resource has not yet acted on.\nSELECT ",
            "response": "activity FROM event_log EXCEPT SELECT activity FROM event_log where resource = 'Virginia'",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "113_1"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### What are the activities that Virginia has not yet been associated with?\nSELECT ",
            "response": "activity FROM event_log EXCEPT SELECT activity FROM event_log where resource = 'Virginia'",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "113_2"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### For which activities is there still no record of employee Virginia\u2019s activities?\nSELECT ",
            "response": "activity FROM event_log EXCEPT SELECT activity FROM event_log where resource = 'Virginia'",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "113_3"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Retrieve the label of activities that have not yet been associated with the employee Virginia.\nSELECT ",
            "response": "activity FROM event_log EXCEPT SELECT activity FROM event_log where resource = 'Virginia'",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "113_4"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### In which actions does Virginia not yet have experience?\nSELECT ",
            "response": "activity FROM event_log EXCEPT SELECT activity FROM event_log where resource = 'Virginia'",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "113_5"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### What is the average cost of cases that went through the 'rejected' activity?\nSELECT ",
            "response": "AVG(cost) FROM event_log WHERE idcase IN (SELECT DISTINCT idcase FROM event_log where activity LIKE '%rejected%')",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "114_0"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Calculate the average cost of cases that went through the 'rejected' activity.\nSELECT ",
            "response": "AVG(cost) FROM event_log WHERE idcase IN (SELECT DISTINCT idcase FROM event_log where activity LIKE '%rejected%')",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "114_1"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Calculate the average cost of cases that include at least one instance of the 'rejected' activity.\nSELECT ",
            "response": "AVG(cost) FROM event_log WHERE idcase IN (SELECT DISTINCT idcase FROM event_log where activity LIKE '%rejected%')",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "114_2"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Report the mean cost of cases that include at least one instance of the 'rejected' activity.\nSELECT ",
            "response": "AVG(cost) FROM event_log WHERE idcase IN (SELECT DISTINCT idcase FROM event_log where activity LIKE '%rejected%')",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "114_3"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Filter the cases that went through the 'rejected' activity and then calculate the mean of their costs.\nSELECT ",
            "response": "AVG(cost) FROM event_log WHERE idcase IN (SELECT DISTINCT idcase FROM event_log where activity LIKE '%rejected%')",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "114_4"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### What is the mean cost in travel declaration processes that were rejected?\nSELECT ",
            "response": "AVG(cost) FROM event_log WHERE idcase IN (SELECT DISTINCT idcase FROM event_log where activity LIKE '%rejected%')",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "114_5"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### What is the average cost of travel declarations that had some phase of the process rejected?\nSELECT ",
            "response": "AVG(cost) FROM event_log WHERE idcase IN (SELECT DISTINCT idcase FROM event_log where activity LIKE '%rejected%')",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "114_6"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### What was the duration of the 'declaration approved by supervisor' activity in each case?\nSELECT ",
            "response": "nkedEvents AS (SELECT id, activity, timestamp, LEAD(timestamp) OVER (PARTITION BY idcase ORDER BY timestamp) AS next_timestamp, idcase FROM event_log) SELECT idcase, coalesce((strftime('%s', next_timestamp) - strftime('%s', timestamp)),0) as duration FROM RankedEvents WHERE activity='Declaration approved by supervisor'",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "115_0"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### How long did the 'declaration approved by supervisor' activity last in each case?\nSELECT ",
            "response": "nkedEvents AS (SELECT id, activity, timestamp, LEAD(timestamp) OVER (PARTITION BY idcase ORDER BY timestamp) AS next_timestamp, idcase FROM event_log) SELECT idcase, coalesce((strftime('%s', next_timestamp) - strftime('%s', timestamp)),0) as duration FROM RankedEvents WHERE activity='Declaration approved by supervisor'",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "115_1"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### How long did the 'declaration approved by supervisor' activity last in each process instance?\nSELECT ",
            "response": "nkedEvents AS (SELECT id, activity, timestamp, LEAD(timestamp) OVER (PARTITION BY idcase ORDER BY timestamp) AS next_timestamp, idcase FROM event_log) SELECT idcase, coalesce((strftime('%s', next_timestamp) - strftime('%s', timestamp)),0) as duration FROM RankedEvents WHERE activity='Declaration approved by supervisor'",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "115_2"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### For each process instance, report the duration of the 'declaration approved by supervisor' activity.\nSELECT ",
            "response": "nkedEvents AS (SELECT id, activity, timestamp, LEAD(timestamp) OVER (PARTITION BY idcase ORDER BY timestamp) AS next_timestamp, idcase FROM event_log) SELECT idcase, coalesce((strftime('%s', next_timestamp) - strftime('%s', timestamp)),0) as duration FROM RankedEvents WHERE activity='Declaration approved by supervisor'",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "115_3"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Report the duration of the 'declaration approved by supervisor' activity in each process instance.\nSELECT ",
            "response": "nkedEvents AS (SELECT id, activity, timestamp, LEAD(timestamp) OVER (PARTITION BY idcase ORDER BY timestamp) AS next_timestamp, idcase FROM event_log) SELECT idcase, coalesce((strftime('%s', next_timestamp) - strftime('%s', timestamp)),0) as duration FROM RankedEvents WHERE activity='Declaration approved by supervisor'",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "115_4"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### What is the performance of actions that are associated with the declaration being approved by the supervisor?\nSELECT ",
            "response": "nkedEvents AS (SELECT id, activity, timestamp, LEAD(timestamp) OVER (PARTITION BY idcase ORDER BY timestamp) AS next_timestamp, idcase FROM event_log) SELECT idcase, coalesce((strftime('%s', next_timestamp) - strftime('%s', timestamp)),0) as duration FROM RankedEvents WHERE activity='Declaration approved by supervisor'",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "115_5"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### What was the time spent for a declaration to be approved by the supervisor?\nSELECT ",
            "response": "nkedEvents AS (SELECT id, activity, timestamp, LEAD(timestamp) OVER (PARTITION BY idcase ORDER BY timestamp) AS next_timestamp, idcase FROM event_log) SELECT idcase, coalesce((strftime('%s', next_timestamp) - strftime('%s', timestamp)),0) as duration FROM RankedEvents WHERE activity='Declaration approved by supervisor'",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "115_6"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### How many times has the 'declaration rejected by pre-approver' activity been performed?\nSELECT ",
            "response": "count(*) FROM event_log WHERE activity = 'Declaration rejected by pre-approver'",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "116_0"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### How many occurrences of the 'declaration rejected by pre-approver' activity are there in the event log?\nSELECT ",
            "response": "count(*) FROM event_log WHERE activity = 'Declaration rejected by pre-approver'",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "116_1"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### How many occurrences of the 'declaration rejected by pre-approver' activity were recorded in the event log?\nSELECT ",
            "response": "count(*) FROM event_log WHERE activity = 'Declaration rejected by pre-approver'",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "116_2"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### How many times did the 'declaration rejected by pre-approver' activity occur?\nSELECT ",
            "response": "count(*) FROM event_log WHERE activity = 'Declaration rejected by pre-approver'",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "116_3"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Report the number of times the 'declaration rejected by pre-approver' activity was performed.\nSELECT ",
            "response": "count(*) FROM event_log WHERE activity = 'Declaration rejected by pre-approver'",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "116_4"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### List the number of occurrences of the 'declaration rejected by pre-approver' activity.\nSELECT ",
            "response": "count(*) FROM event_log WHERE activity = 'Declaration rejected by pre-approver'",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "116_5"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### How many times has a declaration been rejected at the pre-approval stage?\nSELECT ",
            "response": "count(*) FROM event_log WHERE activity = 'Declaration rejected by pre-approver'",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "116_6"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### How many times has the pre-approver rejected a declaration?\nSELECT ",
            "response": "count(*) FROM event_log WHERE activity = 'Declaration rejected by pre-approver'",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "116_7"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### List the cases and the date of occurrence of the 'end trip' activity in each case, ordering the answer in relation to the resource responsible for the activity.\nSELECT ",
            "response": "idcase, timestamp FROM event_log WHERE activity = 'End trip' ORDER BY resource",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "117_0"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Return the case identifier and the date the 'end trip' activity was performed for this case, ordering the response according to the resource associated with performing the activity.\nSELECT ",
            "response": "idcase, timestamp FROM event_log WHERE activity = 'End trip' ORDER BY resource",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "117_1"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Provide a list, ordered by resource, of cases in which the 'end trip' activity occurred and the dates of events associated with these occurrences.\nSELECT ",
            "response": "idcase, timestamp FROM event_log WHERE activity = 'End trip' ORDER BY resource",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "117_2"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Which cases went through the 'end trip' activity and on what date? Sort the response by resource associated with the occurrence of the activity.\nSELECT ",
            "response": "idcase, timestamp FROM event_log WHERE activity = 'End trip' ORDER BY resource",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "117_3"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Which declarations have already registered the end of the trip and when was this registration? Order the list according to the name of the employee responsible for registering the end of the trip for that declaration.\nSELECT ",
            "response": "idcase, timestamp FROM event_log WHERE activity = 'End trip' ORDER BY resource",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "117_4"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Make a report in which we have the code of the processed declaration and the date on which the trip ended in that declaration. Sort the report according to the name of the employee who was responsible for recording the end of the trip in the system.\nSELECT ",
            "response": "idcase, timestamp FROM event_log WHERE activity = 'End trip' ORDER BY resource",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "117_5"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### How many events were recorded for each case?\nSELECT ",
            "response": "count (*), idcase FROM event_log group by idcase",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "118_0"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### How many events were recorded for each process instance?\nSELECT ",
            "response": "count (*), idcase FROM event_log group by idcase",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "118_1"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### How many events were performed in each case?\nSELECT ",
            "response": "count (*), idcase FROM event_log group by idcase",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "118_2"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### How many events were performed for each process instance?\nSELECT ",
            "response": "count (*), idcase FROM event_log group by idcase",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "118_3"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### List the number of events associated with each case.\nSELECT ",
            "response": "count (*), idcase FROM event_log group by idcase",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "118_4"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### List the number of events recorded for each case.\nSELECT ",
            "response": "count (*), idcase FROM event_log group by idcase",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "118_5"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### How many actions were taken for each travel declaration?\nSELECT ",
            "response": "count (*), idcase FROM event_log group by idcase",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "118_6"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### How many interventions were necessary to process each travel declaration?\nSELECT ",
            "response": "count (*), idcase FROM event_log group by idcase",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "118_7"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### How many cases went through the 'end trip' activity between 05/02/2017 and 05/12/2017?\nSELECT ",
            "response": "COUNT(DISTINCT idcase) FROM event_log WHERE activity = 'End trip' AND timestamp BETWEEN '2017-05-02' and '2017-05-12'",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "119_0"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Report the number of process instances that went through the 'end trip' activity between 05/02/2017 and 05/12/2017.\nSELECT ",
            "response": "COUNT(DISTINCT idcase) FROM event_log WHERE activity = 'End trip' AND timestamp BETWEEN '2017-05-02' and '2017-05-12'",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "119_1"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### In how many cases was the 'end trip' activity carried out between the second of May, 2017 and the twelfth of May, 2017?\nSELECT ",
            "response": "COUNT(DISTINCT idcase) FROM event_log WHERE activity = 'End trip' AND timestamp BETWEEN '2017-05-02' and '2017-05-12'",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "119_2"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### How many process instances include the performance of the 'end trip' activity between the second of May, 2017 and the twelfth of May, 2017?\nSELECT ",
            "response": "COUNT(DISTINCT idcase) FROM event_log WHERE activity = 'End trip' AND timestamp BETWEEN '2017-05-02' and '2017-05-12'",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "119_3"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### In how many cases did the 'end trip' activity occur considering the time interval of 05/02/2017 and 05/12/2017?\nSELECT ",
            "response": "COUNT(DISTINCT idcase) FROM event_log WHERE activity = 'End trip' AND timestamp BETWEEN '2017-05-02' and '2017-05-12'",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "119_4"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### How many cases went through the 'end trip' activity considering the time interval of 05/02/2017 and 05/12/2017?\nSELECT ",
            "response": "COUNT(DISTINCT idcase) FROM event_log WHERE activity = 'End trip' AND timestamp BETWEEN '2017-05-02' and '2017-05-12'",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "119_5"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### How many trips ended between 05/02/2017 and 05/12/2017?\nSELECT ",
            "response": "COUNT(DISTINCT idcase) FROM event_log WHERE activity = 'End trip' AND timestamp BETWEEN '2017-05-02' and '2017-05-12'",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "119_6"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### In how many declarations did the end of the trip occur between 05/02/2017 and 05/12/2017?\nSELECT ",
            "response": "COUNT(DISTINCT idcase) FROM event_log WHERE activity = 'End trip' AND timestamp BETWEEN '2017-05-02' and '2017-05-12'",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "119_7"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Report the case identifier, resource, event identifier and completion date of occurrences of the 'send reminder' activity, considering the chronological order of completion.\nSELECT ",
            "response": "idcase, resource, id, timestamp FROM event_log WHERE activity = 'Send reminder' ORDER BY timestamp",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "120_0"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Retrieve the case identifier, resource, event identifier and completion date of occurrences of the 'send reminder' activity. Sort the information in chronological order by completion date.\nSELECT ",
            "response": "idcase, resource, id, timestamp FROM event_log WHERE activity = 'Send reminder' ORDER BY timestamp",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "120_1"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Report, in chronological order of completion, the cases that include the 'send reminder' activity, the associated resources, the associated event identifiers and the activity completion date.\nSELECT ",
            "response": "idcase, resource, id, timestamp FROM event_log WHERE activity = 'Send reminder' ORDER BY timestamp",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "120_2"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### The 'send reminder' activity appears in which cases, with which resources, in which events, and with what completion date? Sort the information in chronological order by completion date.\nSELECT ",
            "response": "idcase, resource, id, timestamp FROM event_log WHERE activity = 'Send reminder' ORDER BY timestamp",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "120_3"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### For cases where the 'send reminder' activity occurs, list in chronological order of completion: case identifier, event identifier, associated resource and completion date of the activity.\nSELECT ",
            "response": "idcase, resource, id, timestamp FROM event_log WHERE activity = 'Send reminder' ORDER BY timestamp",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "120_4"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### In chronological order of completion, which cases include the 'send reminder' activity and what are the corresponding resource, event ID, and completion date of this activity?\nSELECT ",
            "response": "idcase, resource, id, timestamp FROM event_log WHERE activity = 'Send reminder' ORDER BY timestamp",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "120_5"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Make a report providing the code of the declaration process in which it was necessary to send reminders. Also, provide the resource that recorded this submission, the identifier of this submission occurrence and completion date, ordering the result by completion date.\nSELECT ",
            "response": "idcase, resource, id, timestamp FROM event_log WHERE activity = 'Send reminder' ORDER BY timestamp",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "120_6"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### List all resources in alphabetical order and without repetitions.\nSELECT ",
            "response": "DISTINCT resource FROM event_log ORDER BY resource",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "121_0"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### List all resources alphabetically and without duplicates.\nSELECT ",
            "response": "DISTINCT resource FROM event_log ORDER BY resource",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "121_1"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### List all distinct resources in alphabetical order.\nSELECT ",
            "response": "DISTINCT resource FROM event_log ORDER BY resource",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "121_2"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### What resources are recorded in the event log? List in alphabetical order and without repetitions.\nSELECT ",
            "response": "DISTINCT resource FROM event_log ORDER BY resource",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "121_3"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Retrieve, in alphabetical order and without repetitions, all resources recorded in the log.\nSELECT ",
            "response": "DISTINCT resource FROM event_log ORDER BY resource",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "121_4"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### List, in alphabetical order and without repetitions, the names of the resources recorded in the event log.\nSELECT ",
            "response": "DISTINCT resource FROM event_log ORDER BY resource",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "121_5"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### List the names of all employees who have worked on declaration processes, in alphabetical order.\nSELECT ",
            "response": "DISTINCT resource FROM event_log ORDER BY resource",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "121_6"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### What resources are associated with more than two hundred cases?\nSELECT ",
            "response": "resource FROM event_log GROUP BY resource HAVING COUNT(DISTINCT idcase) > 200",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "122_0"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### What resources are associated with more than two hundred process instances?\nSELECT ",
            "response": "resource FROM event_log GROUP BY resource HAVING COUNT(DISTINCT idcase) > 200",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "122_1"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### What resources are associated with more than two hundred travel declarations?\nSELECT ",
            "response": "resource FROM event_log GROUP BY resource HAVING COUNT(DISTINCT idcase) > 200",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "122_2"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### List the names of resources associated with more than two hundred travel declarations.\nSELECT ",
            "response": "resource FROM event_log GROUP BY resource HAVING COUNT(DISTINCT idcase) > 200",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "122_3"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### List the names of people associated with more than two hundred travel declarations.\nSELECT ",
            "response": "resource FROM event_log GROUP BY resource HAVING COUNT(DISTINCT idcase) > 200",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "122_4"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### List the names of employees associated with more than two hundred travel declarations.\nSELECT ",
            "response": "resource FROM event_log GROUP BY resource HAVING COUNT(DISTINCT idcase) > 200",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "122_5"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### What resources have more than 200 travel declarations?\nSELECT ",
            "response": "resource FROM event_log GROUP BY resource HAVING COUNT(DISTINCT idcase) > 200",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "122_6"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### How many resources appear in the event log?\nSELECT ",
            "response": "COUNT (DISTINCT resource) FROM event_log",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "123_0"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### How many resources are recorded in the event log?\nSELECT ",
            "response": "COUNT (DISTINCT resource) FROM event_log",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "123_1"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### How many employees are associated with handling declarations?\nSELECT ",
            "response": "COUNT (DISTINCT resource) FROM event_log",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "123_2"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### How many people are associated with handling declarations?\nSELECT ",
            "response": "COUNT (DISTINCT resource) FROM event_log",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "123_3"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### How many people are associated with activities in the event log?\nSELECT ",
            "response": "COUNT (DISTINCT resource) FROM event_log",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "123_4"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### How many people are associated with performing activities in the event log?\nSELECT ",
            "response": "COUNT (DISTINCT resource) FROM event_log",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "123_5"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### How many people were responsible for performing activities in the declaration management process?\nSELECT ",
            "response": "COUNT (DISTINCT resource) FROM event_log",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "123_6"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### How many people were responsible for handling declarations?\nSELECT ",
            "response": "COUNT (DISTINCT resource) FROM event_log",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "123_7"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### How many employees have already been associated with declaration handling actions?\nSELECT ",
            "response": "COUNT (DISTINCT resource) FROM event_log",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "123_8"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### What are the activities that contain the word 'declaration' in their name?\nSELECT ",
            "response": "DISTINCT activity FROM event_log WHERE activity LIKE '%declaration%'",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "124_0"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Which activities contain the word 'declaration' in their label?\nSELECT ",
            "response": "DISTINCT activity FROM event_log WHERE activity LIKE '%declaration%'",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "124_1"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Which activities contain the word 'declaration' in their identifier?\nSELECT ",
            "response": "DISTINCT activity FROM event_log WHERE activity LIKE '%declaration%'",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "124_2"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Retrieve activities that contain the word 'declaration' in their name.\nSELECT ",
            "response": "DISTINCT activity FROM event_log WHERE activity LIKE '%declaration%'",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "124_3"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### List the activities that contain the word 'declaration' in their name.\nSELECT ",
            "response": "DISTINCT activity FROM event_log WHERE activity LIKE '%declaration%'",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "124_4"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### I need to know which actions are being registered with the word 'declaration' in their name.\nSELECT ",
            "response": "DISTINCT activity FROM event_log WHERE activity LIKE '%declaration%'",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "124_5"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### What different actions are registered with a name that contains the word 'declaration' in each travel declaration?\nSELECT ",
            "response": "DISTINCT activity FROM event_log WHERE activity LIKE '%declaration%'",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "124_6"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### List the actions that are registered in the system with a label that contains the word 'declaration'.\nSELECT ",
            "response": "DISTINCT activity FROM event_log WHERE activity LIKE '%declaration%'",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "124_7"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### What is the mean cost related to performing each activity?\nSELECT ",
            "response": "AVG(cost), activity FROM event_log GROUP BY activity",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "125_0"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### How much does it cost, on average, to perform each activity?\nSELECT ",
            "response": "AVG(cost), activity FROM event_log GROUP BY activity",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "125_1"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### On average, how much would each activity cost?\nSELECT ",
            "response": "AVG(cost), activity FROM event_log GROUP BY activity",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "125_2"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### For each activity, what is the mean cost of performing it?\nSELECT ",
            "response": "AVG(cost), activity FROM event_log GROUP BY activity",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "125_3"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### What is the mean cost of performances grouped by activity?\nSELECT ",
            "response": "AVG(cost), activity FROM event_log GROUP BY activity",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "125_4"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Report the cost, on average, of performing each activity.\nSELECT ",
            "response": "AVG(cost), activity FROM event_log GROUP BY activity",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "125_5"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Retrieve the average cost of performing each activity.\nSELECT ",
            "response": "AVG(cost), activity FROM event_log GROUP BY activity",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "125_6"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Find the mean cost of performing each of the activities.\nSELECT ",
            "response": "AVG(cost), activity FROM event_log GROUP BY activity",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "125_7"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### What is the mean cost of each type of action required to process travel declarations?\nSELECT ",
            "response": "AVG(cost), activity FROM event_log GROUP BY activity",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "125_8"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### How many cases have no cost?\nSELECT ",
            "response": "COUNT(*) FROM (SELECT DISTINCT idcase FROM event_log where cost IS NULL EXCEPT SELECT DISTINCT idcase FROM event_log where cost IS NOT NULL)",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "126_0"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### How many process instances have no cost?\nSELECT ",
            "response": "COUNT(*) FROM (SELECT DISTINCT idcase FROM event_log where cost IS NULL EXCEPT SELECT DISTINCT idcase FROM event_log where cost IS NOT NULL)",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "126_1"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### How many cases have no costs?\nSELECT ",
            "response": "COUNT(*) FROM (SELECT DISTINCT idcase FROM event_log where cost IS NULL EXCEPT SELECT DISTINCT idcase FROM event_log where cost IS NOT NULL)",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "126_2"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### How many cases had no costs?\nSELECT ",
            "response": "COUNT(*) FROM (SELECT DISTINCT idcase FROM event_log where cost IS NULL EXCEPT SELECT DISTINCT idcase FROM event_log where cost IS NOT NULL)",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "126_3"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### How many process instances had no cost?\nSELECT ",
            "response": "COUNT(*) FROM (SELECT DISTINCT idcase FROM event_log where cost IS NULL EXCEPT SELECT DISTINCT idcase FROM event_log where cost IS NOT NULL)",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "126_4"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### In how many cases do all events have null cost?\nSELECT ",
            "response": "COUNT(*) FROM (SELECT DISTINCT idcase FROM event_log where cost IS NULL EXCEPT SELECT DISTINCT idcase FROM event_log where cost IS NOT NULL)",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "126_5"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### How many cases have only events without costs?\nSELECT ",
            "response": "COUNT(*) FROM (SELECT DISTINCT idcase FROM event_log where cost IS NULL EXCEPT SELECT DISTINCT idcase FROM event_log where cost IS NOT NULL)",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "126_6"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### How many declarations did the costs not reported to the university?\nSELECT ",
            "response": "COUNT(*) FROM (SELECT DISTINCT idcase FROM event_log where cost IS NULL EXCEPT SELECT DISTINCT idcase FROM event_log where cost IS NOT NULL)",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "126_7"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### How many declarations have no cost?\nSELECT ",
            "response": "COUNT(*) FROM (SELECT DISTINCT idcase FROM event_log where cost IS NULL EXCEPT SELECT DISTINCT idcase FROM event_log where cost IS NOT NULL)",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "126_8"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### What activities involve 'permit' or 'declaration'?\nSELECT ",
            "response": "DISTINCT activity FROM event_log WHERE activity LIKE '%permit%' OR activity LIKE '%declaration%'",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "127_0"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### What activities involve a permit or declaration?\nSELECT ",
            "response": "DISTINCT activity FROM event_log WHERE activity LIKE '%permit%' OR activity LIKE '%declaration%'",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "127_1"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Which of the activities involve 'permit' or 'declaration' actions?\nSELECT ",
            "response": "DISTINCT activity FROM event_log WHERE activity LIKE '%permit%' OR activity LIKE '%declaration%'",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "127_2"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Which of the activities in the log involve 'permit' or 'declare' actions?\nSELECT ",
            "response": "DISTINCT activity FROM event_log WHERE activity LIKE '%permit%' OR activity LIKE '%declaration%'",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "127_3"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### What activities have 'permit' or 'declaration' in their identifier?\nSELECT ",
            "response": "DISTINCT activity FROM event_log WHERE activity LIKE '%permit%' OR activity LIKE '%declaration%'",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "127_4"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### What activities have 'permit' or 'declaration' in their name?\nSELECT ",
            "response": "DISTINCT activity FROM event_log WHERE activity LIKE '%permit%' OR activity LIKE '%declaration%'",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "127_5"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### List the activities that contain 'permit' or 'declaration' in their name.\nSELECT ",
            "response": "DISTINCT activity FROM event_log WHERE activity LIKE '%permit%' OR activity LIKE '%declaration%'",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "127_6"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Retrieve activities that contain 'permit' or 'declaration' in their identifier name.\nSELECT ",
            "response": "DISTINCT activity FROM event_log WHERE activity LIKE '%permit%' OR activity LIKE '%declaration%'",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "127_7"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### What are the actions related to permits and explicit declarations in the declaration management process?\nSELECT ",
            "response": "DISTINCT activity FROM event_log WHERE activity LIKE '%permit%' OR activity LIKE '%declaration%'",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "127_8"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### How many times has the 'declaration rejected by director' activity been performed?\nSELECT ",
            "response": "COUNT (*) FROM event_log WHERE activity = 'Declaration rejected by director'",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "128_0"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### How many occurrences of activities are classified as 'declaration rejected by director'?\nSELECT ",
            "response": "COUNT (*) FROM event_log WHERE activity = 'Declaration rejected by director'",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "128_1"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### How many occurrences of activities are named as 'declaration rejected by director'?\nSELECT ",
            "response": "COUNT (*) FROM event_log WHERE activity = 'Declaration rejected by director'",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "128_2"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### How many events are associated with the 'declaration rejected by director' activity?\nSELECT ",
            "response": "COUNT (*) FROM event_log WHERE activity = 'Declaration rejected by director'",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "128_3"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### How many instances of 'declaration rejected by director' are there in the event log?\nSELECT ",
            "response": "COUNT (*) FROM event_log WHERE activity = 'Declaration rejected by director'",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "128_4"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### How many instances of 'declaration rejected by director' are there in the process?\nSELECT ",
            "response": "COUNT (*) FROM event_log WHERE activity = 'Declaration rejected by director'",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "128_5"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### How many times has an action of declaration of rejection of responsibility of the director been carried out?\nSELECT ",
            "response": "COUNT (*) FROM event_log WHERE activity = 'Declaration rejected by director'",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "128_6"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### What is the mean cost of an event?\nSELECT ",
            "response": "AVG (cost) FROM event_log",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "129_0"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### What is the mean cost of an event in this event log?\nSELECT ",
            "response": "AVG (cost) FROM event_log",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "129_1"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### What is the mean cost associated with the events in this event log?\nSELECT ",
            "response": "AVG (cost) FROM event_log",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "129_2"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### What is the mean cost of performing an activity in this event log?\nSELECT ",
            "response": "AVG (cost) FROM event_log",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "129_3"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### What is the average cost of an event in this event log?\nSELECT ",
            "response": "AVG (cost) FROM event_log",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "129_4"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### What is the mean cost associated with events?\nSELECT ",
            "response": "AVG (cost) FROM event_log",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "129_5"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### What is the mean cost of performing an activity?\nSELECT ",
            "response": "AVG (cost) FROM event_log",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "129_6"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### What is the mean cost amount associated with events?\nSELECT ",
            "response": "AVG (cost) FROM event_log",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "129_7"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### What is the mean cost amount associated with this business process?\nSELECT ",
            "response": "AVG (cost) FROM event_log",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "129_8"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### What is the mean cost of the actions required to process a declaration?\nSELECT ",
            "response": "AVG (cost) FROM event_log",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "129_9"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### In how many different cases was each resource used?\nSELECT ",
            "response": "resource, COUNT(DISTINCT idcase) from event_log GROUP BY resource",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "130_0"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### How many different cases was each resource associated with?\nSELECT ",
            "response": "resource, COUNT(DISTINCT idcase) from event_log GROUP BY resource",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "130_1"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### How many cases was each resource associated with?\nSELECT ",
            "response": "resource, COUNT(DISTINCT idcase) from event_log GROUP BY resource",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "130_2"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Report the number of cases to which each resource was associated.\nSELECT ",
            "response": "resource, COUNT(DISTINCT idcase) from event_log GROUP BY resource",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "130_3"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Identify the number of cases each resource was associated with.\nSELECT ",
            "response": "resource, COUNT(DISTINCT idcase) from event_log GROUP BY resource",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "130_4"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Retrieve the number of cases to which each resource was associated.\nSELECT ",
            "response": "resource, COUNT(DISTINCT idcase) from event_log GROUP BY resource",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "130_5"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Each resource is associated with how many different cases?\nSELECT ",
            "response": "resource, COUNT(DISTINCT idcase) from event_log GROUP BY resource",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "130_6"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### How many declarations has each employee already acted on?\nSELECT ",
            "response": "resource, COUNT(DISTINCT idcase) from event_log GROUP BY resource",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "130_7"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### How many events were associated with Peter?\nSELECT ",
            "response": "count(*) FROM event_log WHERE resource = 'Peter'",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "131_0"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### How many events are linked to Peter?\nSELECT ",
            "response": "count(*) FROM event_log WHERE resource = 'Peter'",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "131_1"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### How many events involved Peter's work?\nSELECT ",
            "response": "count(*) FROM event_log WHERE resource = 'Peter'",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "131_2"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### What was the employee Peter's performance in terms of number of actions performed?\nSELECT ",
            "response": "count(*) FROM event_log WHERE resource = 'Peter'",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "131_3"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Which people worked on more than three declarations?\nSELECT ",
            "response": "resource FROM event_log GROUP BY resource HAVING COUNT(DISTINCT idcase) > 3",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "132_0"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Which employees worked on processing more than three declarations?\nSELECT ",
            "response": "resource FROM event_log GROUP BY resource HAVING COUNT(DISTINCT idcase) > 3",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "132_1"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Which people worked on more than three cases?\nSELECT ",
            "response": "resource FROM event_log GROUP BY resource HAVING COUNT(DISTINCT idcase) > 3",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "132_2"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Which employees worked on more than three cases?\nSELECT ",
            "response": "resource FROM event_log GROUP BY resource HAVING COUNT(DISTINCT idcase) > 3",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "132_3"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Which people were associated with more than three process instances?\nSELECT ",
            "response": "resource FROM event_log GROUP BY resource HAVING COUNT(DISTINCT idcase) > 3",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "132_4"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Which employees were associated with more than three process instances?\nSELECT ",
            "response": "resource FROM event_log GROUP BY resource HAVING COUNT(DISTINCT idcase) > 3",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "132_5"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### What are the cases that went through 'request payment' activities? Report the identifiers of these cases, ordering them increasingly by the number of events per case.\nSELECT ",
            "response": "idcase FROM event_log WHERE idcase IN (SELECT DISTINCT idcase FROM event_log WHERE activity = 'Request payment' ) GROUP BY idcase ORDER BY count(*)",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "133_0"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Report the identifiers of cases that went through the 'request payment' activity. Sort the list ascendingly according to the number of events per case.\nSELECT ",
            "response": "idcase FROM event_log WHERE idcase IN (SELECT DISTINCT idcase FROM event_log WHERE activity = 'Request payment' ) GROUP BY idcase ORDER BY count(*)",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "133_1"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Retrieve the identifiers of cases that went through any of the activities that contain 'request payment' in their identification. Order them increasingly by the number of events per case.\nSELECT ",
            "response": "idcase FROM event_log WHERE idcase IN (SELECT DISTINCT idcase FROM event_log WHERE activity = 'Request payment' ) GROUP BY idcase ORDER BY count(*)",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "133_2"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### What are the identifiers for cases that have undergone 'request payment' activities? Sort the list increasingly by the number of events per case.\nSELECT ",
            "response": "idcase FROM event_log WHERE idcase IN (SELECT DISTINCT idcase FROM event_log WHERE activity = 'Request payment' ) GROUP BY idcase ORDER BY count(*)",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "133_3"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Sorting their identifiers increasingly by the number of events per case, retrieve the cases that went through 'request payment' activities.\nSELECT ",
            "response": "idcase FROM event_log WHERE idcase IN (SELECT DISTINCT idcase FROM event_log WHERE activity = 'Request payment' ) GROUP BY idcase ORDER BY count(*)",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "133_4"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Ordering the respective identifiers in increasing order by the number of events per case, retrieve the cases that went through 'request payment' activities.\nSELECT ",
            "response": "idcase FROM event_log WHERE idcase IN (SELECT DISTINCT idcase FROM event_log WHERE activity = 'Request payment' ) GROUP BY idcase ORDER BY count(*)",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "133_5"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### I need a report that describes which declarations have already requested payment, with the list ordered from the declaration with the least activities performed to the declaration with the most activities performed.\nSELECT ",
            "response": "idcase FROM event_log WHERE idcase IN (SELECT DISTINCT idcase FROM event_log WHERE activity = 'Request payment' ) GROUP BY idcase ORDER BY count(*)",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "133_6"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Make a list of the declarations in which the payment request was registered in the system. The list must be ordered from the declaration with the lowest number of actions to the declaration with the highest number of actions registered.\nSELECT ",
            "response": "idcase FROM event_log WHERE idcase IN (SELECT DISTINCT idcase FROM event_log WHERE activity = 'Request payment' ) GROUP BY idcase ORDER BY count(*)",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "133_7"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### What are the performance dates for the 'end trip' or 'declaration rejected by employee' activities? Order from oldest to newest.\nSELECT ",
            "response": "timestamp FROM event_log WHERE activity = 'End trip' OR activity = 'Declaration rejected by employee' ORDER BY timestamp",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "134_0"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Extract the dates when cases went through the 'end trip' or 'declaration rejected by employee' activities, arranging them from oldest to newest\nSELECT ",
            "response": "timestamp FROM event_log WHERE activity = 'End trip' OR activity = 'Declaration rejected by employee' ORDER BY timestamp",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "134_1"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Retrieve the dates on which the performance of the 'end trip' or 'declaration rejected by employee' activities were recorded, ordering from oldest to most recent.\nSELECT ",
            "response": "timestamp FROM event_log WHERE activity = 'End trip' OR activity = 'Declaration rejected by employee' ORDER BY timestamp",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "134_2"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### From oldest to most recent, what are the dates on which the performance of 'end trip' or 'declaration rejected by employee' activities were recorded?\nSELECT ",
            "response": "timestamp FROM event_log WHERE activity = 'End trip' OR activity = 'Declaration rejected by employee' ORDER BY timestamp",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "134_3"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Ordering from oldest to most recent, what are the recording dates for the performance of 'end trip' or 'closed' activities?\nSELECT ",
            "response": "timestamp FROM event_log WHERE activity = 'End trip' OR activity = 'Declaration rejected by employee' ORDER BY timestamp",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "134_4"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### What are the dates on which performances of 'end trip' or 'declaration rejected by employee' activities were recorded? Order from oldest to newest.\nSELECT ",
            "response": "timestamp FROM event_log WHERE activity = 'End trip' OR activity = 'Declaration rejected by employee' ORDER BY timestamp",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "134_5"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### What were the dates on which there was a record of the end of the trip or a declaration rejected by an employee? Report the dates in ascending order.\nSELECT ",
            "response": "timestamp FROM event_log WHERE activity = 'End trip' OR activity = 'Declaration rejected by employee' ORDER BY timestamp",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "134_6"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Make a report with all the dates of registration of an end of trip or rejection of a declaration by an employee. Sort the listing from oldest to newest.\nSELECT ",
            "response": "timestamp FROM event_log WHERE activity = 'End trip' OR activity = 'Declaration rejected by employee' ORDER BY timestamp",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "134_7"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### How many occurrences of activities were assigned to each resource? List alphabetically by resource.\nSELECT ",
            "response": "resource, COUNT(*) FROM event_log GROUP BY resource",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "135_0"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### How many performances of activities were assigned to each resource? Order the answer alphabetically by resource name.\nSELECT ",
            "response": "resource, COUNT(*) FROM event_log GROUP BY resource",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "135_1"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### How many activity performances were assigned to each resource? Order the answer alphabetically by the resource identifier name.\nSELECT ",
            "response": "resource, COUNT(*) FROM event_log GROUP BY resource",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "135_2"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Retrieve how many activity performances were assigned to each resource, ordering the answer alphabetically by the resource's identifying name.\nSELECT ",
            "response": "resource, COUNT(*) FROM event_log GROUP BY resource",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "135_3"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Retrieve the amount of activity performances assigned to each resource, ordering the response alphabetically by the resource's identifying name.\nSELECT ",
            "response": "resource, COUNT(*) FROM event_log GROUP BY resource",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "135_4"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Retrieve the number of activity performances that were assigned to each resource, ordering the response alphabetically by the resource's identifying name.\nSELECT ",
            "response": "resource, COUNT(*) FROM event_log GROUP BY resource",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "135_5"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### How many occurrences of activity are there when grouped by resource? Order the answer alphabetically by resource name.\nSELECT ",
            "response": "resource, COUNT(*) FROM event_log GROUP BY resource",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "135_6"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Grouping by resource, how many activity occurrences are there? Order the answer alphabetically by resource name.\nSELECT ",
            "response": "resource, COUNT(*) FROM event_log GROUP BY resource",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "135_7"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Ordering alphabetically by resource name and grouping by resource, how many are the activity occurrences?\nSELECT ",
            "response": "resource, COUNT(*) FROM event_log GROUP BY resource",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "135_8"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### How many times did each employee process the different declarations recorded in the system? Present this answer in alphabetical order of the employee's name.\nSELECT ",
            "response": "resource, COUNT(*) FROM event_log GROUP BY resource",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "135_9"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Considering an alphabetical list of employee names, present a report with the number of times each employee performed an action during the processing of a declaration.\nSELECT ",
            "response": "resource, COUNT(*) FROM event_log GROUP BY resource",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "135_10"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### What are the events associated with activities whose name starts with the letter 'E'?\nSELECT ",
            "response": "* FROM event_log WHERE activity LIKE 'E%'",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "136_0"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Find all events that are associated with activities that start with the letter 'E'.\nSELECT ",
            "response": "* FROM event_log WHERE activity LIKE 'E%'",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "136_1"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Retrieve all events in which activities starting with the letter 'E' were performed.\nSELECT ",
            "response": "* FROM event_log WHERE activity LIKE 'E%'",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "136_2"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Retrieve all events that record the performance of activities starting with the letter 'E'.\nSELECT ",
            "response": "* FROM event_log WHERE activity LIKE 'E%'",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "136_3"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### What are the events associated with the performance of activities starting with the letter 'E'?\nSELECT ",
            "response": "* FROM event_log WHERE activity LIKE 'E%'",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "136_4"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### What are the events associated with the performance of activities starting with 'E'?\nSELECT ",
            "response": "* FROM event_log WHERE activity LIKE 'E%'",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "136_5"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### List the processing actions for a declaration named with a label starting with the letter 'E'.\nSELECT ",
            "response": "* FROM event_log WHERE activity LIKE 'E%'",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "136_6"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### What are the actions performed for activities whose label starts with the letter 'E'?\nSELECT ",
            "response": "* FROM event_log WHERE activity LIKE 'E%'",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "136_7"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Select the event identifier, activity performed, resource, and cost for events whose cost is between 50 and 400.\nSELECT ",
            "response": "id, activity, resource, cost FROM event_log WHERE cost BETWEEN 50 AND 400",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "137_0"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Select events based on their cost being between 50 and 400. Display the identifier, activity performed, resource and cost associated with the event.\nSELECT ",
            "response": "id, activity, resource, cost FROM event_log WHERE cost BETWEEN 50 AND 400",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "137_1"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Select the events with costs between 50 and 400 and report the respective event identifiers, activities carried out, resources and costs.\nSELECT ",
            "response": "id, activity, resource, cost FROM event_log WHERE cost BETWEEN 50 AND 400",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "137_2"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Identify the events that cost are between 50 and 400 and, for each of them, report the event identifier, activity performed, resource and cost.\nSELECT ",
            "response": "id, activity, resource, cost FROM event_log WHERE cost BETWEEN 50 AND 400",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "137_3"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Select events whose registered cost ranges from fifty to four hundred and report the respective event identifiers, activities carried out, resources and costs.\nSELECT ",
            "response": "id, activity, resource, cost FROM event_log WHERE cost BETWEEN 50 AND 400",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "137_4"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### What are the events whose cost is between 50 and 400? Report the event identifier, the activity carried out, the resource and the cost of each of them.\nSELECT ",
            "response": "id, activity, resource, cost FROM event_log WHERE cost BETWEEN 50 AND 400",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "137_5"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### What are the events whose cost recorded in the log is between 50 and 400? Report the event identifier, the activity performed, the resource and the cost of each of these events.\nSELECT ",
            "response": "id, activity, resource, cost FROM event_log WHERE cost BETWEEN 50 AND 400",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "137_6"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Which events have a cost recorded in the log between 50 and 400? List them in terms of their respective event identifiers, activities performed, resources, and costs.\nSELECT ",
            "response": "id, activity, resource, cost FROM event_log WHERE cost BETWEEN 50 AND 400",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "137_7"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### For declaration processing actions that cost between 50 and 400, present their identifier, the activity associated with it, the responsible employee and its specific cost.\nSELECT ",
            "response": "id, activity, resource, cost FROM event_log WHERE cost BETWEEN 50 AND 400",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "137_8"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### What resources have already been associated with the 'declaration saved by employee' activity?\nSELECT ",
            "response": "DISTINCT resource FROM event_log WHERE activity = 'Declaration saved by employee'",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "138_0"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### What resources were associated with the 'declaration saved by employee' activity?\nSELECT ",
            "response": "DISTINCT resource FROM event_log WHERE activity = 'Declaration saved by employee'",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "138_1"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Which employees registered a saved declaration?\nSELECT ",
            "response": "DISTINCT resource FROM event_log WHERE activity = 'Declaration saved by employee'",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "138_2"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Which employees have already saved a declaration?\nSELECT ",
            "response": "DISTINCT resource FROM event_log WHERE activity = 'Declaration saved by employee'",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "138_3"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Select the activities from the events that ended on '2018-04-12'.\nSELECT ",
            "response": "DISTINCT activity FROM (SELECT idcase, activity, timestamp, LEAD(timestamp) OVER (PARTITION BY idcase ORDER BY timestamp) AS next_timestamp FROM event_log) WHERE next_timestamp BETWEEN '2018-04-12' AND '2018-04-13'",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "139_0"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Report the activities whose performance ended on the twelfth of April, twenty eighteen.\nSELECT ",
            "response": "DISTINCT activity FROM (SELECT idcase, activity, timestamp, LEAD(timestamp) OVER (PARTITION BY idcase ORDER BY timestamp) AS next_timestamp FROM event_log) WHERE next_timestamp BETWEEN '2018-04-12' AND '2018-04-13'",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "139_1"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Select activities from events that ended on '2018-04-12'.\nSELECT ",
            "response": "DISTINCT activity FROM (SELECT idcase, activity, timestamp, LEAD(timestamp) OVER (PARTITION BY idcase ORDER BY timestamp) AS next_timestamp FROM event_log) WHERE next_timestamp BETWEEN '2018-04-12' AND '2018-04-13'",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "139_2"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Select the event activities that have '2018-04-12' as their end date.\nSELECT ",
            "response": "DISTINCT activity FROM (SELECT idcase, activity, timestamp, LEAD(timestamp) OVER (PARTITION BY idcase ORDER BY timestamp) AS next_timestamp FROM event_log) WHERE next_timestamp BETWEEN '2018-04-12' AND '2018-04-13'",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "139_3"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Retrieve activities for which any of their performances were recorded in an event that ended on '2018-04-12'.\nSELECT ",
            "response": "DISTINCT activity FROM (SELECT idcase, activity, timestamp, LEAD(timestamp) OVER (PARTITION BY idcase ORDER BY timestamp) AS next_timestamp FROM event_log) WHERE next_timestamp BETWEEN '2018-04-12' AND '2018-04-13'",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "139_4"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### For which activities were performances registered that have '2018-04-12' as their end date?\nSELECT ",
            "response": "DISTINCT activity FROM (SELECT idcase, activity, timestamp, LEAD(timestamp) OVER (PARTITION BY idcase ORDER BY timestamp) AS next_timestamp FROM event_log) WHERE next_timestamp BETWEEN '2018-04-12' AND '2018-04-13'",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "139_5"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Which activities have '2018-04-12' as their end date for any of their performances?\nSELECT ",
            "response": "DISTINCT activity FROM (SELECT idcase, activity, timestamp, LEAD(timestamp) OVER (PARTITION BY idcase ORDER BY timestamp) AS next_timestamp FROM event_log) WHERE next_timestamp BETWEEN '2018-04-12' AND '2018-04-13'",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "139_6"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Which activities have '2018-04-12' as their end date for any of the events related to their performances?\nSELECT ",
            "response": "DISTINCT activity FROM (SELECT idcase, activity, timestamp, LEAD(timestamp) OVER (PARTITION BY idcase ORDER BY timestamp) AS next_timestamp FROM event_log) WHERE next_timestamp BETWEEN '2018-04-12' AND '2018-04-13'",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "139_7"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Report the name of the task associated with declaration processing actions completed on April 12, 2018.\nSELECT ",
            "response": "DISTINCT activity FROM (SELECT idcase, activity, timestamp, LEAD(timestamp) OVER (PARTITION BY idcase ORDER BY timestamp) AS next_timestamp FROM event_log) WHERE next_timestamp BETWEEN '2018-04-12' AND '2018-04-13'",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "139_8"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### List the event identifier, associated activity, and performance end date, of all events associated with the 'permit final approved by supervisor' or 'declaration approved by supervisor' activities, ordered by end date.\nSELECT ",
            "response": "id, activity, timestamp FROM event_log WHERE activity = 'Permit final approved by supervisor' OR activity = 'Declaration approved by supervisor' ORDER BY timestamp",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "140_0"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Identify the events corresponding to performances of the 'permit final approved by supervisor' or 'declaration approved by supervisor' activities and list the respective event identifiers, activity performed and performance end dates, ordering them by end dates.\nSELECT ",
            "response": "id, activity, timestamp FROM event_log WHERE activity = 'Permit final approved by supervisor' OR activity = 'Declaration approved by supervisor' ORDER BY timestamp",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "140_1"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### List the events associated with the 'permit final approved by the supervisor' or 'declaration approved by the supervisor' activities, stating the event identifier, the associated activity and the performance end date of each of them and ordering them by end date.\nSELECT ",
            "response": "id, activity, timestamp FROM event_log WHERE activity = 'Permit final approved by supervisor' OR activity = 'Declaration approved by supervisor' ORDER BY timestamp",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "140_2"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### What are the events corresponding to performances of the 'permit final approved by supervisor' or 'declaration approved by supervisor' activities? List the respective event identifiers, activities performed, and performance end dates, ordering them by end dates.\nSELECT ",
            "response": "id, activity, timestamp FROM event_log WHERE activity = 'Permit final approved by supervisor' OR activity = 'Declaration approved by supervisor' ORDER BY timestamp",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "140_3"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### What are the events corresponding to occurrences of the 'permit final approved by supervisor' or 'declaration approved by supervisor' activities? Sort the list by their respective end dates and report the event identifier, the activity performed and the performance end date for each of them.\nSELECT ",
            "response": "id, activity, timestamp FROM event_log WHERE activity = 'Permit final approved by supervisor' OR activity = 'Declaration approved by supervisor' ORDER BY timestamp",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "140_4"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Which events correspond to occurrences of the 'permit final approved by supervisor' or 'declaration approved by supervisor' activities? Order them by their respective end dates, providing their event identifier, the activity performed and the performance end date.\nSELECT ",
            "response": "id, activity, timestamp FROM event_log WHERE activity = 'Permit final approved by supervisor' OR activity = 'Declaration approved by supervisor' ORDER BY timestamp",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "140_5"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### What are the records identifiers of final approval of a permit or approval of a declaration by a supervisor, what is the activity associated with each of these records, and what is the performance end date of these actions? Sort the report by performance end date.\nSELECT ",
            "response": "id, activity, timestamp FROM event_log WHERE activity = 'Permit final approved by supervisor' OR activity = 'Declaration approved by supervisor' ORDER BY timestamp",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "140_6"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### What is the action identifier, associated activity, and completion date that indicates final approval of a permit or indicates approval of a declaration by a supervisor? Present the information ordered according to the end date of the action performance.\nSELECT ",
            "response": "id, activity, timestamp FROM event_log WHERE activity = 'Permit final approved by supervisor' OR activity = 'Declaration approved by supervisor' ORDER BY timestamp",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "140_7"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Select all events whose cost is not null.\nSELECT ",
            "response": "* FROM event_log WHERE cost IS NOT NULL",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "141_0"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Select all tuples where the event cost is not null.\nSELECT ",
            "response": "* FROM event_log WHERE cost IS NOT NULL",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "141_1"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Select all lines where there is an associated cost.\nSELECT ",
            "response": "* FROM event_log WHERE cost IS NOT NULL",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "141_2"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Select all tuples where there is an associated cost.\nSELECT ",
            "response": "* FROM event_log WHERE cost IS NOT NULL",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "141_3"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Select all events that have an associated cost.\nSELECT ",
            "response": "* FROM event_log WHERE cost IS NOT NULL",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "141_4"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Retrieve all information about events that have an associated cost.\nSELECT ",
            "response": "* FROM event_log WHERE cost IS NOT NULL",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "141_5"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Retrieve all information about events that have a cost.\nSELECT ",
            "response": "* FROM event_log WHERE cost IS NOT NULL",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "141_6"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Report all actions carried out during the processing of each declaration, which costs are not null.\nSELECT ",
            "response": "* FROM event_log WHERE cost IS NOT NULL",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "141_7"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### How many performances of the 'permit final approved by director' activity were recorded in the log?\nSELECT ",
            "response": "count(*) FROM event_log WHERE activity = 'Permit final approved by director'",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "142_0"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### How many times has the 'permit final approved by director' activity been performed?\nSELECT ",
            "response": "count(*) FROM event_log WHERE activity = 'Permit final approved by director'",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "142_1"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Report the number of times the 'permit final approved by director' activity was performed.\nSELECT ",
            "response": "count(*) FROM event_log WHERE activity = 'Permit final approved by director'",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "142_2"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Report the number of times the performance of the 'permit final approved by director' activity was recorded.\nSELECT ",
            "response": "count(*) FROM event_log WHERE activity = 'Permit final approved by director'",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "142_3"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### How many events are there related to the performance of the 'permit final approved by director' activity?\nSELECT ",
            "response": "count(*) FROM event_log WHERE activity = 'Permit final approved by director'",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "142_4"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### How many events are recorded related to the performance of the 'permit final approved by director' activity?\nSELECT ",
            "response": "count(*) FROM event_log WHERE activity = 'Permit final approved by director'",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "142_5"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### How many times has the performance of the 'permit final approved by director' activity been recorded?\nSELECT ",
            "response": "count(*) FROM event_log WHERE activity = 'Permit final approved by director'",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "142_6"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### What is the number of times the performance of the 'permit final approved by director' activity was recorded?\nSELECT ",
            "response": "count(*) FROM event_log WHERE activity = 'Permit final approved by director'",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "142_7"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Retrieve the number of times the performance of the 'permit final approved by director' activity was recorded\nSELECT ",
            "response": "count(*) FROM event_log WHERE activity = 'Permit final approved by director'",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "142_8"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Retrieve the number of times events related to the performance of the 'permit final approved by a director' activity were recorded.\nSELECT ",
            "response": "count(*) FROM event_log WHERE activity = 'Permit final approved by director'",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "142_9"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### How many times has the processing of declarations required a final permit to be granted by a director?\nSELECT ",
            "response": "count(*) FROM event_log WHERE activity = 'Permit final approved by director'",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "142_10"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### How many times has a final permit been approved by a director?\nSELECT ",
            "response": "count(*) FROM event_log WHERE activity = 'Permit final approved by director'",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "142_11"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Retrieve the performance moments of the 'start trip' activity carried out by resources whose name ends with 's'.\nSELECT ",
            "response": "timestamp FROM event_log WHERE resource LIKE '%s' AND activity = 'Start trip'",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "143_0"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### At what moments were the 'start trip' activities performed by resources whose name ends with 's'?\nSELECT ",
            "response": "timestamp FROM event_log WHERE resource LIKE '%s' AND activity = 'Start trip'",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "143_1"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### What are the performance moments for the 'start trip' activity associated with resources whose name ends with 's'?\nSELECT ",
            "response": "timestamp FROM event_log WHERE resource LIKE '%s' AND activity = 'Start trip'",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "143_2"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Considering the events associated with the 'start trip' activity and resources whose name ends with 's', recover their performance moments.\nSELECT ",
            "response": "timestamp FROM event_log WHERE resource LIKE '%s' AND activity = 'Start trip'",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "143_3"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### What are the performance moments of the 'start trip' activity in which the associated resource has a name ending in 's'?\nSELECT ",
            "response": "timestamp FROM event_log WHERE resource LIKE '%s' AND activity = 'Start trip'",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "143_4"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### What are the moments of the events associated with the performance of the 'start trip' activity in which the associated resource has a name ending in 's'?\nSELECT ",
            "response": "timestamp FROM event_log WHERE resource LIKE '%s' AND activity = 'Start trip'",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "143_5"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Report what are the moments of the events associated with the performance of the 'start trip' activity in which the associated resource has a name ending in 's'.\nSELECT ",
            "response": "timestamp FROM event_log WHERE resource LIKE '%s' AND activity = 'Start trip'",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "143_6"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Report the moments of the events associated with the performance of the 'start trip' activity in which the associated resource has a name ending in 's'.\nSELECT ",
            "response": "timestamp FROM event_log WHERE resource LIKE '%s' AND activity = 'Start trip'",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "143_7"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### What are the dates on which a resource whose name ends with 's' carried out an intervention relating to recording the start of a trip?\nSELECT ",
            "response": "timestamp FROM event_log WHERE resource LIKE '%s' AND activity = 'Start trip'",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "143_8"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### What are the dates on which a trip start record was registered by a resource whose name ends with 's'?\nSELECT ",
            "response": "timestamp FROM event_log WHERE resource LIKE '%s' AND activity = 'Start trip'",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "143_9"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Add up event costs grouping by activity and resource.\nSELECT ",
            "response": "activity, resource, SUM(cost) from event_log group by activity, resource",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "144_0"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### What is the total cost of events associated with an activity and resource pair?\nSELECT ",
            "response": "activity, resource, SUM(cost) from event_log group by activity, resource",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "144_1"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### What is the total sum of event costs considering each activity-resource pair?\nSELECT ",
            "response": "activity, resource, SUM(cost) from event_log group by activity, resource",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "144_2"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### For each activity and resource pair, what is the total sum of costs of their events?\nSELECT ",
            "response": "activity, resource, SUM(cost) from event_log group by activity, resource",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "144_3"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### For each activity and resource pair, what is the total sum of costs of the events in which each pair was recorded?\nSELECT ",
            "response": "activity, resource, SUM(cost) from event_log group by activity, resource",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "144_4"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Grouping events by activity and resource, what is the total cost of events for each activity-resource pair?\nSELECT ",
            "response": "activity, resource, SUM(cost) from event_log group by activity, resource",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "144_5"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Select the sum of event costs, grouping by activity and resource.\nSELECT ",
            "response": "activity, resource, SUM(cost) from event_log group by activity, resource",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "144_6"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Report how much was spent on each association of activities and employees involved in processing the declarations.\nSELECT ",
            "response": "activity, resource, SUM(cost) from event_log group by activity, resource",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "144_7"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### How many events recorded the performance of 'start trip' and 'end trip' activities?\nSELECT ",
            "response": "count(*), activity from event_log where activity = 'Start trip' or activity = 'End trip' GROUP BY activity",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "145_0"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Select the number of occurrences of 'start trip' and 'end trip' activities.\nSELECT ",
            "response": "count(*), activity from event_log where activity = 'Start trip' or activity = 'End trip' GROUP BY activity",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "145_1"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Retrieve the number of times 'start trip' or 'end trip' activities occurred\nSELECT ",
            "response": "count(*), activity from event_log where activity = 'Start trip' or activity = 'End trip' GROUP BY activity",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "145_2"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Retrieve the number of events related to the performance of 'start trip' and 'end trip' activities.\nSELECT ",
            "response": "count(*), activity from event_log where activity = 'Start trip' or activity = 'End trip' GROUP BY activity",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "145_3"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Report the number of times the performance of 'start trip' and 'end trip' activities was recorded.\nSELECT ",
            "response": "count(*), activity from event_log where activity = 'Start trip' or activity = 'End trip' GROUP BY activity",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "145_4"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Report the number of events that recorded the performance of 'start trip' and 'end trip' activities.\nSELECT ",
            "response": "count(*), activity from event_log where activity = 'Start trip' or activity = 'End trip' GROUP BY activity",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "145_5"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Select the number of occurrences of the 'start trip' and 'end trip' activities.\nSELECT ",
            "response": "count(*), activity from event_log where activity = 'Start trip' or activity = 'End trip' GROUP BY activity",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "145_6"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### How many times were 'start trip' and 'end trip' activities performed?\nSELECT ",
            "response": "count(*), activity from event_log where activity = 'Start trip' or activity = 'End trip' GROUP BY activity",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "145_7"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### The beginning of a trip and the end of a trip are recorded for how many travel declarations?\nSELECT ",
            "response": "count(*), activity from event_log where activity = 'Start trip' or activity = 'End trip' GROUP BY activity",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "145_8"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### How many times were the beginning of a trip and the end of a trip recorded when processing the travel declarations?\nSELECT ",
            "response": "count(*), activity from event_log where activity = 'Start trip' or activity = 'End trip' GROUP BY activity",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "145_9"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Which activities were performed more than three times?\nSELECT ",
            "response": "activity FROM event_log GROUP BY activity HAVING COUNT(*) > 3",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "146_0"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### List activities that were performed more than three times.\nSELECT ",
            "response": "activity FROM event_log GROUP BY activity HAVING COUNT(*) > 3",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "146_1"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### List the activities that were performed more than three times.\nSELECT ",
            "response": "activity FROM event_log GROUP BY activity HAVING COUNT(*) > 3",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "146_2"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Recover activities that have been performed more than three times.\nSELECT ",
            "response": "activity FROM event_log GROUP BY activity HAVING COUNT(*) > 3",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "146_3"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### What activities were performed more than three times?\nSELECT ",
            "response": "activity FROM event_log GROUP BY activity HAVING COUNT(*) > 3",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "146_4"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### What are the activities for which there are more than three records of their performance?\nSELECT ",
            "response": "activity FROM event_log GROUP BY activity HAVING COUNT(*) > 3",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "146_5"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### What are the activities for which there are more than three events recording their performance?\nSELECT ",
            "response": "activity FROM event_log GROUP BY activity HAVING COUNT(*) > 3",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "146_6"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Retrieve which activities have more than three events recording their performance.\nSELECT ",
            "response": "activity FROM event_log GROUP BY activity HAVING COUNT(*) > 3",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "146_7"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### In the processing of declarations, there are activities that are performed many times. Inform me of those that were performed more than three times.\nSELECT ",
            "response": "activity FROM event_log GROUP BY activity HAVING COUNT(*) > 3",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "146_8"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### I need to know which activities had more than three records when processing travel declarations.\nSELECT ",
            "response": "activity FROM event_log GROUP BY activity HAVING COUNT(*) > 3",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "146_9"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### What was the last activity performed and what is the resource associated with its performance?\nSELECT ",
            "response": "resource, activity FROM event_log ORDER BY timestamp DESC LIMIT 1",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "147_0"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Report the last activity performed and the resource associated with its performance\nSELECT ",
            "response": "resource, activity FROM event_log ORDER BY timestamp DESC LIMIT 1",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "147_1"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Retrieve the last activity performed and the resource associated with its performance\nSELECT ",
            "response": "resource, activity FROM event_log ORDER BY timestamp DESC LIMIT 1",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "147_2"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### The last recorded event refers to the performance of which activity and what is the resource associated with it?\nSELECT ",
            "response": "resource, activity FROM event_log ORDER BY timestamp DESC LIMIT 1",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "147_3"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Retrieve the last recorded event and report the activity performed and the associated resource.\nSELECT ",
            "response": "resource, activity FROM event_log ORDER BY timestamp DESC LIMIT 1",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "147_4"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Considering the last recorded event, what activity was performed and what resource was associated with its performance?\nSELECT ",
            "response": "resource, activity FROM event_log ORDER BY timestamp DESC LIMIT 1",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "147_5"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### In the last recorded event, what activity was performed and what resource was associated with its performance?\nSELECT ",
            "response": "resource, activity FROM event_log ORDER BY timestamp DESC LIMIT 1",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "147_6"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Who was the person who made the last entry in travel declaration processing? This record refers to the performance of which task?\nSELECT ",
            "response": "resource, activity FROM event_log ORDER BY timestamp DESC LIMIT 1",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "147_7"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Who was the employee who performed the last activity ever recorded in the travel declaration process and what was that activity?\nSELECT ",
            "response": "resource, activity FROM event_log ORDER BY timestamp DESC LIMIT 1",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "147_8"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### What are the events and who is responsible for the activity performed in the event, that occurred after an event performing the 'end trip' activity in the same case?\nSELECT ",
            "response": "e1.activity, e1.resource, e1.idcase from event_log AS e1 inner join event_log AS e2 on e1.idcase = e2.idcase WHERE e2.activity = 'End trip' and e1.timestamp > e2.timestamp",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "148_0"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Find the case events and the person responsible for the activity performed in the event, that occurred after an event performing the 'end trip' activity.\nSELECT ",
            "response": "e1.activity, e1.resource, e1.idcase from event_log AS e1 inner join event_log AS e2 on e1.idcase = e2.idcase WHERE e2.activity = 'End trip' and e1.timestamp > e2.timestamp",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "148_1"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Find the case events, as well as the person responsible for the activity performed in the event, that occurred after an event performing the 'end trip' activity.\nSELECT ",
            "response": "e1.activity, e1.resource, e1.idcase from event_log AS e1 inner join event_log AS e2 on e1.idcase = e2.idcase WHERE e2.activity = 'End trip' and e1.timestamp > e2.timestamp",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "148_2"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Find the events and the person responsible for the activity performed in the event, that occurred after an event performing the 'end trip' activity in the same case.\nSELECT ",
            "response": "e1.activity, e1.resource, e1.idcase from event_log AS e1 inner join event_log AS e2 on e1.idcase = e2.idcase WHERE e2.activity = 'End trip' and e1.timestamp > e2.timestamp",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "148_3"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Find the events, as well as the person responsible for the activity performed in the event, that occurred after an event performing the 'end trip' activity in the same case.\nSELECT ",
            "response": "e1.activity, e1.resource, e1.idcase from event_log AS e1 inner join event_log AS e2 on e1.idcase = e2.idcase WHERE e2.activity = 'End trip' and e1.timestamp > e2.timestamp",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "148_4"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### For each case, find the events, as well as the person responsible for the activity performed in the event, that occurred after an event performing the 'end trip' activity.\nSELECT ",
            "response": "e1.activity, e1.resource, e1.idcase from event_log AS e1 inner join event_log AS e2 on e1.idcase = e2.idcase WHERE e2.activity = 'End trip' and e1.timestamp > e2.timestamp",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "148_5"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### List the case events and the person responsible for the activity performed in the event, that occurred after an event performing the 'end trip' activity.\nSELECT ",
            "response": "e1.activity, e1.resource, e1.idcase from event_log AS e1 inner join event_log AS e2 on e1.idcase = e2.idcase WHERE e2.activity = 'End trip' and e1.timestamp > e2.timestamp",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "148_6"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### List the case events, as well as the person responsible for the activity performed in the event, that occurred after an event performing the 'end trip' activity.\nSELECT ",
            "response": "e1.activity, e1.resource, e1.idcase from event_log AS e1 inner join event_log AS e2 on e1.idcase = e2.idcase WHERE e2.activity = 'End trip' and e1.timestamp > e2.timestamp",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "148_7"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### List the events and the person responsible for the activity performed in the event, that occurred after an event performing the 'end trip' activity in the same case.\nSELECT ",
            "response": "e1.activity, e1.resource, e1.idcase from event_log AS e1 inner join event_log AS e2 on e1.idcase = e2.idcase WHERE e2.activity = 'End trip' and e1.timestamp > e2.timestamp",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "148_8"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### List the events, as well as the person responsible for the activity performed in the event, that occurred after an event performing the 'end trip' activity in the same case.\nSELECT ",
            "response": "e1.activity, e1.resource, e1.idcase from event_log AS e1 inner join event_log AS e2 on e1.idcase = e2.idcase WHERE e2.activity = 'End trip' and e1.timestamp > e2.timestamp",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "148_9"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### For each case, list the events, as well as the person responsible for the activity performed in the event, that occurred after an event performing the 'end trip' activity.\nSELECT ",
            "response": "e1.activity, e1.resource, e1.idcase from event_log AS e1 inner join event_log AS e2 on e1.idcase = e2.idcase WHERE e2.activity = 'End trip' and e1.timestamp > e2.timestamp",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "148_10"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### What are the case events, as well as the person responsible for the activity performed in the event, that occurred after an event performing the 'end trip' activity?\nSELECT ",
            "response": "e1.activity, e1.resource, e1.idcase from event_log AS e1 inner join event_log AS e2 on e1.idcase = e2.idcase WHERE e2.activity = 'End trip' and e1.timestamp > e2.timestamp",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "148_11"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### For each case, what are the events, as well as the person responsible for the activity carried out in the event, that occurred after an event performing the 'end trip' activity?\nSELECT ",
            "response": "e1.activity, e1.resource, e1.idcase from event_log AS e1 inner join event_log AS e2 on e1.idcase = e2.idcase WHERE e2.activity = 'End trip' and e1.timestamp > e2.timestamp",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "148_12"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Considering the events related to each case, which of them occurred after an event involving the performance of the 'end trip' activity? Include in your response information about who was responsible for the activity carried out at the event.\nSELECT ",
            "response": "e1.activity, e1.resource, e1.idcase from event_log AS e1 inner join event_log AS e2 on e1.idcase = e2.idcase WHERE e2.activity = 'End trip' and e1.timestamp > e2.timestamp",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "148_13"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Considering the events related to each case, which of them occurred after an event involving the performance of the 'end trip' activity? Include in your response information about the person responsible for the activity carried out at the event.\nSELECT ",
            "response": "e1.activity, e1.resource, e1.idcase from event_log AS e1 inner join event_log AS e2 on e1.idcase = e2.idcase WHERE e2.activity = 'End trip' and e1.timestamp > e2.timestamp",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "148_14"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### List all actions performed after the end of trip registration, in each of the travel declarations already processed and registered in the system, and the person who was responsible for these performances.\nSELECT ",
            "response": "e1.activity, e1.resource, e1.idcase from event_log AS e1 inner join event_log AS e2 on e1.idcase = e2.idcase WHERE e2.activity = 'End trip' and e1.timestamp > e2.timestamp",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "148_15"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### For each of the travel declarations, report which actions occurred after recording the end of the trip, and who was the employee who carried out these actions.\nSELECT ",
            "response": "e1.activity, e1.resource, e1.idcase from event_log AS e1 inner join event_log AS e2 on e1.idcase = e2.idcase WHERE e2.activity = 'End trip' and e1.timestamp > e2.timestamp",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "148_16"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Find the number of events performed by each resource that do not concern the 'end trip' activity.\nSELECT ",
            "response": "COUNT(*), resource FROM event_log WHERE activity != 'End trip' GROUP BY resource",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "149_0"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Find the number of events performed by each resource that are not associated with the 'end trip' activity.\nSELECT ",
            "response": "COUNT(*), resource FROM event_log WHERE activity != 'End trip' GROUP BY resource",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "149_1"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Find the number of events performed by each resource that are not related to the 'end trip' activity.\nSELECT ",
            "response": "COUNT(*), resource FROM event_log WHERE activity != 'End trip' GROUP BY resource",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "149_2"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Find the number of events that do not correspond to the 'end trip' activity performed by each resource.\nSELECT ",
            "response": "COUNT(*), resource FROM event_log WHERE activity != 'End trip' GROUP BY resource",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "149_3"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Find the number of events performed by each resource that do not correspond to the 'end trip' activity.\nSELECT ",
            "response": "COUNT(*), resource FROM event_log WHERE activity != 'End trip' GROUP BY resource",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "149_4"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Find the number of events performed by each resource that do not correspond to the performance of the 'end trip' activity.\nSELECT ",
            "response": "COUNT(*), resource FROM event_log WHERE activity != 'End trip' GROUP BY resource",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "149_5"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Find the number of events that do not correspond to the performance of the 'end trip' activity performed by each resource.\nSELECT ",
            "response": "COUNT(*), resource FROM event_log WHERE activity != 'End trip' GROUP BY resource",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "149_6"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Calculate the number of events performed by each resource that do not concern the 'end trip' activity.\nSELECT ",
            "response": "COUNT(*), resource FROM event_log WHERE activity != 'End trip' GROUP BY resource",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "149_7"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Calculate the number of events that do not concern the 'end trip' activity performed by each resource.\nSELECT ",
            "response": "COUNT(*), resource FROM event_log WHERE activity != 'End trip' GROUP BY resource",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "149_8"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Calculate the number of events performed by each resource that are not related to the 'end trip' activity.\nSELECT ",
            "response": "COUNT(*), resource FROM event_log WHERE activity != 'End trip' GROUP BY resource",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "149_9"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Calculate the number of events performed by each resource that do not correspond to the 'end trip' activity.\nSELECT ",
            "response": "COUNT(*), resource FROM event_log WHERE activity != 'End trip' GROUP BY resource",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "149_10"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Calculate the number of events that do not correspond to the 'end trip' activity performed by each resource.\nSELECT ",
            "response": "COUNT(*), resource FROM event_log WHERE activity != 'End trip' GROUP BY resource",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "149_11"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Calculate the number of events performed by each resource that do not correspond to the performance of the 'end trip' activity.\nSELECT ",
            "response": "COUNT(*), resource FROM event_log WHERE activity != 'End trip' GROUP BY resource",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "149_12"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Calculate the number of events that do not correspond to the performance of the 'end trip' activity performed by each resource.\nSELECT ",
            "response": "COUNT(*), resource FROM event_log WHERE activity != 'End trip' GROUP BY resource",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "149_13"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Find the events amount performed by each resource that do not concern the 'end trip' activity.\nSELECT ",
            "response": "COUNT(*), resource FROM event_log WHERE activity != 'End trip' GROUP BY resource",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "149_14"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Find the events amount that do not concern the 'end trip' activity performed by each resource.\nSELECT ",
            "response": "COUNT(*), resource FROM event_log WHERE activity != 'End trip' GROUP BY resource",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "149_15"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Find the events amount performed by each resource that are not related to the 'end trip' activity.\nSELECT ",
            "response": "COUNT(*), resource FROM event_log WHERE activity != 'End trip' GROUP BY resource",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "149_16"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Find the events amount performed by each resource that do not correspond to the 'end trip' activity .\nSELECT ",
            "response": "COUNT(*), resource FROM event_log WHERE activity != 'End trip' GROUP BY resource",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "149_17"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Find the events amount that do not correspond to the 'end trip' activity performed by each resource.\nSELECT ",
            "response": "COUNT(*), resource FROM event_log WHERE activity != 'End trip' GROUP BY resource",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "149_18"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Find the events amounts performed by each resource that do not correspond to the performance of the 'end trip' activity.\nSELECT ",
            "response": "COUNT(*), resource FROM event_log WHERE activity != 'End trip' GROUP BY resource",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "149_19"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Find the events amount that do not correspond to the performance of the 'end trip' activity performed by each resource.\nSELECT ",
            "response": "COUNT(*), resource FROM event_log WHERE activity != 'End trip' GROUP BY resource",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "149_20"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Calculate the events amount performed by each resource that do not concern the 'end trip' activity.\nSELECT ",
            "response": "COUNT(*), resource FROM event_log WHERE activity != 'End trip' GROUP BY resource",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "149_21"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Calculate the events amount that do not concern the 'end trip' activity performed by each resource.\nSELECT ",
            "response": "COUNT(*), resource FROM event_log WHERE activity != 'End trip' GROUP BY resource",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "149_22"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Calculate the events amount that are not related to the 'end trip' activity performed by each resource.\nSELECT ",
            "response": "COUNT(*), resource FROM event_log WHERE activity != 'End trip' GROUP BY resource",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "149_23"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Calculate the events amount that do not correspond to the 'end trip' activity performed by each resource.\nSELECT ",
            "response": "COUNT(*), resource FROM event_log WHERE activity != 'End trip' GROUP BY resource",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "149_24"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Calculate the events amount performed by each resource that do not correspond to the 'end trip' activity.\nSELECT ",
            "response": "COUNT(*), resource FROM event_log WHERE activity != 'End trip' GROUP BY resource",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "149_25"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Calculate the events amount that do not correspond to the performance of the 'end trip' activity performed by each resource.\nSELECT ",
            "response": "COUNT(*), resource FROM event_log WHERE activity != 'End trip' GROUP BY resource",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "149_26"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Calculate the events amount performed by each resource that do not correspond to the performance of the 'end trip' activity.\nSELECT ",
            "response": "COUNT(*), resource FROM event_log WHERE activity != 'End trip' GROUP BY resource",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "149_27"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Retrieve the number of times an employee worked on processing a travel declaration, except those in which they were responsible for recording the end of a trip.\nSELECT ",
            "response": "COUNT(*), resource FROM event_log WHERE activity != 'End trip' GROUP BY resource",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "149_28"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### How many actions did each employee perform, disregarding those that record the end of a trip?\nSELECT ",
            "response": "COUNT(*), resource FROM event_log WHERE activity != 'End trip' GROUP BY resource",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "149_29"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### List the case identifier from most recent to oldest in terms of the start date of the first case event.\nSELECT ",
            "response": "idcase FROM event_log GROUP BY idcase ORDER BY MIN(timestamp) DESC",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "150_0"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Present all case identifiers, ordered from most recent to oldest considering the start date of the first event in the case.\nSELECT ",
            "response": "idcase FROM event_log GROUP BY idcase ORDER BY MIN(timestamp) DESC",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "150_1"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Considering that the start of the case is the start date of their first event, list the case identifiers in descending chronological order.\nSELECT ",
            "response": "idcase FROM event_log GROUP BY idcase ORDER BY MIN(timestamp) DESC",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "150_2"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### List the case identifiers in descending chronological order considering the start date of the first event in the case.\nSELECT ",
            "response": "idcase FROM event_log GROUP BY idcase ORDER BY MIN(timestamp) DESC",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "150_3"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Present all travel declarations, in terms of their identifiers and ordered according to the dates of registration of the first action taken in each one.\nSELECT ",
            "response": "idcase FROM event_log GROUP BY idcase ORDER BY MIN(timestamp) DESC",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "150_4"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Build an ordered list of travel declarations, from oldest to newest. In this list, present the declaration identifier.\nSELECT ",
            "response": "idcase FROM event_log GROUP BY idcase ORDER BY MIN(timestamp) DESC",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "150_5"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### How many process instances went through the 'request payment' activity?\nSELECT ",
            "response": "COUNT(DISTINCT idcase) FROM event_log WHERE activity = 'Request payment'",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "151_0"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### The 'request payment' activity is present in how many process instances?\nSELECT ",
            "response": "COUNT(DISTINCT idcase) FROM event_log WHERE activity = 'Request payment'",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "151_1"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### The 'request payment' activity is present in how many cases?\nSELECT ",
            "response": "COUNT(DISTINCT idcase) FROM event_log WHERE activity = 'Request payment'",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "151_2"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Report the number of cases that include the performance of the 'request payment' activity.\nSELECT ",
            "response": "COUNT(DISTINCT idcase) FROM event_log WHERE activity = 'Request payment'",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "151_3"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Report the number of cases in which there is at least one occurrence of the 'request payment' activity.\nSELECT ",
            "response": "COUNT(DISTINCT idcase) FROM event_log WHERE activity = 'Request payment'",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "151_4"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### For how many declarations were payment requests registered?\nSELECT ",
            "response": "COUNT(DISTINCT idcase) FROM event_log WHERE activity = 'Request payment'",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "151_5"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### How many declarations required a payment request?\nSELECT ",
            "response": "COUNT(DISTINCT idcase) FROM event_log WHERE activity = 'Request payment'",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "151_6"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Which case was the last to perform a 'declaration final approved by director' activity?\nSELECT ",
            "response": "idcase FROM event_log WHERE activity = 'Declaration final approved by director' ORDER by timestamp DESC LIMIT 1",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "152_0"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### What was the last process instance to perform the 'declaration final approved by director' activity?\nSELECT ",
            "response": "idcase FROM event_log WHERE activity = 'Declaration final approved by director' ORDER by timestamp DESC LIMIT 1",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "152_1"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Report the identifier of the case that performed the 'declaration final approved by director' activity most recently.\nSELECT ",
            "response": "idcase FROM event_log WHERE activity = 'Declaration final approved by director' ORDER by timestamp DESC LIMIT 1",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "152_2"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Report the identifier of the case that was the last to perform the 'declaration final approved by director' activity.\nSELECT ",
            "response": "idcase FROM event_log WHERE activity = 'Declaration final approved by director' ORDER by timestamp DESC LIMIT 1",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "152_3"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### In which case is the last occurrence of the 'declaration final approved by director' activity?\nSELECT ",
            "response": "idcase FROM event_log WHERE activity = 'Declaration final approved by director' ORDER by timestamp DESC LIMIT 1",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "152_4"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### The last time a director gave final approval for a declaration was for which declaration?\nSELECT ",
            "response": "idcase FROM event_log WHERE activity = 'Declaration final approved by director' ORDER by timestamp DESC LIMIT 1",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "152_5"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### What was the last declaration to receive final approval from a director?\nSELECT ",
            "response": "idcase FROM event_log WHERE activity = 'Declaration final approved by director' ORDER by timestamp DESC LIMIT 1",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "152_6"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Which resource is most active in the 'declaration approved by administration' activity?\nSELECT ",
            "response": "resource FROM event_log WHERE activity = 'Declaration approved by administration' GROUP BY resource ORDER BY COUNT(*) DESC LIMIT 1",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "153_0"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Which resource was most active in the 'declaration approved by administration' activity?\nSELECT ",
            "response": "resource FROM event_log WHERE activity = 'Declaration approved by administration' GROUP BY resource ORDER BY COUNT(*) DESC LIMIT 1",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "153_1"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Which resource is associated with the greatest number of occurrences of the 'declaration approved by administration' activity?\nSELECT ",
            "response": "resource FROM event_log WHERE activity = 'Declaration approved by administration' GROUP BY resource ORDER BY COUNT(*) DESC LIMIT 1",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "153_2"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Which resource worked on the greatest number of events in which the 'declaration approved by administration' activity was performed?\nSELECT ",
            "response": "resource FROM event_log WHERE activity = 'Declaration approved by administration' GROUP BY resource ORDER BY COUNT(*) DESC LIMIT 1",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "153_3"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### What was the resource that worked the most with the 'declaration approved by administration' activity?\nSELECT ",
            "response": "resource FROM event_log WHERE activity = 'Declaration approved by administration' GROUP BY resource ORDER BY COUNT(*) DESC LIMIT 1",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "153_4"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Who is the most active administrator in approving declarations?\nSELECT ",
            "response": "resource FROM event_log WHERE activity = 'Declaration approved by administration' GROUP BY resource ORDER BY COUNT(*) DESC LIMIT 1",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "153_5"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Which administration employee approves declarations the most?\nSELECT ",
            "response": "resource FROM event_log WHERE activity = 'Declaration approved by administration' GROUP BY resource ORDER BY COUNT(*) DESC LIMIT 1",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "153_6"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### In how many cases did each resource act in the first activity performed?\nSELECT ",
            "response": "COUNT(*), resource FROM (SELECT resource, MIN(timestamp) from event_log GROUP BY idcase) GROUP BY resource",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "154_0"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Report in how many cases each resource was responsible for performing the first event.\nSELECT ",
            "response": "COUNT(*), resource FROM (SELECT resource, MIN(timestamp) from event_log GROUP BY idcase) GROUP BY resource",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "154_1"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Report the number of times each resource performed the first activity of a case.\nSELECT ",
            "response": "COUNT(*), resource FROM (SELECT resource, MIN(timestamp) from event_log GROUP BY idcase) GROUP BY resource",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "154_2"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### How many times did each resource act on the first event of a process instance?\nSELECT ",
            "response": "COUNT(*), resource FROM (SELECT resource, MIN(timestamp) from event_log GROUP BY idcase) GROUP BY resource",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "154_3"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### For each resource, indicate the number of times they were the first to act on a case.\nSELECT ",
            "response": "COUNT(*), resource FROM (SELECT resource, MIN(timestamp) from event_log GROUP BY idcase) GROUP BY resource",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "154_4"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Report in how many declarations each employee was involved in executing the first action.\nSELECT ",
            "response": "COUNT(*), resource FROM (SELECT resource, MIN(timestamp) from event_log GROUP BY idcase) GROUP BY resource",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "154_5"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### How many declaration processes were initiated by each of the employees?\nSELECT ",
            "response": "COUNT(*), resource FROM (SELECT resource, MIN(timestamp) from event_log GROUP BY idcase) GROUP BY resource",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "154_6"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### In how many cases did the activity containing the word 'approved' in its name occur?\nSELECT ",
            "response": "COUNT(DISTINCT idcase) FROM event_log WHERE activity LIKE '%approved%'",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "155_0"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### How many cases have gone through the activity that contains the word 'approved' in its name?\nSELECT ",
            "response": "COUNT(DISTINCT idcase) FROM event_log WHERE activity LIKE '%approved%'",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "155_1"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### The activity that contains the word 'approved' in its label appears in how many cases?\nSELECT ",
            "response": "COUNT(DISTINCT idcase) FROM event_log WHERE activity LIKE '%approved%'",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "155_2"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### The activity that contains the word 'approved' in its label occurred in how many cases?\nSELECT ",
            "response": "COUNT(DISTINCT idcase) FROM event_log WHERE activity LIKE '%approved%'",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "155_3"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### In how many cases are there instances of the activity with the word 'approved' in its name?\nSELECT ",
            "response": "COUNT(DISTINCT idcase) FROM event_log WHERE activity LIKE '%approved%'",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "155_4"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Report the number of cases in which the performance of an activity whose name involves the word 'approved' was recorded.\nSELECT ",
            "response": "COUNT(DISTINCT idcase) FROM event_log WHERE activity LIKE '%approved%'",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "155_5"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### How many declarations were approved at some decision level?\nSELECT ",
            "response": "COUNT(DISTINCT idcase) FROM event_log WHERE activity LIKE '%approved%'",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "155_6"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Approval actions appear in how many declarations?\nSELECT ",
            "response": "COUNT(DISTINCT idcase) FROM event_log WHERE activity LIKE '%approved%'",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "155_7"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### In how many cases were 'rejected' activities performed per day?\nSELECT ",
            "response": "strftime('%Y-%m-%d', timestamp), count(DISTINCT idcase) FROM event_log WHERE activity LIKE '%rejected%' GROUP BY strftime('%Y-%m-%d', timestamp)",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "156_0"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### How many cases go through 'rejected' activity per day?\nSELECT ",
            "response": "strftime('%Y-%m-%d', timestamp), count(DISTINCT idcase) FROM event_log WHERE activity LIKE '%rejected%' GROUP BY strftime('%Y-%m-%d', timestamp)",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "156_1"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### How many process instances went through 'rejected' activity per day?\nSELECT ",
            "response": "strftime('%Y-%m-%d', timestamp), count(DISTINCT idcase) FROM event_log WHERE activity LIKE '%rejected%' GROUP BY strftime('%Y-%m-%d', timestamp)",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "156_2"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Rejected' activity occurred in how many cases per day.\nSELECT ",
            "response": "strftime('%Y-%m-%d', timestamp), count(DISTINCT idcase) FROM event_log WHERE activity LIKE '%rejected%' GROUP BY strftime('%Y-%m-%d', timestamp)",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "156_3"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Each day, how many cases recorded the occurrence of 'rejected' activity?\nSELECT ",
            "response": "strftime('%Y-%m-%d', timestamp), count(DISTINCT idcase) FROM event_log WHERE activity LIKE '%rejected%' GROUP BY strftime('%Y-%m-%d', timestamp)",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "156_4"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Each day, in how many cases were instances of 'rejected' activity found?\nSELECT ",
            "response": "strftime('%Y-%m-%d', timestamp), count(DISTINCT idcase) FROM event_log WHERE activity LIKE '%rejected%' GROUP BY strftime('%Y-%m-%d', timestamp)",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "156_5"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### How many declarations are rejected, at some decision level, per day?\nSELECT ",
            "response": "strftime('%Y-%m-%d', timestamp), count(DISTINCT idcase) FROM event_log WHERE activity LIKE '%rejected%' GROUP BY strftime('%Y-%m-%d', timestamp)",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "156_6"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Rejection actions appear in how many declarations each day?\nSELECT ",
            "response": "strftime('%Y-%m-%d', timestamp), count(DISTINCT idcase) FROM event_log WHERE activity LIKE '%rejected%' GROUP BY strftime('%Y-%m-%d', timestamp)",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "156_7"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### What are the five cases with the most events and what are their durations?\nSELECT ",
            "response": "strftime('%s', MAX(timestamp)) - strftime('%s', MIN(timestamp)), idcase FROM event_log where idcase in (select idcase from event_log group by idcase having count(*) IN (select count(*) from event_log group by idcase order by count(*) desc limit 5)) group by idcase",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "157_0"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### What are the five cases with the most events and how long did each of them last?\nSELECT ",
            "response": "strftime('%s', MAX(timestamp)) - strftime('%s', MIN(timestamp)), idcase FROM event_log where idcase in (select idcase from event_log group by idcase having count(*) IN (select count(*) from event_log group by idcase order by count(*) desc limit 5)) group by idcase",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "157_1"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### List the identifiers of the five cases in which the most events were performed and report how long each lasted.\nSELECT ",
            "response": "strftime('%s', MAX(timestamp)) - strftime('%s', MIN(timestamp)), idcase FROM event_log where idcase in (select idcase from event_log group by idcase having count(*) IN (select count(*) from event_log group by idcase order by count(*) desc limit 5)) group by idcase",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "157_2"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### What were the five cases with the most events and what was the duration of each of them?\nSELECT ",
            "response": "strftime('%s', MAX(timestamp)) - strftime('%s', MIN(timestamp)), idcase FROM event_log where idcase in (select idcase from event_log group by idcase having count(*) IN (select count(*) from event_log group by idcase order by count(*) desc limit 5)) group by idcase",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "157_3"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### What were the five cases with the most performances of activities and what was the duration of each of them?\nSELECT ",
            "response": "strftime('%s', MAX(timestamp)) - strftime('%s', MIN(timestamp)), idcase FROM event_log where idcase in (select idcase from event_log group by idcase having count(*) IN (select count(*) from event_log group by idcase order by count(*) desc limit 5)) group by idcase",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "157_4"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Report which are the five longest cases in terms of events and what was the duration of each of these cases.\nSELECT ",
            "response": "strftime('%s', MAX(timestamp)) - strftime('%s', MIN(timestamp)), idcase FROM event_log where idcase in (select idcase from event_log group by idcase having count(*) IN (select count(*) from event_log group by idcase order by count(*) desc limit 5)) group by idcase",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "157_5"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### What are the five cases that have the most associated events and what is the duration of each of these cases?\nSELECT ",
            "response": "strftime('%s', MAX(timestamp)) - strftime('%s', MIN(timestamp)), idcase FROM event_log where idcase in (select idcase from event_log group by idcase having count(*) IN (select count(*) from event_log group by idcase order by count(*) desc limit 5)) group by idcase",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "157_6"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### What are the 5 declarations that went through the greatest number of actions and how long did each of them take to process?\nSELECT ",
            "response": "strftime('%s', MAX(timestamp)) - strftime('%s', MIN(timestamp)), idcase FROM event_log where idcase in (select idcase from event_log group by idcase having count(*) IN (select count(*) from event_log group by idcase order by count(*) desc limit 5)) group by idcase",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "157_7"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### What are the five most labor-intensive declarations (most requiring some action to be performed) and how long did each one take to be processed?\nSELECT ",
            "response": "strftime('%s', MAX(timestamp)) - strftime('%s', MIN(timestamp)), idcase FROM event_log where idcase in (select idcase from event_log group by idcase having count(*) IN (select count(*) from event_log group by idcase order by count(*) desc limit 5)) group by idcase",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "157_8"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### What are the five longest cases in terms of number of events, among those with at least 20 events, and what is the duration of each of these cases?\nSELECT ",
            "response": "strftime('%s', MAX(timestamp)) - strftime('%s', MIN(timestamp)), idcase FROM event_log where idcase in (select idcase from event_log group by idcase having count(*) IN (select count(*) from event_log group by idcase HAVING count(*) >= 20 order by count(*) desc limit 5)) group by idcase",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "158_0"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Find the five cases that have the highest number of events, considering that they have at least 20 events, and report the duration of these cases.\nSELECT ",
            "response": "strftime('%s', MAX(timestamp)) - strftime('%s', MIN(timestamp)), idcase FROM event_log where idcase in (select idcase from event_log group by idcase having count(*) IN (select count(*) from event_log group by idcase HAVING count(*) >= 20 order by count(*) desc limit 5)) group by idcase",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "158_1"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### What are the five process instances with the most activity performances, considering those in which at least 20 events occurred, and what are the durations of these instances?\nSELECT ",
            "response": "strftime('%s', MAX(timestamp)) - strftime('%s', MIN(timestamp)), idcase FROM event_log where idcase in (select idcase from event_log group by idcase having count(*) IN (select count(*) from event_log group by idcase HAVING count(*) >= 20 order by count(*) desc limit 5)) group by idcase",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "158_2"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Among the process instances with 20 or more events, list the five largest and report how long they lasted.\nSELECT ",
            "response": "strftime('%s', MAX(timestamp)) - strftime('%s', MIN(timestamp)), idcase FROM event_log where idcase in (select idcase from event_log group by idcase having count(*) IN (select count(*) from event_log group by idcase HAVING count(*) >= 20 order by count(*) desc limit 5)) group by idcase",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "158_3"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Considering cases with 20 events or more, list the five that have the most events and report how long each of them lasted.\nSELECT ",
            "response": "strftime('%s', MAX(timestamp)) - strftime('%s', MIN(timestamp)), idcase FROM event_log where idcase in (select idcase from event_log group by idcase having count(*) IN (select count(*) from event_log group by idcase HAVING count(*) >= 20 order by count(*) desc limit 5)) group by idcase",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "158_4"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Within the subset of cases that have at least 20 events, which are the five with the greatest number of events and how long did each of these cases take to perform?\nSELECT ",
            "response": "strftime('%s', MAX(timestamp)) - strftime('%s', MIN(timestamp)), idcase FROM event_log where idcase in (select idcase from event_log group by idcase having count(*) IN (select count(*) from event_log group by idcase HAVING count(*) >= 20 order by count(*) desc limit 5)) group by idcase",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "158_5"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### What are the five longest declaration processes in terms of events, which have at least 20 events, and what are their durations?\nSELECT ",
            "response": "strftime('%s', MAX(timestamp)) - strftime('%s', MIN(timestamp)), idcase FROM event_log where idcase in (select idcase from event_log group by idcase having count(*) IN (select count(*) from event_log group by idcase HAVING count(*) >= 20 order by count(*) desc limit 5)) group by idcase",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "158_6"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Among the declarations with 20 actions or more performed, report the 5 largest and how long their processing took.\nSELECT ",
            "response": "strftime('%s', MAX(timestamp)) - strftime('%s', MIN(timestamp)), idcase FROM event_log where idcase in (select idcase from event_log group by idcase having count(*) IN (select count(*) from event_log group by idcase HAVING count(*) >= 20 order by count(*) desc limit 5)) group by idcase",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "158_7"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### What are the ten most recent cases in which the 'request payment' activity was not performed?\nSELECT ",
            "response": "DISTINCT e.idcase FROM event_log AS e join (SELECT idcase, MIN(timestamp) as start_date FROM event_log GROUP BY idcase) AS e1 ON e1.idcase = e.idcase WHERE e.activity = 'Request payment' ORDER BY e1.start_date DESC LIMIT 10",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "159_0"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### What are the ten most recent travel declaration processes in which the 'request payment' activity was not performed?\nSELECT ",
            "response": "DISTINCT e.idcase FROM event_log AS e join (SELECT idcase, MIN(timestamp) as start_date FROM event_log GROUP BY idcase) AS e1 ON e1.idcase = e.idcase WHERE e.activity = 'Request payment' ORDER BY e1.start_date DESC LIMIT 10",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "159_1"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### What are the 10 most recent cases where the 'request payment' activity was not performed?\nSELECT ",
            "response": "DISTINCT e.idcase FROM event_log AS e join (SELECT idcase, MIN(timestamp) as start_date FROM event_log GROUP BY idcase) AS e1 ON e1.idcase = e.idcase WHERE e.activity = 'Request payment' ORDER BY e1.start_date DESC LIMIT 10",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "159_2"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### What are the ten newest cases in which the 'request payment' activity was not performed?\nSELECT ",
            "response": "DISTINCT e.idcase FROM event_log AS e join (SELECT idcase, MIN(timestamp) as start_date FROM event_log GROUP BY idcase) AS e1 ON e1.idcase = e.idcase WHERE e.activity = 'Request payment' ORDER BY e1.start_date DESC LIMIT 10",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "159_3"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### What are the last 10 cases where the 'request payment' activity was not performed?\nSELECT ",
            "response": "DISTINCT e.idcase FROM event_log AS e join (SELECT idcase, MIN(timestamp) as start_date FROM event_log GROUP BY idcase) AS e1 ON e1.idcase = e.idcase WHERE e.activity = 'Request payment' ORDER BY e1.start_date DESC LIMIT 10",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "159_4"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### What are the ten most recent cases that did not go through the 'request payment' activity?\nSELECT ",
            "response": "DISTINCT e.idcase FROM event_log AS e join (SELECT idcase, MIN(timestamp) as start_date FROM event_log GROUP BY idcase) AS e1 ON e1.idcase = e.idcase WHERE e.activity = 'Request payment' ORDER BY e1.start_date DESC LIMIT 10",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "159_5"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Report the 10 most recent cases that did not go through the 'request payment' activity.\nSELECT ",
            "response": "DISTINCT e.idcase FROM event_log AS e join (SELECT idcase, MIN(timestamp) as start_date FROM event_log GROUP BY idcase) AS e1 ON e1.idcase = e.idcase WHERE e.activity = 'Request payment' ORDER BY e1.start_date DESC LIMIT 10",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "159_6"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Retrieve the 10 newest cases in which the 'request payment' activity was not performed.\nSELECT ",
            "response": "DISTINCT e.idcase FROM event_log AS e join (SELECT idcase, MIN(timestamp) as start_date FROM event_log GROUP BY idcase) AS e1 ON e1.idcase = e.idcase WHERE e.activity = 'Request payment' ORDER BY e1.start_date DESC LIMIT 10",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "159_7"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### List the last ten cases for which there is no record of the performance of the 'request payment' activity.\nSELECT ",
            "response": "DISTINCT e.idcase FROM event_log AS e join (SELECT idcase, MIN(timestamp) as start_date FROM event_log GROUP BY idcase) AS e1 ON e1.idcase = e.idcase WHERE e.activity = 'Request payment' ORDER BY e1.start_date DESC LIMIT 10",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "159_8"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### List the 10 most recent cases for which there is no record of the performance of the 'request payment' activity.\nSELECT ",
            "response": "DISTINCT e.idcase FROM event_log AS e join (SELECT idcase, MIN(timestamp) as start_date FROM event_log GROUP BY idcase) AS e1 ON e1.idcase = e.idcase WHERE e.activity = 'Request payment' ORDER BY e1.start_date DESC LIMIT 10",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "159_9"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### List the 10 most recent cases in which there are no occurrences of the 'request payment' activity.\nSELECT ",
            "response": "DISTINCT e.idcase FROM event_log AS e join (SELECT idcase, MIN(timestamp) as start_date FROM event_log GROUP BY idcase) AS e1 ON e1.idcase = e.idcase WHERE e.activity = 'Request payment' ORDER BY e1.start_date DESC LIMIT 10",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "159_10"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### What are the 10 most recent processing declarations where no payment requests were registered?\nSELECT ",
            "response": "DISTINCT e.idcase FROM event_log AS e join (SELECT idcase, MIN(timestamp) as start_date FROM event_log GROUP BY idcase) AS e1 ON e1.idcase = e.idcase WHERE e.activity = 'Request payment' ORDER BY e1.start_date DESC LIMIT 10",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "159_11"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Which cases had 10 or fewer events performed?\nSELECT ",
            "response": "idcase FROM event_log group by idcase having count(*) <= 10",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "160_0"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Which cases had ten or fewer events performed?\nSELECT ",
            "response": "idcase FROM event_log group by idcase having count(*) <= 10",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "160_1"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### List all cases that had up to ten events performed.\nSELECT ",
            "response": "idcase FROM event_log group by idcase having count(*) <= 10",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "160_2"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Retrieve cases that had a maximum of 10 events performed.\nSELECT ",
            "response": "idcase FROM event_log group by idcase having count(*) <= 10",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "160_3"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Report cases made up of up to ten events.\nSELECT ",
            "response": "idcase FROM event_log group by idcase having count(*) <= 10",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "160_4"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Which process instances have up to 10 activity occurrences?\nSELECT ",
            "response": "idcase FROM event_log group by idcase having count(*) <= 10",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "160_5"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### In which process instances were there ten or fewer events?\nSELECT ",
            "response": "idcase FROM event_log group by idcase having count(*) <= 10",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "160_6"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### What are the cases for which there are up to ten events recorded in the event log?\nSELECT ",
            "response": "idcase FROM event_log group by idcase having count(*) <= 10",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "160_7"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### In which process instances is the performance of ten events or fewer observed?\nSELECT ",
            "response": "idcase FROM event_log group by idcase having count(*) <= 10",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "160_8"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### What are the cases in which the performance of up to ten events is observed?\nSELECT ",
            "response": "idcase FROM event_log group by idcase having count(*) <= 10",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "160_9"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### In which travel declaration processes were ten or fewer actions performed?\nSELECT ",
            "response": "idcase FROM event_log group by idcase having count(*) <= 10",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "160_10"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Which declarations had 10 events or fewer?\nSELECT ",
            "response": "idcase FROM event_log group by idcase having count(*) <= 10",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "160_11"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### What is the average cost of the 'payment handled' activity, for events held before 2018?\nSELECT ",
            "response": "AVG(cost) FROM event_log WHERE timestamp < '2018-01-01' AND activity = 'Payment handled'",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "161_0"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### What is the average cost of the 'payment handled' activity, for the events held before 2018?\nSELECT ",
            "response": "AVG(cost) FROM event_log WHERE timestamp < '2018-01-01' AND activity = 'Payment handled'",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "161_1"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### What is the mean cost of the 'payment handled' activity in the events held before 2018?\nSELECT ",
            "response": "AVG(cost) FROM event_log WHERE timestamp < '2018-01-01' AND activity = 'Payment handled'",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "161_2"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Calculate the mean cost for executing the 'payment handled' activity in the events held before 2018.\nSELECT ",
            "response": "AVG(cost) FROM event_log WHERE timestamp < '2018-01-01' AND activity = 'Payment handled'",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "161_3"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Report the average costs of occurrences of the 'payment handled' activity in the occurrences of activities performed before 2018.\nSELECT ",
            "response": "AVG(cost) FROM event_log WHERE timestamp < '2018-01-01' AND activity = 'Payment handled'",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "161_4"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Within the subset of events performed before 2018, what was the mean cost for performing the 'payment handled' activity?\nSELECT ",
            "response": "AVG(cost) FROM event_log WHERE timestamp < '2018-01-01' AND activity = 'Payment handled'",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "161_5"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Considering only the occurrences of events before 2018, calculate the mean cost of performing the 'payment handled' activity.\nSELECT ",
            "response": "AVG(cost) FROM event_log WHERE timestamp < '2018-01-01' AND activity = 'Payment handled'",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "161_6"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Calculate the mean cost of performing the 'payment handled' activity in the context of events performed before 2018.\nSELECT ",
            "response": "AVG(cost) FROM event_log WHERE timestamp < '2018-01-01' AND activity = 'Payment handled'",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "161_7"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### What is the mean cost of actions relating to payments made before 2018?\nSELECT ",
            "response": "AVG(cost) FROM event_log WHERE timestamp < '2018-01-01' AND activity = 'Payment handled'",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "161_8"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### How many times were 'permit' activities performed in each case?\nSELECT ",
            "response": "idcase, COUNT(*) FROM event_log WHERE activity LIKE 'Permit%' GROUP by idcase",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "162_0"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### How many 'permit' activities were performed for each case?\nSELECT ",
            "response": "idcase, COUNT(*) FROM event_log WHERE activity LIKE 'Permit%' GROUP by idcase",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "162_1"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### For each case, report the number of times a 'permit' activity was performed.\nSELECT ",
            "response": "idcase, COUNT(*) FROM event_log WHERE activity LIKE 'Permit%' GROUP by idcase",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "162_2"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### How many instances of 'permit' activities are there in each of the cases?\nSELECT ",
            "response": "idcase, COUNT(*) FROM event_log WHERE activity LIKE 'Permit%' GROUP by idcase",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "162_3"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### How many event records related to 'permit' activities can be found in the event log for each of the cases?\nSELECT ",
            "response": "idcase, COUNT(*) FROM event_log WHERE activity LIKE 'Permit%' GROUP by idcase",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "162_4"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### List, for each case, how many records about the performance of 'permit' activities exist.\nSELECT ",
            "response": "idcase, COUNT(*) FROM event_log WHERE activity LIKE 'Permit%' GROUP by idcase",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "162_5"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Report the number of occurrences of 'permit' activities for each of the cases recorded in the event log.\nSELECT ",
            "response": "idcase, COUNT(*) FROM event_log WHERE activity LIKE 'Permit%' GROUP by idcase",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "162_6"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### How many events associated with 'permit' activities are recorded for each case in the event log?\nSELECT ",
            "response": "idcase, COUNT(*) FROM event_log WHERE activity LIKE 'Permit%' GROUP by idcase",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "162_7"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### How many times have permits been registered for each of the declarations already processed?\nSELECT ",
            "response": "idcase, COUNT(*) FROM event_log WHERE activity LIKE 'Permit%' GROUP by idcase",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "162_8"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### How many times was each declaration given a 'permit' during its processing?\nSELECT ",
            "response": "idcase, COUNT(*) FROM event_log WHERE activity LIKE 'Permit%' GROUP by idcase",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "162_9"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### How many cases went through the 'declaration rejected by supervisor' activity and which resources were responsible?\nSELECT ",
            "response": "COUNT(DISTINCT idcase), resource FROM event_log WHERE activity = 'Declaration rejected by supervisor' GROUP BY resource",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "163_0"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### How many cases went through the 'declaration rejected by supervisor' activity and what are the resources associated with carrying out these activities?\nSELECT ",
            "response": "COUNT(DISTINCT idcase), resource FROM event_log WHERE activity = 'Declaration rejected by supervisor' GROUP BY resource",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "163_1"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### How many cases went through the 'declaration rejected by supervisor' activity, grouped by resource associated with its performance?\nSELECT ",
            "response": "COUNT(DISTINCT idcase), resource FROM event_log WHERE activity = 'Declaration rejected by supervisor' GROUP BY resource",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "163_2"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### How many of the cases in the event log went through the 'declaration rejected by supervisor' activity? Retrieve the quantity per resource associated with their performance.\nSELECT ",
            "response": "COUNT(DISTINCT idcase), resource FROM event_log WHERE activity = 'Declaration rejected by supervisor' GROUP BY resource",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "163_3"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Retrieve the number of cases that went through the 'declaration rejected by supervisor' activity, considering each resource associated with its performance.\nSELECT ",
            "response": "COUNT(DISTINCT idcase), resource FROM event_log WHERE activity = 'Declaration rejected by supervisor' GROUP BY resource",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "163_4"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Report how many cases went through the 'declaration rejected by supervisor' activity, grouped by the resource(s) associated with its performance.\nSELECT ",
            "response": "COUNT(DISTINCT idcase), resource FROM event_log WHERE activity = 'Declaration rejected by supervisor' GROUP BY resource",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "163_5"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Rejections made by a supervisor appear in how many declarations, considering each of the supervisors registered in the system?\nSELECT ",
            "response": "COUNT(DISTINCT idcase), resource FROM event_log WHERE activity = 'Declaration rejected by supervisor' GROUP BY resource",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "163_6"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### How many declarations were rejected by a supervisor and which supervisors were involved?\nSELECT ",
            "response": "COUNT(DISTINCT idcase), resource FROM event_log WHERE activity = 'Declaration rejected by supervisor' GROUP BY resource",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "163_7"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### How many cases are related to each of the possible activities?\nSELECT ",
            "response": "COUNT(DISTINCT idcase), activity FROM event_log GROUP BY activity",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "164_0"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### For each existing activity, how many cases were recorded?\nSELECT ",
            "response": "COUNT(DISTINCT idcase), activity FROM event_log GROUP BY activity",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "164_1"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### For each activity, report how many cases were carried out.\nSELECT ",
            "response": "COUNT(DISTINCT idcase), activity FROM event_log GROUP BY activity",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "164_2"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Report in how many cases each of the activities were performed.\nSELECT ",
            "response": "COUNT(DISTINCT idcase), activity FROM event_log GROUP BY activity",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "164_3"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### What is the number of cases in which each of the possible activities had its performance recorded?\nSELECT ",
            "response": "COUNT(DISTINCT idcase), activity FROM event_log GROUP BY activity",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "164_4"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Consider each of the possible activities and report the number of cases in which its performance was recorded.\nSELECT ",
            "response": "COUNT(DISTINCT idcase), activity FROM event_log GROUP BY activity",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "164_5"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Various actions, activities or tasks are possible when processing a declaration. It is useful to know the number of declarations associated with the performance of each of these actions, activities or tasks.\nSELECT ",
            "response": "COUNT(DISTINCT idcase), activity FROM event_log GROUP BY activity",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "164_6"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### How many declarations are associated with the performance of each of the possible actions in travel declaration processing?\nSELECT ",
            "response": "COUNT(DISTINCT idcase), activity FROM event_log GROUP BY activity",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "164_7"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Which events associated with tasks that start with 'R' occurred after all events associated with tasks that start with 'D'?\nSELECT ",
            "response": "e.* from event_log e INNER JOIN (select idcase, MAX(timestamp) as timestamp from event_log where activity like 'D%' group by idcase) e1 on e.idcase = e1.idcase and e.timestamp > e1.timestamp and e.activity like 'R%'",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "165_0"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### What are the events that record activities started by 'R' that occur after all the events that record activities started by 'D'?\nSELECT ",
            "response": "e.* from event_log e INNER JOIN (select idcase, MAX(timestamp) as timestamp from event_log where activity like 'D%' group by idcase) e1 on e.idcase = e1.idcase and e.timestamp > e1.timestamp and e.activity like 'R%'",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "165_1"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Which events record the performance of activities started by 'R' that occur after all events recording the performance of activities started by 'D'?\nSELECT ",
            "response": "e.* from event_log e INNER JOIN (select idcase, MAX(timestamp) as timestamp from event_log where activity like 'D%' group by idcase) e1 on e.idcase = e1.idcase and e.timestamp > e1.timestamp and e.activity like 'R%'",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "165_2"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Retrieve events associated with tasks starting with 'R' that had their performance registered after all events associated with tasks starting with 'D'.\nSELECT ",
            "response": "e.* from event_log e INNER JOIN (select idcase, MAX(timestamp) as timestamp from event_log where activity like 'D%' group by idcase) e1 on e.idcase = e1.idcase and e.timestamp > e1.timestamp and e.activity like 'R%'",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "165_3"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Identify which events record the performance of tasks whose name starts with the character 'R' and that occurred after all records of the performance of tasks with names starting with 'D'.\nSELECT ",
            "response": "e.* from event_log e INNER JOIN (select idcase, MAX(timestamp) as timestamp from event_log where activity like 'D%' group by idcase) e1 on e.idcase = e1.idcase and e.timestamp > e1.timestamp and e.activity like 'R%'",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "165_4"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Filtering events that occurred after all activity performance records starting with 'D', retrieve events that record activities starting with 'R'.\nSELECT ",
            "response": "e.* from event_log e INNER JOIN (select idcase, MAX(timestamp) as timestamp from event_log where activity like 'D%' group by idcase) e1 on e.idcase = e1.idcase and e.timestamp > e1.timestamp and e.activity like 'R%'",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "165_5"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Which actions starting with the letter 'R' occurred after actions starting with the letter 'D' during the processing of a declaration?\nSELECT ",
            "response": "e.* from event_log e INNER JOIN (select idcase, MAX(timestamp) as timestamp from event_log where activity like 'D%' group by idcase) e1 on e.idcase = e1.idcase and e.timestamp > e1.timestamp and e.activity like 'R%'",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "165_6"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### What are the registrations that are associated with a declaration processing action whose name begins with the letter 'R' and which were carried out after the registration of actions with the initial letter 'D'?\nSELECT ",
            "response": "e.* from event_log e INNER JOIN (select idcase, MAX(timestamp) as timestamp from event_log where activity like 'D%' group by idcase) e1 on e.idcase = e1.idcase and e.timestamp > e1.timestamp and e.activity like 'R%'",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "165_7"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### How many times was each activity performed by each resource?\nSELECT ",
            "response": "count(*), activity, resource from event_log group by resource, activity",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "166_0"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### What was the number of times each activity was performed by each resource?\nSELECT ",
            "response": "count(*), activity, resource from event_log group by resource, activity",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "166_1"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Count how many times each activity was performed by each resource.\nSELECT ",
            "response": "count(*), activity, resource from event_log group by resource, activity",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "166_2"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Report the number of times each resource was responsible for performing each activity\nSELECT ",
            "response": "count(*), activity, resource from event_log group by resource, activity",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "166_3"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### How many times was a given resource associated with the performance of each activity?\nSELECT ",
            "response": "count(*), activity, resource from event_log group by resource, activity",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "166_4"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### How many times was each declaration processing action performed by each employee?\nSELECT ",
            "response": "count(*), activity, resource from event_log group by resource, activity",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "166_5"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### How many times was each activity performed by each university employee?\nSELECT ",
            "response": "count(*), activity, resource from event_log group by resource, activity",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "166_6"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### What are the names of the activities carried out in the first semester of 2018?\nSELECT ",
            "response": "DISTINCT activity from event_log where timestamp between '2018-01-01' and '2018-07-01'",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "167_0"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### List the activities carried out in the first semester of 2018.\nSELECT ",
            "response": "DISTINCT activity from event_log where timestamp between '2018-01-01' and '2018-07-01'",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "167_1"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Consider only the first semester of 2018 to list which activities were carried out.\nSELECT ",
            "response": "DISTINCT activity from event_log where timestamp between '2018-01-01' and '2018-07-01'",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "167_2"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### What activities were carried out from January 1, 2018 to July 31, 2018?\nSELECT ",
            "response": "DISTINCT activity from event_log where timestamp between '2018-01-01' and '2018-07-01'",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "167_3"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### What activities are associated with the events that occurred in the first semester of 2018?\nSELECT ",
            "response": "DISTINCT activity from event_log where timestamp between '2018-01-01' and '2018-07-01'",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "167_4"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### What activities were carried out in the first semester of 2018?\nSELECT ",
            "response": "DISTINCT activity from event_log where timestamp between '2018-01-01' and '2018-07-01'",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "167_5"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### What was done in the processing carried out in the first semester of 2018?\nSELECT ",
            "response": "DISTINCT activity from event_log where timestamp between '2018-01-01' and '2018-07-01'",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "167_6"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### List the cases in which the 'Wayne' resource was allocated, ordering the response by case identifier.\nSELECT ",
            "response": "DISTINCT idcase FROM event_log WHERE resource = 'Wayne' ORDER BY idcase",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "168_0"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Which cases were associated with the 'Wayne' resource? Sort by case identifier.\nSELECT ",
            "response": "DISTINCT idcase FROM event_log WHERE resource = 'Wayne' ORDER BY idcase",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "168_1"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### In which cases does the 'Wayne' resource appear associated with the performance of an event? Sort the response by case identifier.\nSELECT ",
            "response": "DISTINCT idcase FROM event_log WHERE resource = 'Wayne' ORDER BY idcase",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "168_2"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Report which cases have events associated with the 'Wayne' resource. Use the case identifier to order your answer.\nSELECT ",
            "response": "DISTINCT idcase FROM event_log WHERE resource = 'Wayne' ORDER BY idcase",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "168_3"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Which process instances involved the work of the 'Wayne' resource? Provide the answer in an ordered manner.\nSELECT ",
            "response": "DISTINCT idcase FROM event_log WHERE resource = 'Wayne' ORDER BY idcase",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "168_4"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Which process instances include events that were the responsibility of the 'Wayne' resource? List the instances in an ordered manner.\nSELECT ",
            "response": "DISTINCT idcase FROM event_log WHERE resource = 'Wayne' ORDER BY idcase",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "168_5"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Retrieve, in an ordered manner, the identifiers of the cases in which the 'Wayne' resource acted.\nSELECT ",
            "response": "DISTINCT idcase FROM event_log WHERE resource = 'Wayne' ORDER BY idcase",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "168_6"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Retrieve, in an ordered manner, all process instances in which the 'Wayne' resource acted.\nSELECT ",
            "response": "DISTINCT idcase FROM event_log WHERE resource = 'Wayne' ORDER BY idcase",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "168_7"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### What declarations does the employee Wayne work on? Present the ordered list.\nSELECT ",
            "response": "DISTINCT idcase FROM event_log WHERE resource = 'Wayne' ORDER BY idcase",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "168_8"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### What declarations does Wayne work on? Present an ordered list.\nSELECT ",
            "response": "DISTINCT idcase FROM event_log WHERE resource = 'Wayne' ORDER BY idcase",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "168_9"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### For each activity, return how many cases it was performed in, considering only those cases that ended on March 12, 2018.\nSELECT ",
            "response": "activity, count(DISTINCT idcase) FROM event_log where idcase in (SELECT idcase FROM event_log GROUP BY idcase HAVING strftime('%Y-%m-%d', MAX(timestamp)) = '2018-03-12') group by activity",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "169_0"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### For each activity, return how many process instances each of them was performed in, considering only those process instances that ended on March 12, 2018.\nSELECT ",
            "response": "activity, count(DISTINCT idcase) FROM event_log where idcase in (SELECT idcase FROM event_log GROUP BY idcase HAVING strftime('%Y-%m-%d', MAX(timestamp)) = '2018-03-12') group by activity",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "169_1"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Considering the subset of cases completed on March 12, 2018, provide a list that associates each activity and in how many cases they appear.\nSELECT ",
            "response": "activity, count(DISTINCT idcase) FROM event_log where idcase in (SELECT idcase FROM event_log GROUP BY idcase HAVING strftime('%Y-%m-%d', MAX(timestamp)) = '2018-03-12') group by activity",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "169_2"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Provide a list including activity and number of cases in which it appears, considering the subset of cases completed on March 12, 2018.\nSELECT ",
            "response": "activity, count(DISTINCT idcase) FROM event_log where idcase in (SELECT idcase FROM event_log GROUP BY idcase HAVING strftime('%Y-%m-%d', MAX(timestamp)) = '2018-03-12') group by activity",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "169_3"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Relate the activities to the number of cases in which they appear, considering only the cases whose last event ended on March 12, 2018.\nSELECT ",
            "response": "activity, count(DISTINCT idcase) FROM event_log where idcase in (SELECT idcase FROM event_log GROUP BY idcase HAVING strftime('%Y-%m-%d', MAX(timestamp)) = '2018-03-12') group by activity",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "169_4"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Extract from the subset of cases completed on March 12, 2018, information about activities that occurred and the number of cases in which they occurred.\nSELECT ",
            "response": "activity, count(DISTINCT idcase) FROM event_log where idcase in (SELECT idcase FROM event_log GROUP BY idcase HAVING strftime('%Y-%m-%d', MAX(timestamp)) = '2018-03-12') group by activity",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "169_5"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Each of the possible processing actions was performed on how many declarations processed and ended on March 12, 2018?\nSELECT ",
            "response": "activity, count(DISTINCT idcase) FROM event_log where idcase in (SELECT idcase FROM event_log GROUP BY idcase HAVING strftime('%Y-%m-%d', MAX(timestamp)) = '2018-03-12') group by activity",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "169_6"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### I need to know in how many declarations performed and ended on March 12, 2018 each of the different processing actions were performed.\nSELECT ",
            "response": "activity, count(DISTINCT idcase) FROM event_log where idcase in (SELECT idcase FROM event_log GROUP BY idcase HAVING strftime('%Y-%m-%d', MAX(timestamp)) = '2018-03-12') group by activity",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "169_7"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### How many cases started with an activity whose label starts with the word 'permit'?\nSELECT ",
            "response": "COUNT(idcase) FROM (SELECT idcase, activity, MIN(timestamp) FROM event_log GROUP BY idcase) AS e1 WHERE e1.activity LIKE 'Permit%'",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "170_0"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### There is a subset of activities whose label starts with 'permit'. Report how many cases started with one of these activities.\nSELECT ",
            "response": "COUNT(idcase) FROM (SELECT idcase, activity, MIN(timestamp) FROM event_log GROUP BY idcase) AS e1 WHERE e1.activity LIKE 'Permit%'",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "170_1"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Given a list of activities whose name starts with 'permit', retrieve how many cases started with one of these activities.\nSELECT ",
            "response": "COUNT(idcase) FROM (SELECT idcase, activity, MIN(timestamp) FROM event_log GROUP BY idcase) AS e1 WHERE e1.activity LIKE 'Permit%'",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "170_2"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### What is the number of cases whose first event is associated with an activity with a name starting with 'permit'?\nSELECT ",
            "response": "COUNT(idcase) FROM (SELECT idcase, activity, MIN(timestamp) FROM event_log GROUP BY idcase) AS e1 WHERE e1.activity LIKE 'Permit%'",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "170_3"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Report the number of cases in which the first event is associated with an activity whose label begins with the word 'permit'.\nSELECT ",
            "response": "COUNT(idcase) FROM (SELECT idcase, activity, MIN(timestamp) FROM event_log GROUP BY idcase) AS e1 WHERE e1.activity LIKE 'Permit%'",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "170_4"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### How many process instances have as their first activity those whose names begin with the word 'permit'?\nSELECT ",
            "response": "COUNT(idcase) FROM (SELECT idcase, activity, MIN(timestamp) FROM event_log GROUP BY idcase) AS e1 WHERE e1.activity LIKE 'Permit%'",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "170_5"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### What is the number of process instances that started with an activity whose name starts with the word 'permit'?\nSELECT ",
            "response": "COUNT(idcase) FROM (SELECT idcase, activity, MIN(timestamp) FROM event_log GROUP BY idcase) AS e1 WHERE e1.activity LIKE 'Permit%'",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "170_6"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Retrieve the number of times processing of a travel declaration started with an activity associated with a permit.\nSELECT ",
            "response": "COUNT(idcase) FROM (SELECT idcase, activity, MIN(timestamp) FROM event_log GROUP BY idcase) AS e1 WHERE e1.activity LIKE 'Permit%'",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "170_7"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### How many travel declarations have a permit action associated with the start of their processing?\nSELECT ",
            "response": "COUNT(idcase) FROM (SELECT idcase, activity, MIN(timestamp) FROM event_log GROUP BY idcase) AS e1 WHERE e1.activity LIKE 'Permit%'",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "170_8"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Which cases have not yet gone through the 'request payment' or 'payment handled' activities?\nSELECT ",
            "response": "DISTINCT idcase FROM event_log WHERE idcase NOT IN (SELECT idcase FROM event_log WHERE activity = 'Request payment' OR activity = 'Payment handled')",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "171_0"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Which process instances have not yet gone through the 'request payment' or 'payment handled' activities?\nSELECT ",
            "response": "DISTINCT idcase FROM event_log WHERE idcase NOT IN (SELECT idcase FROM event_log WHERE activity = 'Request payment' OR activity = 'Payment handled')",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "171_1"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Recover cases that have not yet gone through the 'request payment' or 'payment handled' activities.\nSELECT ",
            "response": "DISTINCT idcase FROM event_log WHERE idcase NOT IN (SELECT idcase FROM event_log WHERE activity = 'Request payment' OR activity = 'Payment handled')",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "171_2"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Retrieve process instances that have not yet gone through the 'request payment' or 'payment handled' activities\nSELECT ",
            "response": "DISTINCT idcase FROM event_log WHERE idcase NOT IN (SELECT idcase FROM event_log WHERE activity = 'Request payment' OR activity = 'Payment handled')",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "171_3"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### What are the cases for which there is still no record of the occurrence of 'request payment' or 'payment handled' activities?\nSELECT ",
            "response": "DISTINCT idcase FROM event_log WHERE idcase NOT IN (SELECT idcase FROM event_log WHERE activity = 'Request payment' OR activity = 'Payment handled')",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "171_4"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### What are the process instances for which there is still no record of the occurrence of 'request payment' or 'payment handled' activities?\nSELECT ",
            "response": "DISTINCT idcase FROM event_log WHERE idcase NOT IN (SELECT idcase FROM event_log WHERE activity = 'Request payment' OR activity = 'Payment handled')",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "171_5"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Report which cases there is no record of events associated with the 'request payment' or 'payment handled' activities.\nSELECT ",
            "response": "DISTINCT idcase FROM event_log WHERE idcase NOT IN (SELECT idcase FROM event_log WHERE activity = 'Request payment' OR activity = 'Payment handled')",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "171_6"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Report for which process instances there is no record of events associated with the 'request payment' or 'payment handled' activities.\nSELECT ",
            "response": "DISTINCT idcase FROM event_log WHERE idcase NOT IN (SELECT idcase FROM event_log WHERE activity = 'Request payment' OR activity = 'Payment handled')",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "171_7"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### In which cases are 'request payment' or 'payment handled' activities still not observed?\nSELECT ",
            "response": "DISTINCT idcase FROM event_log WHERE idcase NOT IN (SELECT idcase FROM event_log WHERE activity = 'Request payment' OR activity = 'Payment handled')",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "171_8"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### In which process instances have 'request payment' or 'payment handled' activities not yet been observed?\nSELECT ",
            "response": "DISTINCT idcase FROM event_log WHERE idcase NOT IN (SELECT idcase FROM event_log WHERE activity = 'Request payment' OR activity = 'Payment handled')",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "171_9"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### In how many declarations is there still no record of payment made or payment request?\nSELECT ",
            "response": "DISTINCT idcase FROM event_log WHERE idcase NOT IN (SELECT idcase FROM event_log WHERE activity = 'Request payment' OR activity = 'Payment handled')",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "171_10"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### What declarations are still pending in relation to payment request and payment made records?\nSELECT ",
            "response": "DISTINCT idcase FROM event_log WHERE idcase NOT IN (SELECT idcase FROM event_log WHERE activity = 'Request payment' OR activity = 'Payment handled')",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "171_11"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### What data is recorded about the occurrences of 'start trip' and 'declaration submitted by employee' activities? Provide the answer sorted by date and by resource.\nSELECT ",
            "response": "* FROM event_log WHERE activity = 'Start trip' OR activity = 'Declaration submitted by employee' ORDER BY timestamp, resource",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "172_0"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Retrieve all information about events relating to 'start trip' or 'declaration submitted by employee' activities, sorting the response in ascending order of date and name of the resource.\nSELECT ",
            "response": "* FROM event_log WHERE activity = 'Start trip' OR activity = 'Declaration submitted by employee' ORDER BY timestamp, resource",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "172_1"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### I need information about the events associated with 'start trip' and 'declaration submitted by employee' activities, in ascending order of date and resource.\nSELECT ",
            "response": "* FROM event_log WHERE activity = 'Start trip' OR activity = 'Declaration submitted by employee' ORDER BY timestamp, resource",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "172_2"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Retrieve information about events associated with the 'start trip' and 'declaration submitted by employee' activities, sorting them first by date and then by resource.\nSELECT ",
            "response": "* FROM event_log WHERE activity = 'Start trip' OR activity = 'Declaration submitted by employee' ORDER BY timestamp, resource",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "172_3"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Retrieve information about events related to 'start trip' and 'declaration submitted by employee' activities, from oldest to newest, and then ordered by resource.\nSELECT ",
            "response": "* FROM event_log WHERE activity = 'Start trip' OR activity = 'Declaration submitted by employee' ORDER BY timestamp, resource",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "172_4"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Retrieve, in ascending order of date and resource, information about events related to 'start trip' and 'declaration submitted by employee' activities.\nSELECT ",
            "response": "* FROM event_log WHERE activity = 'Start trip' OR activity = 'Declaration submitted by employee' ORDER BY timestamp, resource",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "172_5"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### For all events associated with 'start trip' and 'declaration submitted by employee' activities, retrieve the information by listing it in order of date and resource.\nSELECT ",
            "response": "* FROM event_log WHERE activity = 'Start trip' OR activity = 'Declaration submitted by employee' ORDER BY timestamp, resource",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "172_6"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Retrieve information relating to occurrence records for 'start trip' and 'declaration submitted by employee' activities, organizing the response in order of date and resource.\nSELECT ",
            "response": "* FROM event_log WHERE activity = 'Start trip' OR activity = 'Declaration submitted by employee' ORDER BY timestamp, resource",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "172_7"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### What data is recorded in the events associated with 'start trip' and 'declaration submitted by employee' activities? Provide the answer sorted by date and by resource.\nSELECT ",
            "response": "* FROM event_log WHERE activity = 'Start trip' OR activity = 'Declaration submitted by employee' ORDER BY timestamp, resource",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "172_8"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### What information is available on actions to initiate travel and request a declaration by an employee? Sort this report by date and employee name.\nSELECT ",
            "response": "* FROM event_log WHERE activity = 'Start trip' OR activity = 'Declaration submitted by employee' ORDER BY timestamp, resource",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "172_9"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### The processing of declarations begins with a record about the start of the trip or at a request from an employee. Considering this, provide information on the events associated with the start of processing a declaration, in ascending order according to date and the name of the employee associated with the performance of the event.\nSELECT ",
            "response": "* FROM event_log WHERE activity = 'Start trip' OR activity = 'Declaration submitted by employee' ORDER BY timestamp, resource",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "172_10"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### How many times was each resource associated with an occurrence of the 'declaration saved by employee' activity? Sort the response according to the resource attribute.\nSELECT ",
            "response": "count(*), resource From event_log where activity = 'Declaration saved by employee' group by resource order by resource",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "173_0"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### How many records of 'declaration saved by employee' activities are there associated with each resource? Provide the answer sorted by resource.\nSELECT ",
            "response": "count(*), resource From event_log where activity = 'Declaration saved by employee' group by resource order by resource",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "173_1"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### For each resource, how many records of the 'declaration saved by employee' activity are there? Sort the answer by resource name.\nSELECT ",
            "response": "count(*), resource From event_log where activity = 'Declaration saved by employee' group by resource order by resource",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "173_2"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Retrieve the number of times each resource was associated with the 'declaration saved by employee' activity. Order your answer according to the resource names.\nSELECT ",
            "response": "count(*), resource From event_log where activity = 'Declaration saved by employee' group by resource order by resource",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "173_3"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### How many occurrences of the 'declaration saved by employee' activity were associated with each of the resources present in the log? Sort the response according to the resource name.\nSELECT ",
            "response": "count(*), resource From event_log where activity = 'Declaration saved by employee' group by resource order by resource",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "173_4"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Considering each resource in the log records, provide information on how many times each of them was associated with the performance of the 'declaration saved by employee' activity, providing the answer ordered by resource.\nSELECT ",
            "response": "count(*), resource From event_log where activity = 'Declaration saved by employee' group by resource order by resource",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "173_5"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Provide information on how many times each resource was responsible for executing the 'declaration saved by employee' activity. Display the information sorted by resource name.\nSELECT ",
            "response": "count(*), resource From event_log where activity = 'Declaration saved by employee' group by resource order by resource",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "173_6"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### What is the number of associations between each resource and the performance of the 'declaration saved by employee' activity? Sort the answer by resource.\nSELECT ",
            "response": "count(*), resource From event_log where activity = 'Declaration saved by employee' group by resource order by resource",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "173_7"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### How many times has the performance of the 'declaration saved by employee' activity been associated with each resource? Sort your answer by resource name.\nSELECT ",
            "response": "count(*), resource From event_log where activity = 'Declaration saved by employee' group by resource order by resource",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "173_8"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### I need to know how many times each employee recorded a action of saving a travel declaration. Provide the answer sorted by employee name.\nSELECT ",
            "response": "count(*), resource From event_log where activity = 'Declaration saved by employee' group by resource order by resource",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "173_9"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### How many times was each employee responsible for saving a declaration? Sort the answer by employee name.\nSELECT ",
            "response": "count(*), resource From event_log where activity = 'Declaration saved by employee' group by resource order by resource",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "173_10"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### In how many cases was each activity performed?\nSELECT ",
            "response": "count(DISTINCT idcase), activity FROM event_log GROUP BY activity",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "174_0"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### For each activity, report in how many cases there are records of its performance.\nSELECT ",
            "response": "count(DISTINCT idcase), activity FROM event_log GROUP BY activity",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "174_1"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Considering each of the activities present in the event log, report the number of cases in which they occurred.\nSELECT ",
            "response": "count(DISTINCT idcase), activity FROM event_log GROUP BY activity",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "174_2"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### In how many process instances was each activity performed?\nSELECT ",
            "response": "count(DISTINCT idcase), activity FROM event_log GROUP BY activity",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "174_3"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### For each activity, calculate in how many process instances they were performed in.\nSELECT ",
            "response": "count(DISTINCT idcase), activity FROM event_log GROUP BY activity",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "174_4"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### What is the number of cases in which each activity was performed?\nSELECT ",
            "response": "count(DISTINCT idcase), activity FROM event_log GROUP BY activity",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "174_5"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Calculate the number of cases in which each activity was performed.\nSELECT ",
            "response": "count(DISTINCT idcase), activity FROM event_log GROUP BY activity",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "174_6"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Considering each of the possible actions in processing a travel declaration, report the number of declarations in which each action appears.\nSELECT ",
            "response": "count(DISTINCT idcase), activity FROM event_log GROUP BY activity",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "174_7"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Report the number of declarations in which each of the possible actions in processing travel declarations were carried out.\nSELECT ",
            "response": "count(DISTINCT idcase), activity FROM event_log GROUP BY activity",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "174_8"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### How many different activities did each resource perform?\nSELECT ",
            "response": "count(DISTINCT activity), resource FROM event_log GROUP by resource",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "175_0"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Retrieve information about how many different activities each resource performed.\nSELECT ",
            "response": "count(DISTINCT activity), resource FROM event_log GROUP by resource",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "175_1"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### In how many different activities did each resource act?\nSELECT ",
            "response": "count(DISTINCT activity), resource FROM event_log GROUP by resource",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "175_2"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### In how many different activities was each resource associated?\nSELECT ",
            "response": "count(DISTINCT activity), resource FROM event_log GROUP by resource",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "175_3"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### For each resource, check how many different activities it was involved in.\nSELECT ",
            "response": "count(DISTINCT activity), resource FROM event_log GROUP by resource",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "175_4"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### What is the number of different activities that each resource was associated with?\nSELECT ",
            "response": "count(DISTINCT activity), resource FROM event_log GROUP by resource",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "175_5"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### What is the number of different activities that each resource worked on?\nSELECT ",
            "response": "count(DISTINCT activity), resource FROM event_log GROUP by resource",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "175_6"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### How many different actions related to the processing of travel declarations was each employee responsible for recording in the system?\nSELECT ",
            "response": "count(DISTINCT activity), resource FROM event_log GROUP by resource",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "175_7"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### How many different actions has each employee performed while processing travel declarations?\nSELECT ",
            "response": "count(DISTINCT activity), resource FROM event_log GROUP by resource",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "175_8"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### In how many occurrences of completion activities ('end trip', 'payment handled') was each resource allocated?\nSELECT ",
            "response": "resource, COUNT (*) FROM event_log WHERE activity = 'End trip' OR activity = 'Payment handled' GROUP BY resource",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "176_0"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### How many final activities ('end trip', 'payment handled') was each person responsible for?\nSELECT ",
            "response": "resource, COUNT (*) FROM event_log WHERE activity = 'End trip' OR activity = 'Payment handled' GROUP BY resource",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "176_1"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### How many occurrences of completion activities ('end trip', 'payment handled') was each resource responsible for?\nSELECT ",
            "response": "resource, COUNT (*) FROM event_log WHERE activity = 'End trip' OR activity = 'Payment handled' GROUP BY resource",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "176_2"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### For each resource, check how many occurrences of completion activities ('end trip', 'payment handled') it acted on.\nSELECT ",
            "response": "resource, COUNT (*) FROM event_log WHERE activity = 'End trip' OR activity = 'Payment handled' GROUP BY resource",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "176_3"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### How many times was each resource associated with the performance of a completion activity ('end trip', 'payment handled')?\nSELECT ",
            "response": "resource, COUNT (*) FROM event_log WHERE activity = 'End trip' OR activity = 'Payment handled' GROUP BY resource",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "176_4"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Considering each resource present in the event log, calculate how many times each of them was responsible for performing a completion activity ('end trip', 'payment handled').\nSELECT ",
            "response": "resource, COUNT (*) FROM event_log WHERE activity = 'End trip' OR activity = 'Payment handled' GROUP BY resource",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "176_5"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### How many times has each employee completed the processing of a travel declaration by acting on end of trip or payment actions?\nSELECT ",
            "response": "resource, COUNT (*) FROM event_log WHERE activity = 'End trip' OR activity = 'Payment handled' GROUP BY resource",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "176_6"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Completion activities are those that end a trip or make a payment. How many times has each employee been responsible for completion activities?\nSELECT ",
            "response": "resource, COUNT (*) FROM event_log WHERE activity = 'End trip' OR activity = 'Payment handled' GROUP BY resource",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "176_7"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### How many times was each resource responsible for performing the first occurrence of the 'declaration rejected by pre-approver' activity in a case?\nSELECT ",
            "response": "count(*), resource FROM (SELECT resource, MIN(timestamp) FROM event_log where activity = 'Declaration rejected by pre-approver' GROUP by resource, idcase) GROUP by resource",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "177_0"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### In how many cases was each resource responsible for performing the first occurrence of the 'declaration rejected by pre-approver' activity?\nSELECT ",
            "response": "count(*), resource FROM (SELECT resource, MIN(timestamp) FROM event_log where activity = 'Declaration rejected by pre-approver' GROUP by resource, idcase) GROUP by resource",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "177_1"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### In how many process instances was each resource responsible for executing the first occurrence of the 'declaration rejected by pre-approver' activity?\nSELECT ",
            "response": "count(*), resource FROM (SELECT resource, MIN(timestamp) FROM event_log where activity = 'Declaration rejected by pre-approver' GROUP by resource, idcase) GROUP by resource",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "177_2"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### For each resource, report how many times it was responsible for performing the first occurrence of the 'declaration rejected by pre-approver' activity in a case.\nSELECT ",
            "response": "count(*), resource FROM (SELECT resource, MIN(timestamp) FROM event_log where activity = 'Declaration rejected by pre-approver' GROUP by resource, idcase) GROUP by resource",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "177_3"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### For each resource, report how many times it was responsible for executing the first occurrence of the 'declaration rejected by pre-approver' activity in a process instance.\nSELECT ",
            "response": "count(*), resource FROM (SELECT resource, MIN(timestamp) FROM event_log where activity = 'Declaration rejected by pre-approver' GROUP by resource, idcase) GROUP by resource",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "177_4"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### In how many cases has each employee served in the role of pre-approver and rejected the declaration?\nSELECT ",
            "response": "count(*), resource FROM (SELECT resource, MIN(timestamp) FROM event_log where activity = 'Declaration rejected by pre-approver' GROUP by resource, idcase) GROUP by resource",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "177_5"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### For how many travel declarations has each employee in the role of pre-approver been responsible for taking the first action regarding declaration rejection?\nSELECT ",
            "response": "count(*), resource FROM (SELECT resource, MIN(timestamp) FROM event_log where activity = 'Declaration rejected by pre-approver' GROUP by resource, idcase) GROUP by resource",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "177_6"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### How many occurrences of activities were recorded in each case until the 'end trip' activity occurred?\nSELECT ",
            "response": "count(*), e1.idcase from event_log AS e1 inner join event_log AS e2 on e1.idcase = e2.idcase WHERE e2.activity = 'End trip' and e1.timestamp < e2.timestamp group by e1.idcase",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "178_0"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### How many activity occurrences were recorded in each case until the 'end trip' activity was performed?\nSELECT ",
            "response": "count(*), e1.idcase from event_log AS e1 inner join event_log AS e2 on e1.idcase = e2.idcase WHERE e2.activity = 'End trip' and e1.timestamp < e2.timestamp group by e1.idcase",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "178_1"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### How many instances of activity were recorded in each case until it went through the 'end trip' activity?\nSELECT ",
            "response": "count(*), e1.idcase from event_log AS e1 inner join event_log AS e2 on e1.idcase = e2.idcase WHERE e2.activity = 'End trip' and e1.timestamp < e2.timestamp group by e1.idcase",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "178_2"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### How many events occurred in each case before it went through the 'end trip' activity?\nSELECT ",
            "response": "count(*), e1.idcase from event_log AS e1 inner join event_log AS e2 on e1.idcase = e2.idcase WHERE e2.activity = 'End trip' and e1.timestamp < e2.timestamp group by e1.idcase",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "178_3"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### How many activity occurrences were recorded in each process instance until the 'end trip' activity was performed?\nSELECT ",
            "response": "count(*), e1.idcase from event_log AS e1 inner join event_log AS e2 on e1.idcase = e2.idcase WHERE e2.activity = 'End trip' and e1.timestamp < e2.timestamp group by e1.idcase",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "178_4"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### How many activity occurrences were recorded in each process instance until it went through the 'end trip' activity?\nSELECT ",
            "response": "count(*), e1.idcase from event_log AS e1 inner join event_log AS e2 on e1.idcase = e2.idcase WHERE e2.activity = 'End trip' and e1.timestamp < e2.timestamp group by e1.idcase",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "178_5"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### How many events occurred in each process instance until it went through the 'end trip' activity?\nSELECT ",
            "response": "count(*), e1.idcase from event_log AS e1 inner join event_log AS e2 on e1.idcase = e2.idcase WHERE e2.activity = 'End trip' and e1.timestamp < e2.timestamp group by e1.idcase",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "178_6"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Check the number of events that occurred in each case until it reached the performance of the 'end trip' activity.\nSELECT ",
            "response": "count(*), e1.idcase from event_log AS e1 inner join event_log AS e2 on e1.idcase = e2.idcase WHERE e2.activity = 'End trip' and e1.timestamp < e2.timestamp group by e1.idcase",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "178_7"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Check the number of events that occurred in each process instance until it reached the performance of the 'end trip' activity.\nSELECT ",
            "response": "count(*), e1.idcase from event_log AS e1 inner join event_log AS e2 on e1.idcase = e2.idcase WHERE e2.activity = 'End trip' and e1.timestamp < e2.timestamp group by e1.idcase",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "178_8"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Check how many actions were performed until the end of the trip took place in each travel declaration case.\nSELECT ",
            "response": "count(*), e1.idcase from event_log AS e1 inner join event_log AS e2 on e1.idcase = e2.idcase WHERE e2.activity = 'End trip' and e1.timestamp < e2.timestamp group by e1.idcase",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "178_9"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### For each declaration, how many actions were necessary until the end of the trip was recorded?\nSELECT ",
            "response": "count(*), e1.idcase from event_log AS e1 inner join event_log AS e2 on e1.idcase = e2.idcase WHERE e2.activity = 'End trip' and e1.timestamp < e2.timestamp group by e1.idcase",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "178_10"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### What activities did the Thomas resource carry out in the first semester of 2018?\nSELECT ",
            "response": "DISTINCT activity from event_log where resource = 'Thomas' and timestamp between '2018-01-01' and '2018-07-01'",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "179_0"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### What activities did the Thomas resource perform in the first semester of 2018?\nSELECT ",
            "response": "DISTINCT activity from event_log where resource = 'Thomas' and timestamp between '2018-01-01' and '2018-07-01'",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "179_1"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### What were the activities carried out by the resource named Thomas in the first semester of 2018?\nSELECT ",
            "response": "DISTINCT activity from event_log where resource = 'Thomas' and timestamp between '2018-01-01' and '2018-07-01'",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "179_2"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Report the label of the activities carried out by Thomas in the first semester of 2018.\nSELECT ",
            "response": "DISTINCT activity from event_log where resource = 'Thomas' and timestamp between '2018-01-01' and '2018-07-01'",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "179_3"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### What activities did the Thomas resource carry out between 1/1/2018 and 7/31/2018?\nSELECT ",
            "response": "DISTINCT activity from event_log where resource = 'Thomas' and timestamp between '2018-01-01' and '2018-07-01'",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "179_4"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### What activities did the Thomas resource perform between January 1, 2018 and July 31, 2018?\nSELECT ",
            "response": "DISTINCT activity from event_log where resource = 'Thomas' and timestamp between '2018-01-01' and '2018-07-01'",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "179_5"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### What activities did the Thomas resource perform in the first six months of 2018?\nSELECT ",
            "response": "DISTINCT activity from event_log where resource = 'Thomas' and timestamp between '2018-01-01' and '2018-07-01'",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "179_6"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### The employee Thomas was allocated to which types of actions during the first semester of 2018?\nSELECT ",
            "response": "DISTINCT activity from event_log where resource = 'Thomas' and timestamp between '2018-01-01' and '2018-07-01'",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "179_7"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### What types of actions did the employee Thomas work on in the first semester of 2018?\nSELECT ",
            "response": "DISTINCT activity from event_log where resource = 'Thomas' and timestamp between '2018-01-01' and '2018-07-01'",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "179_8"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Which cases went through the 'declaration rejected by supervisor' activity? Sort ascending by start date.\nSELECT ",
            "response": "DISTINCT e1.idcase FROM event_log e1 inner join (SELECT idcase, MIN(timestamp) as timestamp FROM event_log GROUP BY idcase order by timestamp) AS e2 on e1.idcase=e2.idcase WHERE e1.activity = 'Declaration rejected by supervisor' ORDER by e2.timestamp",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "180_0"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Which process instances went through the 'declaration rejected by supervisor' activity? Sort the answer in ascending order by start date.\nSELECT ",
            "response": "DISTINCT e1.idcase FROM event_log e1 inner join (SELECT idcase, MIN(timestamp) as timestamp FROM event_log GROUP BY idcase order by timestamp) AS e2 on e1.idcase=e2.idcase WHERE e1.activity = 'Declaration rejected by supervisor' ORDER by e2.timestamp",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "180_1"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### In which cases was the 'declaration rejected by supervisor' activity performed? Provide the answer in date order relative to the start of the case.\nSELECT ",
            "response": "DISTINCT e1.idcase FROM event_log e1 inner join (SELECT idcase, MIN(timestamp) as timestamp FROM event_log GROUP BY idcase order by timestamp) AS e2 on e1.idcase=e2.idcase WHERE e1.activity = 'Declaration rejected by supervisor' ORDER by e2.timestamp",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "180_2"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### In which cases was the 'declaration rejected by supervisor' activity performed? Provide the answer in ascending temporal order relative to the beginning of the case.\nSELECT ",
            "response": "DISTINCT e1.idcase FROM event_log e1 inner join (SELECT idcase, MIN(timestamp) as timestamp FROM event_log GROUP BY idcase order by timestamp) AS e2 on e1.idcase=e2.idcase WHERE e1.activity = 'Declaration rejected by supervisor' ORDER by e2.timestamp",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "180_3"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### In which process instances was the 'declaration rejected by supervisor' activity performed? Provide the answer in date order relative to the start of the process.\nSELECT ",
            "response": "DISTINCT e1.idcase FROM event_log e1 inner join (SELECT idcase, MIN(timestamp) as timestamp FROM event_log GROUP BY idcase order by timestamp) AS e2 on e1.idcase=e2.idcase WHERE e1.activity = 'Declaration rejected by supervisor' ORDER by e2.timestamp",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "180_4"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### In which process instances was the 'declaration rejected by supervisor' activity performed? Provide the answer in ascending temporal order relative to the start of the process.\nSELECT ",
            "response": "DISTINCT e1.idcase FROM event_log e1 inner join (SELECT idcase, MIN(timestamp) as timestamp FROM event_log GROUP BY idcase order by timestamp) AS e2 on e1.idcase=e2.idcase WHERE e1.activity = 'Declaration rejected by supervisor' ORDER by e2.timestamp",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "180_5"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Present, in ascending temporal order relative to the beginning of the case, the list of cases in which the 'declaration rejected by supervisor' activity was performed.\nSELECT ",
            "response": "DISTINCT e1.idcase FROM event_log e1 inner join (SELECT idcase, MIN(timestamp) as timestamp FROM event_log GROUP BY idcase order by timestamp) AS e2 on e1.idcase=e2.idcase WHERE e1.activity = 'Declaration rejected by supervisor' ORDER by e2.timestamp",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "180_6"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Present, in ascending temporal order relative to the beginning of the process, the list of process instances in which the 'declaration rejected by supervisor' activity was performed.\nSELECT ",
            "response": "DISTINCT e1.idcase FROM event_log e1 inner join (SELECT idcase, MIN(timestamp) as timestamp FROM event_log GROUP BY idcase order by timestamp) AS e2 on e1.idcase=e2.idcase WHERE e1.activity = 'Declaration rejected by supervisor' ORDER by e2.timestamp",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "180_7"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Rejections determined by a supervisor are noted in which travel declarations? Report the declarations in the temporal order of the beginning of their processing.\nSELECT ",
            "response": "DISTINCT e1.idcase FROM event_log e1 inner join (SELECT idcase, MIN(timestamp) as timestamp FROM event_log GROUP BY idcase order by timestamp) AS e2 on e1.idcase=e2.idcase WHERE e1.activity = 'Declaration rejected by supervisor' ORDER by e2.timestamp",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "180_8"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Which declarations were rejected by the supervisor? Report the declarations ordered by processing start date.\nSELECT ",
            "response": "DISTINCT e1.idcase FROM event_log e1 inner join (SELECT idcase, MIN(timestamp) as timestamp FROM event_log GROUP BY idcase order by timestamp) AS e2 on e1.idcase=e2.idcase WHERE e1.activity = 'Declaration rejected by supervisor' ORDER by e2.timestamp",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "180_9"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Which cases went through the 'start trip' activity and had not ended by March 2018?\nSELECT ",
            "response": "idcase FROM event_log where activity = 'Start trip' INTERSECT SELECT idcase FROM event_log GROUP BY idcase HAVING MAX(timestamp) > '2018-03-31'",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "181_0"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Which process instances went through the 'start trip' activity and had not finished by March 2018?\nSELECT ",
            "response": "idcase FROM event_log where activity = 'Start trip' INTERSECT SELECT idcase FROM event_log GROUP BY idcase HAVING MAX(timestamp) > '2018-03-31'",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "181_1"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Which process performances went through the 'start trip' activity and had not ended by March 2018?\nSELECT ",
            "response": "idcase FROM event_log where activity = 'Start trip' INTERSECT SELECT idcase FROM event_log GROUP BY idcase HAVING MAX(timestamp) > '2018-03-31'",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "181_2"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Which cases went through the 'start trip' activity and had not ended by March 31, 2018?\nSELECT ",
            "response": "idcase FROM event_log where activity = 'Start trip' INTERSECT SELECT idcase FROM event_log GROUP BY idcase HAVING MAX(timestamp) > '2018-03-31'",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "181_3"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Which process instances went through the 'start trip' activity and had not finished by March 31, 2018?\nSELECT ",
            "response": "idcase FROM event_log where activity = 'Start trip' INTERSECT SELECT idcase FROM event_log GROUP BY idcase HAVING MAX(timestamp) > '2018-03-31'",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "181_4"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Which process performances went through the 'start trip' activity and had not finished by March 31, 2018?\nSELECT ",
            "response": "idcase FROM event_log where activity = 'Start trip' INTERSECT SELECT idcase FROM event_log GROUP BY idcase HAVING MAX(timestamp) > '2018-03-31'",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "181_5"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Which cases went through the 'start trip' activity and had not finished by 31/03/2018?\nSELECT ",
            "response": "idcase FROM event_log where activity = 'Start trip' INTERSECT SELECT idcase FROM event_log GROUP BY idcase HAVING MAX(timestamp) > '2018-03-31'",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "181_6"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Which process instances went through the 'start trip' activity and had not finished by 31/03/2018?\nSELECT ",
            "response": "idcase FROM event_log where activity = 'Start trip' INTERSECT SELECT idcase FROM event_log GROUP BY idcase HAVING MAX(timestamp) > '2018-03-31'",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "181_7"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Which process performances went through the 'start trip' activity and had not finished by 31/03/2018?\nSELECT ",
            "response": "idcase FROM event_log where activity = 'Start trip' INTERSECT SELECT idcase FROM event_log GROUP BY idcase HAVING MAX(timestamp) > '2018-03-31'",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "181_8"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Which declarations were not finalized by March 31, 2018, have already had them registered in the system by recording the start of the trip action?\nSELECT ",
            "response": "idcase FROM event_log where activity = 'Start trip' INTERSECT SELECT idcase FROM event_log GROUP BY idcase HAVING MAX(timestamp) > '2018-03-31'",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "181_9"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Which declarations that have already registered the start of the trip had not been processed by March 31, 2018?\nSELECT ",
            "response": "idcase FROM event_log where activity = 'Start trip' INTERSECT SELECT idcase FROM event_log GROUP BY idcase HAVING MAX(timestamp) > '2018-03-31'",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "181_10"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Which cases recorded a completion activity ('end trip') but did not record a payment activity ('request payment', 'payment handled') and had more than one resource acting?\nSELECT ",
            "response": "DISTINCT idcase FROM event_log where activity = 'End trip' INTERSECT SELECT DISTINCT idcase FROM event_log GROUP BY idcase HAVING count(DISTINCT resource) > 1 EXCEPT SELECT DISTINCT idcase FROM event_log where activity = 'Request Payment' OR activity = 'Payment handled'",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "182_0"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### What are the cases that went through the 'end trip' activity but did not go through the 'request payment' or 'payment handled' activity and in which more than one resource acted?\nSELECT ",
            "response": "DISTINCT idcase FROM event_log where activity = 'End trip' INTERSECT SELECT DISTINCT idcase FROM event_log GROUP BY idcase HAVING count(DISTINCT resource) > 1 EXCEPT SELECT DISTINCT idcase FROM event_log where activity = 'Request Payment' OR activity = 'Payment handled'",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "182_1"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### For which cases is there a record of a completion activity ('end trip'), no record of payment activity ('request payment', 'payment handled') and more than one associated resource?\nSELECT ",
            "response": "DISTINCT idcase FROM event_log where activity = 'End trip' INTERSECT SELECT DISTINCT idcase FROM event_log GROUP BY idcase HAVING count(DISTINCT resource) > 1 EXCEPT SELECT DISTINCT idcase FROM event_log where activity = 'Request Payment' OR activity = 'Payment handled'",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "182_2"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Which cases involved more than one resource, recorded the 'end trip' activity, but did not record either 'request payment' or 'payment handled'?\nSELECT ",
            "response": "DISTINCT idcase FROM event_log where activity = 'End trip' INTERSECT SELECT DISTINCT idcase FROM event_log GROUP BY idcase HAVING count(DISTINCT resource) > 1 EXCEPT SELECT DISTINCT idcase FROM event_log where activity = 'Request Payment' OR activity = 'Payment handled'",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "182_3"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Which process instances involved more than one resource, recorded the 'end trip' activity, but did not record either 'request payment' or 'payment handled'?\nSELECT ",
            "response": "DISTINCT idcase FROM event_log where activity = 'End trip' INTERSECT SELECT DISTINCT idcase FROM event_log GROUP BY idcase HAVING count(DISTINCT resource) > 1 EXCEPT SELECT DISTINCT idcase FROM event_log where activity = 'Request Payment' OR activity = 'Payment handled'",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "182_4"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### In which cases was there a record of involvement of more than one resource, a record of 'end trip' activity, but no record of 'request payment' or 'payment handled' activity?\nSELECT ",
            "response": "DISTINCT idcase FROM event_log where activity = 'End trip' INTERSECT SELECT DISTINCT idcase FROM event_log GROUP BY idcase HAVING count(DISTINCT resource) > 1 EXCEPT SELECT DISTINCT idcase FROM event_log where activity = 'Request Payment' OR activity = 'Payment handled'",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "182_5"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### In which process instances was there a record of involvement of more than one resource, a record of 'end trip' activity, but no record of 'request payment' or 'payment handled' activity?\nSELECT ",
            "response": "DISTINCT idcase FROM event_log where activity = 'End trip' INTERSECT SELECT DISTINCT idcase FROM event_log GROUP BY idcase HAVING count(DISTINCT resource) > 1 EXCEPT SELECT DISTINCT idcase FROM event_log where activity = 'Request Payment' OR activity = 'Payment handled'",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "182_6"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Which declarations were finalized without payment made or recorded?\nSELECT ",
            "response": "DISTINCT idcase FROM event_log where activity = 'End trip' INTERSECT SELECT DISTINCT idcase FROM event_log GROUP BY idcase HAVING count(DISTINCT resource) > 1 EXCEPT SELECT DISTINCT idcase FROM event_log where activity = 'Request Payment' OR activity = 'Payment handled'",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "182_7"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Which declarations were finalized with end of trip registration without a payment having been made or at least a payment request having been registered?\nSELECT ",
            "response": "DISTINCT idcase FROM event_log where activity = 'End trip' INTERSECT SELECT DISTINCT idcase FROM event_log GROUP BY idcase HAVING count(DISTINCT resource) > 1 EXCEPT SELECT DISTINCT idcase FROM event_log where activity = 'Request Payment' OR activity = 'Payment handled'",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "182_8"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### For each case, report the number of resources involved and the total cost of the case.\nSELECT ",
            "response": "COUNT(DISTINCT resource), SUM(cost), idcase FROM event_log GROUP BY idcase",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "183_0"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### How many different resources worked on each process instance and what is the cost of this instance?\nSELECT ",
            "response": "COUNT(DISTINCT resource), SUM(cost), idcase FROM event_log GROUP BY idcase",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "183_1"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### How many different resources worked on each case and what is the cost of this case?\nSELECT ",
            "response": "COUNT(DISTINCT resource), SUM(cost), idcase FROM event_log GROUP BY idcase",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "183_2"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### For each process instance, what is the number of unique resources and their cost?\nSELECT ",
            "response": "COUNT(DISTINCT resource), SUM(cost), idcase FROM event_log GROUP BY idcase",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "183_3"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### For each process instance, report how many resources were involved and what the final cost of performance was.\nSELECT ",
            "response": "COUNT(DISTINCT resource), SUM(cost), idcase FROM event_log GROUP BY idcase",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "183_4"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### For each case, provide the total cost and how many resources were involved in its performance.\nSELECT ",
            "response": "COUNT(DISTINCT resource), SUM(cost), idcase FROM event_log GROUP BY idcase",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "183_5"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### What was the cost of each case and how many resources worked on each one?\nSELECT ",
            "response": "COUNT(DISTINCT resource), SUM(cost), idcase FROM event_log GROUP BY idcase",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "183_6"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### How much did each case cost to perform and how many resources were involved in each of them?\nSELECT ",
            "response": "COUNT(DISTINCT resource), SUM(cost), idcase FROM event_log GROUP BY idcase",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "183_7"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### How much did each process instance cost to perform and how many resources were involved in it?\nSELECT ",
            "response": "COUNT(DISTINCT resource), SUM(cost), idcase FROM event_log GROUP BY idcase",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "183_8"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### How many different people worked on each of the travel declarations and what was the total cost of each of the declarations?\nSELECT ",
            "response": "COUNT(DISTINCT resource), SUM(cost), idcase FROM event_log GROUP BY idcase",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "183_9"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Which cases have more than one activity whose name starts with 'permit'?\nSELECT ",
            "response": "idcase from event_log where activity like 'Permit%' GROUP BY idcase HAVING count(*) > 1",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "184_0"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Retrieve cases in which there is more than one occurrence of activities starting with the term 'permit'.\nSELECT ",
            "response": "idcase from event_log where activity like 'Permit%' GROUP BY idcase HAVING count(*) > 1",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "184_1"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Which cases have two or more activities whose name starts with 'permit'?\nSELECT ",
            "response": "idcase from event_log where activity like 'Permit%' GROUP BY idcase HAVING count(*) > 1",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "184_2"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Which cases involved activities whose name starts with 'permit' more than once?\nSELECT ",
            "response": "idcase from event_log where activity like 'Permit%' GROUP BY idcase HAVING count(*) > 1",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "184_3"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Which cases performed activities whose name starts with 'permit' more than once?\nSELECT ",
            "response": "idcase from event_log where activity like 'Permit%' GROUP BY idcase HAVING count(*) > 1",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "184_4"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### List the cases in which there is more than one event record associated with an activity whose name starts with 'permit'.\nSELECT ",
            "response": "idcase from event_log where activity like 'Permit%' GROUP BY idcase HAVING count(*) > 1",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "184_5"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### In which cases were activities whose name starts with 'permit' performed more than once?\nSELECT ",
            "response": "idcase from event_log where activity like 'Permit%' GROUP BY idcase HAVING count(*) > 1",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "184_6"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### In which cases is there more than one record of the performance of activities whose name starts with 'permit'?\nSELECT ",
            "response": "idcase from event_log where activity like 'Permit%' GROUP BY idcase HAVING count(*) > 1",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "184_7"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Actions related to permits were performed during the processing of which declarations?\nSELECT ",
            "response": "idcase from event_log where activity like 'Permit%' GROUP BY idcase HAVING count(*) > 1",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "184_8"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### In which declarations was more than one action recorded regarding some type of permit?\nSELECT ",
            "response": "idcase from event_log where activity like 'Permit%' GROUP BY idcase HAVING count(*) > 1",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "184_9"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### What are the identifiers of the last events performed, in each case, in order of performance time?\nSELECT ",
            "response": "id FROM (select id, MAX(timestamp) as timestamp FROM event_log GROUP by idcase) ORDER by timestamp",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "185_0"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### For each case, retrieve the identifier of the last event, ordering the list by the event performance time.\nSELECT ",
            "response": "id FROM (select id, MAX(timestamp) as timestamp FROM event_log GROUP by idcase) ORDER by timestamp",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "185_1"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Identify the last event performed for each case and list the identifiers of these events in order of performance.\nSELECT ",
            "response": "id FROM (select id, MAX(timestamp) as timestamp FROM event_log GROUP by idcase) ORDER by timestamp",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "185_2"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### List the last events performed, considering each case, listing the identifiers following the order in which the events were performed.\nSELECT ",
            "response": "id FROM (select id, MAX(timestamp) as timestamp FROM event_log GROUP by idcase) ORDER by timestamp",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "185_3"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### What are the identifiers of the last events performed, in each process instance, in order of performance time?\nSELECT ",
            "response": "id FROM (select id, MAX(timestamp) as timestamp FROM event_log GROUP by idcase) ORDER by timestamp",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "185_4"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### For each process instance, retrieve the identifier of the last event, ordering the list by the event performance time.\nSELECT ",
            "response": "id FROM (select id, MAX(timestamp) as timestamp FROM event_log GROUP by idcase) ORDER by timestamp",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "185_5"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Identify the last event performed for each process instance and list the identifiers of these events in order of performance.\nSELECT ",
            "response": "id FROM (select id, MAX(timestamp) as timestamp FROM event_log GROUP by idcase) ORDER by timestamp",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "185_6"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### List the last events performed, considering each process instance, listing the identifiers following the order in which the events were performed.\nSELECT ",
            "response": "id FROM (select id, MAX(timestamp) as timestamp FROM event_log GROUP by idcase) ORDER by timestamp",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "185_7"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### What was the last intervention made in each of the travel declarations (list the identifier of the interventions considering the order of performance)?\nSELECT ",
            "response": "id FROM (select id, MAX(timestamp) as timestamp FROM event_log GROUP by idcase) ORDER by timestamp",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "185_8"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### What activities have occurred at least a hundred times?\nSELECT ",
            "response": "activity FROM event_log GROUP BY activity HAVING COUNT (*) >= 100",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "186_0"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### List the labels of activities that have occurred a hundred times or more.\nSELECT ",
            "response": "activity FROM event_log GROUP BY activity HAVING COUNT (*) >= 100",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "186_1"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### What activities have occurred a hundred times or more?\nSELECT ",
            "response": "activity FROM event_log GROUP BY activity HAVING COUNT (*) >= 100",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "186_2"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### List the labels of activities that have occurred at least one hundred times.\nSELECT ",
            "response": "activity FROM event_log GROUP BY activity HAVING COUNT (*) >= 100",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "186_3"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Report the activities for which there were one hundred or more occurrences recorded in the log.\nSELECT ",
            "response": "activity FROM event_log GROUP BY activity HAVING COUNT (*) >= 100",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "186_4"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### For which activities are one hundred or more occurrences recorded in the event log?\nSELECT ",
            "response": "activity FROM event_log GROUP BY activity HAVING COUNT (*) >= 100",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "186_5"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### What were the actions for which 100 or more occurrences were recorded?\nSELECT ",
            "response": "activity FROM event_log GROUP BY activity HAVING COUNT (*) >= 100",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "186_6"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Which of the actions relating to processing declarations have already been carried out 100 or more times?\nSELECT ",
            "response": "activity FROM event_log GROUP BY activity HAVING COUNT (*) >= 100",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "186_7"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### For each group of employees (employee, supervisor, administration, pre-approver, budget owner, supervisor, director), list the number of cases in which an activity for which the group is responsible was recorded.\nSELECT ",
            "response": "count(DISTINCT idcase), 'employee' as grupo from event_log WHERE activity like '%employee%' UNION select count(DISTINCT idcase), 'supervisor' as grupo from event_log WHERE activity like '%supervisor%' UNION select count(DISTINCT idcase), 'administration' as grupo from event_log WHERE activity like '%administration%' UNION select count(DISTINCT idcase), 'pre-approver' as grupo from event_log WHERE activity like '%pre-approver%' UNION select count(DISTINCT idcase), 'budget owner' as grupo from event_log WHERE activity like '%budget owner%' UNION select count(DISTINCT idcase), 'director' as grupo from event_log WHERE activity like '%director%'",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "187_0"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### For each group of employees (employee, supervisor, administration, pre-approver, budget owner, supervisor, director), indicate the number of cases in which someone in the group was actioned.\nSELECT ",
            "response": "count(DISTINCT idcase), 'employee' as grupo from event_log WHERE activity like '%employee%' UNION select count(DISTINCT idcase), 'supervisor' as grupo from event_log WHERE activity like '%supervisor%' UNION select count(DISTINCT idcase), 'administration' as grupo from event_log WHERE activity like '%administration%' UNION select count(DISTINCT idcase), 'pre-approver' as grupo from event_log WHERE activity like '%pre-approver%' UNION select count(DISTINCT idcase), 'budget owner' as grupo from event_log WHERE activity like '%budget owner%' UNION select count(DISTINCT idcase), 'director' as grupo from event_log WHERE activity like '%director%'",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "187_1"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### For each group of employees (employee, supervisor, administration, pre-approver, budget owner, supervisor, director), what is the number of cases in which an activity associated with the group was performed?\nSELECT ",
            "response": "count(DISTINCT idcase), 'employee' as grupo from event_log WHERE activity like '%employee%' UNION select count(DISTINCT idcase), 'supervisor' as grupo from event_log WHERE activity like '%supervisor%' UNION select count(DISTINCT idcase), 'administration' as grupo from event_log WHERE activity like '%administration%' UNION select count(DISTINCT idcase), 'pre-approver' as grupo from event_log WHERE activity like '%pre-approver%' UNION select count(DISTINCT idcase), 'budget owner' as grupo from event_log WHERE activity like '%budget owner%' UNION select count(DISTINCT idcase), 'director' as grupo from event_log WHERE activity like '%director%'",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "187_2"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### For each group of employees (employee, supervisor, administration, pre-approver, budget owner, supervisor, director), list the number of cases in which at least one activity related to each group was performed.\nSELECT ",
            "response": "count(DISTINCT idcase), 'employee' as grupo from event_log WHERE activity like '%employee%' UNION select count(DISTINCT idcase), 'supervisor' as grupo from event_log WHERE activity like '%supervisor%' UNION select count(DISTINCT idcase), 'administration' as grupo from event_log WHERE activity like '%administration%' UNION select count(DISTINCT idcase), 'pre-approver' as grupo from event_log WHERE activity like '%pre-approver%' UNION select count(DISTINCT idcase), 'budget owner' as grupo from event_log WHERE activity like '%budget owner%' UNION select count(DISTINCT idcase), 'director' as grupo from event_log WHERE activity like '%director%'",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "187_3"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### For each employee group (employee, supervisor, administration, pre-approver, budget owner, supervisor, director), list the number of declarations in which an activity for which the group is responsible was recorded.\nSELECT ",
            "response": "count(DISTINCT idcase), 'employee' as grupo from event_log WHERE activity like '%employee%' UNION select count(DISTINCT idcase), 'supervisor' as grupo from event_log WHERE activity like '%supervisor%' UNION select count(DISTINCT idcase), 'administration' as grupo from event_log WHERE activity like '%administration%' UNION select count(DISTINCT idcase), 'pre-approver' as grupo from event_log WHERE activity like '%pre-approver%' UNION select count(DISTINCT idcase), 'budget owner' as grupo from event_log WHERE activity like '%budget owner%' UNION select count(DISTINCT idcase), 'director' as grupo from event_log WHERE activity like '%director%'",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "187_4"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Order the activities previously associated with a resource group according to what is specified in its label (employee, supervisor, administration, pre-approver, budget owner, supervisor, director), considering the number of times they were performed.\nSELECT ",
            "response": "count(*), 'employee' as grupo from event_log WHERE activity like '%employee%' UNION select count(*), 'supervisor' as grupo from event_log WHERE activity like '%supervisor%' UNION select count(*), 'administration' as grupo from event_log WHERE activity like '%administration%' UNION select count(*), 'pre-approver' as grupo from event_log WHERE activity like '%pre-approver%' UNION select count(*), 'budget owner' as grupo from event_log WHERE activity like '%budget owner%' UNION select count(*), 'director' as grupo from event_log WHERE activity like '%director%' order by count(*)",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "188_0"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Present a list of activities previously associated with a resource group as specified in its label (employee, supervisor, administration, pre-approver, budget owner, supervisor, director). The list must be ordered according to the number of times a group's activities were performed.\nSELECT ",
            "response": "count(*), 'employee' as grupo from event_log WHERE activity like '%employee%' UNION select count(*), 'supervisor' as grupo from event_log WHERE activity like '%supervisor%' UNION select count(*), 'administration' as grupo from event_log WHERE activity like '%administration%' UNION select count(*), 'pre-approver' as grupo from event_log WHERE activity like '%pre-approver%' UNION select count(*), 'budget owner' as grupo from event_log WHERE activity like '%budget owner%' UNION select count(*), 'director' as grupo from event_log WHERE activity like '%director%' order by count(*)",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "188_1"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Considering that there are actions whose name identifies the role of the employee responsible, present an ordered list with the number of times that actions from each group were carried out.\nSELECT ",
            "response": "count(*), 'employee' as grupo from event_log WHERE activity like '%employee%' UNION select count(*), 'supervisor' as grupo from event_log WHERE activity like '%supervisor%' UNION select count(*), 'administration' as grupo from event_log WHERE activity like '%administration%' UNION select count(*), 'pre-approver' as grupo from event_log WHERE activity like '%pre-approver%' UNION select count(*), 'budget owner' as grupo from event_log WHERE activity like '%budget owner%' UNION select count(*), 'director' as grupo from event_log WHERE activity like '%director%' order by count(*)",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "188_2"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### What are the cases in which there are events recorded after the trip has ended?\nSELECT ",
            "response": "e1.idcase from event_log AS e1 inner join event_log AS e2 on e1.idcase = e2.idcase WHERE e2.activity = 'End trip' and e1.timestamp > e2.timestamp group by e1.idcase",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "189_0"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Which cases had activities carried out after the event that records the end of the trip?\nSELECT ",
            "response": "e1.idcase from event_log AS e1 inner join event_log AS e2 on e1.idcase = e2.idcase WHERE e2.activity = 'End trip' and e1.timestamp > e2.timestamp group by e1.idcase",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "189_1"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### In which cases are events included after the completion of the trip is recorded?\nSELECT ",
            "response": "e1.idcase from event_log AS e1 inner join event_log AS e2 on e1.idcase = e2.idcase WHERE e2.activity = 'End trip' and e1.timestamp > e2.timestamp group by e1.idcase",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "189_2"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### List the cases in which events were recorded after the end of the trip.\nSELECT ",
            "response": "e1.idcase from event_log AS e1 inner join event_log AS e2 on e1.idcase = e2.idcase WHERE e2.activity = 'End trip' and e1.timestamp > e2.timestamp group by e1.idcase",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "189_3"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### List the cases that had activities carried out after the end of the trip.\nSELECT ",
            "response": "e1.idcase from event_log AS e1 inner join event_log AS e2 on e1.idcase = e2.idcase WHERE e2.activity = 'End trip' and e1.timestamp > e2.timestamp group by e1.idcase",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "189_4"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Which declarations received the register of actions even after they registered end of the trip?\nSELECT ",
            "response": "e1.idcase from event_log AS e1 inner join event_log AS e2 on e1.idcase = e2.idcase WHERE e2.activity = 'End trip' and e1.timestamp > e2.timestamp group by e1.idcase",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "189_5"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### How many cases, to date, have the performance of the 'send reminder' activity as the last recorded event?\nSELECT ",
            "response": "COUNT(*) FROM (SELECT idcase, activity, max(timestamp) from event_log group by idcase) WHERE activity='Send reminder'",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "190_0"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### How many cases have the performance of the 'send reminder' activity as the last event recorded to date?\nSELECT ",
            "response": "COUNT(*) FROM (SELECT idcase, activity, max(timestamp) from event_log group by idcase) WHERE activity='Send reminder'",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "190_1"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Identify how many cases that, until now, have the performance of the 'send reminder' activity as the last recorded event\nSELECT ",
            "response": "COUNT(*) FROM (SELECT idcase, activity, max(timestamp) from event_log group by idcase) WHERE activity='Send reminder'",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "190_2"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### To date, how many cases have the 'send reminder' activity recorded as the last occurrence?\nSELECT ",
            "response": "COUNT(*) FROM (SELECT idcase, activity, max(timestamp) from event_log group by idcase) WHERE activity='Send reminder'",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "190_3"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### To date, what is the number of cases in which the most recent event records the performance of 'send reminder'?\nSELECT ",
            "response": "COUNT(*) FROM (SELECT idcase, activity, max(timestamp) from event_log group by idcase) WHERE activity='Send reminder'",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "190_4"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Count how many declarations are stuck in a 'send reminder' activity.\nSELECT ",
            "response": "COUNT(*) FROM (SELECT idcase, activity, max(timestamp) from event_log group by idcase) WHERE activity='Send reminder'",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "190_5"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### What are the resources that were not working on March 31, 2018?\nSELECT ",
            "response": "distinct resource FROM event_log EXCEPT SELECT distinct resource FROM event_log where strftime('%Y-%m-%d', timestamp) = '2018-03-31'",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "191_0"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### What resources were not allocated to any event on March 31, 2018?\nSELECT ",
            "response": "distinct resource FROM event_log EXCEPT SELECT distinct resource FROM event_log where strftime('%Y-%m-%d', timestamp) = '2018-03-31'",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "191_1"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### List all resources that were not associated with events performed on March 31, 2018.\nSELECT ",
            "response": "distinct resource FROM event_log EXCEPT SELECT distinct resource FROM event_log where strftime('%Y-%m-%d', timestamp) = '2018-03-31'",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "191_2"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Report idle resources on March 31, 2018.\nSELECT ",
            "response": "distinct resource FROM event_log EXCEPT SELECT distinct resource FROM event_log where strftime('%Y-%m-%d', timestamp) = '2018-03-31'",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "191_3"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Who were idle employees in the travel declaration process on March 31, 2018?\nSELECT ",
            "response": "distinct resource FROM event_log EXCEPT SELECT distinct resource FROM event_log where strftime('%Y-%m-%d', timestamp) = '2018-03-31'",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "191_4"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Which employees were not allocated to any declaration processing action on March 31, 2018?\nSELECT ",
            "response": "distinct resource FROM event_log EXCEPT SELECT distinct resource FROM event_log where strftime('%Y-%m-%d', timestamp) = '2018-03-31'",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "191_5"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Identify the number of events recording the performance of each activity for cases completed between '2018-12-01' and '2018-12-05'.\nSELECT ",
            "response": "activity, COUNT(*) FROM event_log WHERE idcase IN (select idcase FROM event_log GROUP BY idcase HAVING MAX(strftime('%Y-%m-%d', timestamp)) BETWEEN '2018-12-01' AND '2018-12-05') GROUP BY activity",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "192_0"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Considering cases completed between \u20182018-12-01\u2019 and \u20182018-12-05\u2019, identify the performance frequency of each activity.\nSELECT ",
            "response": "activity, COUNT(*) FROM event_log WHERE idcase IN (select idcase FROM event_log GROUP BY idcase HAVING MAX(strftime('%Y-%m-%d', timestamp)) BETWEEN '2018-12-01' AND '2018-12-05') GROUP BY activity",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "192_1"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### By filtering completed cases in the '2018-12-01' to '2018-12-05' period, determine the performance frequency of each activity.\nSELECT ",
            "response": "activity, COUNT(*) FROM event_log WHERE idcase IN (select idcase FROM event_log GROUP BY idcase HAVING MAX(strftime('%Y-%m-%d', timestamp)) BETWEEN '2018-12-01' AND '2018-12-05') GROUP BY activity",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "192_2"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Consider cases closed between '2018-12-01' and '2018-12-05'. What is the performance frequency for each recorded activity?\nSELECT ",
            "response": "activity, COUNT(*) FROM event_log WHERE idcase IN (select idcase FROM event_log GROUP BY idcase HAVING MAX(strftime('%Y-%m-%d', timestamp)) BETWEEN '2018-12-01' AND '2018-12-05') GROUP BY activity",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "192_3"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### For cases completed between '2018-12-01' and '2018-12-05', how many times was each activity performed?\nSELECT ",
            "response": "activity, COUNT(*) FROM event_log WHERE idcase IN (select idcase FROM event_log GROUP BY idcase HAVING MAX(strftime('%Y-%m-%d', timestamp)) BETWEEN '2018-12-01' AND '2018-12-05') GROUP BY activity",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "192_4"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### What was the performance frequency of each action in processing declarations completed between \u20182018-12-01\u2019 and \u20182018-12-05\u2019?\nSELECT ",
            "response": "activity, COUNT(*) FROM event_log WHERE idcase IN (select idcase FROM event_log GROUP BY idcase HAVING MAX(strftime('%Y-%m-%d', timestamp)) BETWEEN '2018-12-01' AND '2018-12-05') GROUP BY activity",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "192_5"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Indicate how many cases do not have a record of the performance of the 'payment handled' activity to date.\nSELECT ",
            "response": "COUNT(DISTINCT idcase) FROM event_log WHERE idcase NOT IN (SELECT DISTINCT idcase FROM event_log where activity = 'Payment handled')",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "193_0"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### To date, in how many cases is there no record of the performance of the 'payment handled' activity?\nSELECT ",
            "response": "COUNT(DISTINCT idcase) FROM event_log WHERE idcase NOT IN (SELECT DISTINCT idcase FROM event_log where activity = 'Payment handled')",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "193_1"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### In how many cases has the performance of the 'payment handled' activity not been recorded to date?\nSELECT ",
            "response": "COUNT(DISTINCT idcase) FROM event_log WHERE idcase NOT IN (SELECT DISTINCT idcase FROM event_log where activity = 'Payment handled')",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "193_2"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### So far, in how many cases has the 'payment handled' activity not been recorded?\nSELECT ",
            "response": "COUNT(DISTINCT idcase) FROM event_log WHERE idcase NOT IN (SELECT DISTINCT idcase FROM event_log where activity = 'Payment handled')",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "193_3"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### What is the number of cases in which the performance of the 'payment handled' activity has not been recorded so far?\nSELECT ",
            "response": "COUNT(DISTINCT idcase) FROM event_log WHERE idcase NOT IN (SELECT DISTINCT idcase FROM event_log where activity = 'Payment handled')",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "193_4"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### To date, for how many declarations is there no record of payment being made?\nSELECT ",
            "response": "COUNT(DISTINCT idcase) FROM event_log WHERE idcase NOT IN (SELECT DISTINCT idcase FROM event_log where activity = 'Payment handled')",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "193_5"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Indicate how many declarations do not have a record of payment made to date.\nSELECT ",
            "response": "COUNT(DISTINCT idcase) FROM event_log WHERE idcase NOT IN (SELECT DISTINCT idcase FROM event_log where activity = 'Payment handled')",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "193_6"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### In general, a declaration is completed with the recording of a payment activity, as the last action performed. Considering this information, which declarations have not yet been finalized?\nSELECT ",
            "response": "COUNT(DISTINCT idcase) FROM event_log WHERE idcase NOT IN (SELECT DISTINCT idcase FROM event_log where activity = 'Payment handled')",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "193_7"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### How many different resources were associated with the performance of each activity?\nSELECT ",
            "response": "activity, COUNT(DISTINCT resource) FROM event_log GROUP BY activity",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "194_0"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### For each activity, how many distinct resources were associated with its performance?\nSELECT ",
            "response": "activity, COUNT(DISTINCT resource) FROM event_log GROUP BY activity",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "194_1"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Report the number of different resources associated with the performance of each activity.\nSELECT ",
            "response": "activity, COUNT(DISTINCT resource) FROM event_log GROUP BY activity",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "194_2"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Identify how many unique resources were involved in performing each activity.\nSELECT ",
            "response": "activity, COUNT(DISTINCT resource) FROM event_log GROUP BY activity",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "194_3"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### How many distinct resources were associated with the performance of each activity?\nSELECT ",
            "response": "activity, COUNT(DISTINCT resource) FROM event_log GROUP BY activity",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "194_4"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### How many different employees have already been allocated to each of the declaration processing actions?\nSELECT ",
            "response": "activity, COUNT(DISTINCT resource) FROM event_log GROUP BY activity",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "194_5"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### What are the activities that preceded a 'send reminder' occurrence?\nSELECT ",
            "response": "distinct(e1.activity) from event_log AS e1 inner join event_log AS e2 on e1.idcase = e2.idcase WHERE e2.activity = 'Send reminder' and e1.timestamp < e2.timestamp group by e1.idcase, e1.activity",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "195_0"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### What has already been done before the 'send reminder'?\nSELECT ",
            "response": "distinct(e1.activity) from event_log AS e1 inner join event_log AS e2 on e1.idcase = e2.idcase WHERE e2.activity = 'Send reminder' and e1.timestamp < e2.timestamp group by e1.idcase, e1.activity",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "195_1"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### What actions have already preceded the sending of a reminder in travel declarations registered in the system?\nSELECT ",
            "response": "distinct(e1.activity) from event_log AS e1 inner join event_log AS e2 on e1.idcase = e2.idcase WHERE e2.activity = 'Send reminder' and e1.timestamp < e2.timestamp group by e1.idcase, e1.activity",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "195_2"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### What is the distribution of cases in relation to the number of events recorded per case?\nSELECT ",
            "response": "events_count, COUNT(*) FROM (SELECT COUNT(*) as events_count, idcase FROM event_log GROUP BY idcase ) GROUP BY events_count",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "196_0"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Calculate the number of events per case and indicate how many cases are associated with each event count.\nSELECT ",
            "response": "events_count, COUNT(*) FROM (SELECT COUNT(*) as events_count, idcase FROM event_log GROUP BY idcase ) GROUP BY events_count",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "196_1"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Calculate the number of events per case and report how many cases correspond to each number.\nSELECT ",
            "response": "events_count, COUNT(*) FROM (SELECT COUNT(*) as events_count, idcase FROM event_log GROUP BY idcase ) GROUP BY events_count",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "196_2"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### When calculating the number of events per case, how many cases relate to the different event counts found?\nSELECT ",
            "response": "events_count, COUNT(*) FROM (SELECT COUNT(*) as events_count, idcase FROM event_log GROUP BY idcase ) GROUP BY events_count",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "196_3"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Count how many actions were performed in each declaration and report how many declarations have the same number of events performed.\nSELECT ",
            "response": "events_count, COUNT(*) FROM (SELECT COUNT(*) as events_count, idcase FROM event_log GROUP BY idcase ) GROUP BY events_count",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "196_4"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Considering the total cost of a case as the sum of the cost of all its events, what is the average total cost of the cases in this log?\nSELECT ",
            "response": "AVG(total_cost) FROM (select SUM(cost) as total_cost, idcase from event_log group by idcase)",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "197_0"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Considering that the total cost of a case is the result of the sum of the costs of all events associated with the case, what would be the mean total costs for the cases in this log?\nSELECT ",
            "response": "AVG(total_cost) FROM (select SUM(cost) as total_cost, idcase from event_log group by idcase)",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "197_1"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Taking into account that the total cost of a case is the sum of the costs of all its events, what is the mean of the total costs of the cases in this log?\nSELECT ",
            "response": "AVG(total_cost) FROM (select SUM(cost) as total_cost, idcase from event_log group by idcase)",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "197_2"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Assume the total cost of a case as the sum of the costs of all its events. What is the mean total costs for the cases in this log?\nSELECT ",
            "response": "AVG(total_cost) FROM (select SUM(cost) as total_cost, idcase from event_log group by idcase)",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "197_3"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Consider the total cost of a case as the sum of the costs of all its events. What is the mean of the total costs?\nSELECT ",
            "response": "AVG(total_cost) FROM (select SUM(cost) as total_cost, idcase from event_log group by idcase)",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "197_4"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### How much was spent on average processing the declarations?\nSELECT ",
            "response": "AVG(total_cost) FROM (select SUM(cost) as total_cost, idcase from event_log group by idcase)",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "197_5"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### What is the mean cost of events when grouped by resource?\nSELECT ",
            "response": "avg(cost), resource FROM event_log GROUP BY resource",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "198_0"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### When grouping by resource, what is the mean cost of events?\nSELECT ",
            "response": "avg(cost), resource FROM event_log GROUP BY resource",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "198_1"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### When grouping events according to the resources used in them, indicate the mean cost of the set of events associated with each resource.\nSELECT ",
            "response": "avg(cost), resource FROM event_log GROUP BY resource",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "198_2"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Considering a grouping of events by resource, what is the mean cost of the events associated with each resource?\nSELECT ",
            "response": "avg(cost), resource FROM event_log GROUP BY resource",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "198_3"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Group events by resource and identify the mean cost of events in each group.\nSELECT ",
            "response": "avg(cost), resource FROM event_log GROUP BY resource",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "198_4"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### What is the mean cost associated with events for which each employee is responsible?\nSELECT ",
            "response": "avg(cost), resource FROM event_log GROUP BY resource",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "198_5"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### What are the 10 resources most frequently associated with the performance of activities recorded in the events?\nSELECT ",
            "response": "resource FROM event_log GROUP BY resource HAVING COUNT(*) IN (SELECT COUNT(*) FROM event_log GROUP BY resource ORDER BY COUNT(*) DESC LIMIT 10)",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "199_0"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Identify the 10 resources most frequently linked to the performance of activities recorded in the events.\nSELECT ",
            "response": "resource FROM event_log GROUP BY resource HAVING COUNT(*) IN (SELECT COUNT(*) FROM event_log GROUP BY resource ORDER BY COUNT(*) DESC LIMIT 10)",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "199_1"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Identify the 10 resources most frequently related to the performance of activities recorded in the events.\nSELECT ",
            "response": "resource FROM event_log GROUP BY resource HAVING COUNT(*) IN (SELECT COUNT(*) FROM event_log GROUP BY resource ORDER BY COUNT(*) DESC LIMIT 10)",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "199_2"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### List the 10 resources that appear most frequently in the performance of activities recorded in the events.\nSELECT ",
            "response": "resource FROM event_log GROUP BY resource HAVING COUNT(*) IN (SELECT COUNT(*) FROM event_log GROUP BY resource ORDER BY COUNT(*) DESC LIMIT 10)",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "199_3"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### List the top 10 resources in terms of number of events that use them during the performance of the registered activity.\nSELECT ",
            "response": "resource FROM event_log GROUP BY resource HAVING COUNT(*) IN (SELECT COUNT(*) FROM event_log GROUP BY resource ORDER BY COUNT(*) DESC LIMIT 10)",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "199_4"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Who are the 10 employees most requested for processing travel declarations?\nSELECT ",
            "response": "resource FROM event_log GROUP BY resource HAVING COUNT(*) IN (SELECT COUNT(*) FROM event_log GROUP BY resource ORDER BY COUNT(*) DESC LIMIT 10)",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "199_5"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### How many events were run per day?\nSELECT ",
            "response": "strftime('%Y-%m-%d', timestamp) AS event_day, COUNT(*) FROM event_log GROUP BY event_day",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "200_0"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### How many occurrences of activity were there each day?\nSELECT ",
            "response": "strftime('%Y-%m-%d', timestamp) AS event_day, COUNT(*) FROM event_log GROUP BY event_day",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "200_1"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### How many actions were performed each day in processing the declarations?\nSELECT ",
            "response": "strftime('%Y-%m-%d', timestamp) AS event_day, COUNT(*) FROM event_log GROUP BY event_day",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "200_2"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### List all cases in which two different resources subsequently performed the same activity.\nSELECT ",
            "response": "DISTINCT(idcase) FROM (SELECT idcase, activity, resource, LEAD(activity) OVER (PARTITION BY idcase ORDER BY timestamp) AS next_activity, LEAD(resource) OVER (PARTITION BY idcase ORDER BY timestamp) AS next_resource FROM event_log) where activity = next_activity and resource != next_resource",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "201_0"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Indicate cases in which the same activity was performed twice in a row by two different resources.\nSELECT ",
            "response": "DISTINCT(idcase) FROM (SELECT idcase, activity, resource, LEAD(activity) OVER (PARTITION BY idcase ORDER BY timestamp) AS next_activity, LEAD(resource) OVER (PARTITION BY idcase ORDER BY timestamp) AS next_resource FROM event_log) where activity = next_activity and resource != next_resource",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "201_1"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### For the same declaration, was the same action recorded consecutively, but carried out by different employees? List for which declarations this occurred.\nSELECT ",
            "response": "DISTINCT(idcase) FROM (SELECT idcase, activity, resource, LEAD(activity) OVER (PARTITION BY idcase ORDER BY timestamp) AS next_activity, LEAD(resource) OVER (PARTITION BY idcase ORDER BY timestamp) AS next_resource FROM event_log) where activity = next_activity and resource != next_resource",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "201_2"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### How many events occurred in each case before the 'declaration final approved by director' activity was recorded, for those cases where it was recorded?\nSELECT ",
            "response": "e.idcase, COUNT(*) FROM event_log e INNER JOIN (SELECT idcase, MIN(timestamp) as timestamp FROM event_log where activity='Declaration final approved by director' GROUP BY idcase order by idcase) e1 on e.idcase = e1.idcase and e.timestamp < e1.timestamp GROUP BY e.idcase",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "202_0"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### For cases in which there was the 'declaration final approved by director' activity, report how many events preceded the occurrence of this activity.\nSELECT ",
            "response": "e.idcase, COUNT(*) FROM event_log e INNER JOIN (SELECT idcase, MIN(timestamp) as timestamp FROM event_log where activity='Declaration final approved by director' GROUP BY idcase order by idcase) e1 on e.idcase = e1.idcase and e.timestamp < e1.timestamp GROUP BY e.idcase",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "202_1"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### How many interventions were necessary before the declaration received final approval from the director, in each of the declarations in which this approval was recorded?\nSELECT ",
            "response": "e.idcase, COUNT(*) FROM event_log e INNER JOIN (SELECT idcase, MIN(timestamp) as timestamp FROM event_log where activity='Declaration final approved by director' GROUP BY idcase order by idcase) e1 on e.idcase = e1.idcase and e.timestamp < e1.timestamp GROUP BY e.idcase",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "202_2"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### How much time passed between the occurrence of the 'permit submitted by employee' activity and the 'permit approved by administration' activity, in each case in which such activities occurred?\nSELECT ",
            "response": "e.idcase, (strftime('%s',e1.timestamp) - strftime('%s', e. timestamp)) from event_log e inner join event_log e1 on e1.idcase = e.idcase and e1.timestamp > e.timestamp where e.activity = 'Permit submitted by employee' and e1.activity = 'Permit approved by administration'",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "203_0"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### What was the time interval between the occurrence of the 'permit submitted by employee' activity and the 'permit approved by administration' activity, in each case in which such activities occurred?\nSELECT ",
            "response": "e.idcase, (strftime('%s',e1.timestamp) - strftime('%s', e. timestamp)) from event_log e inner join event_log e1 on e1.idcase = e.idcase and e1.timestamp > e.timestamp where e.activity = 'Permit submitted by employee' and e1.activity = 'Permit approved by administration'",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "203_1"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### How much time passed between the employee requesting a permit and the permit being approved by administration, in the declarations in which these actions occurred?\nSELECT ",
            "response": "e.idcase, (strftime('%s',e1.timestamp) - strftime('%s', e. timestamp)) from event_log e inner join event_log e1 on e1.idcase = e.idcase and e1.timestamp > e.timestamp where e.activity = 'Permit submitted by employee' and e1.activity = 'Permit approved by administration'",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "203_2"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### In which cases was there rework?\nSELECT ",
            "response": "DISTINCT idcase FROM event_log GROUP BY idcase, activity HAVING COUNT(*) > 1",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "204_0"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Retrieve cases where rework situations occurred.\nSELECT ",
            "response": "DISTINCT idcase FROM event_log GROUP BY idcase, activity HAVING COUNT(*) > 1",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "204_1"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Report which cases went through rework situations.\nSELECT ",
            "response": "DISTINCT idcase FROM event_log GROUP BY idcase, activity HAVING COUNT(*) > 1",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "204_2"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### In which declarations was there rework?\nSELECT ",
            "response": "DISTINCT idcase FROM event_log GROUP BY idcase, activity HAVING COUNT(*) > 1",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "204_3"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### In which declarations did we have problems with rework?\nSELECT ",
            "response": "DISTINCT idcase FROM event_log GROUP BY idcase, activity HAVING COUNT(*) > 1",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "204_4"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### In which declarations was the same intervention performed more than once?\nSELECT ",
            "response": "DISTINCT idcase FROM event_log GROUP BY idcase, activity HAVING COUNT(*) > 1",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "204_5"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### In which cases were activities of the same type performed consecutively?\nSELECT ",
            "response": "DISTINCT(idcase) FROM (SELECT idcase, activity, LEAD(activity) OVER (PARTITION BY idcase ORDER BY timestamp) AS next_activity FROM event_log) where activity = next_activity",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "205_0"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Recover cases in which activities of the same type occurred consecutively.\nSELECT ",
            "response": "DISTINCT(idcase) FROM (SELECT idcase, activity, LEAD(activity) OVER (PARTITION BY idcase ORDER BY timestamp) AS next_activity FROM event_log) where activity = next_activity",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "205_1"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Report which cases have undergone rework situations, with sequences of performance of the same activity.\nSELECT ",
            "response": "DISTINCT(idcase) FROM (SELECT idcase, activity, LEAD(activity) OVER (PARTITION BY idcase ORDER BY timestamp) AS next_activity FROM event_log) where activity = next_activity",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "205_2"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### In which declarations were activities of the same type carried out consecutively?\nSELECT ",
            "response": "DISTINCT(idcase) FROM (SELECT idcase, activity, LEAD(activity) OVER (PARTITION BY idcase ORDER BY timestamp) AS next_activity FROM event_log) where activity = next_activity",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "205_3"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### In which declarations did we have problems with equal and consecutive interventions?\nSELECT ",
            "response": "DISTINCT(idcase) FROM (SELECT idcase, activity, LEAD(activity) OVER (PARTITION BY idcase ORDER BY timestamp) AS next_activity FROM event_log) where activity = next_activity",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "205_4"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### In which declarations was an intervention performed at least twice consecutively?\nSELECT ",
            "response": "DISTINCT(idcase) FROM (SELECT idcase, activity, LEAD(activity) OVER (PARTITION BY idcase ORDER BY timestamp) AS next_activity FROM event_log) where activity = next_activity",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "205_5"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Which employees are supervisors?\nSELECT ",
            "response": "DISTINCT(resource) from event_log where activity like '%supervisor%'",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "206_0"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Which employees took on the role of supervisors during the processing of declarations?\nSELECT ",
            "response": "DISTINCT(resource) from event_log where activity like '%supervisor%'",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "206_1"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Which employees are responsible for the budget?\nSELECT ",
            "response": "DISTINCT(resource) from event_log where activity like '%budget owner%'",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "207_0"
        },
        {
            "prompt_tokens": 0,
            "prompt": "### Complete sqlite SQL query only and with no explanation\n### SQLite SQL tables, with their properties:\n#\n# event_log(id, activity, timestamp, resource, cost, idcase)\n#\n### Which employees took on the role of budget owners during the processing of declarations?\nSELECT ",
            "response": "DISTINCT(resource) from event_log where activity like '%budget owner%'",
            "n_examples": 0,
            "db_id": "event_log",
            "id": "207_1"
        }
    ]
}