SELECT COUNT(*) FROM event_log WHERE activity = 'Fim da viagem';
SELECT COUNT(*) FROM event_log WHERE activity = 'Fim da viagem';
SELECT COUNT(*) FROM event_log WHERE activity = 'Fim da viagem';
SELECT COUNT(*) FROM event_log WHERE activity = 'Fim da viagem';
SELECT COUNT(*) FROM event_log WHERE activity = 'Fim da viagem';
SELECT COUNT(*) FROM event_log WHERE activity = 'Fim da viagem';
SELECT COUNT(*) FROM event_log WHERE activity = 'Fim da viagem';
SELECT COUNT(*) FROM event_log WHERE activity = 'Fim da viagem';
SELECT COUNT(*) FROM event_log WHERE activity = 'Fim da viagem';
SELECT COUNT(*) FROM event_log WHERE activity = 'Fim da viagem';
SELECT count(*), e1.idcase FROM event_log AS e1 INNER JOIN event_log AS e2 ON e1.idcase = e2.idcase WHERE e2.activity = 'Fim da viagem' AND e1.timestamp < e2.timestamp GROUP BY e1.idcase
SELECT COUNT(*) FROM event_log WHERE activity = 'Fim da viagem' AND resource = 'James';
SELECT count(*) FROM event_log WHERE activity = 'Fim da viagem' AND resource = 'James'
SELECT count(*) FROM event_log WHERE activity = 'Fim da viagem' AND resource = 'James'
SELECT COUNT(*) FROM event_log WHERE activity = 'Fim da viagem' AND resource = 'James';
SELECT COUNT(*) FROM event_log WHERE activity = 'Fim da viagem' AND resource = 'James';
SELECT COUNT(*) FROM event_log WHERE activity = 'Fim da viagem' AND resource = 'James';
SELECT COUNT(*) FROM event_log WHERE activity = 'Fim da viagem' AND resource = 'James';
SELECT COUNT(*) FROM event_log WHERE activity = 'Fim da viagem' AND resource = 'James';
SELECT COUNT(*) FROM event_log WHERE activity = 'Fim da viagem' AND resource = 'James';
SELECT COUNT(*) FROM event_log WHERE activity = 'Fim da viagem' AND resource = 'James';
SELECT count(*) FROM event_log WHERE activity = 'Fim da viagem' AND resource = 'James'
SELECT resource, COUNT(*) AS num_events FROM event_log GROUP BY resource
SELECT resource, COUNT(*) AS num_events FROM event_log GROUP BY resource ORDER BY num_events DESC;
SELECT resource, count(*) as num_events FROM event_log GROUP BY resource ORDER BY num_events DESC;
SELECT resource, COUNT(*) AS num_events FROM event_log GROUP BY resource
SELECT resource, COUNT(*) as num_events FROM event_log GROUP BY resource
SELECT resource, COUNT(*) as frequency FROM event_log GROUP BY resource ORDER BY frequency DESC;
SELECT resource, COUNT(*) as frequency FROM event_log GROUP BY resource ORDER BY frequency DESC;
SELECT resource, COUNT(*) as num_events FROM event_log GROUP BY resource
SELECT resource, COUNT(*) AS num_executions FROM event_log GROUP BY resource
SELECT resource, COUNT(*) AS num_executions FROM event_log GROUP BY resource
SELECT resource, COUNT(*) AS total_actions FROM event_log WHERE activity LIKE '%viagem%' -- ajuste para incluir apenas ações relacionadas a declarações de viagens GROUP BY resource ORDER BY total_actions DESC;
SELECT COUNT(*) FROM event_log WHERE resource = 'Peter';
SELECT COUNT(*) FROM event_log WHERE resource = 'Peter';
SELECT COUNT(*) FROM event_log WHERE resource = 'Peter';
SELECT COUNT(*) FROM event_log WHERE resource = 'Peter';
SELECT COUNT(*) FROM event_log WHERE resource = 'Peter';
SELECT COUNT(*) FROM event_log WHERE resource = 'Peter';
SELECT COUNT(*) FROM event_log WHERE resource = 'Peter' AND activity LIKE '%viagem%';
SELECT * FROM event_log WHERE idcase LIKE '%2018-03-%';
SELECT * FROM event_log WHERE timestamp BETWEEN '2018-03-01' AND '2018-03-31' AND activity = 'FINALIZADO';
SELECT idcase FROM event_log WHERE timestamp LIKE '%2018-03-%' AND activity = 'terminou';
SELECT idcase FROM event_log WHERE EXTRACT(MONTH FROM timestamp) = 3 AND EXTRACT(YEAR FROM timestamp) = 2018;
SELECT idcase FROM event_log WHERE timestamp = (SELECT MAX(timestamp) FROM event_log WHERE EXTRACT(MONTH FROM timestamp) = 3 AND EXTRACT(YEAR FROM timestamp) = 2018)
SELECT idcase FROM event_log WHERE timestamp BETWEEN '2018-03-01' AND '2018-03-31' GROUP BY idcase HAVING max(timestamp) BETWEEN '2018-03-01' AND '2018-03-31'
SELECT idcase FROM event_log WHERE timestamp BETWEEN '2018-03-01' AND '2018-03-31' AND activity = 'finalizado';
SELECT * FROM event_log WHERE timestamp BETWEEN '2018-03-01' AND '2018-03-31' AND activity = 'FINALIZOU'
SELECT idcase FROM event_log WHERE activity = 'Declaração rejeitada pelo pré-aprovador' AND resource!= 'Douglas'
SELECT DISTINCT idcase FROM event_log WHERE activity = 'Declaração rejeitada pelo pré-aprovador' AND resource!= 'Douglas'
SELECT idcase FROM event_log WHERE activity = 'Declaração rejeitada pelo pré-aprovador' AND resource!= 'Douglas'
SELECT DISTINCT idcase FROM event_log WHERE activity = 'Declaração rejeitada pelo pré-aprovador' AND resource!= 'Douglas';
SELECT DISTINCT idcase FROM event_log WHERE activity = 'Declaração rejeitada pelo pré-aprovador' AND resource!= 'Douglas'
SELECT idcase FROM event_log WHERE activity = 'Declaração rejeitada pelo pré-aprovador' AND resource!= 'Douglas'
SELECT DISTINCT idcase FROM event_log WHERE activity = 'Declaração rejeitada pelo pré-aprovador' AND resource!= 'Douglas'
SELECT DISTINCT idcase FROM event_log WHERE activity = 'Declaração rejeitada pelo pré-aprovador' AND resource!= 'Douglas';
SELECT idcase FROM event_log WHERE activity = 'Declaração rejeitada pelo pré-aprovador' AND resource!= 'Douglas'
SELECT idcase FROM event_log WHERE activity = 'Declaração rejeitada pelo pré-aprovador' AND resource!= 'Douglas'
SELECT idcase FROM event_log WHERE activity = 'Declaração rejeitada pelo pré-aprovador' AND resource!= 'Douglas'
SELECT DISTINCT idcase, resource FROM event_log WHERE activity = 'Declaração rejeitada pelo pré-aprovador' AND resource!= 'Douglas'
SELECT * FROM event_log WHERE activity = 'Declaração rejeitada pelo pré-aprovador' AND idcase NOT LIKE '%Douglas%'
SELECT COUNT(DISTINCT resource) FROM event_log;
SELECT COUNT(DISTINCT resource) FROM event_log;
SELECT COUNT(DISTINCT resource) FROM event_log;
SELECT COUNT(DISTINCT id) AS num_people FROM event_log
SELECT COUNT(DISTINCT resource) FROM event_log;
SELECT COUNT(DISTINCT id) FROM event_log
SELECT COUNT(DISTINCT resource) AS num_resources FROM event_log;
SELECT COUNT(DISTINCT resource) FROM event_log;
SELECT COUNT(DISTINCT resource) AS num_resources FROM event_log
SELECT COUNT(DISTINCT resource) FROM event_log;
SELECT COUNT(DISTINCT idcase) AS num_cases FROM event_log
SELECT COUNT(DISTINCT resource) AS num_resources FROM event_log WHERE idcase IS NOT NULL;
SELECT COUNT(DISTINCT resource) AS total_resources FROM event_log;
SELECT resource, SUM(cost) AS total_cost FROM event_log GROUP BY resource
SELECT SUM(1) AS total_events, resource FROM event_log GROUP BY resource
SELECT resource, COUNT(*) AS total_events FROM event_log GROUP BY resource
SELECT resource, SUM(cost) AS total_cost FROM event_log GROUP BY resource
SELECT * FROM event_log WHERE cost > 2.225
SELECT idcase FROM event_log WHERE cost > 2225 GROUP BY idcase HAVING COUNT(*) > 0
SELECT idcase FROM event_log WHERE cost > 2.225 GROUP BY idcase
SELECT * FROM event_log WHERE cost > 2225;
SELECT id FROM event_log WHERE cost > 2225.0
SELECT resource, COUNT(*) as num_events FROM event_log GROUP BY resource ORDER BY num_events DESC LIMIT 1;
SELECT resource, COUNT(*) AS num_events FROM event_log GROUP BY resource ORDER BY num_events DESC;
SELECT resource, COUNT(*) as total_events FROM event_log GROUP BY resource ORDER BY total_events DESC LIMIT 1;
SELECT resource, COUNT(*) as total_events FROM event_log GROUP BY resource ORDER BY total_events DESC LIMIT 1;
SELECT resource, COUNT(*) as total_events FROM event_log GROUP BY resource ORDER BY total_events DESC;
SELECT resource, COUNT(*) AS num_events FROM event_log GROUP BY resource ORDER BY num_events DESC LIMIT 1;
SELECT resource, COUNT(*) as num_events FROM event_log GROUP BY resource ORDER BY num_events DESC LIMIT 1;
SELECT resource, COUNT(*) AS num_events FROM event_log GROUP BY resource ORDER BY num_events DESC LIMIT 1;
SELECT resource, COUNT(*) AS num_events FROM event_log GROUP BY resource ORDER BY num_events DESC;
SELECT resource, COUNT(*) AS num_events FROM event_log GROUP BY resource ORDER BY num_events DESC LIMIT 1;
SELECT idcase, COUNT(*) as num_processamentos FROM event_log WHERE activity = 'processamento de declaração' GROUP BY idcase ORDER BY num_processamentos DESC;
SELECT resource, COUNT(*) as num_events FROM event_log GROUP BY resource ORDER BY num_events DESC;
SELECT resource, COUNT(*) as num_events FROM event_log GROUP BY resource ORDER BY num_events DESC LIMIT 1;
SELECT resource, COUNT(*) as num_events FROM event_log GROUP BY resource ORDER BY num_events DESC;
SELECT resource, COUNT(*) as num_events FROM event_log GROUP BY resource ORDER BY num_events DESC LIMIT 1;
SELECT resource, COUNT(*) as num_events FROM event_log GROUP BY resource ORDER BY num_events DESC LIMIT 1;
SELECT resource, COUNT(*) as num_events FROM event_log GROUP BY resource ORDER BY num_events DESC LIMIT 1;
SELECT resource, COUNT(*) as total_events FROM event_log GROUP BY resource ORDER BY total_events DESC LIMIT 1;
SELECT resource, COUNT(*) as total_actions FROM event_log GROUP BY resource ORDER BY total_actions DESC;
SELECT resource, COUNT(*) AS num_events FROM event_log GROUP BY resource ORDER BY num_events DESC;
SELECT resource, COUNT(*) as num_events FROM event_log GROUP BY resource ORDER BY num_events DESC;
SELECT resource, COUNT(*) as quantidade_eventos FROM event_log GROUP BY resource ORDER BY quantidade_eventos DESC;
SELECT resource, COUNT(*) AS event_count FROM event_log GROUP BY resource ORDER BY event_count DESC;
SELECT resource, COUNT(*) as num_executions FROM event_log GROUP BY resource ORDER BY num_executions DESC;
SELECT resource, COUNT(*) AS total_actions FROM event_log GROUP BY resource ORDER BY total_actions DESC;
SELECT COUNT(*) FROM event_log WHERE cost IS NULL;
SELECT COUNT(*) FROM event_log WHERE cost IS NULL;
SELECT COUNT(*) FROM event_log WHERE cost IS NULL;
SELECT * FROM event_log WHERE cost IS NOT NULL;
SELECT COUNT(*) FROM event_log WHERE cost IS NULL;
SELECT * FROM event_log WHERE cost IS NOT NULL;
SELECT * FROM event_log WHERE cost IS NOT NULL;
SELECT * FROM event_log WHERE cost IS NOT NULL;
SELECT * FROM event_log WHERE cost IS NOT NULL;
SELECT * FROM event_log WHERE cost IS NOT NULL;
SELECT * FROM event_log WHERE activity = 'Início da viagem' OR activity = 'Requisição de pagamento'
SELECT * FROM event_log WHERE activity IN ('Início da viagem', 'Requisição de pagamento');
SELECT DISTINCT idcase FROM event_log WHERE idcase NOT IN (SELECT idcase FROM event_log WHERE activity = 'Requisição de pagamento' OR activity = 'Pagamento efetuado')
SELECT * FROM event_log WHERE activity = 'Início da viagem' OR activity = 'Requisição de pagamento'
SELECT * FROM event_log WHERE activity IN ('Início da viagem', 'Requisição de pagamento')
SELECT activity, COUNT(*) as frequency FROM event_log GROUP BY activity ORDER BY frequency DESC LIMIT 10;
SELECT activity, COUNT(*) as frequency FROM event_log GROUP BY activity ORDER BY frequency DESC
SELECT activity, COUNT(*) as frequency FROM event_log GROUP BY activity ORDER BY frequency DESC LIMIT 1;
SELECT activity FROM ( SELECT activity, COUNT(*) as frequency FROM event_log GROUP BY activity ORDER BY COUNT(*) DESC ) as freq_table WHERE frequency > 1;
SELECT activity, COUNT(*) as total_executions FROM event_log WHERE activity LIKE '%declaração%' -- ajuste para incluir apenas as atividades relacionadas às declarações GROUP BY activity ORDER BY total_executions DESC;
SELECT activity, COUNT(*) as frequency FROM event_log GROUP BY activity ORDER BY frequency DESC
SELECT activity, COUNT(*) as frequency FROM event_log GROUP BY activity ORDER BY frequency DESC;
SELECT activity, COUNT(*) as frequency FROM event_log GROUP BY activity ORDER BY frequency DESC;
SELECT activity, COUNT(*) as frequency FROM event_log WHERE activity NOT LIKE '%id%' AND activity NOT LIKE '%cost%' AND activity NOT LIKE '%timestamp%' AND activity NOT LIKE '%resource%' AND activity NOT LIKE '%idcase%' GROUP BY activity ORDER BY frequency DESC;
SELECT * FROM event_log WHERE strftime('%Y', timestamp) = '2017';
SELECT * FROM event_log WHERE EXTRACT(YEAR FROM timestamp) = 2017
SELECT * FROM event_log WHERE strftime('%Y', timestamp) = '2017';
SELECT * FROM event_log WHERE YEAR(timestamp) = 2017;
SELECT * FROM event_log WHERE strftime('%Y', timestamp) = '2017';
SELECT * FROM event_log WHERE EXTRACT(YEAR FROM timestamp) = 2017
SELECT * FROM event_log WHERE strftime('%Y', timestamp) = '2017';
SELECT * FROM event_log WHERE strftime('%Y', timestamp) = '2017';
SELECT * FROM event_log WHERE strftime('%Y', timestamp) = '2017';
SELECT * FROM event_log WHERE strftime('%Y', timestamp) = '2017';
SELECT * FROM event_log WHERE timestamp BETWEEN '2017-01-01' AND '2017-12-31'
SELECT * FROM event_log WHERE timestamp BETWEEN '2017-01-01' AND '2017-12-31' AND activity = 'declaração';
SELECT activity, COUNT(*) as frequency, SUM(cost) as total_cost FROM event_log WHERE timestamp BETWEEN '2017-01-01' AND '2017-12-31' GROUP BY activity ORDER BY frequency DESC;
SELECT activity, COUNT(*) AS frequency FROM event_log WHERE timestamp BETWEEN '2017-01-01' AND '2017-12-31' GROUP BY activity ORDER BY frequency DESC;
SELECT activity, COUNT(*) as count FROM event_log WHERE timestamp >= '2017-01-01' AND timestamp < '2018-01-01' GROUP BY activity ORDER BY count DESC;
SELECT idcase, COUNT(*) as num_events FROM event_log GROUP BY idcase HAVING COUNT(*) <= 20
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(*) <= 20;
SELECT idcase, COUNT(*) AS num_events FROM event_log GROUP BY idcase HAVING COUNT(*) <= 20
SELECT idcase, COUNT(*) as count_activities FROM event_log GROUP BY idcase HAVING COUNT(*) <= 20
SELECT idcase, COUNT(*) AS num_events FROM event_log GROUP BY idcase HAVING COUNT(*) <= 20;
SELECT * FROM event_log WHERE idcase IN (SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(*) <= 20)
SELECT idcase, COUNT(*) AS num_events FROM event_log GROUP BY idcase HAVING COUNT(*) <= 20
SELECT resource, COUNT(*) as total_cases FROM event_log GROUP BY resource ORDER BY total_cases DESC LIMIT 5;
SELECT resource, COUNT(DISTINCT idcase) as num_cases from event_log GROUP BY resource ORDER BY num_cases DESC;
SELECT resource, COUNT(*) as total_cases FROM event_log GROUP BY resource ORDER BY total_cases DESC LIMIT 5;
SELECT resource, COUNT(*) as num_cases FROM event_log GROUP BY resource ORDER BY num_cases DESC LIMIT 5;
SELECT resource, COUNT(*) as total_activities FROM event_log GROUP BY resource ORDER BY total_activities DESC LIMIT 5;
SELECT resource, COUNT(*) as total_events FROM event_log GROUP BY resource ORDER BY total_events DESC LIMIT 5;
SELECT resource, COUNT(*) as total_events FROM event_log GROUP BY resource ORDER BY total_events DESC LIMIT 5;
SELECT resource, COUNT(*) as total_events FROM event_log GROUP BY resource ORDER BY total_events DESC LIMIT 5;
SELECT resource, COUNT(*) as num_events FROM event_log GROUP BY resource ORDER BY num_events DESC LIMIT 5;
SELECT resource, COUNT(*) as total_activities FROM event_log WHERE activity = 'processamento' GROUP BY resource ORDER BY total_activities DESC LIMIT 5;
SELECT resource, COUNT(*) AS occurrences FROM event_log WHERE activity = 'Início da viagem' AND strftime('%Y', timestamp) = '2016' GROUP BY resource
SELECT resource, COUNT(*) as count FROM event_log WHERE activity = 'Início da viagem' AND strftime('%Y', timestamp) = '2016' GROUP BY resource
SELECT resource, COUNT(*) AS num_execucoes FROM event_log WHERE activity = 'Início da viagem' AND strftime('%Y', timestamp) = '2016' GROUP BY resource
SELECT resource, COUNT(*) as count FROM event_log WHERE activity = 'Início da viagem' AND strftime('%Y', timestamp) = '2016' GROUP BY resource
SELECT resource, COUNT(*) AS num_execucoes FROM event_log WHERE activity = 'Início da viagem' AND strftime('%Y', timestamp) = '2016' GROUP BY resource
SELECT resource, COUNT(*) AS num_occurrences FROM event_log WHERE activity = 'Início da viagem' AND EXTRACT(YEAR FROM timestamp) = 2016 GROUP BY resource ORDER BY num_occurrences DESC;
SELECT resource, COUNT(*) AS total_ocorrencias FROM event_log WHERE activity = 'Início da viagem' AND EXTRACT(YEAR FROM timestamp) = 2016 GROUP BY resource ORDER BY total_ocorrencias DESC;
SELECT e.name, COUNT(*) AS num_actions FROM event_log el JOIN employees e ON el.idcase = e.employee_id WHERE el.activity ='start_trip' AND el.timestamp BETWEEN '2016-01-01' AND '2017-01-01' GROUP BY e.name
SELECT resource, COUNT(*) AS num_activities FROM event_log WHERE activity = 'Início da viagem' AND strftime('%Y', timestamp) = '2016' GROUP BY resource
SELECT resource, COUNT(*) as count FROM event_log WHERE activity = 'Declaração rejeitada pelo supervisor' GROUP BY resource
SELECT resource, COUNT(*) as occurrences FROM event_log WHERE activity = 'Declaração rejeitada pelo supervisor' GROUP BY resource
SELECT resource, COUNT(*) AS num_execucoes FROM event_log WHERE activity = 'Declaração rejeitada pelo supervisor' GROUP BY resource
SELECT resource, COUNT(*) as occurrences FROM event_log WHERE activity = 'Declaração rejeitada pelo supervisor' GROUP BY resource
SELECT resource, COUNT(*) AS num_execucoes FROM event_log WHERE activity = 'Declaração rejeitada pelo supervisor' GROUP BY resource
SELECT resource, COUNT(*) AS occurrences FROM event_log WHERE activity = 'Declaração rejeitada pelo supervisor' GROUP BY resource
SELECT resource, COUNT(*) AS num_execucoes FROM event_log WHERE activity = 'Declaração rejeitada pelo supervisor' GROUP BY resource
SELECT resource, COUNT(*) as quantidade_ocorrencias FROM event_log WHERE activity = 'Declaração rejeitada pelo supervisor' GROUP BY resource ORDER BY quantidade_ocorrencias DESC;
SELECT resource, COUNT(*) as ocorrencias FROM event_log WHERE activity = 'Declaração rejeitada pelo supervisor' GROUP BY resource
SELECT resource, COUNT(*) as total_occurrences FROM event_log WHERE activity = 'Declaração rejeitada pelo supervisor' GROUP BY resource
SELECT COUNT(*), resource FROM event_log WHERE activity = 'Declaração rejeitada pelo supervisor' GROUP BY resource
SELECT idcase, COUNT(*) as num_activities FROM event_log GROUP BY idcase HAVING COUNT(*) > 20
SELECT idcase, COUNT(*) AS num_activities FROM event_log GROUP BY idcase HAVING COUNT(*) > 20
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(*) > 20
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(*) > 20;
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(*) > 20
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(*) > 20
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(*) > 20
SELECT idcase, COUNT(*) AS num_occurrences FROM event_log GROUP BY idcase HAVING COUNT(*) > 20
SELECT * FROM event_log WHERE id IN ( SELECT id FROM event_log GROUP BY id HAVING COUNT(*) > 20 )
SELECT idcase, COUNT(*) as num_events FROM event_log GROUP BY idcase ORDER BY num_events DESC LIMIT 10;
SELECT idcase, COUNT(*) as total_activities FROM event_log GROUP BY idcase ORDER BY total_activities DESC LIMIT 10;
WITH ranked_cases AS ( SELECT idcase, COUNT(*) as num_events, RANK() OVER (ORDER BY COUNT(*) DESC) as rank FROM event_log GROUP BY idcase ) SELECT idcase FROM ranked_cases WHERE rank = 1;
SELECT idcase, COUNT(DISTINCT activity) AS num_activities FROM event_log GROUP BY idcase ORDER BY num_activities DESC;
SELECT idcase, COUNT(*) as num_events FROM event_log GROUP BY idcase ORDER BY num_events DESC LIMIT 5;
SELECT idcase, COUNT(*) as num_activities FROM event_log GROUP BY idcase ORDER BY num_activities DESC LIMIT 10;
SELECT idcase, COUNT(*) as num_actions FROM event_log GROUP BY idcase ORDER BY num_actions DESC;
SELECT e.idcase FROM event_log AS e WHERE e.resource = 'Sara' AND e.activity!= 'Requisição de pagamento' AND NOT EXISTS ( SELECT 1 FROM event_log AS e2 WHERE e2.idcase = e.idcase AND e2.activity = 'Requisição de pagamento' )
SELECT idcase FROM event_log WHERE resource = 'Sara' AND activity!='requisição de pagamento' AND id NOT IN ( SELECT id FROM event_log WHERE resource = 'Sara' AND activity ='requisição de pagamento' )
SELECT idcase FROM event_log WHERE resource = 'Sara' AND activity!='requisição de pagamento'
SELECT idcase FROM event_log WHERE resource = 'Sara' AND activity!='requisição de pagamento'
SELECT idcase FROM event_log WHERE activity!= 'Requisição de pagamento' AND resource = 'Sara'
SELECT el.* FROM event_log el JOIN employees e ON el.idcase = e.id WHERE e.name = 'Sara' AND NOT EXISTS ( SELECT 1 FROM payment_requests pr WHERE pr.id = el.id )
SELECT * FROM event_log WHERE timestamp BETWEEN '2017-01-10' AND '2017-02-01' AND idcase = 'declaração 143598';
SELECT * FROM event_log WHERE idcase = 'declaração 143598' AND timestamp BETWEEN '2017-01-10' AND '2017-02-01';
SELECT * FROM event_log WHERE idcase = 'declaração 143598' AND timestamp BETWEEN '2017-01-10' AND '2017-02-01';
SELECT * FROM event_log WHERE timestamp BETWEEN '2017-01-10' AND '2017-02-01' AND idcase = 'declaração 143598';
SELECT * FROM event_log WHERE timestamp BETWEEN '2017-01-10' AND '2017-02-01' AND idcase = '143598';
SELECT COUNT(DISTINCT idcase), resource FROM event_log WHERE timestamp BETWEEN '2017-01-01' AND '2017-05-31' GROUP BY resource
SELECT resource, COUNT(DISTINCT idcase) AS num_cases FROM event_log WHERE timestamp BETWEEN '2017-01-01' AND '2017-05-31' GROUP BY resource
SELECT resource, COUNT(*) as count FROM event_log WHERE timestamp BETWEEN '2017-01-01' AND '2017-05-31' GROUP BY resource
SELECT resource, COUNT(*) as count FROM event_log WHERE timestamp BETWEEN '2017-01-01' AND '2017-05-31' GROUP BY resource
SELECT resource, COUNT(DISTINCT idcase) AS casos FROM event_log WHERE timestamp BETWEEN '2017-01-01' AND '2017-05-31' GROUP BY resource
SELECT resource, COUNT(*) as total_cases FROM event_log WHERE timestamp BETWEEN '2017-01-01' AND '2017-05-31' GROUP BY resource
SELECT resource, COUNT(*) as count FROM event_log WHERE timestamp BETWEEN '2017-01-01' AND '2017-05-31' GROUP BY resource
SELECT COUNT(DISTINCT idcase), resource FROM event_log WHERE timestamp BETWEEN '2017-01-01' AND '2017-05-31' GROUP BY resource
SELECT resource, COUNT(*) as casos FROM event_log WHERE timestamp BETWEEN '2017-01-01' AND '2017-05-31' GROUP BY resource
SELECT resource, COUNT(*) as casos FROM event_log WHERE timestamp BETWEEN '2017-01-01' AND '2017-05-31' GROUP BY resource
SELECT resource, COUNT(DISTINCT id) AS num_declarations FROM event_log WHERE timestamp BETWEEN '2017-01-01' AND '2017-05-31' GROUP BY resource
SELECT idcase, COUNT(*) as num_activities FROM event_log GROUP BY idcase ORDER BY num_activities DESC LIMIT 10;
SELECT idcase, COUNT(*) as num_activities FROM event_log GROUP BY idcase ORDER BY num_activities DESC LIMIT 10;
SELECT idcase, COUNT(*) as num_activities FROM event_log GROUP BY idcase ORDER BY num_activities DESC LIMIT 10;
SELECT idcase, COUNT(*) as total_events FROM event_log GROUP BY idcase ORDER BY total_events DESC LIMIT 10;
SELECT idcase, COUNT(*) as total_events FROM event_log GROUP BY idcase ORDER BY total_events DESC LIMIT 10;
SELECT idcase, COUNT(*) as num_activities FROM event_log GROUP BY idcase ORDER BY num_activities DESC LIMIT 10;
SELECT idcase, COUNT(*) as num_activities FROM event_log GROUP BY idcase ORDER BY num_activities DESC LIMIT 10;
SELECT idcase, COUNT(*) as num_executions FROM event_log GROUP BY idcase ORDER BY num_executions DESC LIMIT 10;
SELECT idcase, COUNT(*) as num_activities FROM event_log GROUP BY idcase ORDER BY num_activities DESC LIMIT 10;
SELECT a.idcase, COUNT(*) as num_actions, GROUP_CONCAT(DISTINCT a.activity, ',') as activities FROM event_log a JOIN event_log b ON a.idcase = b.idcase AND a.id < b.id GROUP BY a.idcase ORDER BY num_actions DESC LIMIT 10;
SELECT activity, COUNT(*) as count FROM event_log GROUP BY activity ORDER BY count DESC LIMIT 10;
SELECT idcase, COUNT(*) as num_events FROM event_log GROUP BY idcase ORDER BY num_events DESC LIMIT 10;
SELECT idcase, COUNT(*) as total_activities FROM event_log GROUP BY idcase ORDER BY total_activities DESC LIMIT 10;
SELECT idcase, COUNT(*) as total_events FROM event_log GROUP BY idcase ORDER BY total_events DESC LIMIT 10;
SELECT idcase, COUNT(*) as num_events FROM event_log GROUP BY idcase ORDER BY num_events DESC LIMIT 10;
SELECT idcase, COUNT(*) as num_events FROM event_log GROUP BY idcase ORDER BY num_events DESC LIMIT 10;
SELECT idcase, COUNT(*) as total_events FROM event_log GROUP BY idcase ORDER BY total_events DESC LIMIT 10;
SELECT idcase, COUNT(*) as total_activities FROM event_log GROUP BY idcase ORDER BY total_activities DESC LIMIT 10;
SELECT idcase, SUM(cost) AS total_cost FROM event_log GROUP BY idcase
SELECT idcase, SUM(cost) AS total_cost FROM event_log GROUP BY idcase
SELECT idcase, SUM(cost) AS total_cost FROM event_log GROUP BY idcase
SELECT idcase, SUM(cost) as total_cost FROM event_log GROUP BY idcase
SELECT idcase, SUM(cost) AS total_cost FROM event_log GROUP BY idcase
SELECT idcase, SUM(cost) AS total_cost FROM event_log GROUP BY idcase
SELECT idcase, SUM(cost) AS total_cost FROM event_log GROUP BY idcase
SELECT idcase, SUM(cost) AS total_cost FROM event_log GROUP BY idcase;
SELECT idcase, MAX(strftime('%s', timestamp)) - MIN(strftime('%s', timestamp)) FROM event_log GROUP BY idcase
SELECT resource, COUNT(*) AS num_events FROM event_log GROUP BY resource HAVING COUNT(*) >= 100 ORDER BY num_events DESC;
SELECT resource, COUNT(*) as num_events FROM event_log GROUP BY resource HAVING COUNT(*) >= 100 ORDER BY num_events DESC;
SELECT employee_id, COUNT(*) as total_actions FROM event_log WHERE activity LIKE 'employee_action%' -- substitua por 'employee_action%' para filtrar apenas as ações realizadas por funcionários GROUP BY employee_id HAVING COUNT(*) >= 100 ORDER BY total_actions DESC;
SELECT idcase, activity, timestamp FROM event_log ORDER BY idcase, timestamp;
SELECT idcase, activity, timestamp FROM event_log ORDER BY idcase, timestamp
SELECT idcase, MIN(timestamp) AS start_date, id FROM event_log GROUP BY idcase ORDER BY idcase, start_date;
SELECT idcase, MIN(timestamp) AS start_time, id FROM event_log GROUP BY idcase, id ORDER BY idcase, start_time;
SELECT idcase, activity, timestamp FROM event_log ORDER BY idcase, timestamp
SELECT idcase, timestamp, activity, cost FROM event_log ORDER BY idcase, timestamp
SELECT COUNT(*), resource FROM event_log WHERE activity = 'declaração aprovada pela administração' GROUP BY resource
SELECT COUNT(*), resource FROM event_log WHERE activity = 'Declaração aprovada pela administração' GROUP BY resource
SELECT COUNT(*), resource FROM event_log WHERE activity = 'Declaração aprovada pela administração' GROUP BY resource
SELECT resource, COUNT(*) AS occurrences FROM event_log WHERE activity = 'Declaração aprovada pela administração' GROUP BY resource
SELECT resource, count(*) as num_approvals FROM event_log WHERE activity = 'Declaração aprovada pela administração' GROUP BY resource
SELECT resource, COUNT(*) AS num_events FROM event_log WHERE activity = 'Declaração aprovada pela administração' GROUP BY resource
SELECT resource, COUNT(*) AS quantidade FROM event_log WHERE activity = 'Declaração aprovada pela administração' GROUP BY resource
SELECT resource, count(*) as num_approvals FROM event_log WHERE activity = 'Declaração aprovada pela administração' GROUP BY resource
SELECT activity, COUNT(*) AS occurrences FROM event_log WHERE resource = 'Thomas' AND timestamp BETWEEN '2017-01-01' AND '2018-01-01' GROUP BY activity
SELECT activity, COUNT(*) AS quantidade FROM event_log WHERE resource = 'Thomas' AND timestamp BETWEEN '2017-01-01' AND '2018-01-01' GROUP BY activity ORDER BY quantidade DESC;
SELECT activity, COUNT(*) as quantidade FROM event_log WHERE resource = 'Thomas' and timestamp between '2017-01-01' and '2017-12-31' GROUP BY activity
SELECT activity, COUNT(*) AS frequency FROM event_log WHERE resource = 'Thomas' AND timestamp BETWEEN '2017-01-01' AND '2018-01-01' GROUP BY activity ORDER BY frequency DESC;
SELECT COUNT(*) FROM event_log WHERE resource = 'Thomas' AND EXTRACT(YEAR FROM timestamp) = 2017
SELECT COUNT(*) FROM event_log WHERE resource = 'Thomas' AND timestamp BETWEEN '2017-01-01' AND '2018-01-01';
SELECT COUNT(*) FROM event_log WHERE resource = 'Thomas' AND timestamp BETWEEN '2017-01-01' AND '2018-01-01';
SELECT COUNT(*) FROM event_log WHERE resource = 'Thomas' AND timestamp BETWEEN '2017-01-01' AND '2017-12-31';
SELECT COUNT(*) FROM event_log WHERE resource = 'Thomas' AND timestamp BETWEEN '2017-01-01' AND '2017-12-31';
SELECT SUM(cost) AS carga_trabalho FROM event_log WHERE resource = 'Thomas' AND timestamp BETWEEN '2017-01-01' AND '2018-01-01' AND activity LIKE '%processamento de declarações%'
SELECT activity, COUNT(*) FROM event_log GROUP BY activity;
SELECT activity, MAX(timestamp) AS recent_timestamp FROM event_log GROUP BY activity;
SELECT activity, MAX(timestamp) AS recent_date FROM event_log GROUP BY activity
SELECT activity, MAX(timestamp) AS last_execution FROM event_log GROUP BY activity
SELECT activity, MAX(timestamp) AS last_execution FROM event_log GROUP BY activity
SELECT activity, MAX(timestamp) AS last_occurrence FROM event_log GROUP BY activity
SELECT activity, MAX(timestamp) AS latest_timestamp FROM event_log GROUP BY activity
SELECT activity, MAX(timestamp) AS last_occurrence FROM event_log GROUP BY activity
SELECT YEAR(timestamp) AS year, activity, COUNT(*) AS count FROM event_log WHERE (activity = 'Declaração aprovada pelo supervisor' AND YEAR(timestamp) = 2017) OR (activity = 'Permissão rejeitada pelo funcionário' AND YEAR(timestamp) = 2018) GROUP BY year, activity ORDER BY year, activity;
SELECT activity, COUNT(*) AS count FROM event_log WHERE strftime('%Y', timestamp) IN ('2017', '2018') AND (activity = 'Declaração aprovada pelo supervisor' OR activity = 'Permissão rejeitada pelo funcionário') GROUP BY activity;
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE timestamp BETWEEN '2017-01-01' AND '2018-01-01' AND activity = 'Declaração aprovada pelo supervisor';
SELECT COUNT(CASE WHEN activity = 'Declaração aprovada pelo supervisor' AND strftime('%Y', timestamp) = '2017' THEN 1 END) AS declaração_2017, COUNT(CASE WHEN activity = 'Permissão rejeitada pelo funcionário' AND strftime('%Y', timestamp) = '2018' THEN 1 END) AS permissao_2018 FROM event_log WHERE activity IN ('Declaração aprovada pelo supervisor', 'Permissão rejeitada pelo funcionário')
SELECT COUNT(*) FROM event_log WHERE activity IN ('Declaração aprovada pelo supervisor', 'Permissão rejeitada pelo funcionário') AND EXTRACT(YEAR FROM timestamp) = 2017 OR EXTRACT(YEAR FROM timestamp) = 2018;
SELECT count(DISTINCT e1.idcase) FROM event_log e1 INNER JOIN event_log e2 ON e1.idcase = e2.idcase WHERE e1.activity = 'Permissão final aprovada pelo supervisor' AND e2.activity = 'Início da viagem' AND e1.timestamp < e2.timestamp
SELECT activity, timestamp, id FROM event_log ORDER BY timestamp DESC;
SELECT activity, timestamp, id FROM event_log ORDER BY timestamp DESC;
SELECT activity, MAX(timestamp) AS timestamp, id FROM event_log GROUP BY activity, id ORDER BY timestamp;
SELECT COUNT(*) FROM event_log WHERE resource = 'Thomas' AND activity = 'declaração requisitada pelo funcionário' AND timestamp BETWEEN '2017-01-01' AND '2018-01-01';
SELECT COUNT(*) FROM event_log WHERE activity = 'declaração requisitada pelo funcionário' AND resource = 'Thomas' AND timestamp between '2018-01-01' and '2018-07-01';
SELECT COUNT(*) as ocorrencias FROM event_log WHERE activity = 'declaração requisitada pelo funcionário' AND resource = 'Thomas'
SELECT COUNT(*) FROM event_log WHERE activity = 'declaração requisitada pelo funcionário' AND resource = 'Thomas';
SELECT COUNT(*) FROM event_log WHERE resource = 'Thomas' AND activity = 'declaração requisitada pelo funcionário'
SELECT COUNT(*) FROM event_log WHERE resource = 'Thomas' AND activity LIKE '%declaração%' AND timestamp BETWEEN '2017-01-01' AND '2018-01-01';
SELECT COUNT(*) FROM event_log WHERE resource = 'Diana' AND cost IS NOT NULL;
SELECT COUNT(*) FROM event_log WHERE resource = 'Diana' AND cost IS NOT NULL;
SELECT COUNT(*) FROM event_log WHERE resource = 'Diana' AND cost IS NOT NULL;
SELECT * FROM event_log WHERE resource = 'Diana' AND cost IS NOT NULL;
SELECT activity, COUNT(*) AS num_events_with_cost FROM event_log WHERE resource = 'Diana' AND cost IS NOT NULL GROUP BY activity ORDER BY num_events_with_cost DESC;
SELECT activity, count(*) as num_events FROM event_log WHERE resource = 'Diana' AND cost IS NOT NULL GROUP BY activity
SELECT activity FROM event_log WHERE resource = 'Diana' AND cost IS NOT NULL
SELECT COUNT(DISTINCT resource) AS num_resources FROM event_log WHERE idcase IN ( SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(*) > 3 )
SELECT COUNT(DISTINCT resource) AS num_resources FROM event_log WHERE idcase IN ( SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(*) > 3 )
SELECT COUNT(DISTINCT resource) AS num_resources FROM event_log WHERE id IN ( SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(*) > 3 )
SELECT COUNT(DISTINCT resource) AS num_resources FROM event_log WHERE idcase IN ( SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(*) > 3 )
SELECT COUNT(DISTINCT id) AS num_employees FROM event_log WHERE idcase IN ( SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(*) > 3 )
SELECT DISTINCT resource FROM event_log WHERE activity = 'Declaração rejeitada pelo pré-aprovador';
SELECT DISTINCT resource FROM event_log WHERE activity = 'Declaração rejeitada pelo pré-aprovador';
SELECT DISTINCT resource FROM event_log WHERE activity = 'Declaração rejeitada pelo pré-aprovador';
SELECT DISTINCT resource FROM event_log WHERE activity = 'Declaração rejeitada pelo pré-aprovador';
SELECT resource, COUNT(*) AS count FROM event_log WHERE activity = 'Declaração rejeitada pelo pré-aprovador' GROUP BY resource ORDER BY count DESC;
SELECT resource, count(*) as quantidade FROM event_log WHERE activity = 'Declaração rejeitada pelo pré-aprovador' GROUP BY resource ORDER BY quantidade DESC;
SELECT u.name FROM event_log el JOIN users u ON el.resource = u.name WHERE el.activity = 'Declaração rejeitada pelo pré-aprovador'
SELECT COUNT(*) FROM event_log WHERE activity = 'declaração final aprovada pelo diretor' AND timestamp BETWEEN '2017-01-01' AND '2017-05-31'
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE activity = 'Declaração final aprovada pelo diretor' AND strftime('%Y-%m', timestamp) BETWEEN '2017-01' AND '2017-05';
SELECT COUNT(DISTINCT idcase) AS num_cases FROM event_log WHERE activity = 'Declaração final aprovada pelo diretor' AND timestamp BETWEEN '2017-01-01' AND '2017-05-31';
SELECT COUNT(*) FROM event_log WHERE activity = 'Declaração final aprovada por diretor' AND timestamp BETWEEN '2017-01-01' AND '2017-05-31'
SELECT * FROM "case_log" WHERE "resource" = 'Charles' AND NOT EXISTS ( SELECT 1 FROM "event_log" WHERE "idcase" = "case_log"."id" AND "timestamp" BETWEEN '2018-01-01' AND '2018-01-31' )
SELECT idcase FROM event_log WHERE resource = 'Charles' AND NOT EXISTS ( SELECT 1 FROM event_log WHERE idcase = event_log.idcase AND strftime('%Y-%m', timestamp) = '2018-01' )
SELECT idcase FROM event_log WHERE resource = 'Charles' AND strftime('%Y-%m', timestamp) = '2018-01' GROUP BY idcase HAVING COUNT(*) = 0
SELECT distinct resource FROM event_log WHERE resource = 'Charles' AND strftime('%Y-%m', timestamp)!= '2018-01'
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(*) > 1
SELECT idcase, COUNT(DISTINCT activity) AS num_activities FROM event_log GROUP BY idcase HAVING COUNT(DISTINCT activity) > 3
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(DISTINCT activity) > 3
SELECT idcase, COUNT(DISTINCT activity) AS num_activities FROM event_log GROUP BY idcase HAVING COUNT(DISTINCT activity) > 3
SELECT idcase, COUNT(DISTINCT activity) AS num_activities FROM event_log GROUP BY idcase HAVING COUNT(DISTINCT activity) > 3
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(DISTINCT activity) > 3
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(DISTINCT activity) > 3
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(DISTINCT activity) > 3;
SELECT idcase, COUNT(DISTINCT activity) AS num_activities FROM event_log GROUP BY idcase HAVING COUNT(DISTINCT activity) > 3
SELECT idcase, COUNT(DISTINCT activity) AS num_activities FROM event_log GROUP BY idcase HAVING COUNT(DISTINCT activity) > 3
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(*) > 3;
SELECT idcase, COUNT(*) AS num_events FROM event_log GROUP BY idcase HAVING COUNT(*) > 3;
SELECT count(*), idcase FROM event_log GROUP BY idcase;
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(*) > 3
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(*) > 3;
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(*) > 3;
SELECT idcase, COUNT(*) as num_events FROM event_log GROUP BY idcase HAVING COUNT(*) > 3
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(*) > 3
SELECT idcase, COUNT(*) as event_count FROM event_log WHERE idcase IN ( SELECT idcase FROM (SELECT idcase, strftime('%Y-%m-%d', timestamp) as event_date, COUNT(*) as event_count FROM event_log GROUP BY idcase, event_date HAVING event_count > 3) GROUP BY idcase HAVING COUNT(*) > 3 ) GROUP BY idcase ORDER BY event_count DESC;
SELECT idcase, TIMESTAMPDIFF(SECOND, MIN(timestamp), MAX(timestamp)) AS duration FROM event_log GROUP BY idcase
SELECT idcase, SUM(TIMESTAMPDIFF(SECOND, MIN(timestamp), MAX(timestamp))) AS total_time FROM event_log GROUP BY idcase
SELECT idcase, AVG(TIMESTAMPDIFF(SECOND, MIN(timestamp), MAX(timestamp))) AS average_duration FROM event_log GROUP BY idcase
SELECT idcase, MAX(timestamp) - MIN(timestamp) AS duration FROM event_log GROUP BY idcase
SELECT idcase, MAX(timestamp) - MIN(timestamp) AS duration FROM event_log GROUP BY idcase
SELECT idcase, AVG(DATEDIFF(SECOND, timestamp, LAG(timestamp) OVER (PARTITION BY idcase ORDER BY timestamp))) AS avg_processing_time FROM event_log GROUP BY idcase
SELECT idcase, resource FROM event_log GROUP BY idcase, resource HAVING COUNT(DISTINCT activity) = (SELECT COUNT(*) FROM event_log WHERE idcase = event_log.idcase)
SELECT idcase, resource FROM event_log GROUP BY idcase, resource HAVING COUNT(DISTINCT activity) = (SELECT COUNT(*) FROM event_log WHERE idcase = event_log.idcase)
SELECT idcase, resource FROM event_log GROUP BY idcase, resource HAVING COUNT(DISTINCT activity) = (SELECT COUNT(*) FROM event_log WHERE idcase = event_log.idcase)
SELECT idcase, resource FROM event_log GROUP BY idcase, resource HAVING COUNT(DISTINCT activity) = (SELECT COUNT(*) FROM event_log WHERE idcase = event_log.idcase)
SELECT idcase, resource FROM event_log GROUP BY idcase, resource HAVING COUNT(DISTINCT activity) = (SELECT COUNT(*) FROM event_log WHERE idcase = event_log.idcase)
SELECT el.idcase, el.resource FROM event_log el JOIN ( SELECT idcase, resource FROM event_log GROUP BY idcase, resource HAVING COUNT(DISTINCT activity) = (SELECT COUNT(*) FROM event_log WHERE idcase = el.idcase) ) AS same_resource ON el.idcase = same_resource.idcase AND el.resource = same_resource.resource;
SELECT idcase, resource FROM event_log GROUP BY idcase, resource HAVING COUNT(DISTINCT activity) = (SELECT COUNT(*) FROM event_log WHERE idcase = event_log.idcase)
SELECT idcase, resource FROM event_log GROUP BY idcase, resource HAVING COUNT(DISTINCT activity) = (SELECT COUNT(*) FROM event_log WHERE idcase = event_log.idcase)
SELECT idcase, resource FROM event_log GROUP BY idcase, resource HAVING COUNT(DISTINCT activity) = (SELECT COUNT(*) FROM event_log WHERE idcase = event_log.idcase)
SELECT idcase, resource FROM event_log GROUP BY idcase, resource HAVING COUNT(*) = (SELECT MAX(sub.total) FROM ( SELECT idcase, COUNT(*) AS total FROM event_log GROUP BY idcase ) AS sub);
SELECT DISTINCT idcase FROM event_log WHERE activity = 'Fim da viagem' AND timestamp BETWEEN '2016-01-01' AND '2017-12-31'
SELECT DISTINCT idcase FROM event_log WHERE activity = 'Fim da viagem' AND timestamp BETWEEN '2016-01-01' AND '2017-12-31'
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE activity = 'Fim da viagem' AND timestamp BETWEEN '2016-01-01' AND '2017-12-31';
SELECT idcase FROM event_log WHERE activity = 'Fim da viagem' AND timestamp BETWEEN '2016-01-01' AND '2017-12-31'
SELECT DISTINCT idcase FROM event_log WHERE activity = 'Fim da viagem' AND timestamp BETWEEN '2016-01-01 00:00:00' AND '2017-12-31 23:59:59';
SELECT idcase FROM event_log WHERE activity = 'Fim da viagem' AND timestamp BETWEEN '2016-01-01' AND '2017-12-31'
SELECT idcase FROM event_log WHERE activity = 'Fim da viagem' AND timestamp BETWEEN '2016-01-01' AND '2017-12-31'
SELECT idcase FROM event_log WHERE activity = 'Fim da viagem' AND strftime('%Y', timestamp) BETWEEN '2016' AND '2017' GROUP BY idcase HAVING COUNT(DISTINCT strftime('%Y-%m', timestamp)) = 1;
SELECT idcase FROM event_log WHERE activity = 'Fim da viagem' AND timestamp BETWEEN '2016-01-01' AND '2017-12-31';
SELECT DISTINCT idcase FROM event_log WHERE activity = 'Fim da viagem' AND timestamp BETWEEN '2016-01-01' AND '2017-12-31';
SELECT DISTINCT idcase, activity, strftime('%Y-%m', timestamp) AS timestamp_year_month FROM event_log WHERE activity = 'Fim da viagem' AND strftime('%Y', timestamp) IN ('2016', '2017') ORDER BY idcase, timestamp_year_month;
SELECT * FROM event_log WHERE activity LIKE '%rejeitada%';
SELECT * FROM event_log WHERE activity LIKE '%rejeitada%';
SELECT * FROM event_log WHERE activity LIKE '%rejeitada%';
SELECT * FROM event_log WHERE activity LIKE '%rejeitada%';
SELECT * FROM event_log WHERE activity LIKE '%rejeitada%';
SELECT * FROM event_log WHERE activity LIKE '%rejeitada%';
SELECT * FROM event_log WHERE activity = 'REJECT'
SELECT idcase, activity, COUNT(*) AS num_rejeicoes FROM event_log WHERE activity LIKE '%rejeição%' GROUP BY idcase, activity ORDER BY num_rejeicoes DESC;
SELECT idcase, MIN(cost) AS min_cost, MAX(cost) AS max_cost FROM event_log WHERE cost > 0 GROUP BY idcase;
SELECT idcase, MIN(cost) AS min_cost, MAX(cost) AS max_cost FROM event_log WHERE cost > 0 GROUP BY idcase;
SELECT idcase, MIN(cost) AS min_cost, MAX(cost) AS max_cost FROM event_log WHERE cost > 0 GROUP BY idcase;
SELECT idcase, MIN(cost) AS min_cost, MAX(cost) AS max_cost FROM event_log WHERE cost > 0 GROUP BY idcase
SELECT idcase, MIN(cost) AS min_cost, MAX(cost) AS max_cost FROM event_log WHERE cost > 0 GROUP BY idcase
SELECT idcase, MIN(cost) AS min_cost, MAX(cost) AS max_cost FROM event_log WHERE cost > 0 GROUP BY idcase
SELECT idcase, MIN(cost) AS min_cost, MAX(cost) AS max_cost FROM event_log WHERE cost > 0 GROUP BY idcase
SELECT idcase, MIN(cost) AS min_cost, MAX(cost) AS max_cost FROM event_log WHERE cost > 0 GROUP BY idcase
SELECT idcase, MIN(cost) AS min_cost, MAX(cost) AS max_cost FROM event_log WHERE cost > 0 GROUP BY idcase;
SELECT idcase, MIN(cost) AS min_cost, MAX(cost) AS max_cost FROM event_log WHERE cost > 0 GROUP BY idcase
SELECT idcase, MIN(cost) AS min_cost, MAX(cost) AS max_cost FROM event_log WHERE cost > 0 GROUP BY idcase
SELECT idcase, MIN(cost) AS min_cost, MAX(cost) AS max_cost FROM event_log WHERE cost > 0 GROUP BY idcase
SELECT idcase, MIN(timestamp) AS min_timestamp, MAX(timestamp) AS max_timestamp FROM event_log WHERE cost > 0 GROUP BY idcase
SELECT idcase, MIN(cost) AS min_cost, MAX(cost) AS max_cost FROM event_log WHERE cost > 0 GROUP BY idcase
SELECT el.idcase, TIMESTAMPDIFF(SECOND, e.start_time, el.timestamp) AS 'Fim da viagem', TIMESTAMPDIFF(SECOND, e.start_time, x.timestamp) AS 'Declaração rejeitada pelo funcionário', TIMESTAMPDIFF(SECOND, e.start_time, y.timestamp) AS 'Pagamento efetuado', f.activity FROM event_log el INNER JOIN ( SELECT idcase, MIN(timestamp) AS start_time FROM event_log GROUP BY idcase ) e ON e.idcase = el.idcase LEFT JOIN event_log x ON x.idcase = e.idcase AND x.activity = 'Declaração rejeitada pelo funcionário' LEFT JOIN event_log y ON y.idcase = e.idcase AND y.activity = 'Pagamento efetuado' INNER JOIN ( SELECT idcase, MAX(timestamp) AS end_time, activity FROM event_log WHERE activity = 'Fim da viagem' OR activity = 'Declaração rejeitada pelo funcionário' OR activity = 'Pagamento efetuado' GROUP BY idcase ) f ON f.idcase = e.idcase ORDER BY el.idcase;
SELECT p.idcase, strftime('%s', p.timestamp) - strftime('%s', e.start_time) as 'Tempo desde o início do caso até o fim da viagem ou declaração rejeitada ou pagamento efetuado', f.activity as 'Ultima atividade' FROM event_log p INNER JOIN (SELECT idcase, MIN(timestamp) as start_time FROM event_log GROUP BY idcase) e ON e.idcase = p.idcase LEFT JOIN event_log x ON x.idcase = e.idcase AND x.activity IN ('Fim da viagem', 'Declaração rejeitada pelo funcionário', 'Pagamento efetuado') LEFT JOIN event_log y ON y.idcase = e.idcase AND y.activity IN ('Fim da viagem', 'Declaração rejeitada pelo funcionário', 'Pagamento efetuado') INNER JOIN (SELECT idcase, MAX(timestamp) as end_time, activity FROM event_log WHERE activity IN ('Fim da viagem', 'Declaração rejeitada pelo funcionário', 'Pagamento efetuado') GROUP BY idcase, activity) f ON f.idcase = e.idcase AND f.end_time = COALESCE(x.timestamp, y.timestamp)
SELECT p.idcase, f.activity, COALESCE(x_time, y_time, z_time) as 'Tempo decorrido' FROM (SELECT idcase, MIN(timestamp) as start_time FROM event_log GROUP by idcase) e INNER JOIN event_log p ON e.idcase = p.idcase LEFT JOIN event_log x ON x.idcase = e.idcase AND x.activity = 'Declaração rejeitada pelo funcionário' LEFT JOIN event_log y ON y.idcase = e.idcase AND y.activity = 'Pagamento efetuado' LEFT JOIN event_log z ON z.idcase = e.idcase AND z.activity = 'Fim da viagem' INNER JOIN (SELECT idcase, MAX(timestamp) as end_time FROM event_log WHERE activity='Fim da viagem' OR activity='Declaração rejeitada pelo funcionário' OR activity='Pagamento efetuado' GROUP by idcase) f ON f.idcase = e.idcase WHERE p.activity IN ('Fim da viagem', 'Declaração rejeitada pelo funcionário', 'Pagamento efetuado') ORDER BY p.idcase;
SELECT el1.idcase, strftime('%s', el2.timestamp) - strftime('%s', el1.timestamp) as 'Tempo entre ação e finalização' FROM event_log el1 INNER JOIN ( SELECT idcase, MIN(timestamp) as start_time FROM event_log GROUP BY idcase ) el2 ON el1.idcase = el2.idcase AND el1.timestamp >= el2.start_time LEFT JOIN ( SELECT idcase, activity, timestamp FROM event_log WHERE activity IN ('Fim da viagem', 'Declaração rejeitada pelo funcionário', 'Pagamento efetuado') ) el3 ON el1.idcase = el3.idcase AND el1.timestamp < el3.timestamp WHERE el3.idcase IS NOT NULL ORDER BY el1.idcase;
WITH -- Primeira intervenção em uma declaração first_declaration AS ( SELECT idcase, MIN(timestamp) AS start_time FROM event_log WHERE activity LIKE '%declaração%' GROUP BY idcase ), -- Última intervenção que indica fim da viagem, declaração rejeitada ou pagamento efetuado last_event AS ( SELECT idcase, MAX(timestamp) AS end_time, activity FROM event_log WHERE activity IN ('fim da viagem', 'declaração rejeitada pelo funcionário', 'pagamento efetuado') GROUP BY idcase, activity ) SELECT d.idcase, strftime('%s', le.timestamp) - strftime('%s', fd.start_time) AS 'Tempo desde a primeira intervenção' FROM first_declaration fd INNER JOIN last_event le ON fd.idcase = le.idcase LEFT JOIN event_log e ON e.idcase = fd.idcase AND e.timestamp BETWEEN fd.start_time AND le.end_time WHERE e.activity IN ('fim da viagem', 'declaração rejeitada pelo funcionário', 'pagamento efetuado') ORDER BY d.idcase;
SELECT p.idcase, p.activity AS final_activity, CASE WHEN p.activity = 'Fim da viagem' THEN strftime('%s', p.timestamp) - strftime('%s', e.start_time) WHEN x.timestamp IS NOT NULL THEN strftime('%s', x.timestamp) - strftime('%s', e.start_time) WHEN y.timestamp IS NOT NULL THEN strftime('%s', y.timestamp) - strftime('%s', e.start_time) END AS time_taken FROM event_log p INNER JOIN (SELECT MIN(timestamp) as start_time, idcase FROM event_log GROUP by idcase) e ON e.idcase = p.idcase LEFT JOIN event_log x ON x.idcase = e.idcase AND x.activity = 'Declaração rejeitada pelo funcionário' LEFT JOIN event_log y ON y.idcase = e.idcase AND y.activity = 'Pagamento efetuado' WHERE p.activity IN ('Fim da viagem', 'Declaração rejeitada pelo funcionário', 'Pagamento efetuado') ORDER BY p.idcase;
SELECT e.idcase, e.activity, strftime('%s', p.timestamp) - strftime('%s', e.start_time) as 'Tempo desde o início do caso' FROM (SELECT idcase, MIN(timestamp) as start_time FROM event_log GROUP BY idcase) e INNER JOIN event_log p ON e.idcase = p.idcase LEFT JOIN event_log x ON x.idcase = e.idcase AND x.activity IN ('Declaração rejeitada pelo funcionário', 'Pagamento efetuado') LEFT JOIN event_log y ON y.idcase = e.idcase AND y.activity = 'Fim da viagem' WHERE p.timestamp = COALESCE(x.timestamp, y.timestamp, e.start_time) ORDER BY e.idcase;
SELECT p.idcase, p.activity, strftime('%s', p.timestamp) - strftime('%s', e.start_time) as 'Tempo desde o início do caso' FROM event_log p INNER JOIN (SELECT idcase, MIN(timestamp) as start_time FROM event_log GROUP BY idcase) e ON e.idcase = p.idcase WHERE p.activity IN ('Fim da viagem', 'Declaração rejeitada pelo funcionário', 'Pagamento efetuado') ORDER BY p.idcase, p.timestamp;
SELECT p.idcase, p.activity, strftime('%s', p.timestamp) - strftime('%s', e.start_time) as tempo_decorrido FROM event_log p INNER JOIN ( SELECT idcase, MIN(timestamp) as start_time FROM event_log GROUP BY idcase ) e ON e.idcase = p.idcase WHERE p.activity IN ('Fim da viagem', 'Declaração rejeitada pelo funcionário', 'Pagamento efetuado') ORDER BY p.idcase;
SELECT AVG(TIMESTAMPDIFF(SECOND, e1.timestamp, e2.timestamp)) AS average_time FROM event_log e1 JOIN event_log e2 ON e1.id = e2.id WHERE e1.activity = 'Início da viagem' AND e2.activity IN ('Fim da viagem', 'Rejeitada', 'Pagamento efetuado') ORDER BY average_time;
SELECT * FROM event_log WHERE activity = 'Requisição de pagamento';
SELECT * FROM event_log WHERE activity = 'Requisição de pagamento';
SELECT * FROM event_log WHERE activity = 'Requisição de pagamento'
SELECT * FROM event_log WHERE activity = 'Requisição de pagamento' AND idcase IN ( SELECT idcase FROM event_log WHERE activity = 'Declaração' )
SELECT AVG(TIMESTAMPDIFF(SECOND, MIN(timestamp), MAX(timestamp))) AS avg_duration, activity FROM event_log GROUP BY activity
SELECT activity, AVG(DATEDIFF(SECOND, timestamp, LAG(timestamp) OVER (PARTITION BY activity ORDER BY timestamp))) AS avg_duration FROM event_log GROUP BY activity
SELECT activity, AVG(DATEDIFF(timestamp, LAG(timestamp) OVER (PARTITION BY activity ORDER BY timestamp))) AS avg_duration FROM event_log GROUP BY activity
SELECT AVG(TIMESTAMPDIFF(SECOND, MIN(timestamp), MAX(timestamp))) AS average_duration, activity FROM event_log GROUP BY activity
SELECT AVG(duration) AS average_duration, activity FROM event_log GROUP BY activity;
SELECT activity, AVG(TIMEDIFF(timestamp, LAG(timestamp) OVER (PARTITION BY activity ORDER BY timestamp))) AS avg_duration FROM event_log GROUP BY activity
SELECT AVG(DATEDIFF(timestamp, LAG(timestamp) OVER (PARTITION BY activity ORDER BY timestamp))) AS average_duration, activity FROM event_log GROUP BY activity
SELECT activity, AVG(DATEDIFF(end_timestamp, timestamp)) AS average_duration FROM event_log GROUP BY activity;
SELECT AVG(duration) AS average_duration, activity FROM event_log GROUP BY activity;
SELECT AVG(TIMESTAMPDIFF(SECOND, MIN(timestamp), MAX(timestamp))) AS average_duration, activity FROM event_log GROUP BY activity
SELECT AVG(TIMESTAMPDIFF(SECOND, MIN(timestamp), MAX(timestamp))) AS average_duration, activity FROM event_log GROUP BY activity
SELECT activity, AVG(DATEDIFF(next_timestamp, timestamp)) AS avg_duration FROM (SELECT idcase, activity, timestamp, LEAD(timestamp) OVER (PARTITION BY idcase ORDER BY timestamp) AS next_timestamp FROM event_log) AS subquery GROUP BY activity
SELECT activity, AVG(DATEDIFF(SECOND, timestamp, LEAD(timestamp) OVER (PARTITION BY activity ORDER BY timestamp))) AS avg_duration FROM event_log GROUP BY activity
SELECT activity, AVG(DATEDIFF(next_timestamp, timestamp)) AS avg_duration FROM (SELECT idcase, activity, timestamp, LEAD(timestamp) OVER (PARTITION BY idcase ORDER BY timestamp) AS next_timestamp FROM event_log) AS subquery GROUP BY activity
SELECT activity, AVG(DATEDIFF(next_timestamp, timestamp)) AS avg_duration FROM (SELECT idcase, activity, timestamp, LEAD(timestamp) OVER (PARTITION BY idcase ORDER BY timestamp) AS next_timestamp FROM event_log) AS subquery GROUP BY activity
SELECT AVG(duration) AS average_duration, activity FROM event_log GROUP BY activity;
SELECT activity, AVG(DATEDIFF(timestamp, LAG(timestamp) OVER (PARTITION BY activity ORDER BY timestamp))) AS avg_duration FROM event_log GROUP BY activity
SELECT AVG(DATEDIFF(SECOND, timestamp, LEAD(timestamp) OVER (PARTITION BY activity ORDER BY timestamp)) / 60.0) AS avg_duration_minutes, activity FROM event_log GROUP BY activity
SELECT activity, AVG(DATEDIFF(SECOND, timestamp, LEAD(timestamp) OVER (PARTITION BY activity ORDER BY timestamp))) AS avg_duration FROM event_log GROUP BY activity
SELECT AVG(DATEDIFF(SECOND, timestamp, LEAD(timestamp) OVER (PARTITION BY activity ORDER BY timestamp))) AS avg_duration, activity FROM event_log GROUP BY activity
SELECT AVG(DATEDIFF(end_timestamp, timestamp)) AS average_duration, activity FROM event_log GROUP BY activity
SELECT AVG(duration) AS average_duration, activity FROM event_log GROUP BY activity;
SELECT AVG(duration) AS average_duration, activity FROM event_log GROUP BY activity;
SELECT AVG(DATEDIFF(SECOND, timestamp, LEAD(timestamp) OVER (PARTITION BY activity ORDER BY timestamp))) AS average_duration, activity FROM event_log GROUP BY activity
SELECT AVG(TIMESTAMPDIFF(SECOND, MIN(timestamp), MAX(timestamp))) AS average_duration, activity FROM event_log GROUP BY activity
SELECT activity, AVG(DATEDIFF(timestamp, LAG(timestamp) OVER (ORDER BY timestamp)) / 3600) AS avg_duration_hours FROM event_log GROUP BY activity
SELECT idcase, MAX(cost) AS max_cost FROM event_log GROUP BY idcase ORDER BY max_cost DESC;
SELECT * FROM event_log WHERE idcase = (SELECT MAX(cost) FROM event_log)
SELECT idcase, MAX(cost) AS max_cost FROM event_log GROUP BY idcase
SELECT * FROM event_log WHERE cost = (SELECT MAX(cost) FROM event_log) AND idcase IN ( SELECT idcase FROM event_log WHERE cost = (SELECT MAX(cost) FROM event_log) )
SELECT * FROM event_log WHERE cost = (SELECT MAX(cost) FROM event_log)
SELECT * FROM event_log WHERE idcase = (SELECT MAX(cost) FROM event_log)
SELECT * FROM event_log WHERE cost = (SELECT MAX(cost) FROM event_log);
SELECT * FROM event_log ORDER BY cost DESC LIMIT 5;
SELECT activity, SUM(cost) AS total_cost FROM event_log GROUP BY activity ORDER BY total_cost DESC LIMIT 1;
SELECT activity, cost FROM event_log WHERE cost = (SELECT MAX(cost) FROM event_log)
SELECT activity, MAX(cost) AS max_cost FROM event_log GROUP BY activity
SELECT * FROM event_log WHERE cost = (SELECT MAX(cost) FROM event_log)
SELECT * FROM event_log WHERE cost = (SELECT MAX(cost) FROM event_log)
SELECT * FROM event_log WHERE cost = (SELECT MAX(cost) FROM event_log)
SELECT * FROM event_log ORDER BY cost DESC LIMIT 1;
SELECT * FROM event_log WHERE cost = (SELECT MAX(cost) FROM event_log)
SELECT * FROM event_log ORDER BY cost DESC LIMIT 10;
SELECT * FROM event_log WHERE cost IS NOT NULL ORDER BY cost DESC LIMIT 1;
SELECT * FROM event_log WHERE cost = (SELECT MAX(cost) FROM event_log)
SELECT * FROM event_log WHERE cost IS NOT NULL ORDER BY cost DESC;
SELECT * FROM event_log WHERE cost = (SELECT MAX(cost) FROM event_log)
SELECT * FROM event_log WHERE cost = (SELECT MAX(cost) FROM event_log)
SELECT * FROM event_log ORDER BY cost DESC LIMIT 10;
SELECT activity, cost FROM event_log WHERE cost = (SELECT MAX(cost) FROM event_log)
SELECT * FROM event_log WHERE activity = 'Início da viagem';
SELECT * FROM event_log WHERE activity = 'Início da viagem';
SELECT * FROM event_log WHERE activity = 'Início da viagem';
SELECT * FROM event_log WHERE activity = 'Início da viagem';
SELECT * FROM event_log WHERE activity = 'Início da viagem';
SELECT * FROM event_log WHERE activity = 'Início da viagem';
SELECT * FROM event_log WHERE activity = 'Início da viagem';
SELECT * FROM event_log WHERE activity = 'Início da viagem';
SELECT e1.activity, e1.resource, e1.idcase FROM event_log AS e1 INNER JOIN event_log AS e2 ON e1.idcase = e2.idcase WHERE e2.activity = 'Fim da viagem' AND e1.timestamp > e2.timestamp
SELECT e1.activity, e1.resource, e1.idcase FROM event_log AS e1 INNER JOIN event_log AS e2 ON e1.idcase = e2.idcase WHERE e2.activity = 'Fim da viagem' AND e1.timestamp > e2.timestamp
SELECT * FROM event_log WHERE activity = 'Início da viagem';
SELECT * FROM event_log WHERE activity = 'Início da viagem';
SELECT * FROM event_log WHERE activity = 'Início da viagem';
SELECT * FROM event_log WHERE activity = 'Início da viagem';
SELECT * FROM event_log WHERE activity = 'Início da viagem';
SELECT * FROM event_log WHERE activity = 'Início da viagem';
SELECT * FROM event_log WHERE activity ='start_trip'
SELECT * FROM event_log WHERE activity = 'Início da viagem'
SELECT activity, COUNT(*) as total_registers FROM event_log GROUP BY activity
SELECT activity, SUM(1) AS total_executions FROM event_log GROUP BY activity
SELECT activity, COUNT(*) as total_executions FROM event_log GROUP BY activity
SELECT activity, COUNT(*) AS num_events FROM event_log GROUP BY activity
SELECT activity, count(*) as frequency FROM event_log GROUP BY activity
SELECT activity, COUNT(*) as count FROM event_log GROUP BY activity
SELECT activity, COUNT(*) AS num_events FROM event_log GROUP BY activity
SELECT activity, COUNT(*) as num_events FROM event_log GROUP BY activity
SELECT activity, COUNT(*) AS num_events FROM event_log GROUP BY activity
SELECT activity, COUNT(*) as num_events FROM event_log GROUP BY activity
SELECT activity, COUNT(*) as quantidade_eventos FROM event_log GROUP BY activity
SELECT activity, COUNT(*) AS num_events FROM event_log GROUP BY activity
SELECT activity, COUNT(*) AS total_executions FROM event_log GROUP BY activity;
SELECT activity, COUNT(*) as total_executions FROM event_log GROUP BY activity
SELECT activity, COUNT(*) AS num_events FROM event_log GROUP BY activity ORDER BY num_events DESC;
SELECT activity, COUNT(*) as frequency FROM event_log GROUP BY activity ORDER BY frequency DESC;
SELECT activity, COUNT(*) as num_executions FROM event_log GROUP BY activity
SELECT activity, count(*) as quantidade_intervencoes FROM event_log GROUP BY activity ORDER BY quantidade_intervencoes DESC;
SELECT activity, COUNT(*) AS count FROM event_log GROUP BY activity
SELECT activity, COUNT(*) AS quantidade_intervencoes FROM event_log GROUP BY activity
SELECT activity, count(*) as quantidade_intervencoes FROM event_log GROUP BY activity
SELECT activity, COUNT(*) AS quantidade_intervencoes FROM event_log GROUP BY activity
SELECT activity, count(*) as quantidade_intervencoes FROM event_log GROUP BY activity
SELECT activity, count(*) as num_intervencoes FROM event_log GROUP BY activity
SELECT activity, cost FROM event_log ORDER BY cost;
SELECT activity, cost FROM event_log ORDER BY cost;
SELECT activity, cost FROM event_log ORDER BY cost DESC;
SELECT activity, SUM(cost) AS total_cost FROM event_log GROUP BY activity ORDER BY total_cost DESC;
SELECT activity, cost FROM event_log ORDER BY cost;
SELECT activity, cost FROM event_log WHERE cost IS NOT NULL ORDER BY cost;
SELECT activity, SUM(cost) AS total_cost FROM event_log GROUP BY activity ORDER BY total_cost DESC;
SELECT idcase, resource, SUM(cost) AS total_cost FROM event_log WHERE activity LIKE '%processamento de declarações%' GROUP BY idcase, resource ORDER BY total_cost DESC;
SELECT * FROM event_log WHERE activity LIKE 'permissão%';
SELECT * FROM event_log WHERE activity = 'permissão';
SELECT * FROM event_log WHERE activity = 'permissão';
SELECT * FROM event_log WHERE activity = 'permissão';
SELECT * FROM event_log WHERE activity = 'permissão';
SELECT * FROM event_log WHERE activity = 'permissão';
SELECT e1.idcase, e1.activity, e1.timestamp, e1.resource, e1.cost FROM event_log AS e1 WHERE e1.activity LIKE '%permissão%' AND e1.id IN ( SELECT id FROM event_log GROUP BY id HAVING MIN(timestamp) IN ( SELECT MIN(timestamp) FROM event_log WHERE activity LIKE '%permissão%' ) )
SELECT * FROM event_log WHERE activity = 'permissão';
SELECT * FROM event_log WHERE activity LIKE '%permissão%';
SELECT * FROM event_log WHERE activity = 'permissão';
SELECT DISTINCT activity FROM event_log WHERE activity LIKE '%permissão%' ORDER BY activity;
SELECT activity, idcase, resource, timestamp FROM event_log WHERE activity LIKE '%permissao%';
SELECT MAX (cost) FROM event_log
SELECT MAX (cost) FROM event_log
SELECT MAX (cost) FROM event_log
SELECT MAX(cost) AS highest_cost FROM event_log WHERE cost IS NOT NULL
SELECT MAX(cost) AS maior_custo FROM event_log;
SELECT MAX(cost) AS max_cost FROM event_log WHERE activity LIKE 'intervenção%' -- ajuste para o tipo de ação desejado
SELECT idcase FROM event_log WHERE resource = 'Sara' AND resource = 'Thomas'
SELECT idcase FROM event_log WHERE resource = 'Sara' AND resource = 'Thomas'
SELECT DISTINCT idcase FROM event_log WHERE resource = 'Sara' AND resource = 'Thomas'
SELECT idcase FROM event_log WHERE resource = 'Sara' AND resource = 'Thomas'
SELECT DISTINCT idcase FROM event_log WHERE resource = 'Sara' AND resource = 'Thomas'
SELECT * FROM event_log WHERE resource = 'Sara' AND resource = 'Thomas'
SELECT COUNT(*), resource FROM event_log WHERE activity = 'Declaração rejeitada pela administração' GROUP BY resource
SELECT resource, COUNT(*) AS quantidade FROM event_log WHERE activity = 'Declaração rejeitada pela administração' GROUP BY resource
SELECT COUNT(*), resource FROM event_log WHERE activity = 'Declaração rejeitada pela administração' GROUP BY resource
SELECT resource, COUNT(*) AS num_activities FROM event_log WHERE activity = 'Declaração rejeitada pela administração' GROUP BY resource
SELECT resource, COUNT(*) AS count FROM event_log WHERE activity = 'Declaração rejeitada pela administração' GROUP BY resource
SELECT COUNT(*), resource FROM event_log WHERE activity = 'Declaração rejeitada pela administração' GROUP BY resource
SELECT resource, COUNT(*) AS quantidade_de_vezes FROM event_log WHERE activity = 'Declaração rejeitada pela administração' GROUP BY resource
SELECT resource, COUNT(*) AS num_instances FROM event_log WHERE activity = 'Declaração rejeitada pela administração' GROUP BY resource
SELECT resource, COUNT(*) AS count FROM event_log WHERE activity = 'Declaração rejeitada pela administração' GROUP BY resource
SELECT COUNT(*), resource FROM event_log WHERE activity = 'Declaração rejeitada pela administração' GROUP BY resource
SELECT resource, COUNT(*) AS rejeicoes FROM event_log WHERE activity = 'Declaração rejeitada pela administração' GROUP BY resource
SELECT resource, idcase, COUNT(*) AS count FROM event_log WHERE activity = 'Declaração rejeitada pela administração' GROUP BY resource, idcase
SELECT resource, idcase, COUNT(*) AS count FROM event_log WHERE activity = 'Declaração rejeitada pela administração' GROUP BY resource, idcase
SELECT resource, idcase, COUNT(*) AS count FROM event_log WHERE activity = 'Declaração rejeitada pela administração' GROUP BY resource, idcase
SELECT resource, idcase, COUNT(*) AS count FROM event_log WHERE activity = 'Declaração rejeitada pela administração' GROUP BY resource, idcase
SELECT idcase, resource, COUNT(*) AS count FROM event_log WHERE activity = 'Declaração rejeitada pela administração' GROUP BY idcase, resource
SELECT idcase, resource, COUNT(*) AS count FROM event_log WHERE activity = 'Declaração rejeitada pela administração' GROUP BY idcase, resource
SELECT resource, idcase, COUNT(*) AS count FROM event_log WHERE activity = 'Declaração rejeitada pela administração' GROUP BY resource, idcase
SELECT resource, idcase, COUNT(*) AS count FROM event_log WHERE activity = 'Declaração rejeitada pela administração' GROUP BY resource, idcase
SELECT resource, idcase, COUNT(*) AS count FROM event_log WHERE activity = 'Declaração rejeitada pela administração' GROUP BY resource, idcase
SELECT idcase, resource, COUNT(*) AS rejeicoes FROM event_log WHERE activity = 'Declaração rejeitada pela administração' GROUP BY idcase, resource
SELECT AVG(cost) AS media_custo FROM event_log WHERE activity NOT IN ('Início da viagem', 'Fim da viagem');
SELECT AVG(cost) FROM event_log WHERE activity NOT IN ('Início da viagem', 'Fim da viagem');
SELECT AVG(cost) AS average_cost FROM event_log WHERE activity NOT IN ('Início da viagem', 'Fim da viagem');
SELECT AVG(cost) FROM event_log WHERE activity NOT IN ('Início da viagem', 'Fim da viagem');
SELECT AVG(cost) AS average_cost FROM event_log WHERE activity NOT IN ('Início da viagem', 'Fim da viagem');
SELECT AVG(cost) FROM event_log WHERE activity NOT IN ('Início da viagem', 'Fim da viagem');
SELECT AVG(cost) AS average_cost FROM event_log WHERE activity NOT IN ('Início da viagem', 'Fim da viagem');
SELECT AVG(cost) FROM event_log WHERE activity NOT IN ('Início da viagem', 'Fim da viagem');
SELECT AVG(cost) FROM event_log WHERE activity NOT IN ('Início da viagem', 'Fim da viagem');
WITH RankedEvents AS ( SELECT id, activity, timestamp, LEAD(timestamp) OVER (PARTITION BY idcase ORDER BY timestamp) AS next_timestamp, idcase FROM event_log ), FilteredEvents AS ( SELECT activity, cost FROM RankedEvents WHERE activity NOT IN ('início da viagem', 'fim da viagem') ), AverageCost AS ( SELECT AVG(cost) AS average_cost FROM FilteredEvents ) SELECT * FROM AverageCost;
SELECT * FROM event_log ORDER BY cost DESC LIMIT 5;
SELECT * FROM event_log ORDER BY cost DESC LIMIT 5;
SELECT * FROM event_log WHERE cost IN ( SELECT cost FROM event_log ORDER BY cost DESC LIMIT 5 )
SELECT activity, timestamp, resource, cost, idcase FROM event_log ORDER BY cost DESC LIMIT 5;
SELECT * FROM event_log ORDER BY cost DESC LIMIT 5;
SELECT * FROM event_log ORDER BY cost DESC LIMIT 5;
SELECT activity, timestamp, resource, cost, idcase FROM event_log ORDER BY cost DESC LIMIT 5;
SELECT idcase FROM (SELECT idcase, activity, LEAD(activity) OVER (PARTITION BY idcase ORDER BY timestamp) AS next_activity FROM event_log) AS t WHERE activity = next_activity;
SELECT * FROM event_log ORDER BY cost DESC LIMIT 5;
SELECT * FROM event_log ORDER BY cost DESC LIMIT 5;
SELECT * FROM event_log WHERE cost IS NOT NULL ORDER BY cost DESC LIMIT 5
SELECT * FROM event_log ORDER BY cost DESC LIMIT 5;
SELECT * FROM event_log ORDER BY cost DESC LIMIT 5;
SELECT * FROM event_log WHERE cost IS NOT NULL ORDER BY cost DESC LIMIT 5;
SELECT * FROM event_log ORDER BY cost DESC LIMIT 5;
SELECT * FROM event_log ORDER BY cost DESC LIMIT 5;
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(*) > 1
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(*) > 1
SELECT idcase, COUNT(*) AS num_events FROM event_log GROUP BY idcase HAVING COUNT(*) > 1
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(*) > 1
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(*) > 1
SELECT DISTINCT(idcase) FROM (SELECT idcase, strftime('%Y-%m-%d', timestamp) as event_date, COUNT(*) as event_count FROM event_log GROUP BY idcase, event_date HAVING event_count > 1)
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(DISTINCT activity) > 1
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(DISTINCT activity) > 1
SELECT COUNT(DISTINCT idcase), activity FROM event_log GROUP BY activity
SELECT DISTINCT idcase FROM event_log GROUP BY idcase HAVING COUNT(DISTINCT activity) > 1
SELECT DISTINCT activity FROM event_log GROUP BY activity, idcase HAVING count(activity) > 3
SELECT * FROM event_log WHERE timestamp BETWEEN '2018-10-01' AND '2018-10-02';
SELECT * FROM event_log WHERE timestamp BETWEEN '2018-10-01' AND '2018-10-02';
SELECT * FROM event_log WHERE timestamp BETWEEN '2018-10-01' AND '2018-10-02'
SELECT * FROM event_log WHERE timestamp BETWEEN '2018-10-01' AND '2018-10-02';
SELECT * FROM event_log WHERE timestamp BETWEEN '2018-10-01' AND '2018-10-02'
SELECT * FROM event_log WHERE timestamp BETWEEN '2018-10-01' AND '2018-10-02';
SELECT * FROM event_log WHERE timestamp BETWEEN '2018-10-01' AND '2018-10-02'
SELECT * FROM event_log WHERE timestamp BETWEEN '2018-10-01' AND '2018-10-02'
SELECT DISTINCT activity FROM event_log WHERE timestamp BETWEEN '2018-10-01' AND '2018-10-02' ORDER BY activity;
SELECT * FROM event_log WHERE timestamp BETWEEN '2018-10-01' AND '2018-10-02'
SELECT * FROM event_log WHERE timestamp BETWEEN '2018-10-01' AND '2018-10-02'
SELECT * FROM event_log WHERE timestamp BETWEEN '2018-10-01' AND '2018-10-02'
SELECT * FROM event_log WHERE timestamp BETWEEN '2018-10-01' AND '2018-10-02'
SELECT * FROM event_log WHERE timestamp BETWEEN '2018-10-01' AND '2018-10-02';
SELECT * FROM event_log WHERE timestamp BETWEEN '2018-10-01' AND '2018-10-02';
SELECT * FROM event_log WHERE DATE(timestamp) BETWEEN '2018-10-01' AND '2018-10-02'
SELECT * FROM event_log WHERE timestamp BETWEEN '2018-10-01' AND '2018-10-02' AND activity LIKE '%declaração%'
SELECT DISTINCT activity FROM event_log WHERE timestamp BETWEEN '2018-10-01' AND '2018-10-02'
SELECT activity, COUNT(*) AS count FROM event_log WHERE strftime('%Y-%m-%d', timestamp) BETWEEN '2018-10-01' AND '2018-10-02' GROUP BY activity
SELECT * FROM event_log WHERE resource LIKE 'M%';
SELECT * FROM event_log WHERE resource LIKE 'M%' AND activity IN ( SELECT activity FROM event_log GROUP BY activity HAVING COUNT(*) = (SELECT COUNT(*) FROM event_log GROUP BY activity ORDER BY COUNT(*) DESC LIMIT 1) )
SELECT * FROM event_log WHERE resource LIKE 'M%';
SELECT * FROM event_log WHERE resource LIKE 'M%';
SELECT * FROM event_log WHERE resource COLLATE NOCASE LIKE 'M%';
SELECT activity, timestamp, resource, cost, idcase FROM event_log WHERE resource LIKE 'M%';
SELECT resource, activity FROM event_log WHERE resource LIKE 'M%' AND idcase IS NOT NULL ORDER BY resource, activity;
SELECT el.* FROM event_log el JOIN funcionarios f ON el.resource = f.id WHERE f.nome LIKE 'M%';
SELECT activity FROM event_log GROUP BY activity HAVING COUNT(*) > 5
SELECT activity, count(*) as total_registers FROM event_log GROUP BY activity HAVING count(*) > 5
SELECT activity FROM event_log GROUP BY activity HAVING COUNT(*) > 5;
SELECT activity FROM event_log GROUP BY activity HAVING COUNT(*) > 5
SELECT DISTINCT activity FROM event_log GROUP BY activity HAVING COUNT(*) > 5;
SELECT activity FROM event_log GROUP BY activity HAVING COUNT(*) > 5
SELECT DISTINCT activity FROM event_log GROUP BY activity HAVING COUNT(*) > 5;
SELECT DISTINCT activity FROM event_log GROUP BY activity HAVING COUNT(*) > 5;
SELECT activity FROM event_log GROUP BY activity HAVING COUNT(*) > 5
SELECT DISTINCT activity FROM event_log GROUP BY activity HAVING COUNT(*) > 5;
SELECT activity FROM event_log GROUP BY activity HAVING COUNT(*) > 5;
SELECT activity, COUNT(*) as frequency FROM event_log WHERE timestamp < '2017-01-10' GROUP BY activity HAVING COUNT(*) > 5 ORDER BY frequency DESC;
SELECT idcase, activity FROM event_log GROUP BY idcase, activity HAVING COUNT(*) > 3
SELECT idcase, activity FROM event_log GROUP BY idcase, activity HAVING COUNT(*) > 3
SELECT idcase, activity FROM event_log GROUP BY idcase, activity HAVING COUNT(*) > 3
SELECT idcase, activity FROM event_log GROUP BY idcase, activity HAVING COUNT(*) > 3
SELECT DISTINCT activity FROM event_log WHERE idcase IN ( SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(DISTINCT activity) > 3 )
SELECT activity FROM event_log WHERE idcase IN ( SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(*) > 3 ) GROUP BY activity HAVING COUNT(*) > 3
SELECT idcase, activity FROM event_log GROUP BY idcase, activity HAVING COUNT(*) > 3
SELECT idcase, activity, COUNT(*) as count FROM event_log GROUP BY idcase, activity HAVING COUNT(*) > 3
SELECT idcase, activity FROM event_log GROUP BY idcase, activity HAVING COUNT(*) > 3
SELECT idcase, activity FROM event_log GROUP BY idcase, activity HAVING COUNT(*) > 3
SELECT DISTINCT idcase FROM event_log GROUP BY idcase, activity HAVING COUNT(*) > 1
SELECT activity FROM event_log WHERE idcase = 'declaração 49464' EXCEPT SELECT activity FROM event_log WHERE idcase = 'declaração 76667'
SELECT SUM(cost) AS total_cost FROM event_log WHERE idcase = 'declaração 56300'
SELECT COUNT(*) FROM event_log WHERE idcase = 'declaração 56300';
SELECT COUNT(*) FROM event_log WHERE idcase = 'declaração 56300';
SELECT activity FROM event_log WHERE idcase = 'declaração 49464' EXCEPT SELECT activity FROM event_log WHERE idcase = 'declaração 76667'
SELECT COUNT(*) AS num_events FROM event_log WHERE idcase = 'declaração 56300';
SELECT COUNT(*) FROM event_log WHERE idcase = '56300';
SELECT activity, COUNT(*) as frequency FROM event_log WHERE timestamp < '2017-01-10' GROUP BY activity HAVING COUNT(*) > 1
SELECT activity, COUNT(*) as frequency FROM event_log WHERE timestamp < '2017-01-10' GROUP BY activity HAVING COUNT(*) > 1
SELECT activity, COUNT(*) as frequency FROM event_log WHERE timestamp < '2017-01-10' GROUP BY activity HAVING COUNT(*) > 1
SELECT activity, COUNT(*) as frequency FROM event_log WHERE timestamp < '2017-01-10' GROUP BY activity HAVING COUNT(*) > 1
SELECT activity, count(*) as frequency FROM event_log WHERE timestamp < '2017-01-10' GROUP BY activity HAVING count(*) > 1
SELECT activity, count(*) as frequency FROM event_log WHERE timestamp < '2017-01-10' GROUP BY activity HAVING count(*) > 1
SELECT activity, count(*) as frequency FROM event_log WHERE timestamp < '2017-01-10' GROUP BY activity HAVING count(*) > 1
SELECT activity, COUNT(*) as count FROM event_log WHERE timestamp < '2017-01-10' GROUP BY activity HAVING COUNT(*) > 1
SELECT activity, COUNT(*) as frequency FROM event_log WHERE timestamp < '2017-01-10' GROUP BY activity HAVING COUNT(*) > 1 ORDER BY frequency DESC;
SELECT activity, COUNT(*) AS frequency FROM event_log WHERE timestamp < '2017-10-01' GROUP BY activity
SELECT COUNT(*) FROM event_log WHERE activity IN (SELECT activity FROM event_log WHERE timestamp < '2017-01-10' GROUP BY activity HAVING COUNT(*) > 1)
SELECT resource, COUNT(*) AS num_cases FROM event_log GROUP BY resource
SELECT resource, count(distinct idcase) AS num_instances FROM event_log GROUP BY resource
SELECT resource, COUNT(*) as num_cases FROM event_log GROUP BY resource
SELECT resource, COUNT(*) as num_cases FROM event_log GROUP BY resource
SELECT resource, COUNT(*) as num_cases FROM event_log GROUP BY resource
SELECT resource, COUNT(idcase) as num_cases from event_log GROUP BY resource
SELECT resource, count(*) as num_cases FROM event_log GROUP BY resource
SELECT resource, COUNT(DISTINCT idcase) from event_log GROUP BY resource
SELECT resource, count(distinct idcase) AS num_instances FROM event_log GROUP BY resource
SELECT resource, COUNT(*) as instances FROM event_log GROUP BY resource
SELECT resource, COUNT(*) AS num_declaracoes FROM event_log WHERE activity LIKE '%declaracao%' -- ou qualquer outra condição que indique uma declaração GROUP BY resource
SELECT resource, COUNT(*) FROM event_log GROUP BY resource;
SELECT resource, COUNT(*) as "Número de vezes" FROM event_log GROUP BY resource
SELECT COUNT(*) as total_actions, resource FROM event_log GROUP BY resource
SELECT resource, count(*) as num_events FROM event_log GROUP BY resource ORDER BY num_events DESC;
SELECT resource, COUNT(*) as num_occurrences FROM event_log WHERE activity = 'Declaração requisitada pelo funcionário' GROUP BY resource;
SELECT resource, COUNT(*) AS num_executions FROM event_log GROUP BY resource ORDER BY resource;
SELECT resource, COUNT(*) as num_occurrences FROM event_log GROUP BY resource
SELECT resource, COUNT(*) AS num_activities FROM event_log GROUP BY resource ORDER BY num_activities DESC;
SELECT idcase FROM event_log WHERE resource IN ('Thomas', 'Diana', 'Sara');
SELECT idcase FROM event_log WHERE resource IN ('Thomas', 'Diana', 'Sara');
SELECT idcase FROM event_log WHERE resource IN ('Thomas', 'Diana', 'Sara');
SELECT idcase FROM event_log WHERE resource IN ('Thomas', 'Diana', 'Sara')
SELECT * FROM event_log WHERE resource IN ('Thomas', 'Diana', 'Sara');
SELECT COUNT(*) FROM event_log WHERE timestamp BETWEEN '2017-05-01' AND '2017-06-01' GROUP BY resource
SELECT resource, COUNT(DISTINCT idcase) FROM event_log WHERE timestamp BETWEEN '2017-05-01' AND '2017-06-01' GROUP BY resource
SELECT resource, COUNT(DISTINCT idcase) AS num_cases FROM event_log WHERE timestamp BETWEEN '2017-05-01' AND '2017-06-01' GROUP BY resource
SELECT resource, count(DISTINCT idcase) AS casos FROM event_log WHERE timestamp BETWEEN '2017-05-01' AND '2017-06-01' GROUP BY resource
SELECT resource, COUNT(idcase) AS casos FROM event_log WHERE timestamp BETWEEN '2017-05-01' AND '2017-06-01' GROUP BY resource
SELECT COUNT(idcase), resource FROM event_log WHERE timestamp BETWEEN '2017-05-01' AND '2017-06-01' GROUP BY resource
SELECT COUNT(DISTINCT idcase), resource FROM event_log WHERE timestamp BETWEEN '2017-05-01' AND '2017-06-01' GROUP BY resource
SELECT COUNT(DISTINCT idcase), resource FROM event_log WHERE timestamp BETWEEN '2017-05-01' AND '2017-06-01' GROUP BY resource
SELECT resource, COUNT(DISTINCT idcase) AS num_declarations FROM event_log WHERE timestamp BETWEEN '2017-05-01' AND '2017-06-01' GROUP BY resource
SELECT COUNT(DISTINCT idcase), resource FROM event_log WHERE timestamp BETWEEN '2017-05-01' AND '2017-06-01' GROUP BY resource HAVING COUNT(DISTINCT idcase) > 0
SELECT resource, COUNT(idcase) AS casos FROM event_log WHERE timestamp BETWEEN '2017-05-01' AND '2017-06-01' GROUP BY resource
SELECT resource, COUNT(DISTINCT idcase) AS num_declaracoes FROM event_log WHERE timestamp BETWEEN '2017-05-01' AND '2017-06-01' AND activity!= 'NULL' -- ou activity IS NOT NULL, dependendo do seu banco de dados GROUP BY resource
SELECT activity, resource FROM event_log WHERE resource NOT IN ('Joshua', 'Teresa')
SELECT activity, resource FROM event_log WHERE resource NOT IN ('Joshua', 'Teresa')
SELECT DISTINCT activity, resource FROM event_log WHERE resource NOT IN ('Joshua', 'Teresa')
SELECT activity, resource FROM event_log WHERE activity LIKE '%intervenção%' AND resource NOT IN ('Joshua', 'Teresa')
SELECT activity, resource FROM event_log WHERE resource NOT IN ('Joshua', 'Teresa') GROUP BY activity, resource
SELECT idcase FROM event_log WHERE activity IN ('Início da viagem', 'Fim da viagem') AND idcase NOT IN ( SELECT idcase FROM event_log WHERE activity IN ('Requisição de pagamento', 'Pagamento efetuado') )
SELECT DISTINCT el1.idcase FROM event_log el1 WHERE el1.activity IN ('Início da viagem', 'Fim da viagem') AND el1.idcase NOT IN ( SELECT el2.idcase FROM event_log el2 WHERE el2.activity IN ('Requisição de pagamento', 'Pagamento efetuado') )
SELECT idcase FROM event_log WHERE activity IN ('Início da viagem', 'Fim da viagem') AND idcase NOT IN ( SELECT idcase FROM event_log WHERE activity IN ('Requisição de pagamento', 'Pagamento efetuado') )
SELECT DISTINCT el1.idcase FROM event_log el1 WHERE el1.activity IN ('Início da viagem', 'Fim da viagem') AND el1.idcase NOT IN ( SELECT el2.idcase FROM event_log el2 WHERE el2.activity IN ('Requisição de pagamento', 'Pagamento efetuado') )
SELECT idcase FROM event_log WHERE activity IN ('Início da viagem', 'Fim da viagem') AND idcase NOT IN ( SELECT idcase FROM event_log WHERE activity IN ('Requisição de pagamento', 'Pagamento efetuado') ) GROUP BY idcase HAVING COUNT(DISTINCT activity) = 2
SELECT idcase FROM event_log WHERE activity IN ('Início', 'Fim') AND idcase NOT IN ( SELECT idcase FROM event_log WHERE activity IN ('Requisição de pagamento', 'Pagamento efetuado') )
SELECT idcase FROM event_log WHERE activity = 'Início da viagem' OR activity = 'Fim da viagem' AND NOT EXISTS ( SELECT 1 FROM event_log WHERE idcase = event_log.idcase AND activity = 'Solicitação de pagamento' AND activity = 'Efetuação de pagamento' )
SELECT idcase FROM event_log WHERE idcase NOT IN ( SELECT idcase FROM event_log WHERE activity = 'Requisição de pagamento' OR activity = 'Pagamento efetuado' ) AND (activity = 'Início da viagem' OR activity = 'Fim da viagem')
SELECT idcase FROM event_log WHERE activity IN ('Início da viagem', 'Fim da viagem') AND idcase NOT IN ( SELECT idcase FROM event_log WHERE activity IN ('Requisição de pagamento', 'Pagamento efetuado') )
SELECT * FROM event_log WHERE activity IN ('Início da viagem', 'Fim da viagem') AND (activity!= 'Requisição de pagamento' OR cost IS NULL)
SELECT * FROM event_log WHERE resource IS NULL;
SELECT * FROM event_log WHERE resource IS NULL OR resource = ''
SELECT activity FROM event_log WHERE resource IS NULL
SELECT * FROM event_log WHERE resource IS NULL OR resource = ''
SELECT * FROM event_log WHERE resource IS NULL;
SELECT activity FROM event_log WHERE resource IS NULL
SELECT * FROM event_log WHERE resource IS NULL
SELECT * FROM event_log WHERE resource NOT LIKE '%%<username>%%' OR resource LIKE '%%<username>%' AND activity NOT LIKE '%%allocated%%'
SELECT idcase FROM event_log WHERE timestamp < '2017-03-01 00:00:00' AND timestamp >= '2017-03-01 00:00:00' GROUP BY idcase
SELECT idcase FROM event_log WHERE strftime('%Y-%m', timestamp) < '2017-03' GROUP BY idcase
SELECT idcase FROM event_log WHERE activity = 'first_execution' AND timestamp < '2017-03-01'
SELECT DISTINCT resource FROM event_log WHERE timestamp < '2017-03-01'
SELECT DISTINCT idcase FROM event_log WHERE timestamp < DATE('2017-03-01') AND activity = 'Início da viagem'
SELECT idcase FROM event_log WHERE activity = (SELECT activity FROM event_log WHERE timestamp < '2017-03-01' ORDER BY timestamp LIMIT 1)
SELECT * FROM event_log WHERE timestamp < '2017-03-01'
SELECT idcase, activity, timestamp FROM event_log WHERE timestamp < '2017-03-01' AND id = (SELECT MIN(id) FROM event_log WHERE timestamp < '2017-03-01')
SELECT idcase FROM event_log WHERE timestamp < '2017-03-01' AND activity LIKE 'declaração%'
SELECT * FROM event_log WHERE timestamp < '2017-03-01'
SELECT DISTINCT idcase FROM event_log WHERE activity = 'Início da viagem' AND timestamp BETWEEN '2017-03-01' AND '2017-03-31'
SELECT idcase FROM event_log WHERE activity = 'Início da viagem' AND timestamp BETWEEN '2017-03-01' AND '2017-03-31' AND NOT EXISTS ( SELECT 1 FROM event_log WHERE idcase = event_log.idcase AND activity = 'Fim da viagem' AND timestamp <= '2017-03-31' )
SELECT idcase FROM event_log WHERE activity = 'Início da viagem' AND timestamp LIKE '2017-03-%'
SELECT DISTINCT idcase FROM event_log WHERE activity = 'Início da viagem' AND strftime('%Y-%m', timestamp) = '2017-03' AND id = (SELECT MIN(id) FROM event_log WHERE activity = 'Início da viagem' AND strftime('%Y-%m', timestamp) = '2017-03');
SELECT idcase FROM event_log WHERE activity = 'Início da viagem' AND timestamp = ( SELECT MIN(timestamp) FROM event_log WHERE activity = 'Início da viagem' AND timestamp BETWEEN '2017-03-01' AND '2017-03-31' )
SELECT idcase FROM event_log WHERE activity = 'Início da viagem' AND timestamp BETWEEN '2017-03-01' AND '2017-03-31' GROUP BY idcase HAVING COUNT(id) = 1
SELECT idcase FROM event_log WHERE activity = 'Início da viagem' AND timestamp BETWEEN '2017-03-01' AND '2017-03-31'
SELECT resource FROM event_log GROUP BY resource, idcase HAVING COUNT(*) > 5
SELECT resource FROM event_log GROUP BY resource, idcase HAVING COUNT(*) > 5
SELECT resource FROM event_log GROUP BY resource, idcase HAVING COUNT(*) > 5
SELECT resource FROM event_log WHERE idcase IN ( SELECT idcase FROM event_log GROUP BY idcase, resource HAVING COUNT(*) > 5 )
SELECT resource FROM event_log GROUP BY resource, idcase HAVING COUNT(*) > 5;
SELECT resource FROM event_log GROUP BY resource, idcase HAVING COUNT(*) > 5;
SELECT resource, idcase FROM event_log GROUP BY resource, idcase HAVING COUNT(*) > 5;
SELECT resource, COUNT(*) as frequency FROM event_log GROUP BY resource HAVING COUNT(*) > 5 ORDER BY frequency DESC;
SELECT resource, COUNT(*) as frequency FROM event_log GROUP BY resource HAVING COUNT(*) > 5
SELECT idcase, COUNT(*) as num_interventions FROM event_log GROUP BY idcase HAVING COUNT(*) > 5
SELECT resource, COUNT(*) as num_occurrences FROM event_log WHERE idcase IS NOT NULL GROUP BY resource HAVING COUNT(*) > 5
SELECT activity, COUNT(*) as frequency FROM event_log GROUP BY activity ORDER BY frequency DESC;
SELECT activity, COUNT(*) as frequency FROM event_log GROUP BY activity ORDER BY frequency DESC;
SELECT activity FROM ( SELECT activity, COUNT(*) AS frequency FROM event_log GROUP BY activity ORDER BY COUNT(*) DESC ) AS freq_table LIMIT 1;
SELECT activity FROM event_log GROUP BY activity ORDER BY COUNT(*) DESC LIMIT 1;
SELECT activity, COUNT(*) as count FROM event_log GROUP BY activity ORDER BY count DESC LIMIT 10;
SELECT resource FROM event_log WHERE activity = 'Declaração final aprovada pelo supervisor' GROUP BY resource ORDER BY COUNT(*) DESC LIMIT 10;
SELECT resource, COUNT(*) as count FROM event_log WHERE activity = 'Declaração final aprovada pelo supervisor' GROUP BY resource ORDER BY count DESC LIMIT 10;
SELECT resource, COUNT(*) as total_aprovals FROM event_log WHERE activity = 'Declaração final aprovada pelo supervisor' GROUP BY resource ORDER BY total_aprovals DESC LIMIT 10;
SELECT resource, COUNT(*) as frequency FROM event_log WHERE activity = 'Declaração final aprovada pelo supervisor' GROUP BY resource ORDER BY frequency DESC;
SELECT resource, COUNT(*) AS frequency FROM event_log WHERE activity = 'Declaração final aprovada pelo supervisor' GROUP BY resource ORDER BY frequency DESC;
SELECT resource, COUNT(*) as frequency FROM event_log WHERE activity = 'Declaração final aprovada pelo supervisor' GROUP BY resource ORDER BY frequency DESC;
SELECT resource, COUNT(*) as frequency FROM event_log WHERE activity = 'Declaração final aprovada pelo supervisor' GROUP BY resource ORDER BY COUNT(*) DESC;
SELECT resource, COUNT(*) as count FROM event_log WHERE activity = 'Declaração final aprovada pelo supervisor' GROUP BY resource ORDER BY count DESC LIMIT 10;
SELECT COUNT(*) FROM event_log WHERE activity = 'Declaração aprovada pelo responsável pelo orçamento' AND resource IN ('Eugene', 'Marie');
SELECT COUNT(*) FROM event_log WHERE activity = 'Declaração aprovada pelo responsável pelo orçamento' AND resource IN ('Eugene', 'Marie')
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE activity = 'Declaração aprovada pelo responsável pelo orçamento' AND resource IN ('Eugene', 'Marie');
SELECT COUNT(*) FROM event_log WHERE activity = 'Declaração aprovada pelo responsável pelo orçamento' AND resource IN ('Eugene', 'Marie');
SELECT COUNT(*) FROM event_log WHERE activity = 'declaração aprovada pelo responsável pelo orçamento' AND resource IN ('Eugene', 'Marie');
SELECT COUNT(*) FROM event_log WHERE activity = 'Declaração aprovada pelo responsável pelo orçamento' AND resource IN ('Eugine', 'Marie');
SELECT COUNT(*) FROM event_log WHERE activity = 'Declaração aprovada pelo responsável pelo orçamento' AND resource IN ('Eugine', 'Marie') GROUP BY idcase;
SELECT resource, COUNT(*) AS num_approvals FROM event_log WHERE activity LIKE '%responsável pelo orçamento%' AND (resource = 'Eugene' OR resource = 'Marie') GROUP BY resource
SELECT COUNT(*) FROM event_log WHERE activity LIKE '%responsável pelo orçamento%' AND (resource = 'Eugene' OR resource = 'Marie') AND activity LIKE '%aprovada%';
SELECT activity FROM event_log WHERE idcase = 'declaração 49464' EXCEPT SELECT activity FROM event_log WHERE idcase = 'declaração 76667';
SELECT activity FROM event_log WHERE idcase = 'declaração 49464' EXCEPT SELECT activity FROM event_log WHERE idcase = 'declaração 76667';
SELECT activity FROM event_log WHERE idcase = 'declaração 49464' AND activity NOT IN ( SELECT activity FROM event_log WHERE idcase = 'declaração 76667' )
SELECT activity FROM event_log WHERE idcase = 'declaração 49464' EXCEPT SELECT activity FROM event_log WHERE idcase = 'declaração 76667';
SELECT resource, count(*) as num_times FROM event_log WHERE activity = 'declaração requisitada pelo funcionário' GROUP BY resource HAVING count(*) > 2;
SELECT resource, COUNT(*) AS count FROM event_log WHERE activity = 'declaração requisitada pelo funcionário' GROUP BY resource HAVING COUNT(*) > 2 ORDER BY resource;
SELECT resource, count(*) as count FROM event_log WHERE activity = 'Declaração requisitada pelo funcionário' GROUP BY resource HAVING count(*) > 2 ORDER BY count DESC;
SELECT resource, count(*) as frequency FROM event_log WHERE activity = 'Declaração requisitada pelo funcionário' GROUP BY resource HAVING count(*) > 2 ORDER BY resource;
SELECT resource, COUNT(*) AS num_occurrences FROM event_log WHERE activity = 'declaração requisitada pelo funcionário' GROUP BY resource HAVING COUNT(*) > 2;
SELECT resource, COUNT(*) AS quantidade_eventos FROM event_log WHERE activity = 'declaração requisitada pelo funcionário' GROUP BY resource HAVING COUNT(*) > 2;
SELECT f.name, COUNT(*) as quantidade_declaracoes FROM event_log el JOIN funcionarios f ON el.resource = f.id WHERE el.activity = 'Requisitar declaração' GROUP BY f.name HAVING COUNT(*) > 2
SELECT * FROM event_log WHERE activity = 'Requisição de pagamento' AND timestamp BETWEEN '2017-05-01' AND '2017-05-10';
SELECT idcase FROM event_log WHERE activity = 'Requisição de pagamento' AND timestamp >= '2017-05-01 00:00:00' AND timestamp < '2017-05-11 00:00:00'
SELECT DISTINCT idcase FROM event_log WHERE activity = 'Requisição de pagamento' AND timestamp >= '2017-05-01 00:00:00' AND timestamp < '2017-05-11 00:00:00' ORDER BY idcase;
SELECT idcase FROM event_log WHERE activity = 'Requisição de pagamento' AND timestamp BETWEEN '2017-05-01' AND '2017-05-10'
SELECT * FROM event_log WHERE activity = 'Requisição de pagamento' AND timestamp BETWEEN '2017-05-01 00:00:00' AND '2017-05-10 23:59:59';
SELECT idcase FROM event_log WHERE activity = 'Requisição de pagamento' AND timestamp BETWEEN '2017-05-01' AND '2017-05-10'
SELECT idcase FROM event_log WHERE activity = 'Requisição de pagamento' AND timestamp BETWEEN '2017-05-01' AND '2017-05-10' GROUP BY idcase
SELECT DISTINCT e.idcase FROM event_log AS e WHERE e.activity = 'Requisição de pagamento' AND e.timestamp BETWEEN '2017-05-01 00:00:00' AND '2017-05-10 23:59:59';
SELECT idcase, COUNT(DISTINCT resource) AS num_resources FROM event_log GROUP BY idcase
SELECT idcase, COUNT(DISTINCT resource) as num_resources FROM event_log GROUP BY idcase
SELECT idcase, COUNT(DISTINCT resource) AS num_resources FROM event_log WHERE activity = 'Declaração salva pelo funcionário' GROUP BY idcase ORDER BY idcase;
SELECT idcase, COUNT(DISTINCT resource) AS num_resources FROM event_log GROUP BY idcase ORDER BY num_resources DESC;
SELECT idcase, COUNT(DISTINCT resource) AS num_resources FROM event_log GROUP BY idcase
SELECT idcase, COUNT(DISTINCT resource) AS num_resources FROM event_log GROUP BY idcase
SELECT COUNT(DISTINCT resource), SUM(cost), idcase FROM event_log GROUP BY idcase
SELECT idcase, COUNT(DISTINCT resource) AS num_resources FROM event_log GROUP BY idcase
SELECT idcase FROM event_log WHERE resource = 'Christopher' GROUP BY idcase HAVING count(*) = 1;
SELECT idcase FROM event_log WHERE resource = 'Christopher' GROUP BY idcase HAVING count(*) = (SELECT count(*) FROM event_log WHERE idcase = event_log.idcase AND resource = 'Christopher');
SELECT idcase FROM event_log WHERE resource = 'Christopher' GROUP BY idcase HAVING COUNT(DISTINCT activity) = COUNT(*)
SELECT idcase FROM event_log WHERE activity = 'Christopher' AND resource = 'Christopher' GROUP BY idcase HAVING COUNT(DISTINCT activity) = (SELECT COUNT(*) FROM event_log WHERE activity = 'Christopher')
SELECT idcase FROM event_log WHERE resource = 'Christopher' GROUP BY idcase HAVING COUNT(DISTINCT activity) = 1;
SELECT idcase FROM event_log WHERE resource = 'Christopher' GROUP BY idcase HAVING COUNT(DISTINCT activity) = COUNT(*)
SELECT idcase FROM event_log WHERE resource = 'Christopher' GROUP BY idcase HAVING COUNT(DISTINCT resource) = 1;
SELECT idcase FROM event_log WHERE activity LIKE '%Christopher%' AND resource LIKE '%Christopher%' GROUP BY idcase HAVING COUNT(DISTINCT resource) = 1
SELECT idcase, resource FROM event_log GROUP BY idcase, resource HAVING COUNT(DISTINCT id) = (SELECT MAX(count) FROM (SELECT idcase, COUNT(DISTINCT id) AS count FROM event_log GROUP BY idcase, resource) AS subquery)
SELECT idcase, resource FROM event_log GROUP BY idcase, resource HAVING COUNT(DISTINCT id) = (SELECT MAX(count) FROM ( SELECT idcase, COUNT(*) AS count FROM event_log GROUP BY idcase, resource ) AS subquery)
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(DISTINCT resource) = 1
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(DISTINCT resource) = 1;
SELECT idcase, COUNT(*) AS num_events FROM event_log GROUP BY idcase HAVING COUNT(DISTINCT resource) = 1;
SELECT idcase, resource FROM event_log GROUP BY idcase, resource HAVING COUNT(DISTINCT resource) = 1;
SELECT idcase, COUNT(*) AS num_instances FROM event_log GROUP BY idcase HAVING COUNT(*) > 1
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(DISTINCT id) = 1;
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(DISTINCT timestamp) > 1
SELECT idcase, COUNT(*) as num_events FROM event_log WHERE timestamp >= DATE_TRUNC('day', timestamp) GROUP BY idcase HAVING COUNT(*) > 1
SELECT idcase FROM event_log WHERE timestamp >= DATE_TRUNC('day', timestamp) GROUP BY idcase, DATE_TRUNC('day', timestamp) HAVING COUNT(*) > 1
SELECT idcase FROM event_log WHERE timestamp >= DATE_TRUNC('day', timestamp) GROUP BY idcase HAVING COUNT(DISTINCT activity) > 1;
SELECT idcase, timestamp FROM event_log GROUP BY idcase, timestamp HAVING COUNT(*) > 1
SELECT idcase, timestamp FROM event_log WHERE DATE(timestamp) = DATE(MAX(timestamp)) GROUP BY idcase, timestamp HAVING COUNT(*) > 1;
SELECT idcase, COUNT(*) as num_interventions FROM event_log WHERE timestamp >= DATE_TRUNC('day', timestamp) GROUP BY idcase, DATE_TRUNC('day', timestamp) HAVING COUNT(*) > 1
SELECT resource, idcase, count(*) FROM event_log WHERE cost IS NULL GROUP BY resource, idcase
SELECT idcase, count(*) as num_events FROM event_log WHERE cost IS NULL GROUP BY idcase
SELECT resource, idcase, count(*) FROM event_log WHERE cost IS NULL GROUP BY resource, idcase
SELECT idcase, resource, COUNT(*) AS num_null_cost_events FROM event_log WHERE cost IS NULL GROUP BY idcase, resource
SELECT resource, idcase, COUNT(*) AS num_events FROM event_log WHERE cost IS NULL GROUP BY resource, idcase
SELECT resource, COUNT(*) AS num_events, SUM(CASE WHEN cost IS NULL THEN 1 ELSE 0 END) AS num_null_cost_events FROM event_log GROUP BY resource ORDER BY num_events DESC;
SELECT e.idcase, COUNT(*) AS num_intervencoes_sem_custo FROM event_log e WHERE e.activity LIKE '%rejeitada%' AND e.cost IS NULL GROUP BY e.idcase
SELECT resource, COUNT(*) AS num_intervencoes_sem_custo FROM event_log WHERE cost IS NULL GROUP BY resource
SELECT * FROM event_log WHERE activity = 'permissão rejeitada pelo diretor';
SELECT * FROM event_log WHERE activity = 'Permissão rejeitada pelo diretor'
SELECT * FROM event_log WHERE activity = 'permissão rejeitada pelo diretor';
SELECT * FROM event_log WHERE activity = 'permissão rejeitada pelo diretor';
SELECT * FROM event_log WHERE activity = 'Permissão rejeitada pelo diretor'
SELECT * FROM event_log WHERE activity = 'Permissão rejeitada pelo diretor'
SELECT activity FROM event_log WHERE activity LIKE '%permissão%' AND resource LIKE '%diretor%' AND activity LIKE '%rejeitada%'
SELECT * FROM event_log WHERE activity = 'Permissão rejeitada pelo diretor'
SELECT DATE(timestamp) AS date, SUM(cost) AS total_cost FROM event_log GROUP BY DATE(timestamp)
SELECT DATE(timestamp) AS date, SUM(cost) AS total_cost FROM event_log GROUP BY DATE(timestamp)
SELECT DATE(timestamp) AS date, SUM(cost) AS total_cost FROM event_log GROUP BY DATE(timestamp) ORDER BY date;
SELECT DATE(timestamp) AS date, SUM(cost) AS total_cost FROM event_log GROUP BY DATE(timestamp) ORDER BY date;
SELECT DATE(timestamp) AS data, SUM(cost) AS custo_total FROM event_log GROUP BY DATE(timestamp) ORDER BY data;
SELECT DATE(timestamp) AS data, SUM(cost) AS soma_custo FROM event_log GROUP BY DATE(timestamp) ORDER BY data;
SELECT DATE(timestamp) AS data, SUM(cost) AS soma_eventos FROM event_log GROUP BY DATE(timestamp) ORDER BY data;
SELECT DATE(timestamp) AS data, SUM(cost) AS custo_total FROM event_log GROUP BY DATE(timestamp) ORDER BY data;
SELECT activity, cost FROM event_log WHERE cost > 1000 AND (resource LIKE '%supervisor%' OR resource LIKE '%diretor%');
SELECT activity, resource, cost FROM event_log WHERE activity IN ('Declaração aprovada pelo supervisor', 'Declaração aprovada pelo diretor') AND cost > 1000 ORDER BY cost DESC;
SELECT activity, cost FROM event_log WHERE cost > 1000 AND (resource LIKE '%supervisor%' OR resource LIKE '%diretor%')
SELECT activity, cost FROM event_log WHERE activity LIKE '%supervisor%' OR activity LIKE '%diretor%' AND cost > 1000;
SELECT activity, cost FROM event_log WHERE cost > 1000 AND (resource LIKE '%supervisor%' OR resource LIKE '%diretor%');
SELECT activity, cost FROM event_log WHERE activity IN ('Declaração aprovada pelo supervisor', 'Declaração aprovada pelo diretor') AND cost > 1000 ORDER BY cost DESC;
SELECT idcase, COUNT(*) AS quantidade_eventos FROM event_log GROUP BY idcase;
SELECT idcase, COUNT(*) AS quantidade_eventos FROM event_log GROUP BY idcase;
SELECT count(*), idcase FROM event_log GROUP BY idcase
SELECT idcase, COUNT(*) as num_events, SUM(cost) as total_cost FROM event_log GROUP BY idcase ORDER BY num_events DESC;
SELECT idcase, COUNT(*) AS num_events FROM event_log GROUP BY idcase
SELECT count(*), idcase FROM event_log GROUP BY idcase.
SELECT idcase, count(*) as num_interventions FROM event_log GROUP BY idcase
SELECT resource, COUNT(*) AS num_tasks FROM event_log GROUP BY resource
SELECT resource, COUNT(*) AS num_activities FROM event_log GROUP BY resource
SELECT resource, COUNT(*) AS activity_count FROM event_log GROUP BY resource
SELECT resource, COUNT(activity) AS activity_count FROM event_log GROUP BY resource
SELECT resource, COUNT(*) AS num_activities FROM event_log GROUP BY resource ORDER BY num_activities DESC;
SELECT resource, COUNT(*) as task_count FROM event_log GROUP BY resource
SELECT idcase, COUNT(*) as num_actions FROM event_log GROUP BY idcase
SELECT idcase, count(DISTINCT activity) AS num_activities FROM event_log WHERE idcase LIKE '%Alexis%' GROUP BY idcase
SELECT idcase, COUNT(*) AS num_activities FROM event_log WHERE activity LIKE '%Alexis%' GROUP BY idcase
SELECT idcase, COUNT(*) AS num_activities FROM event_log WHERE resource = 'Alexis' GROUP BY idcase
SELECT idcase, COUNT(*) AS num_activities FROM event_log WHERE resource = 'Alexis' GROUP BY idcase
SELECT idcase, COUNT(*) as num_activities FROM event_log WHERE resource = 'Alexis' GROUP BY idcase
SELECT el.idcase, COUNT(el.activity) AS num_activities FROM event_log el WHERE el.idcase LIKE '%Alexis%' -- ou qualquer outro critério para identificar as atividades de Alexis GROUP BY el.idcase ORDER BY num_activities DESC;
SELECT idcase, COUNT(*) AS num_tasks FROM event_log WHERE resource = 'Alexis' GROUP BY idcase
SELECT idcase, COUNT(DISTINCT activity) AS num_actions FROM event_log WHERE idcase IN ( SELECT idcase FROM event_log WHERE "activity" LIKE '%Alexis%' ) GROUP BY idcase ORDER BY num_actions DESC;
SELECT COUNT(*) FROM event_log e1 WHERE e1.activity = 'permissão final aprovada pelo supervisor' AND EXISTS ( SELECT 1 FROM event_log e2 WHERE e2.activity = 'início da viagem' AND e2.idcase = e1.idcase AND e2.timestamp > e1.timestamp )
WITH RankedEvents AS ( SELECT id, activity, timestamp, LAG(timestamp) OVER (PARTITION BY idcase ORDER BY timestamp) AS prev_timestamp, idcase FROM event_log ) SELECT idcase FROM RankedEvents WHERE activity = 'Permissão final aprovada pelo supervisor' AND timestamp > prev_timestamp AND prev_timestamp IS NOT NULL AND LAG(activity) OVER (PARTITION BY idcase ORDER BY timestamp) = 'Início da viagem';
SELECT COUNT(*) as count FROM event_log WHERE activity = 'início da viagem' AND EXISTS ( SELECT 1 FROM event_log WHERE activity = 'permissão final aprovada pelo supervisor' AND event_log.id < other_event_log.id )
SELECT COUNT(DISTINCT el1.id) FROM event_log el1 JOIN event_log el2 ON el1.id < el2.id WHERE el1.activity = 'Permissão final aprovada pelo supervisor' AND el2.activity = 'Início da viagem'
WITH RankedEvents AS ( SELECT id, activity, timestamp, LEAD(activity) OVER (PARTITION BY idcase ORDER BY timestamp) AS next_activity, idcase FROM event_log ) SELECT idcase, COUNT(*) as count FROM RankedEvents WHERE activity = 'Início da viagem' AND next_activity = 'Permissão final aprovada pelo supervisor' GROUP BY idcase
SELECT COUNT(*) FROM event_log WHERE activity = 'Início da viagem' AND timestamp > (SELECT timestamp FROM event_log WHERE activity = 'Permissão final aprovada pelo diretor' ORDER BY timestamp DESC LIMIT 1)
SELECT COUNT(*) FROM event_log AS ep, event_log AS iv WHERE ep.activity = 'Permissão final aprovada pelo diretor' AND iv.activity = 'Início da viagem' AND ep.timestamp < iv.timestamp
SELECT COUNT(*) FROM event_log WHERE activity = 'Permissão final aprovada pelo supervisor' AND timestamp < (SELECT timestamp FROM event_log WHERE idcase = 'ID_DA_VIAGEM' ORDER BY timestamp ASC LIMIT 1)
SELECT e1.activity, e1.resource, e1.idcase FROM event_log AS e1 WHERE e1.activity = 'Fim da viagem' AND e1.timestamp NOT LIKE '%2017-12-12%'
SELECT * FROM event_log WHERE activity = 'fim da viagem' AND timestamp < '2017-12-12' OR timestamp > '2017-12-12';
SELECT * FROM event_log WHERE activity = 'Fim da viagem' AND timestamp < '2017-12-12' OR timestamp > '2017-12-12';
SELECT * FROM event_log WHERE activity = 'Fim da viagem' AND timestamp < '2017-12-12' OR timestamp > '2017-12-12'
SELECT * FROM event_log WHERE activity = 'Fim da viagem' AND timestamp NOT LIKE '%2017-12-12%';
SELECT id, activity, timestamp FROM event_log WHERE activity = 'Fim da viagem' AND timestamp NOT LIKE '%2017-12-12%';
SELECT activity FROM event_log WHERE activity LIKE '%Fim da viagem%' AND timestamp < '2017-12-13 00:00:00'
SELECT resource, COUNT(*) FROM event_log GROUP BY resource;
SELECT resource, COUNT(*) AS num_events FROM event_log GROUP BY resource
SELECT resource, COUNT(*) AS num_events FROM event_log GROUP BY resource
SELECT count(DISTINCT id), resource FROM event_log GROUP BY resource
SELECT COUNT(*), responsável FROM event_log GROUP BY responsável
SELECT r.name, COUNT(*) AS num_activities FROM event_log el JOIN responsible r ON el.responsible_id = r.id GROUP BY r.name
SELECT resource, COUNT(*) as num_actions FROM event_log GROUP BY resource
SELECT resource, COUNT(DISTINCT activity) AS num_activities FROM event_log GROUP BY resource
SELECT resource, COUNT(DISTINCT activity) AS num_activities FROM event_log GROUP BY resource
SELECT resource, COUNT(activity) AS num_activities FROM event_log GROUP BY resource
SELECT COUNT(*), resource FROM event_log GROUP BY resource
SELECT resource, COUNT(*) AS num_activities FROM event_log GROUP BY resource
SELECT idcase, COUNT(*) AS num_actions FROM event_log GROUP BY idcase
SELECT activity FROM activity_list WHERE activity NOT IN ( SELECT activity FROM event_log WHERE resource = 'Virginia' )
SELECT DISTINCT activity FROM event_log WHERE resource!= 'Virginia'
SELECT activity FROM event_log WHERE user = 'Virginia' EXCEPT SELECT activity FROM event_log GROUP BY activity HAVING COUNT(*) > 0;
SELECT activity FROM event_log WHERE activity NOT IN ( SELECT activity FROM event_log WHERE idcase = 'Virginia' )
SELECT activity FROM event_log WHERE idcase NOT IN ( SELECT idcase FROM event_log WHERE idcase LIKE '%Virginia%' ) GROUP BY activity
SELECT DISTINCT idcase FROM event_log GROUP BY idcase, activity HAVING COUNT(*) > 1
SELECT AVG(cost) AS media_custo FROM event_log WHERE activity LIKE '%rejeitada%'
SELECT AVG(cost) FROM event_log WHERE activity LIKE '%rejeitada%' GROUP BY idcase;
SELECT AVG(cost) FROM event_log WHERE idcase IN ( SELECT idcase FROM event_log WHERE activity LIKE '%rejeitada%' GROUP BY idcase )
SELECT AVG(cost) AS average_cost FROM event_log WHERE activity LIKE '%rejeitada%' GROUP BY idcase HAVING COUNT(DISTINCT id) > 1;
SELECT AVG(cost) AS media_custo FROM event_log WHERE activity LIKE '%rejeitada%'
SELECT AVG(cost) AS avg_cost FROM event_log WHERE activity ='rejeição'
SELECT AVG(cost) AS average_cost FROM event_log WHERE activity LIKE '%rejeitada%' GROUP BY idcase
SELECT e1.idcase, e2.timestamp as start_time, e3.timestamp as end_time, TIMESTAMPDIFF(SECOND, e2.timestamp, e3.timestamp) as duration FROM event_log e1 INNER JOIN (SELECT idcase, MIN(timestamp) as timestamp FROM event_log GROUP BY idcase) e2 ON e1.idcase = e2.idcase AND e1.activity = 'Declaração aprovada pelo supervisor' INNER JOIN (SELECT idcase, MAX(timestamp) as timestamp FROM event_log GROUP BY idcase) e3 ON e1.idcase = e3.idcase ORDER BY e1.idcase;
SELECT idcase, TIMESTAMPDIFF(SECOND, (SELECT timestamp FROM event_log WHERE activity = 'Declaração aprovada pelo supervisor' AND idcase = el.idcase ORDER BY timestamp ASC LIMIT 1), (SELECT timestamp FROM event_log WHERE activity = 'Declaração aprovada pelo supervisor' AND idcase = el.idcase ORDER BY timestamp DESC LIMIT 1)) AS duration FROM event_log el WHERE activity = 'Declaração aprovada pelo supervisor' GROUP BY idcase
SELECT e1.idcase, e1.timestamp as start_time, (SELECT timestamp FROM event_log e2 WHERE e2.idcase = e1.idcase AND e2.activity = 'Declaração aprovada pelo supervisor' ORDER BY timestamp DESC LIMIT 1) as end_time, TIMESTAMPDIFF(SECOND, e1.timestamp, (SELECT timestamp FROM event_log e2 WHERE e2.idcase = e1.idcase AND e2.activity = 'Declaração aprovada pelo supervisor' ORDER BY timestamp DESC LIMIT 1)) as duration FROM event_log e1 WHERE e1.activity = 'Declaração aprovada pelo supervisor' ORDER BY e1.idcase;
SELECT e1.idcase, TIMESTAMPDIFF(SECOND, (SELECT MIN(timestamp) FROM event_log e2 WHERE e2.idcase = e1.idcase AND e2.activity = 'Declaração aprovada pelo supervisor'), (SELECT MAX(timestamp) FROM event_log e3 WHERE e3.idcase = e1.idcase AND e3.activity = 'Declaração aprovada pelo supervisor')) AS duration FROM event_log e1 WHERE e1.activity = 'Declaração aprovada pelo supervisor' GROUP BY e1.idcase
SELECT e1.idcase, TIMESTAMPDIFF(SECOND, e1.timestamp, e2.timestamp) AS duration FROM event_log e1 INNER JOIN event_log e2 ON e1.idcase = e2.idcase AND e1.activity = 'Declaração aprovada pelo supervisor' AND e2.activity = 'Declaração rejeitada pelo supervisor' WHERE e1.activity = 'Declaração rejeitada pelo supervisor' ORDER BY e1.idcase;
SELECT AVG(cost) AS average_cost FROM event_log WHERE activity = 'Declaração aprovada pelo supervisor';
SELECT AVG(DATEDIFF(timestamp, (SELECT timestamp FROM event_log WHERE activity = 'SUBMIT'))) AS avg_time_to_approve FROM event_log WHERE activity = 'APROVADO'
SELECT COUNT(*) FROM event_log WHERE activity = 'Declaração rejeitada pelo pré-aprovador'
SELECT COUNT(*) FROM event_log WHERE activity = 'Declaração rejeitada pelo pré-aprovador'
SELECT COUNT(*) FROM event_log WHERE activity = 'declaração rejeitada pelo pré-aprovador';
SELECT COUNT(*) FROM event_log WHERE activity = 'Declaração rejeitada pelo pré-aprovador'
SELECT COUNT(*) AS quantidade_execucoes FROM event_log WHERE activity = 'Declaração rejeitada pelo pré-aprovador'
SELECT count(*), resource FROM (SELECT resource, MIN(timestamp) FROM event_log WHERE activity = 'Declaração rejeitada pelo pré-aprovador' GROUP by resource, idcase) GROUP by resource
SELECT COUNT(*) AS "Número de rejeições" FROM event_log WHERE activity = 'Declaração rejeitada pelo pré-aprovador'
SELECT COUNT(*) FROM event_log WHERE activity = 'Declaração rejeitada pelo pré-aprovador'
SELECT idcase, timestamp, resource FROM event_log WHERE activity = 'Fim da viagem' ORDER BY resource, timestamp;
SELECT idcase, timestamp, resource FROM event_log WHERE activity = 'Fim da viagem' ORDER BY resource, timestamp
SELECT idcase, timestamp FROM event_log WHERE activity = 'Fim da viagem' ORDER BY resource, timestamp;
SELECT e1.idcase, e1.resource, e1.timestamp FROM event_log AS e1 WHERE e1.activity = 'Fim da viagem' ORDER BY e1.resource;
SELECT e1.idcase, e1.activity, e1.timestamp, e1.resource, e1.cost, e1.idcase AS "Funcionário responsável" FROM event_log AS e1 WHERE e1.activity = 'Fim da viagem' ORDER BY e1.resource;
SELECT idcase, MAX(timestamp) AS data_fim_viagem, resource FROM event_log WHERE activity = 'Fim da viagem' GROUP BY resource, idcase ORDER BY resource;
SELECT idcase, COUNT(*) AS num_events FROM event_log GROUP BY idcase
SELECT idcase, COUNT(*) AS num_events FROM event_log GROUP BY idcase
SELECT count (*), idcase FROM event_log group by idcase
SELECT COUNT(*), idcase FROM event_log GROUP BY idcase
SELECT idcase, COUNT(*) as events_count FROM event_log GROUP BY idcase ORDER BY events_count DESC;
SELECT idcase, COUNT(*) AS num_events FROM event_log GROUP BY idcase
SELECT idcase, COUNT(*) AS num_actions FROM event_log GROUP BY idcase
SELECT count(*), idcase FROM event_log WHERE activity LIKE '%viagem%' GROUP BY idcase
SELECT COUNT(DISTINCT idcase) AS quantidade_casos FROM event_log WHERE activity = 'Fim da viagem' AND timestamp BETWEEN '2017-05-02' AND '2017-05-12';
SELECT COUNT(DISTINCT idcase) AS quantidade FROM event_log WHERE activity = 'Fim da viagem' AND timestamp BETWEEN '2017-05-02' AND '2017-05-12';
SELECT COUNT(*) AS quantidade FROM event_log WHERE activity = 'Fim da viagem' AND timestamp BETWEEN '2017-05-02' AND '2017-05-12'
SELECT COUNT(DISTINCT idcase) AS num_instances FROM event_log WHERE activity = 'Fim da viagem' AND timestamp BETWEEN '2017-05-02' AND '2017-05-12'
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE activity = 'Fim da viagem' AND timestamp BETWEEN '2017-05-02' AND '2017-05-12';
SELECT COUNT(DISTINCT idcase) AS quantidade_casos FROM event_log WHERE activity = 'Fim da viagem' AND timestamp BETWEEN '2017-05-02' AND '2017-05-12';
SELECT COUNT(*) FROM event_log WHERE idcase IN (SELECT idcase FROM event_log WHERE timestamp BETWEEN '2017-05-02' AND '2017-05-12') AND idcase IS NOT NULL;
SELECT COUNT(*) FROM event_log WHERE timestamp BETWEEN '2017-05-02' AND '2017-05-12' AND activity LIKE '%final da viagem%';
SELECT idcase, resource, id, timestamp FROM event_log WHERE activity = 'envio de lembrete' ORDER BY timestamp;
SELECT idcase, resource, id, timestamp FROM event_log WHERE activity = 'envio de lembrete' ORDER BY timestamp;
SELECT idcase, resource, id, timestamp FROM event_log WHERE activity = 'envio de lembrete' ORDER BY timestamp;
SELECT el.idcase, el.resource, el.activity, el.timestamp FROM event_log el WHERE el.activity = 'Envio de lembrete' ORDER BY el.timestamp;
SELECT idcase, id, resource, timestamp FROM event_log WHERE activity = 'envio de lembrete' ORDER BY timestamp DESC;
SELECT e.idcase, e.resource, e.id, e.timestamp FROM event_log e WHERE e.activity = 'Envio de lembrete' ORDER BY e.timestamp DESC;
SELECT idcase, resource, id, timestamp FROM event_log WHERE activity ='reminder' ORDER BY timestamp;
SELECT DISTINCT resource FROM event_log ORDER BY resource ASC;
SELECT DISTINCT resource FROM event_log ORDER BY resource ASC;
SELECT DISTINCT resource FROM event_log ORDER BY resource ASC;
SELECT DISTINCT resource FROM event_log ORDER BY resource ASC;
SELECT DISTINCT resource FROM event_log ORDER BY resource ASC;
SELECT DISTINCT resource FROM event_log ORDER BY resource ASC;
SELECT DISTINCT resource FROM event_log ORDER BY resource ASC;
SELECT resource, COUNT(DISTINCT idcase) as num_cases FROM event_log GROUP BY resource HAVING COUNT(DISTINCT idcase) > 200
SELECT resource, COUNT(*) AS num_instances FROM event_log GROUP BY resource HAVING COUNT(*) > 200;
SELECT resource, COUNT(*) as num_activities FROM event_log WHERE activity = 'viagem' GROUP BY resource HAVING COUNT(*) > 200;
SELECT resource FROM event_log WHERE activity = 'viagem' AND cost > 200 GROUP BY resource HAVING COUNT(*) > 200
SELECT resource, COUNT(*) AS num_declarações FROM event_log WHERE activity = 'viagem' GROUP BY resource HAVING COUNT(*) > 200 ORDER BY num_declarações DESC;
SELECT e.name FROM employees e JOIN ( SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(*) > 200 ) c ON e.id = c.idcase
SELECT DISTINCT resource FROM event_log GROUP BY resource HAVING COUNT(*) > 200
SELECT COUNT(DISTINCT resource) FROM event_log
SELECT COUNT(*) FROM event_log
SELECT COUNT(DISTINCT resource) AS num_resources FROM event_log WHERE activity LIKE '%declarações%';
SELECT COUNT(DISTINCT resource) AS quantidade_pessoas FROM event_log WHERE activity LIKE '%tratamento de declarações%';
SELECT COUNT(DISTINCT p.id) AS num_people FROM people p JOIN event_log e ON p.id = e.idcase
SELECT COUNT(DISTINCT idcase) AS num_people FROM event_log
SELECT DISTINCT(idcase) FROM (SELECT idcase, activity, LEAD(activity) OVER (PARTITION BY idcase ORDER BY timestamp) AS next_activity FROM event_log) WHERE activity = next_activity
SELECT COUNT(DISTINCT resource) AS num_resources FROM event_log;
SELECT COUNT(DISTINCT resource) AS total_resources FROM event_log;
SELECT activity FROM event_log WHERE activity LIKE '%declaração%';
SELECT DISTINCT activity FROM event_log WHERE activity LIKE '%declaração%'
SELECT activity FROM event_log WHERE id LIKE '%declaração%';
SELECT activity FROM event_log WHERE activity LIKE '%declaração%';
SELECT DISTINCT activity FROM event_log WHERE activity LIKE '%declaração%';
SELECT * FROM event_log WHERE activity LIKE '%declaração%';
SELECT DISTINCT activity FROM event_log WHERE activity LIKE '%declaração%' AND idcase LIKE '%declaração%';
SELECT activity FROM event_log WHERE activity LIKE '%declaração%';
SELECT activity, AVG(cost) AS avg_cost FROM event_log GROUP BY activity
SELECT activity, AVG(cost) AS average_cost FROM event_log GROUP BY activity
SELECT activity, AVG(cost) AS average_cost FROM event_log GROUP BY activity
SELECT activity, AVG(cost) AS avg_cost FROM event_log GROUP BY activity
SELECT activity, AVG(cost) AS avg_cost FROM event_log GROUP BY activity
SELECT activity, AVG(cost) AS average_cost FROM event_log GROUP BY activity
SELECT activity, AVG(cost) AS average_cost FROM event_log GROUP BY activity
SELECT activity, AVG(cost) AS avg_cost FROM event_log GROUP BY activity
SELECT activity, AVG(cost) AS average_cost FROM event_log GROUP BY activity
SELECT COUNT(*) AS quantidade_casos_sem_custo FROM event_log WHERE cost = 0;
SELECT COUNT(*) AS num_instances_without_cost FROM event_log WHERE cost IS NULL OR cost = 0
SELECT COUNT(*) AS quantidade_casos_sem_custo FROM event_log WHERE cost = 0
SELECT COUNT(*) AS quantidade_casos_sem_custo FROM event_log WHERE cost = 0
SELECT COUNT(*) AS num_cases_without_cost FROM event_log WHERE cost = 0
SELECT COUNT(*) AS num_cases FROM event_log WHERE cost IS NULL GROUP BY idcase HAVING COUNT(*) = (SELECT COUNT(*) FROM event_log WHERE cost IS NULL)
SELECT COUNT(*) FROM event_log WHERE cost = 0
SELECT COUNT(*) AS num_cases_without_cost FROM event_log WHERE cost IS NULL;
SELECT COUNT(*) FROM event_log WHERE cost = 0
SELECT activity FROM event_log WHERE activity LIKE '%permissão%' OR activity LIKE '%declaração%';
SELECT DISTINCT activity FROM event_log WHERE activity LIKE '%permissão%' OR activity LIKE '%declaração%';
SELECT activity FROM event_log WHERE activity LIKE '%permissão%' OR activity LIKE '%declaração%';
SELECT activity FROM event_log WHERE activity LIKE '%permissão%' OR activity LIKE '%declaração%'
SELECT DISTINCT activity FROM event_log WHERE activity LIKE '%permissão%' OR activity LIKE '%declaração%'
SELECT activity FROM event_log WHERE activity LIKE '%permissão%' OR activity LIKE '%declaração%';
SELECT activity FROM event_log WHERE activity LIKE '%permissão%' OR activity LIKE '%declaração%';
SELECT * FROM event_log WHERE activity LIKE '%permissão%' OR activity LIKE '%declaração%';
SELECT idcase FROM event_log WHERE activity LIKE 'permissão%' GROUP BY idcase HAVING COUNT(*) > 1
SELECT count(*) FROM event_log WHERE activity = 'Declaração rejeitada pelo diretor'
SELECT COUNT(*) FROM event_log WHERE activity = 'declaração rejeitada pelo diretor';
SELECT COUNT(*) FROM event_log WHERE activity = 'declaração rejeitada pelo diretor';
SELECT COUNT(*) FROM event_log WHERE activity = 'Declaração rejeitada pelo diretor';
SELECT count(*) FROM event_log WHERE activity = 'Declaração rejeitada pelo diretor'
SELECT COUNT(*) FROM event_log WHERE activity = 'Declaração rejeitada pelo diretor' AND idcase IS NOT NULL;
SELECT COUNT(*) FROM event_log WHERE activity = 'Declaração rejeitada pela administração' AND resource = 'Direção';
SELECT AVG(cost) AS average_cost FROM event_log;
SELECT AVG(cost) FROM event_log
SELECT AVG(cost) FROM event_log
SELECT AVG(cost) AS average_cost FROM event_log GROUP BY activity
SELECT AVG(cost) AS average_cost FROM event_log;
SELECT AVG(cost) AS average_cost FROM event_log;
SELECT AVG(cost) AS average_cost FROM event_log GROUP BY activity;
SELECT AVG(cost) AS average_cost FROM event_log
SELECT AVG(cost) AS average_cost FROM event_log WHERE cost IS NOT NULL;
SELECT AVG(cost) AS avg_cost FROM event_log GROUP BY idcase;
SELECT COUNT(DISTINCT idcase), resource FROM event_log GROUP BY resource
SELECT resource, COUNT(DISTINCT idcase) AS num_cases FROM event_log GROUP BY resource
SELECT resource, COUNT(DISTINCT idcase) AS num_cases FROM event_log GROUP BY resource
SELECT COUNT(DISTINCT idcase) AS num_cases, resource FROM event_log GROUP BY resource
SELECT idcase, COUNT(*) AS num_cases FROM event_log GROUP BY idcase
SELECT resource, COUNT(DISTINCT idcase) AS num_cases FROM event_log GROUP BY resource ORDER BY num_cases DESC;
SELECT resource, COUNT(DISTINCT idcase) AS num_cases FROM event_log GROUP BY resource ORDER BY num_cases;
SELECT resource, COUNT(*) AS num_declaracoes FROM event_log WHERE activity LIKE '%Declaração%' GROUP BY resource ORDER BY num_declaracoes DESC;
SELECT COUNT(*) FROM event_log WHERE resource = 'Peter';
SELECT COUNT(*) FROM event_log WHERE resource = 'Peter';
SELECT COUNT(*) FROM event_log WHERE resource = 'Peter' AND activity LIKE '%work%';
SELECT SUM(cost) FROM event_log WHERE resource = 'Peter'
SELECT resource, COUNT(*) as num_cases FROM event_log GROUP BY resource HAVING COUNT(*) > 3
SELECT resource FROM event_log GROUP BY resource HAVING COUNT(*) > 3;
SELECT DISTINCT user FROM event_log GROUP BY user HAVING COUNT(DISTINCT idcase) > 3;
SELECT DISTINCT employee FROM event_log GROUP BY employee HAVING COUNT(DISTINCT idcase) > 3;
SELECT user FROM event_log GROUP BY user HAVING COUNT(DISTINCT id) > 3
SELECT resource FROM event_log GROUP BY resource HAVING COUNT(DISTINCT id) > 3
SELECT idcase, COUNT(*) as num_events FROM event_log WHERE activity = 'Requisição de pagamento' GROUP BY idcase ORDER BY num_events ASC;
SELECT idcase, COUNT(*) as num_events FROM event_log WHERE activity = 'Requisição de pagamento' GROUP BY idcase ORDER BY num_events ASC;
SELECT idcase, COUNT(*) as num_events FROM event_log WHERE activity LIKE '%requisicao de pagamento%' GROUP BY idcase ORDER BY num_events ASC;
SELECT DISTINCT idcase FROM event_log WHERE idcase NOT IN (SELECT idcase FROM event_log WHERE activity = 'Requisição de pagamento' OR activity = 'Pagamento efetuado')
SELECT idcase, COUNT(*) as num_events FROM event_log WHERE activity = 'Requisição de pagamento' GROUP BY idcase ORDER BY num_events ASC;
SELECT idcase, COUNT(*) as num_events FROM event_log WHERE activity = 'Requisição de pagamento' GROUP BY idcase HAVING COUNT(*) > 0 ORDER BY num_events ASC;
SELECT idcase, COUNT(*) as num_activities FROM event_log WHERE activity = 'Requisição de pagamento' GROUP BY idcase ORDER BY num_activities ASC;
SELECT idcase, COUNT(*) as num_actions FROM event_log WHERE activity = 'Requisição de pagamento' GROUP BY idcase ORDER BY num_actions DESC;
SELECT timestamp FROM event_log WHERE activity = 'Fim da viagem' OR activity = 'Declaração rejeitada pelo funcionário' ORDER BY timestamp ASC;
SELECT DISTINCT timestamp FROM event_log WHERE activity IN ('Fim da viagem', 'Declaração rejeitada pelo funcionário') ORDER BY timestamp ASC;
SELECT timestamp FROM event_log WHERE activity = 'Fim da viagem' OR activity = 'Declaração rejeitada pelo funcionário' ORDER BY timestamp ASC;
SELECT timestamp FROM event_log WHERE activity = 'Fim da viagem' OR activity = 'Declaração rejeitada pelo funcionário' ORDER BY timestamp ASC;
SELECT timestamp FROM event_log WHERE activity = 'Fim da viagem' OR activity = 'closed' ORDER BY timestamp ASC;
SELECT timestamp FROM event_log WHERE activity = 'Fim da viagem' OR activity = 'Declaração rejeitada pelo funcionário' ORDER BY timestamp ASC;
SELECT DISTINCT timestamp FROM event_log WHERE activity = 'Fim da viagem' OR activity = 'Declaração rejeitada por funcionário' ORDER BY timestamp ASC;
SELECT e1.timestamp, e1.activity, e1.resource FROM event_log AS e1 WHERE e1.activity IN ('Fim da viagem', 'Rejeição de declaração') GROUP BY e1.timestamp, e1.activity, e1.resource ORDER BY e1.timestamp ASC;
SELECT resource, COUNT(*) AS occurrences FROM event_log GROUP BY resource ORDER BY resource;
SELECT resource, COUNT(*) AS num_executions FROM event_log GROUP BY resource ORDER BY resource ASC;
SELECT resource, COUNT(*) AS num_executions FROM event_log GROUP BY resource ORDER BY resource ASC;
SELECT resource, COUNT(*) as num_executions FROM event_log GROUP BY resource ORDER BY resource ASC;
SELECT resource, COUNT(*) as num_executions FROM event_log GROUP BY resource ORDER BY resource ASC;
SELECT resource, COUNT(*) as num_executions FROM event_log GROUP BY resource ORDER BY resource ASC;
SELECT resource, COUNT(*) AS occurrences FROM event_log GROUP BY resource ORDER BY resource ASC;
SELECT resource, COUNT(*) AS occurrences FROM event_log GROUP BY resource ORDER BY resource ASC;
SELECT resource, COUNT(*) as occurrences FROM event_log GROUP BY resource ORDER BY resource ASC;
SELECT f.nome, COUNT(*) AS quantidade_vezes FROM event_log el JOIN funcionarios f ON el.resource = f.id GROUP BY f.nome ORDER BY f.nome;
SELECT resource, COUNT(*) AS "Quantidade de ações" FROM event_log GROUP BY resource ORDER BY resource ASC;
SELECT * FROM event_log WHERE activity LIKE 'E%';
SELECT * FROM event_log WHERE activity LIKE 'E%';
SELECT * FROM event_log WHERE activity LIKE 'E%';
SELECT * FROM event_log WHERE activity COLLATE NOCASE LIKE 'E%';
SELECT * FROM event_log WHERE activity LIKE 'E%' ORDER BY activity;
SELECT * FROM event_log WHERE activity LIKE 'E%';
SELECT activity FROM event_log WHERE activity LIKE 'E%' AND activity LIKE '%declaração%'
SELECT activity FROM event_log WHERE activity LIKE 'E%';
SELECT id, activity, resource, cost FROM event_log WHERE cost BETWEEN 50 AND 400;
SELECT id, activity, resource, cost FROM event_log WHERE cost BETWEEN 50 AND 400;
SELECT id, activity, resource, cost FROM event_log WHERE cost BETWEEN 50 AND 400
SELECT id, activity, resource, cost FROM event_log WHERE cost BETWEEN 50 AND 400;
SELECT id, activity, resource, cost FROM event_log WHERE cost BETWEEN 50 AND 400
SELECT id, activity, resource, cost FROM event_log WHERE cost BETWEEN 50 AND 400 ORDER BY cost;
SELECT id, activity, resource, cost FROM event_log WHERE cost BETWEEN 50 AND 400;
SELECT id, activity, resource, cost FROM event_log WHERE cost BETWEEN 50 AND 400 ORDER BY cost;
SELECT id, activity, resource, cost FROM event_log WHERE cost BETWEEN 50 AND 400 AND activity LIKE 'Declaração rejeitada pelo pré-aprovador%' ORDER BY cost;
SELECT DISTINCT resource FROM event_log WHERE activity = 'Declaração salva pelo funcionário';
SELECT DISTINCT resource FROM event_log WHERE activity = 'Declaração salva pelo funcionário';
SELECT DISTINCT e.idcase, f.name FROM event_log e JOIN funcionarios f ON e.idcase = f.idcase WHERE e.activity = 'declaração salva';
SELECT DISTINCT resource FROM event_log WHERE activity ='salvar'
SELECT DISTINCT activity FROM event_log WHERE timestamp = '2018-04-12';
SELECT activity FROM event_log WHERE timestamp BETWEEN '2018-04-12 00:00:00' AND '2018-04-12 23:59:59';
SELECT activity FROM event_log WHERE timestamp = '2018-04-12'
SELECT DISTINCT activity FROM event_log WHERE timestamp = '2018-04-12 23:59:59'
SELECT activity FROM event_log WHERE timestamp <= '2018-04-12 23:59:59' AND timestamp >= '2018-04-12 00:00:00' GROUP BY activity
SELECT activity FROM event_log WHERE strftime('%Y-%m-%d', timestamp) = '2018-04-12'
SELECT activity FROM event_log WHERE strftime('%Y-%m-%d', timestamp) = '2018-04-12';
SELECT * FROM event_log WHERE timestamp = '2018-04-12' AND activity LIKE '%execution%' OR activity LIKE '%end%';
SELECT t.name FROM event_log el JOIN task t ON el.idcase = t.id WHERE el.activity LIKE '%processamento de declaração%' AND strftime('%Y-%m-%d', el.timestamp) = '2018-04-12' AND el.activity LIKE '%finalizado%';
SELECT e.id, e.activity, e.timestamp AS "data de término" FROM event_log e WHERE e.activity IN ('Permissão final aprovada pelo supervisor', 'Declaração aprovada pelo supervisor') ORDER BY e.timestamp;
SELECT e.id, e.activity, e.timestamp FROM event_log e WHERE e.activity IN ('Permissão final aprovada pelo supervisor', 'Declaração aprovada pelo supervisor') ORDER BY e.timestamp DESC;
SELECT e.id, e.activity, e.timestamp AS "data_termino" FROM event_log e WHERE e.activity IN ('Permissão final aprovada pelo supervisor', 'Declaração aprovada pelo supervisor') ORDER BY e.timestamp DESC;
SELECT id, activity, timestamp FROM event_log WHERE activity IN ('Permissão final aprovada pelo supervisor', 'Declaração aprovada pelo supervisor') ORDER BY timestamp DESC;
SELECT e.id, e.activity, e.timestamp FROM event_log e WHERE e.activity IN ('Permissão final aprovada pelo supervisor', 'Declaração aprovada pelo supervisor') ORDER BY e.timestamp DESC;
SELECT e.id, e.activity, e.timestamp FROM event_log e WHERE e.activity IN ('Permissão final aprovada pelo supervisor', 'Declaração aprovada pelo supervisor') ORDER BY e.timestamp DESC;
SELECT id, activity, timestamp FROM event_log WHERE activity LIKE '%aprovacao final%' OR activity LIKE '%aprovacao de declaração%' ORDER BY timestamp DESC;
SELECT id, activity, timestamp FROM event_log WHERE activity IN ('aprovação final de permissão', 'aprovação de declaração por supervisor') ORDER BY timestamp;
SELECT * FROM event_log WHERE cost IS NOT NULL
SELECT * FROM event_log WHERE cost IS NOT NULL
SELECT * FROM event_log WHERE cost IS NOT NULL;
SELECT * FROM event_log WHERE cost IS NOT NULL;
SELECT *from event_log where cost is not null*
SELECT * FROM event_log WHERE cost IS NOT NULL
SELECT * FROM event_log WHERE cost IS NOT NULL
SELECT idcase, SUM(cost) FROM event_log group by idcase
SELECT COUNT(*) FROM event_log WHERE activity = 'Permissão final aprovada pelo diretor';
SELECT COUNT(*) AS num_executions FROM event_log WHERE activity = 'Permissão final aprovada pelo diretor';
SELECT COUNT(*) AS "Número de vezes" FROM event_log WHERE activity = 'Permissão final aprovada pelo diretor';
SELECT COUNT(*) AS num_execucoes FROM event_log WHERE activity = 'Permissão final aprovada pelo diretor';
SELECT COUNT(*) FROM event_log WHERE activity = 'Permissão final aprovada pelo diretor';
SELECT COUNT(*) FROM event_log WHERE activity = 'Permissão final aprovada pelo diretor';
SELECT COUNT(*) AS num_execucoes FROM event_log WHERE activity = 'Permissão final aprovada pelo diretor';
SELECT COUNT(*) AS num_execucoes FROM event_log WHERE activity = 'Permissão final aprovada pelo diretor';
SELECT COUNT(*) AS quantidade_execucoes FROM event_log WHERE activity = 'Permissão final aprovada pelo diretor';
SELECT COUNT(*) FROM event_log WHERE activity = 'Permissão final aprovada pelo diretor'
SELECT COUNT(*) FROM event_log WHERE activity = 'Permissão final concedida por diretor';
SELECT COUNT(*) AS total_permissoes_aprovadas FROM event_log WHERE activity = 'Declaração final aprovada pelo diretor';
SELECT timestamp FROM event_log WHERE activity = 'Início da viagem' AND resource LIKE '%s';
SELECT timestamp FROM event_log WHERE activity = 'Início da viagem' AND resource LIKE '%s';
SELECT timestamp FROM event_log WHERE activity = 'Início da viagem' AND resource LIKE '%s';
SELECT timestamp FROM event_log WHERE activity = 'Início da viagem' AND resource LIKE '%s' ORDER BY timestamp;
SELECT * FROM event_log WHERE activity = 'Início da viagem' AND resource LIKE '%s';
SELECT timestamp FROM event_log WHERE activity = 'Início da viagem' AND resource LIKE '%s' ORDER BY timestamp;
SELECT timestamp FROM event_log WHERE activity = 'Início da viagem' AND resource LIKE '%s' ORDER BY timestamp;
SELECT timestamp FROM event_log WHERE activity = 'Início da viagem' AND resource LIKE '%s' ORDER BY timestamp;
SELECT DISTINCT timestamp FROM event_log WHERE activity = 'Início da viagem' AND resource LIKE '%s'
SELECT DISTINCT timestamp FROM event_log WHERE activity = 'Registro de início de viagem' AND resource LIKE '%s';
SELECT activity, resource, SUM(cost) AS total_cost FROM event_log GROUP BY activity, resource
SELECT SUM(cost) AS total_cost FROM event_log WHERE activity IN ( SELECT activity FROM event_log GROUP BY activity, resource HAVING COUNT(DISTINCT id) > 1 )
SELECT activity, resource, SUM(cost) AS total_cost FROM event_log GROUP BY activity, resource
SELECT activity, resource, SUM(cost) AS total_cost FROM event_log GROUP BY activity, resource
SELECT activity, resource, SUM(cost) AS total_cost FROM event_log GROUP BY activity, resource
SELECT activity, resource, SUM(cost) AS total_cost FROM event_log GROUP BY activity, resource
SELECT activity, resource, SUM(cost) AS total_cost FROM event_log GROUP BY activity, resource
SELECT e.name AS employee, a.name AS activity, SUM(e.cost) AS total_cost FROM event_log el JOIN employees e ON el.employee_id = e.id JOIN activities a ON el.activity_id = a.id GROUP BY e.name, a.name ORDER BY total_cost DESC;
SELECT COUNT(*) FROM event_log WHERE activity = 'Início da viagem' OR activity = 'Fim da viagem';
SELECT COUNT(CASE WHEN activity = 'Início da viagem' THEN 1 ELSE NULL END) AS inicio_viagem, COUNT(CASE WHEN activity = 'Fim da viagem' THEN 1 ELSE NULL END) AS fim_viagem FROM event_log
SELECT count(*) FROM event_log WHERE activity = 'Início da viagem' OR activity = 'Fim da viagem'
SELECT COUNT(*) FROM event_log WHERE activity IN ('Início da viagem', 'Fim da viagem');
SELECT COUNT(*) FROM event_log WHERE activity = 'Início da viagem' OR activity = 'Fim da viagem'
SELECT activity, COUNT(*) as quantidade FROM event_log WHERE activity IN ('Início da viagem', 'Fim da viagem') GROUP BY activity
SELECT COUNT(*) FROM event_log WHERE activity = 'Início da viagem' OR activity = 'Fim da viagem'
SELECT COUNT(*) FROM event_log WHERE activity = 'Início da viagem' OR activity = 'Fim da viagem'
SELECT COUNT(*), e1.idcase FROM event_log AS e1 INNER JOIN event_log AS e2 ON e1.idcase = e2.idcase WHERE e2.activity = 'Fim da viagem' AND e1.timestamp < e2.timestamp GROUP BY e1.idcase
SELECT COUNT(*), e1.idcase FROM event_log AS e1 INNER JOIN event_log AS e2 ON e1.idcase = e2.idcase WHERE e2.activity = 'Fim da viagem' AND e1.activity = 'Início da viagem' AND e1.timestamp < e2.timestamp GROUP BY e1.idcase
SELECT activity FROM event_log GROUP BY activity, idcase HAVING COUNT(activity) > 3;
SELECT activity, COUNT(*) as count FROM event_log WHERE timestamp < '2017-01-10' GROUP BY activity HAVING COUNT(*) > 3
SELECT activity FROM event_log GROUP BY activity HAVING COUNT(*) > 3;
SELECT activity FROM event_log GROUP BY activity HAVING COUNT(*) > 3
SELECT activity FROM event_log GROUP BY activity HAVING COUNT(*) > 3;
SELECT activity, COUNT(*) as count FROM event_log GROUP BY activity HAVING COUNT(*) > 3
SELECT activity FROM event_log GROUP BY activity HAVING COUNT(*) > 3
SELECT activity, COUNT(*) as num_events FROM event_log GROUP BY activity HAVING COUNT(*) > 3 ORDER BY num_events DESC;
SELECT activity, COUNT(*) as frequency FROM event_log GROUP BY activity HAVING COUNT(*) > 3 ORDER BY frequency DESC;
SELECT activity, COUNT(*) as count FROM event_log GROUP BY activity HAVING COUNT(*) > 3
SELECT activity, resource FROM event_log ORDER BY timestamp DESC LIMIT 1;
SELECT activity, resource FROM event_log WHERE timestamp = (SELECT MAX(timestamp) FROM event_log)
SELECT activity, resource FROM event_log WHERE timestamp = (SELECT MAX(timestamp) FROM event_log)
SELECT activity, resource FROM event_log ORDER BY timestamp DESC LIMIT 1;
SELECT activity, resource FROM event_log ORDER BY timestamp DESC LIMIT 1;
SELECT activity, resource FROM event_log ORDER BY timestamp DESC LIMIT 1;
SELECT activity, resource FROM event_log ORDER BY timestamp DESC LIMIT 1;
SELECT e1.resource, e1.activity FROM event_log e1 WHERE e1.id = ( SELECT MAX(e2.id) FROM event_log e2 )
SELECT e1.resource, e1.activity FROM event_log e1 WHERE e1.id = ( SELECT MAX(e2.id) FROM event_log e2 )
SELECT e1.activity, e1.resource, e1.timestamp FROM event_log AS e1 INNER JOIN event_log AS e2 ON e1.idcase = e2.idcase WHERE e2.activity = 'Fim da viagem' AND e1.timestamp > e2.timestamp ORDER BY e1.idcase, e1.timestamp;
SELECT e1.idcase, e1.activity, e1.timestamp, e1.resource, e1.cost, e2.username AS responsible FROM event_log AS e1 JOIN event_log AS e2 ON e1.idcase = e2.idcase AND e1.timestamp > e2.timestamp WHERE e2.activity = 'Fim da viagem' ORDER BY e1.idcase, e1.timestamp;
SELECT e1.idcase, e1.activity, e1.timestamp, e1.resource, e1.cost, e2.username AS responsible FROM event_log AS e1 JOIN event_log AS e2 ON e1.idcase = e2.idcase AND e1.timestamp > e2.timestamp WHERE e2.activity = 'Fim da viagem' ORDER BY e1.idcase, e1.timestamp;
SELECT el1.* FROM event_log el1 JOIN ( SELECT idcase, MAX(timestamp) AS max_timestamp FROM event_log WHERE activity = 'Fim da viagem' GROUP BY idcase ) el2 ON el1.idcase = el2.idcase AND el1.timestamp > el2.max_timestamp WHERE el1.activity = 'Início da viagem'
SELECT el1.* FROM event_log el1 JOIN event_log el2 ON el1.idcase = el2.idcase AND el1.activity = 'Início da viagem' AND el2.activity = 'Fim da viagem' AND el1.timestamp > el2.timestamp WHERE el1.id > el2.id
SELECT el1.* FROM event_log el1 JOIN ( SELECT id, MAX(timestamp) AS max_timestamp FROM event_log WHERE activity = 'Fim da viagem' GROUP BY idcase ) el2 ON el1.idcase = el2.idcase AND el1.timestamp > el2.max_timestamp WHERE el1.activity!= 'Fim da viagem'
SELECT el1.activity, el1.timestamp, el1.resource, el1.cost, el1.idcase, c.responsible FROM event_log el1 JOIN event_log el2 ON el1.id = el2.id + 1 WHERE el2.activity = 'Fim da viagem' AND el1.activity = 'Início da viagem' ORDER BY el1.timestamp;
SELECT el1.activity, el1.timestamp, el1.resource, el1.cost, el1.idcase, c.responsible FROM event_log el1 JOIN event_log el2 ON el1.id = el2.id + 1 WHERE el2.activity = 'Fim da viagem' ORDER BY el1.timestamp;
SELECT e1.*, u.username FROM event_log e1 JOIN user_log u ON e1.idcase = u.idcase WHERE e1.activity = 'Fim da viagem' AND e1.timestamp < ( SELECT MAX(timestamp) FROM event_log e2 WHERE e2.activity = 'Início da viagem' AND e2.idcase = e1.idcase ) ORDER BY e1.timestamp;
SELECT el1.* FROM event_log el1 JOIN event_log el2 ON el1.idcase = el2.idcase AND el1.activity = 'Fim da viagem' AND el1.id < el2.id ORDER BY el1.timestamp;
CREATE TABLE "users" ( "id" int, "username" TEXT COLLATE NOCASE, PRIMARY KEY("id") )
SELECT e1.activity, e1.resource, e1.idcase FROM event_log AS e1 WHERE EXISTS ( SELECT 1 FROM event_log AS e2 WHERE e2.idcase = e1.idcase AND e2.activity = 'Fim da viagem' AND e1.timestamp > e2.timestamp )
SELECT e1.activity, e1.resource, e1.timestamp, e1.idcase FROM event_log AS e1 JOIN event_log AS e2 ON e1.idcase = e2.idcase WHERE e2.activity = 'Fim da viagem' AND e1.timestamp > e2.timestamp ORDER BY e1.idcase, e1.timestamp;
SELECT e1.idcase, e1.activity, e1.resource, e1.timestamp, e2.activity AS 'fim da viagem' FROM event_log AS e1 INNER JOIN event_log AS e2 ON e1.idcase = e2.idcase AND e1.timestamp > e2.timestamp WHERE e2.activity = 'Fim da viagem' ORDER BY e1.idcase, e1.timestamp;
SELECT el1.id, el1.activity, el1.timestamp, el1.resource, el1.cost, el1.idcase, el2.activity AS next_activity, el2.timestamp AS next_timestamp, el2.resource AS next_resource, el2.cost AS next_cost, el2.idcase AS next_idcase, el2.resource AS responsible_resource FROM event_log el1 JOIN event_log el2 ON el1.id = el2.id - 1 WHERE el1.activity = 'Fim da viagem' AND el2.activity!= 'Fim da viagem' ORDER BY el1.id;
SELECT el2.activity, el2.resource, el2.timestamp, el1.idcase FROM event_log el2 JOIN event_log el1 ON el2.idcase = el1.idcase WHERE el1.activity = 'Fim da viagem' ORDER BY el1.idcase, el2.timestamp;
SELECT e1.idcase, e1.activity, e1.resource, e1.timestamp, e1.cost, e1.id FROM event_log AS e1 WHERE e1.idcase IN ( SELECT e2.idcase FROM event_log AS e2 WHERE e2.activity = 'Fim da viagem' ) AND e1.timestamp > ( SELECT timestamp FROM event_log AS e3 WHERE e3.activity = 'Fim da viagem' ) ORDER BY e1.idcase, e1.timestamp;
SELECT resource, COUNT(*) as num_events FROM event_log WHERE activity!= 'Fim da viagem' GROUP BY resource
SELECT resource, COUNT(*) as num_events FROM event_log WHERE activity!= 'Fim da viagem' GROUP BY resource
SELECT resource, COUNT(*) as num_events FROM event_log WHERE activity!= 'Fim da viagem' GROUP BY resource
SELECT resource, COUNT(*) as num_events FROM event_log WHERE activity!= 'Fim da viagem' GROUP BY resource
SELECT resource, COUNT(*) as num_events FROM event_log WHERE activity!= 'Fim da viagem' GROUP BY resource
SELECT resource, COUNT(*) as count FROM event_log WHERE activity!= 'Fim da viagem' GROUP BY resource
SELECT resource, COUNT(*) as num_events FROM event_log WHERE activity!= 'Fim da viagem' GROUP BY resource
SELECT resource, COUNT(*) AS num_events FROM event_log WHERE activity!= 'Fim da viagem' GROUP BY resource
SELECT resource, COUNT(*) AS num_events FROM event_log WHERE activity!= 'Fim da viagem' GROUP BY resource
SELECT resource, COUNT(*) AS num_events FROM event_log WHERE activity!= 'Fim da viagem' GROUP BY resource
SELECT resource, COUNT(*) as num_events FROM event_log WHERE activity!= 'Fim da viagem' GROUP BY resource
SELECT resource, COUNT(*) as num_events FROM event_log WHERE activity!= 'Fim da viagem' GROUP BY resource
SELECT resource, COUNT(*) as num_events FROM event_log WHERE activity!= 'Fim da viagem' GROUP BY resource
SELECT resource, COUNT(*) AS num_events FROM event_log WHERE activity!= 'Fim da viagem' GROUP BY resource
SELECT resource, COUNT(*) as count FROM event_log WHERE activity!= 'Fim da viagem' GROUP BY resource
SELECT resource, COUNT(*) as quantidade_eventos FROM event_log WHERE activity!= 'Fim da viagem' GROUP BY resource
SELECT resource, COUNT(*) as quantidade_eventos FROM event_log WHERE activity!= 'Fim da viagem' GROUP BY resource
SELECT resource, COUNT(*) as count FROM event_log WHERE activity!= 'Fim da viagem' GROUP BY resource
SELECT resource, count(*) as quantidade_eventos FROM event_log WHERE activity!= 'Fim da viagem' GROUP BY resource
SELECT resource, COUNT(*) as count FROM event_log WHERE activity!= 'Fim da viagem' GROUP BY resource
SELECT resource, COUNT(*) as count FROM event_log WHERE activity!= 'Fim da viagem' GROUP BY resource
SELECT resource, COUNT(*) as num_events FROM event_log WHERE activity!= 'Fim da viagem' GROUP BY resource
SELECT resource, COUNT(*) as num_events FROM event_log WHERE activity!= 'Fim da viagem' GROUP BY resource
SELECT resource, COUNT(*) as count FROM event_log WHERE activity!= 'Fim da viagem' GROUP BY resource
SELECT resource, count(*) as quantidade_eventos FROM event_log WHERE activity!= 'Fim da viagem' GROUP BY resource
SELECT resource, COUNT(*) as count FROM event_log WHERE activity!= 'Fim da viagem' GROUP BY resource
SELECT resource, COUNT(*) as count FROM event_log WHERE activity!= 'Fim da viagem' GROUP BY resource
SELECT resource, COUNT(*) as count FROM event_log WHERE activity!= 'Fim da viagem' GROUP BY resource
SELECT resource, COUNT(*) AS total_worked FROM event_log WHERE activity!= 'final' GROUP BY resource
SELECT e.resource, COUNT(e.id) AS num_actions FROM event_log AS e WHERE e.activity!= 'Fim da viagem' GROUP BY e.resource ORDER BY num_actions DESC;
SELECT idcase, MIN(timestamp) AS inicio FROM event_log GROUP BY idcase ORDER BY inicio DESC;
SELECT idcase FROM event_log GROUP BY idcase ORDER BY MIN(timestamp) DESC;
SELECT idcase FROM event_log WHERE activity!= 'Envio de lembrete' GROUP BY idcase ORDER BY MIN(timestamp) DESC;
SELECT idcase, MIN(timestamp) AS inicio FROM event_log GROUP BY idcase ORDER BY inicio DESC;
SELECT DISTINCT idcase, MIN(timestamp) AS first_action FROM event_log WHERE activity LIKE '%Declaração de viagem%' GROUP BY idcase ORDER BY first_action;
SELECT idcase, timestamp FROM event_log ORDER BY timestamp ASC;
SELECT COUNT(DISTINCT idcase) AS quantidade FROM event_log WHERE activity = 'Requisição de pagamento'
SELECT COUNT(DISTINCT idcase) AS num_instances FROM event_log WHERE activity = 'Requisição de pagamento';
SELECT COUNT(DISTINCT idcase) AS num_cases FROM event_log WHERE activity = 'Requisição de pagamento';
SELECT COUNT(DISTINCT idcase) AS quantidade_casos FROM event_log WHERE activity = 'Requisição de pagamento';
SELECT COUNT(DISTINCT idcase) AS quantidade_casos FROM event_log WHERE activity = 'Requisição de pagamento';
SELECT COUNT(DISTINCT idcase) AS num_requests FROM event_log WHERE activity = 'Requisição de pagamento';
SELECT COUNT(DISTINCT idcase) AS num_cases FROM event_log WHERE activity = 'Requisição de pagamento';
SELECT idcase FROM event_log WHERE activity = 'Declaração final aprovada pelo diretor' ORDER BY timestamp DESC LIMIT 1;
SELECT idcase, resource FROM event_log WHERE activity = 'Declaração final aprovada pelo diretor' ORDER BY timestamp DESC LIMIT 1;
SELECT idcase FROM event_log WHERE activity = 'Declaração final aprovada pelo diretor' ORDER BY timestamp DESC LIMIT 1;
SELECT idcase FROM event_log WHERE activity = 'Permissão final aprovada pelo diretor' ORDER BY timestamp DESC LIMIT 1;
SELECT idcase, MAX(timestamp) AS last_timestamp FROM event_log WHERE activity = 'Declaração final aprovada pelo diretor' GROUP BY idcase;
SELECT e.idcase, e.resource FROM event_log e WHERE activity = 'Declaração final aprovada pelo diretor' ORDER BY timestamp DESC LIMIT 1;
SELECT e.idcase, e.activity, e.timestamp FROM event_log e WHERE e.activity = 'Declaração final aprovada pelo diretor' ORDER BY e.timestamp DESC LIMIT 1;
SELECT resource, COUNT(*) as count FROM event_log WHERE activity = 'Declaração aprovada pela administração' GROUP BY resource ORDER BY count DESC LIMIT 1;
SELECT resource, COUNT(*) as count FROM event_log WHERE activity = 'Declaração aprovada pela administração' GROUP BY resource ORDER BY count DESC LIMIT 1;
SELECT resource, COUNT(*) as count FROM event_log WHERE activity = 'Declaração aprovada pela administração' GROUP BY resource ORDER BY count DESC LIMIT 1;
SELECT resource, COUNT(*) as total_events FROM event_log WHERE activity = 'Declaração aprovada pela administração' GROUP BY resource ORDER BY total_events DESC LIMIT 1;
SELECT resource, COUNT(*) as total_work FROM event_log WHERE activity = 'Declaração aprovada pela administração' GROUP BY resource ORDER BY total_work DESC LIMIT 1;
SELECT resource, COUNT(*) as num_approvals FROM event_log WHERE activity = 'Declaração aprovada pela administração' GROUP BY resource ORDER BY num_approvals DESC LIMIT 1;
SELECT resource, count(*) as num_approvals FROM event_log WHERE activity = 'Declaração aprovada pela administração' GROUP BY resource ORDER BY num_approvals DESC;
SELECT resource, activity, COUNT(*) FROM event_log WHERE (resource, activity) IN ( SELECT resource, activity FROM event_log ORDER BY timestamp LIMIT 1 ) GROUP BY resource, activity
SELECT resource, COUNT(*) FROM event_log WHERE id = (SELECT MIN(id) FROM event_log) GROUP BY resource
SELECT resource, COUNT(*) AS num_times FROM event_log WHERE activity = (SELECT activity FROM event_log WHERE idcase = event_log.idcase ORDER BY timestamp LIMIT 1) GROUP BY resource
SELECT resource, COUNT(*) AS first_event_count FROM event_log WHERE id = (SELECT MIN(id) FROM event_log WHERE idcase = event_log.idcase) GROUP BY resource
SELECT resource, COUNT(*) AS first_occurrence FROM event_log WHERE id = (SELECT MIN(id) FROM event_log WHERE idcase = event_log.idcase) GROUP BY resource
SELECT e.id, COUNT(*) AS num_actions FROM event_log el JOIN employees e ON el.idcase = e.id WHERE el.id = (SELECT MIN(id) FROM event_log) GROUP BY e.id
SELECT resource, COUNT(*) AS num_processes FROM event_log GROUP BY resource
SELECT COUNT(DISTINCT idcase) AS num_cases FROM event_log WHERE activity LIKE '%aprovada%';
SELECT COUNT(DISTINCT idcase) AS num_cases FROM event_log WHERE activity LIKE '%aprovada%';
SELECT COUNT(*) AS num_cases FROM event_log WHERE activity LIKE '%aprovada%';
SELECT COUNT(*) AS num_cases FROM event_log WHERE activity LIKE '%aprovada%';
SELECT COUNT(DISTINCT idcase) AS num_cases FROM event_log WHERE activity LIKE '%aprovada%';
SELECT COUNT(*) FROM event_log WHERE activity LIKE '%aprovada%';
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE activity LIKE '%aprovada%';
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE activity LIKE '%aprovada%';
SELECT DATE(timestamp) AS data, COUNT(*) AS quantidade_de_casos FROM event_log WHERE activity LIKE '%rejeitada%' GROUP BY DATE(timestamp) ORDER BY data;
SELECT DATE(timestamp) AS data, COUNT(*) AS quantidade_casos FROM event_log WHERE activity LIKE '%rejeitada%' GROUP BY DATE(timestamp) ORDER BY data;
SELECT DATE(timestamp) AS data, COUNT(*) AS quantidade_instancias FROM event_log WHERE activity LIKE '%rejeitada%' GROUP BY DATE(timestamp) ORDER BY data;
SELECT DATE(timestamp) AS data, COUNT(*) AS quantidade_de_casos FROM event_log WHERE activity LIKE '%rejeitada%' GROUP BY DATE(timestamp) ORDER BY data;
SELECT DATE(timestamp) AS data, COUNT(DISTINCT idcase) AS casos_rejeitados FROM event_log WHERE activity LIKE '%rejeitada%' GROUP BY DATE(timestamp) ORDER BY data;
SELECT DATE(timestamp) AS data, COUNT(*) AS quantidade_casos FROM event_log WHERE activity LIKE '%rejeitada%' GROUP BY DATE(timestamp) ORDER BY data;
SELECT DATE(timestamp) AS data, COUNT(*) AS rejeitadas FROM event_log WHERE activity LIKE '%rejeitada%' GROUP BY DATE(timestamp)
SELECT DATE(timestamp) AS data, COUNT(DISTINCT idcase) AS quantidade_declaracoes FROM event_log WHERE activity LIKE '%rejeitada%' GROUP BY DATE(timestamp) ORDER BY data;
SELECT idcase, MAX(timestamp) - MIN(timestamp) AS duration FROM event_log GROUP BY idcase ORDER BY COUNT(*) DESC LIMIT 5;
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(*) IN (SELECT COUNT(*) FROM event_log GROUP BY idcase HAVING COUNT(*) >= 20 ORDER BY COUNT(*) DESC LIMIT 5)
SELECT idcase, SUM(TIMESTAMPDIFF(SECOND, MIN(timestamp), MAX(timestamp))) AS total_time FROM event_log GROUP BY idcase ORDER BY COUNT(*) DESC LIMIT 5;
SELECT idcase, COUNT(*) AS num_events, MAX(timestamp) - MIN(timestamp) AS duration FROM event_log GROUP BY idcase ORDER BY num_events DESC LIMIT 5;
SELECT idcase, COUNT(*) as total_executions, SUM(TIMESTAMPDIFF(SECOND, MIN(timestamp), MAX(timestamp))) as total_duration FROM event_log GROUP BY idcase ORDER BY total_executions DESC LIMIT 5;
SELECT idcase, MAX(timestamp) - MIN(timestamp) AS duration FROM event_log GROUP BY idcase ORDER BY duration DESC LIMIT 5;
SELECT strftime('%s', MAX(timestamp)) - strftime('%s', MIN(timestamp)) AS duration, idcase FROM event_log WHERE idcase IN ( SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(*) IN ( SELECT COUNT(*) FROM event_log GROUP BY idcase HAVING COUNT(*) >= 20 ORDER BY COUNT(*) DESC LIMIT 5 ) ) GROUP BY idcase;
SELECT idcase, COUNT(*) AS num_actions, MAX(timestamp) - MIN(timestamp) AS processing_time FROM event_log GROUP BY idcase ORDER BY num_actions DESC LIMIT 5;
SELECT activity, SUM(cost) AS total_cost, AVG(timestamp - LAG(timestamp) OVER (ORDER BY timestamp)) AS avg_processing_time FROM event_log GROUP BY activity ORDER BY total_cost DESC LIMIT 5;
SELECT idcase, COUNT(*) AS num_events, MAX(timestamp) - MIN(timestamp) AS duration FROM event_log GROUP BY idcase HAVING COUNT(*) >= 20 ORDER BY num_events DESC LIMIT 5;
SELECT idcase, COUNT(*) as events_count, SUM(TIMESTAMPDIFF(SECOND, MIN(timestamp), MAX(timestamp))) as duration FROM event_log WHERE idcase IN ( SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(*) >= 20 ) GROUP BY idcase ORDER BY events_count DESC LIMIT 5;
SELECT idcase, SUM(cost) AS total_cost, MAX(timestamp) AS max_timestamp, MIN(timestamp) AS min_timestamp FROM event_log WHERE idcase IN ( SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(*) > 20 ) GROUP BY idcase ORDER BY total_cost DESC LIMIT 5;
SELECT idcase, SUM(TIMESTAMPDIFF(SECOND, MIN(timestamp), MAX(timestamp))) AS total_time FROM event_log WHERE idcase IN ( SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(*) >= 20 ) GROUP BY idcase ORDER BY total_time DESC LIMIT 5;
SELECT idcase, SUM(DATEDIFF(MAX(timestamp), MIN(timestamp))) AS duration FROM event_log WHERE idcase IN ( SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(*) > 20 ) GROUP BY idcase ORDER BY COUNT(*) DESC LIMIT 5;
SELECT idcase, COUNT(*) as num_events, SUM(TIMESTAMPDIFF(SECOND, MIN(timestamp), MAX(timestamp))) as total_time FROM event_log WHERE idcase IN ( SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(*) >= 20 ) GROUP BY idcase ORDER BY num_events DESC LIMIT 5;
SELECT idcase, MAX(strftime('%s', timestamp)) - MIN(strftime('%s', timestamp)) AS duration, COUNT(*) AS num_events FROM event_log GROUP BY idcase HAVING COUNT(*) >= 20 ORDER BY duration DESC LIMIT 5;
SELECT idcase, strftime('%s', MAX(timestamp)) - strftime('%s', MIN(timestamp)) AS duration FROM event_log WHERE idcase IN ( SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(*) >= 20 ) GROUP BY idcase ORDER BY duration DESC LIMIT 5;
SELECT * FROM ( SELECT idcase, timestamp, ROW_NUMBER() OVER (ORDER BY timestamp DESC) AS row_num FROM event_log WHERE activity = 'Requisição de pagamento' ) AS recent_cases WHERE row_num > 10 ORDER BY timestamp DESC;
SELECT * FROM event_log WHERE activity!= 'Requisição de pagamento' ORDER BY timestamp DESC LIMIT 10;
SELECT * FROM event_log WHERE activity!= 'Requisição de pagamento' ORDER BY timestamp DESC LIMIT 10;
SELECT idcase, timestamp FROM event_log WHERE activity!= 'Requisição de pagamento' ORDER BY timestamp DESC LIMIT 10;
SELECT * FROM event_log WHERE activity!= 'Requisição de pagamento' ORDER BY timestamp DESC LIMIT 10;
SELECT * FROM event_log WHERE idcase NOT IN (SELECT idcase FROM event_log WHERE activity = 'Requisição de pagamento') ORDER BY timestamp DESC LIMIT 10;
SELECT * FROM event_log WHERE idcase NOT IN (SELECT idcase FROM event_log WHERE activity = 'Requisição de pagamento') ORDER BY timestamp DESC LIMIT 10;
SELECT * FROM event_log WHERE activity!= 'Requisição de pagamento' ORDER BY timestamp DESC LIMIT 10;
SELECT * FROM ( SELECT idcase, ROW_NUMBER() OVER (ORDER BY idcase DESC) AS row_num FROM event_log WHERE activity!= 'Requisição de pagamento' ) AS subquery WHERE row_num <= 10 ORDER BY idcase DESC;
SELECT * FROM event_log WHERE idcase NOT IN (SELECT idcase FROM event_log WHERE activity = 'Requisição de pagamento') ORDER BY timestamp DESC LIMIT 10;
SELECT * FROM event_log WHERE idcase NOT IN (SELECT idcase FROM event_log WHERE activity = 'Requisição de pagamento') ORDER BY timestamp DESC LIMIT 10;
SELECT idcase, timestamp FROM event_log WHERE idcase NOT IN (SELECT idcase FROM event_log WHERE activity = 'Requisição de pagamento') ORDER BY timestamp DESC LIMIT 10;
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(*) <= 10
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(*) <= 10
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(*) <= 10
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(*) <= 10
SELECT * FROM event_log WHERE idcase IN (SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(*) <= 10)
SELECT idcase FROM event_log GROUP BY idcase HAVING count(*) <= 10
SELECT idcase, COUNT(*) AS num_events FROM event_log GROUP BY idcase HAVING COUNT(*) <= 10
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(*) <= 10;
SELECT idcase, count(*) as num_events FROM event_log GROUP BY idcase HAVING count(*) <= 10
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(*) <= 10
SELECT idcase, count(*) as num_actions FROM event_log GROUP BY idcase HAVING count(*) <= 10
SELECT idcase FROM event_log GROUP BY idcase HAVING count(*) <= 20
SELECT DISTINCT idcase FROM event_log WHERE idcase NOT IN (SELECT idcase FROM event_log WHERE activity = 'Requisição de pagamento' OR activity = 'Pagamento efetuado')
SELECT AVG(cost) AS media_custo FROM event_log WHERE activity = 'Pagamento efetuado' AND timestamp < '2018-01-01 00:00:00'
SELECT AVG(cost) AS avg_cost FROM event_log WHERE activity = 'pagamento efetuado' AND timestamp < '2018-01-01'
SELECT AVG(cost) AS avg_cost FROM event_log WHERE activity = 'Pagamento efetuado' AND timestamp < '2018-01-01';
SELECT AVG(cost) FROM event_log WHERE activity = 'Pagamento efetuado' AND timestamp < '2018-01-01 00:00:00'
SELECT AVG(cost) AS avg_cost FROM event_log WHERE timestamp < '2018-01-01' AND activity = 'Pagamento efetuado';
SELECT AVG(cost) AS avg_cost FROM event_log WHERE activity = 'Pagamento efetuado' AND timestamp < '2018-01-01';
SELECT AVG(cost) AS avg_cost FROM event_log WHERE activity = 'Pagamento efetuado' AND timestamp < '2018-01-01';
SELECT AVG(cost) AS average_cost FROM event_log WHERE activity = 'Requisição de pagamento' AND timestamp < '2018-01-01'
SELECT idcase, COUNT(*) as count FROM event_log WHERE activity LIKE 'permissão%' GROUP BY idcase
SELECT idcase, COUNT(*) as quantidade_atividades FROM event_log WHERE activity LIKE 'permissão%' GROUP BY idcase
SELECT idcase, COUNT(*) as quantidade FROM event_log WHERE activity LIKE 'permissão%' GROUP BY idcase
SELECT idcase, COUNT(*) as count_permisson FROM event_log WHERE activity LIKE 'permissão%' GROUP BY idcase
SELECT idcase, COUNT(*) AS quantidade_registros FROM event_log WHERE activity LIKE '%permissão%' GROUP BY idcase
SELECT idcase, COUNT(*) as quantidade FROM event_log WHERE activity LIKE 'permissão%' GROUP BY idcase
SELECT idcase, count(*) as quantidade_ocorrencias FROM event_log WHERE activity = 'permissão' GROUP BY idcase
SELECT idcase, COUNT(*) as quantidade_eventos FROM event_log WHERE activity LIKE '%permissão%' GROUP BY idcase
SELECT idcase, COUNT(*) as quantidade FROM event_log WHERE activity = 'Permissão rejeitada pelo diretor' GROUP BY idcase
SELECT idcase FROM event_log WHERE activity LIKE 'permissão%' GROUP BY idcase HAVING COUNT(*) > 1
SELECT COUNT(DISTINCT idcase), resource FROM event_log WHERE activity = 'Declaração rejeitada pelo supervisor' GROUP BY resource
SELECT idcase, COUNT(*) AS quantidade_execucoes, GROUP_CONCAT(DISTINCT resource) AS recursos FROM event_log WHERE activity = 'Declaração rejeitada pelo supervisor' GROUP BY idcase
SELECT resource, COUNT(*) as quantidade_casos FROM event_log WHERE activity = 'Declaração rejeitada pelo supervisor' GROUP BY resource
SELECT resource, COUNT(*) AS num_cases FROM event_log WHERE activity = 'Declaração rejeitada pelo supervisor' GROUP BY resource
SELECT COUNT(DISTINCT idcase) AS num_cases, resource FROM event_log WHERE activity = 'Declaração rejeitada pelo supervisor' GROUP BY resource
SELECT resource, COUNT(*) AS num_execucoes FROM event_log WHERE activity = 'Declaração rejeitada pelo supervisor' GROUP BY resource
SELECT resource, COUNT(*) as num_rejections FROM event_log WHERE activity LIKE '%supervisor%' AND activity LIKE '%rejection%' GROUP BY resource ORDER BY num_rejections DESC;
SELECT DISTINCT e1.idcase, e1.activity, e1.timestamp FROM event_log e1 INNER JOIN ( SELECT idcase, MIN(timestamp) as timestamp FROM event_log GROUP BY idcase ) AS e2 ON e1.idcase = e2.idcase WHERE e1.activity = 'Declaração rejeitada pelo supervisor' ORDER BY e2.timestamp;
SELECT idcase, COUNT(*) AS casos FROM event_log GROUP BY idcase ORDER BY casos DESC;
SELECT activity, COUNT(DISTINCT idcase) AS num_cases FROM event_log GROUP BY activity
SELECT activity, COUNT(*) AS num_executions FROM event_log GROUP BY activity;
SELECT activity, COUNT(*) AS count FROM event_log GROUP BY activity;
SELECT COUNT(DISTINCT idcase) AS num_cases, activity FROM event_log GROUP BY activity
SELECT activity, COUNT(DISTINCT idcase) AS num_cases FROM event_log GROUP BY activity ORDER BY num_cases DESC;
SELECT activity, COUNT(*) as num_declaracoes, SUM(cost) as custo_total FROM event_log GROUP BY activity ORDER BY num_declaracoes DESC;
SELECT activity, COUNT(*) AS num_declaracoes FROM event_log GROUP BY activity
SELECT * FROM event_log WHERE activity LIKE 'R%' AND timestamp > ( SELECT MAX(timestamp) FROM event_log WHERE activity LIKE 'D%' ) ORDER BY timestamp LIMIT 1;
SELECT activity FROM event_log WHERE activity LIKE 'R%' AND timestamp > ( SELECT MAX(timestamp) FROM event_log WHERE activity LIKE 'D%' )
SELECT * FROM event_log WHERE activity LIKE 'R%' AND timestamp > ( SELECT MAX(timestamp) FROM event_log WHERE activity LIKE 'D%' ) ORDER BY timestamp LIMIT 1;
SELECT * FROM event_log WHERE activity LIKE 'R%' AND timestamp > ( SELECT MAX(timestamp) FROM event_log WHERE activity LIKE 'D%' )
SELECT * FROM event_log WHERE activity LIKE 'R%' AND timestamp > ( SELECT MAX(timestamp) FROM event_log WHERE activity LIKE 'D%' )
SELECT * FROM event_log WHERE activity LIKE 'R%' AND timestamp > ( SELECT MAX(timestamp) FROM event_log WHERE activity LIKE 'D%' )
SELECT * FROM event_log WHERE activity LIKE 'R%' AND EXISTS ( SELECT 1 FROM event_log WHERE activity LIKE 'D%' AND id < (SELECT id FROM event_log WHERE activity LIKE 'R%' ORDER BY timestamp LIMIT 1) )
SELECT * FROM event_log WHERE activity LIKE 'R%' AND timestamp > ( SELECT max(timestamp) FROM event_log WHERE activity LIKE 'D%' )
SELECT activity, resource, COUNT(*) AS frequency FROM event_log GROUP BY activity, resource
SELECT resource, activity, COUNT(*) AS execution_count FROM event_log GROUP BY resource, activity ORDER BY resource, activity;
SELECT activity, resource, COUNT(*) as count FROM event_log GROUP BY activity, resource
SELECT resource, activity, COUNT(*) as frequency FROM event_log GROUP BY resource, activity ORDER BY resource, activity;
SELECT resource, activity, COUNT(*) AS frequency FROM event_log GROUP BY resource, activity
SELECT username, activity, COUNT(*) AS frequency FROM event_log GROUP BY username, activity ORDER BY username, frequency DESC;
SELECT e.name, a.activity, COUNT(*) AS frequency FROM event_log el JOIN employees e ON el.idcase = e.id JOIN activities a ON el.activity = a.id GROUP BY e.name, a.activity ORDER BY e.name, a.activity;
SELECT DISTINCT activity FROM event_log WHERE timestamp BETWEEN '2018-01-01' AND '2018-06-30' ORDER BY activity;
SELECT activity FROM event_log WHERE timestamp BETWEEN '2018-01-01' AND '2018-06-30'
SELECT activity FROM event_log WHERE timestamp BETWEEN '2018-01-01' AND '2018-06-30' GROUP BY activity
SELECT DISTINCT activity FROM event_log WHERE timestamp BETWEEN '2018-01-01' AND '2018-07-31';
SELECT DISTINCT activity FROM event_log WHERE timestamp BETWEEN '2018-01-01' AND '2018-06-30';
SELECT DISTINCT activity FROM event_log WHERE timestamp BETWEEN '2018-01-01' AND '2018-06-30';
SELECT activity, COUNT(DISTINCT idcase) AS num_cases, GROUP_CONCAT(DISTINCT resource, ', ') AS resources FROM event_log WHERE strftime('%Y-%m', timestamp) BETWEEN '2018-01-01' AND '2018-06-30' GROUP BY activity ORDER BY activity;
SELECT idcase FROM event_log WHERE resource = 'Wayne' ORDER BY idcase;
SELECT idcase, resource, activity, timestamp FROM event_log WHERE resource = 'Wayne' ORDER BY idcase;
SELECT idcase, resource FROM event_log WHERE resource = 'Wayne' ORDER BY idcase;
SELECT idcase FROM event_log WHERE resource = 'Wayne' ORDER BY idcase;
SELECT idcase, activity FROM event_log WHERE resource = 'Wayne' ORDER BY idcase;
SELECT idcase, activity FROM event_log WHERE resource = 'Wayne' ORDER BY idcase;
SELECT idcase FROM event_log WHERE resource = 'Wayne' ORDER BY idcase;
SELECT * FROM event_log WHERE resource = 'Wayne' ORDER BY timestamp;
SELECT DISTINCT idcase FROM event_log WHERE activity LIKE '%Wayne%' AND activity LIKE '%Declaração%' ORDER BY idcase;
SELECT idcase, resource FROM event_log WHERE resource = 'Wayne' ORDER BY idcase;
SELECT activity, COUNT(*) AS num_cases FROM event_log WHERE timestamp BETWEEN '2018-03-12 00:00:00' AND '2018-03-12 23:59:59' GROUP BY activity
SELECT activity, COUNT(*) AS quantidade_instancias FROM event_log WHERE timestamp BETWEEN '2018-03-12 00:00:00' AND '2018-03-12 23:59:59' GROUP BY activity
SELECT activity, COUNT(*) as count FROM event_log WHERE timestamp BETWEEN '2018-03-12 00:00:00' AND '2018-03-12 23:59:59' AND idcase NOT LIKE '%INPROGRESS%' GROUP BY activity ORDER BY count DESC;
SELECT activity, COUNT(*) as quantidade_casos FROM event_log WHERE timestamp <= '2018-03-12 23:59:59' AND idcase IS NOT NULL GROUP BY activity ORDER BY quantidade_casos DESC;
SELECT activity, COUNT(DISTINCT idcase) AS num_cases FROM event_log WHERE timestamp = (SELECT MAX(timestamp) FROM event_log WHERE timestamp < '2018-03-13') GROUP BY activity
SELECT activity, count(*) as quantidade_casos FROM event_log WHERE timestamp LIKE '2018-03-12%' AND idcase NOT LIKE '%-inativo%' GROUP BY activity
SELECT activity, COUNT(*) AS num_declaracoes FROM event_log WHERE timestamp BETWEEN '2018-03-12' AND '2018-03-12' -- data específica GROUP BY activity
SELECT idcase, activity, COUNT(*) AS count FROM event_log WHERE timestamp BETWEEN '2018-03-12' AND '2018-03-12' GROUP BY idcase, activity
SELECT COUNT(*) AS num_cases FROM event_log WHERE activity LIKE 'permissão%';
SELECT COUNT(*) AS num_cases FROM event_log WHERE activity LIKE 'permissão%';
SELECT COUNT(DISTINCT idcase) AS num_cases FROM event_log WHERE activity LIKE 'permissão%';
SELECT COUNT(*) FROM event_log WHERE activity LIKE 'permissão%' AND id = (SELECT MIN(id) FROM event_log WHERE activity LIKE 'permissão%')
SELECT COUNT(*) FROM event_log WHERE activity LIKE 'permissão%' ORDER BY timestamp LIMIT 1;
SELECT COUNT(DISTINCT idcase) AS num_cases FROM event_log WHERE activity LIKE 'permissão%' AND id = (SELECT MIN(id) FROM event_log WHERE activity LIKE 'permissão%');
SELECT COUNT(*) as num_instances FROM event_log WHERE activity LIKE 'permissão%';
SELECT COUNT(*) FROM event_log WHERE activity LIKE '%associação a uma permissão%';
SELECT * FROM event_log WHERE activity LIKE '%permissão%'
SELECT idcase FROM event_log WHERE activity NOT IN ('Requisição de pagamento', 'Pagamento efetuado') GROUP BY idcase HAVING COUNT(DISTINCT activity) = 0
SELECT idcase FROM event_log WHERE idcase NOT IN ( SELECT idcase FROM event_log WHERE activity IN ('Requisição de pagamento', 'Pagamento efetuado') )
SELECT idcase FROM event_log WHERE activity NOT IN ('Requisição de pagamento', 'Pagamento efetuado') GROUP BY idcase HAVING COUNT(DISTINCT activity) = 0
SELECT idcase FROM event_log WHERE activity NOT IN ('Requisição de pagamento', 'Pagamento efetuado') GROUP BY idcase HAVING COUNT(DISTINCT activity) = 0
SELECT DISTINCT e.idcase FROM event_log AS e WHERE e.activity NOT IN ('Requisição de pagamento', 'Pagamento efetuado') ORDER BY e.idcase;
SELECT idcase FROM process WHERE idcase NOT IN ( SELECT idcase FROM event_log WHERE activity IN ('Requisição de pagamento', 'Pagamento efetuado') )
SELECT idcase FROM event_log WHERE idcase NOT IN ( SELECT idcase FROM event_log WHERE activity = 'Requisição de pagamento' OR activity = 'Pagamento efetuado' )
SELECT * FROM case_log WHERE id NOT IN ( SELECT idcase FROM event_log WHERE activity = 'Requisição de pagamento' OR activity = 'Pagamento efetuado' )
SELECT idcase FROM event_log WHERE activity NOT IN ('Requisição de pagamento', 'Pagamento efetuado') GROUP BY idcase HAVING COUNT(DISTINCT activity) = (SELECT COUNT(*) FROM (SELECT DISTINCT activity FROM event_log) AS activities)
SELECT idcase FROM case_log WHERE idcase NOT IN ( SELECT idcase FROM event_log WHERE activity IN ('Requisição de pagamento', 'Pagamento efetuado') )
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE idcase NOT IN (SELECT DISTINCT idcase FROM event_log where activity = 'Pagamento efetuado') AND idcase NOT IN (SELECT DISTINCT idcase FROM event_log where activity = 'Requisição de pagamento');
SELECT idcase, activity FROM event_log WHERE activity IN ('Requisição de pagamento', 'Pagamento efetuado') AND (SELECT COUNT(*) FROM event_log WHERE idcase = event_log.idcase AND activity = 'Pagamento efetuado') < 1
SELECT timestamp, resource FROM event_log WHERE activity = 'Início da viagem' OR activity = 'Declaração requisitada pelo funcionário' ORDER BY timestamp, resource;
SELECT * FROM event_log WHERE activity IN ('Início da viagem', 'Declaração requisitada pelo funcionário') ORDER BY timestamp, resource ASC;
SELECT * FROM event_log WHERE activity IN ('Início da viagem', 'Declaração requisitada pelo funcionário') ORDER BY timestamp, resource ASC;
SELECT * FROM event_log WHERE activity IN ('início da viagem', 'declaração requisitada pelo funcionário') ORDER BY timestamp, resource;
SELECT * FROM event_log WHERE activity IN ('Início da viagem', 'Declaração requisitada pelo funcionário') ORDER BY timestamp ASC, resource ASC;
SELECT * FROM event_log WHERE activity = 'Início da viagem' OR activity = 'Declaração requisitada pelo funcionário' ORDER BY timestamp, resource ASC;
SELECT * FROM event_log WHERE activity IN ('Início da viagem', 'Declaração requisitada pelo funcionário') ORDER BY timestamp, resource;
SELECT timestamp, resource FROM event_log WHERE activity IN ('Início da viagem', 'Declaração requisitada pelo funcionário') ORDER BY timestamp, resource;
SELECT timestamp, resource FROM event_log WHERE activity IN ('Início da viagem', 'Declaração requisitada pelo funcionário') ORDER BY timestamp, resource;
SELECT e.idcase, e.resource, e.activity, e.timestamp, e.id FROM event_log e WHERE e.activity IN ('início de viagem','requisição de declaração') ORDER BY e.timestamp, e.idcase;
SELECT e.timestamp, e.resource, f.name FROM event_log e JOIN employees f ON e.resource = f.id WHERE e.activity = 'Início de processamento' ORDER BY e.timestamp, f.name
SELECT resource, COUNT(*) as frequency FROM event_log WHERE activity = 'Declaração salva pelo funcionário' GROUP BY resource ORDER BY resource;
SELECT resource, COUNT(*) AS count FROM event_log WHERE activity = 'Declaração salva pelo funcionário' GROUP BY resource ORDER BY resource;
SELECT resource, COUNT(*) AS count FROM event_log WHERE activity = 'Declaração salva pelo funcionário' GROUP BY resource ORDER BY resource;
SELECT resource, COUNT(*) as count FROM event_log WHERE activity = 'Declaração salva pelo funcionário' GROUP BY resource ORDER BY resource;
SELECT resource, COUNT(*) AS ocorrencias FROM event_log WHERE activity = 'Declaração salva pelo funcionário' GROUP BY resource ORDER BY resource;
SELECT resource, COUNT(*) AS frequency FROM event_log WHERE activity = 'declaração salva pelo funcionário' GROUP BY resource ORDER BY frequency DESC;
SELECT resource, COUNT(*) as quantidade_execucoes FROM event_log WHERE activity = 'declaração salva pelo funcionário' GROUP BY resource ORDER BY resource;
SELECT resource, COUNT(*) AS count FROM event_log WHERE activity = 'Declaração salva pelo funcionário' GROUP BY resource ORDER BY count DESC;
SELECT resource, COUNT(*) AS frequency FROM event_log WHERE activity = 'Declaração salva pelo funcionário' GROUP BY resource ORDER BY resource;
SELECT resource, COUNT(*) AS "Quantidade de ações" FROM event_log WHERE activity = 'Salvar declaração de viagem' GROUP BY resource ORDER BY resource;
SELECT resource, count(*) as "Número de salvamentos" FROM event_log WHERE activity = 'Declaração salva' GROUP BY resource ORDER BY resource;
SELECT activity, COUNT(DISTINCT idcase) AS num_cases FROM event_log GROUP BY activity
SELECT activity, COUNT(*) as count FROM event_log GROUP BY activity
SELECT activity, COUNT(*) as quantidade_casos FROM event_log GROUP BY activity
SELECT activity, COUNT(*) AS count FROM event_log GROUP BY activity
SELECT activity, COUNT(*) as instances FROM event_log GROUP BY activity
SELECT idcase, activity, COUNT(*) AS quantidade_execucoes FROM event_log GROUP BY idcase, activity ORDER BY quantidade_execucoes DESC;
SELECT activity, COUNT(*) as num_cases FROM event_log GROUP BY activity
SELECT activity, COUNT(*) AS frequency FROM event_log GROUP BY activity ORDER BY frequency DESC;
SELECT activity, idcase, count(*) as quantidade FROM event_log GROUP BY activity, idcase ORDER BY idcase, activity;
SELECT resource, COUNT(DISTINCT activity) AS num_activities FROM event_log GROUP BY resource
SELECT resource, COUNT(DISTINCT activity) AS num_activities FROM event_log GROUP BY resource ORDER BY num_activities DESC;
SELECT resource, COUNT(DISTINCT activity) AS num_activities FROM event_log GROUP BY resource
SELECT resource, COUNT(DISTINCT activity) AS num_activities FROM event_log GROUP BY resource
SELECT resource, COUNT(DISTINCT activity) AS num_activities FROM event_log GROUP BY resource
SELECT resource, COUNT(DISTINCT activity) AS num_activities FROM event_log GROUP BY resource
SELECT resource, COUNT(DISTINCT activity) AS num_activities FROM event_log GROUP BY resource
SELECT resource, COUNT(DISTINCT activity) AS num_actions FROM event_log WHERE activity LIKE '%viagem%' OR activity LIKE '%travel%' GROUP BY resource ORDER BY num_actions DESC;
SELECT resource, COUNT(DISTINCT activity) AS num_activities FROM event_log WHERE activity LIKE '%processamento de declarações de viagens%' GROUP BY resource ORDER BY num_activities DESC;
SELECT resource, COUNT(*) AS occurrences FROM event_log WHERE activity IN ('Fim da viagem', 'Pagamento efetuado') GROUP BY resource
SELECT idcase, COUNT(DISTINCT activity) AS num_activities FROM event_log WHERE activity IN ('Fim da viagem', 'Pagamento efetuado') GROUP BY idcase ORDER BY num_activities DESC;
SELECT resource, COUNT(*) AS occurrences FROM event_log WHERE activity IN ('Fim da viagem', 'Pagamento efetuado') GROUP BY resource
SELECT resource, COUNT(*) as num_occurrences FROM event_log WHERE activity IN ('Fim da viagem', 'Pagamento efetuado') GROUP BY resource
SELECT idcase FROM event_log WHERE activity = 'Fim da viagem' AND idcase NOT IN ( SELECT idcase FROM event_log WHERE activity = 'Requisição de pagamento' OR activity = 'Pagamento efetuado' ) GROUP BY idcase HAVING COUNT(DISTINCT resource) > 1
SELECT resource, COUNT(*) AS count FROM event_log WHERE activity IN ('Fim da viagem', 'pagamento efetuado') GROUP BY resource
SELECT idcase, COUNT(*) AS total_actions FROM event_log WHERE activity IN ('Fim de Viagem', 'Efetuação de Pagamento') GROUP BY idcase
SELECT e1.resource, COUNT(*) as total_activities FROM event_log AS e1 WHERE e1.activity IN ('Fim da viagem', 'Pagamento') GROUP BY e1.resource
SELECT resource, idcase, COUNT(*) AS count FROM ( SELECT resource, idcase, ROW_NUMBER() OVER (PARTITION BY idcase, activity ORDER BY timestamp) AS row_num FROM event_log WHERE activity = 'Declaração rejeitada pelo pré-aprovador' ) AS subquery WHERE row_num = 1 GROUP BY resource, idcase
SELECT resource, COUNT(*) AS count FROM ( SELECT resource, idcase, ROW_NUMBER() OVER (PARTITION BY idcase, activity ORDER BY timestamp) AS row_num FROM event_log WHERE activity = 'Declaração rejeitada pelo pré-aprovador' ) AS subquery WHERE row_num = 1 GROUP BY resource
SELECT resource, COUNT(DISTINCT id) AS num_instances FROM event_log WHERE activity = 'Declaração rejeitada pelo pré-aprovador' GROUP BY resource ORDER BY num_instances DESC;
SELECT resource, COUNT(*) AS count FROM ( SELECT resource, ROW_NUMBER() OVER (PARTITION BY idcase, activity ORDER BY timestamp) AS row_num FROM event_log WHERE activity = 'Declaração rejeitada pelo pré-aprovador' ) AS subquery WHERE row_num = 1 GROUP BY resource
SELECT resource, COUNT(*) AS quantidade FROM ( SELECT resource, ROW_NUMBER() OVER (PARTITION BY resource, activity ORDER BY timestamp) AS row_num FROM event_log WHERE activity = 'Declaração rejeitada pelo pré-aprovador' ) AS subquery WHERE row_num = 1 GROUP BY resource
SELECT resource, COUNT(*) as num_rejeicoes FROM event_log WHERE activity = 'Declaração rejeitada pelo pré-aprovador' GROUP BY resource
SELECT resource, COUNT(*) AS num_declarações FROM event_log WHERE activity = 'Declaração rejeitada pelo pré-aprovador' GROUP BY resource
SELECT idcase, COUNT(*) as num_occurrences FROM event_log WHERE activity = 'Fim da viagem' GROUP BY idcase
SELECT idcase, COUNT(*) as num_occurrences FROM event_log WHERE activity = 'Fim da viagem' GROUP BY idcase
SELECT idcase, COUNT(*) as num_occurrences FROM event_log WHERE activity!= 'Fim da viagem' GROUP BY idcase ORDER BY idcase;
SELECT idcase, COUNT(*) as num_events FROM event_log WHERE activity!= 'Fim da viagem' GROUP BY idcase
SELECT idcase, COUNT(*) as occurrences FROM event_log WHERE activity = 'Fim da viagem' GROUP BY idcase
SELECT idcase, COUNT(*) AS occurrences FROM event_log WHERE activity!= 'fim da viagem' GROUP BY idcase ORDER BY occurrences DESC
SELECT idcase, count(*) as num_events FROM event_log WHERE activity = 'Fim da viagem' GROUP BY idcase
SELECT idcase, COUNT(*) AS num_events FROM event_log WHERE activity!= 'Fim da viagem' GROUP BY idcase ORDER BY num_events DESC
SELECT idcase, COUNT(*) AS num_events FROM event_log WHERE activity!= 'Fim da viagem' GROUP BY idcase ORDER BY num_events DESC;
SELECT idcase, COUNT(*) AS num_actions FROM event_log WHERE activity = 'Fim da viagem' GROUP BY idcase
SELECT idcase, count(*) AS num_actions FROM event_log WHERE activity!= 'Fim da viagem' GROUP BY idcase ORDER BY idcase;
SELECT activity FROM event_log WHERE resource = 'Thomas' AND timestamp BETWEEN '2018-01-01' AND '2018-06-30'
SELECT activity FROM event_log WHERE resource = 'Thomas' AND timestamp BETWEEN '2018-01-01' AND '2018-06-30'
SELECT activity FROM event_log WHERE resource = 'Thomas' AND timestamp BETWEEN '2018-01-01' AND '2018-06-30' ORDER BY activity;
SELECT DISTINCT activity FROM event_log WHERE resource = 'Thomas' AND timestamp BETWEEN '2018-01-01' AND '2018-06-30'
SELECT DISTINCT activity FROM event_log WHERE resource = 'Thomas' AND timestamp BETWEEN '2018-01-01' AND '2018-07-31';
SELECT activity FROM event_log WHERE strftime('%Y-%m-%d', timestamp) BETWEEN '2018-01-01' AND '2018-07-31' AND resource = 'Thomas';
SELECT activity FROM event_log WHERE resource = 'Thomas' AND timestamp BETWEEN '2018-01-01' AND '2018-06-30';
SELECT activity FROM event_log WHERE resource = 'Thomas' AND timestamp BETWEEN '2018-01-01' AND '2018-06-30' GROUP BY activity
SELECT DISTINCT activity FROM event_log WHERE resource = 'Thomas' AND timestamp BETWEEN '2018-01-01' AND '2018-06-30' ORDER BY activity;
SELECT * FROM event_log WHERE activity = 'Declaração rejeitada pelo supervisor' ORDER BY timestamp ASC;
SELECT idcase, timestamp FROM event_log WHERE activity = 'Declaração rejeitada pelo supervisor' ORDER BY timestamp ASC;
SELECT idcase, timestamp FROM event_log WHERE activity = 'Declaração rejeitada pelo supervisor' ORDER BY timestamp, idcase;
SELECT idcase, timestamp FROM event_log WHERE activity = 'Declaração rejeitada pelo supervisor' ORDER BY timestamp ASC;
SELECT idcase, activity, timestamp FROM event_log WHERE activity = 'Declaração rejeitada pelo supervisor' ORDER BY timestamp;
SELECT idcase, timestamp FROM event_log WHERE activity = 'Declaração rejeitada pelo supervisor' ORDER BY timestamp;
SELECT idcase, MIN(timestamp) AS start_time, activity FROM event_log WHERE activity = 'Declaração rejeitada pelo supervisor' GROUP BY idcase ORDER BY start_time ASC;
SELECT idcase, timestamp FROM event_log WHERE activity='Declaração rejeitada pelo supervisor' ORDER BY timestamp ASC;
SELECT idcase, timestamp FROM event_log WHERE activity = 'Declaração rejeitada pelo supervisor' AND idcase LIKE 'Declaração de viagem%' ORDER BY timestamp ASC;
SELECT idcase, timestamp FROM event_log WHERE activity LIKE '%supervisor%' AND activity LIKE '%rejected%' ORDER BY timestamp;
SELECT idcase FROM event_log WHERE activity = 'Início da viagem' AND id NOT IN ( SELECT id FROM event_log WHERE activity = 'Fim da viagem' AND strftime('%Y-%m', timestamp) <= '2018-03' )
SELECT DISTINCT idcase FROM event_log WHERE activity = 'Início da viagem' AND NOT EXISTS ( SELECT 1 FROM event_log WHERE idcase = event_log.idcase AND activity = 'Fim da viagem' AND timestamp <= '2018-03-31' )
SELECT idcase FROM event_log WHERE activity = 'Início da viagem' AND timestamp < '2018-03-01' AND id NOT IN ( SELECT id FROM event_log WHERE activity = 'Fim da viagem' AND timestamp <= '2018-03-01' )
SELECT idcase FROM event_log WHERE activity = 'Início da viagem' AND NOT EXISTS ( SELECT 1 FROM event_log WHERE idcase = event_log.idcase AND activity = 'Fim da viagem' AND timestamp <= '2018-03-31' )
SELECT DISTINCT idcase FROM event_log WHERE activity = 'Início da viagem' AND NOT EXISTS ( SELECT 1 FROM event_log WHERE idcase = event_log.idcase AND activity = 'Fim da viagem' AND timestamp <= '2018-03-31' )
SELECT idcase FROM event_log WHERE activity = 'Início da viagem' AND timestamp <= '2018-03-31' AND NOT EXISTS ( SELECT 1 FROM event_log WHERE idcase = event_log.idcase AND activity = 'Fim da viagem' AND timestamp <= '2018-03-31' )
SELECT idcase FROM event_log WHERE activity = 'Início da viagem' AND NOT EXISTS ( SELECT 1 FROM event_log WHERE idcase = event_log.idcase AND activity = 'Fim da viagem' AND timestamp <= '2018-03-31' )
SELECT idcase FROM event_log WHERE activity = 'Início da viagem' AND timestamp BETWEEN '2017-05-02' AND '2017-05-12' AND id NOT IN ( SELECT id FROM event_log WHERE activity = 'Fim da viagem' AND timestamp <= '2018-03-31' )
SELECT idcase FROM event_log WHERE activity = 'Início da viagem' AND timestamp BETWEEN '2017-05-01' AND '2017-12-31' AND id NOT IN ( SELECT id FROM event_log WHERE activity = 'Fim da viagem' AND timestamp <= '2018-03-31' )
SELECT e1.idcase FROM event_log AS e1 INNER JOIN event_log AS e2 ON e1.idcase = e2.idcase WHERE e2.activity = 'Fim da viagem' AND e1.activity = 'Início da viagem' AND e1.timestamp > e2.timestamp GROUP BY e1.idcase
SELECT idcase FROM event_log WHERE activity = 'início de viagem' AND id NOT IN ( SELECT id FROM event_log WHERE activity = 'processamento finalizado' AND timestamp <= '2018-03-31 23:59:59' )
SELECT idcase FROM event_log WHERE activity = 'Fim da viagem' AND idcase NOT IN ( SELECT idcase FROM event_log WHERE activity IN ('Requisição de pagamento', 'Pagamento efetuado') ) GROUP BY idcase HAVING COUNT(DISTINCT resource) > 1;
SELECT idcase FROM event_log WHERE activity = 'Fim da viagem' AND idcase NOT IN ( SELECT idcase FROM event_log WHERE activity = 'Requisição de pagamento' OR activity = 'Pagamento efetuado' ) GROUP BY idcase HAVING COUNT(DISTINCT resource) > 1;
SELECT idcase FROM event_log WHERE activity = 'Fim da viagem' AND id NOT IN (SELECT id FROM event_log WHERE activity = 'Requisição de pagamento' OR activity = 'Pagamento efetuado') GROUP BY idcase HAVING COUNT(DISTINCT resource) > 1;
SELECT idcase FROM event_log WHERE activity = 'Fim da viagem' AND idcase NOT IN (SELECT idcase FROM event_log WHERE activity = 'Requisição de pagamento' OR activity = 'Pagamento efetuado') GROUP BY idcase HAVING COUNT(DISTINCT resource) > 1;
SELECT idcase FROM event_log WHERE activity = 'Fim da viagem' AND idcase IN ( SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(DISTINCT resource) > 1 ) AND idcase NOT IN ( SELECT idcase FROM event_log WHERE activity = 'Requisição de pagamento' INTERSECT SELECT idcase FROM event_log WHERE activity = 'Pagamento efetuado' )
SELECT idcase FROM event_log WHERE activity = 'Fim da viagem' AND idcase IN ( SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(DISTINCT resource) > 1 ) AND idcase NOT IN ( SELECT idcase FROM event_log WHERE activity = 'Requisição de pagamento' UNION ALL SELECT idcase FROM event_log WHERE activity = 'Pagamento efetuado' )
SELECT idcase FROM event_log WHERE activity = 'Fim da viagem' AND idcase NOT IN ( SELECT idcase FROM event_log WHERE activity IN ('Requisição de pagamento', 'Pagamento efetuado') ) GROUP BY idcase HAVING COUNT(DISTINCT resource) > 1;
SELECT DISTINCT idcase FROM event_log WHERE activity = 'Finalizar declaração' AND cost = 0
SELECT idcase FROM event_log WHERE activity = 'Fim de viagem' AND idcase NOT IN ( SELECT idcase FROM event_log WHERE activity = 'Requisição de pagamento' OR activity = 'Pagamento efetuado' )
SELECT idcase, COUNT(DISTINCT resource) AS num_resources, SUM(cost) AS total_cost FROM event_log GROUP BY idcase
SELECT idcase, COUNT(DISTINCT resource) AS num_resources, SUM(cost) AS total_cost FROM event_log GROUP BY idcase
SELECT idcase, COUNT(DISTINCT resource) AS num_resources, SUM(cost) AS total_cost FROM event_log GROUP BY idcase
SELECT idcase, COUNT(DISTINCT resource) AS num_resources, SUM(cost) AS total_cost FROM event_log GROUP BY idcase
SELECT idcase, COUNT(DISTINCT resource) AS num_resources, SUM(cost) AS total_cost FROM event_log GROUP BY idcase
SELECT idcase, SUM(cost) AS total_cost, COUNT(DISTINCT resource) AS num_resources FROM event_log GROUP BY idcase
SELECT idcase, SUM(cost) AS total_cost, count(distinct resource) AS num_resources FROM event_log GROUP BY idcase
SELECT idcase, SUM(cost) AS total_cost, COUNT(DISTINCT resource) AS num_resources FROM event_log GROUP BY idcase ORDER BY total_cost DESC;
SELECT idcase, SUM(cost) AS total_cost, COUNT(DISTINCT resource) AS num_resources FROM event_log GROUP BY idcase
SELECT idcase, COUNT(DISTINCT resource) AS num_resources, SUM(cost) AS total_cost FROM event_log GROUP BY idcase
SELECT idcase, COUNT(*) AS num_activities FROM event_log WHERE activity LIKE 'permissão%' AND idcase IN ( SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(*) > 1 ) GROUP BY idcase
SELECT idcase FROM event_log WHERE activity LIKE 'permissão%' AND id IN ( SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(*) > 1 )
SELECT idcase, COUNT(*) as num_activities FROM event_log WHERE activity LIKE 'permissão%' AND idcase IN ( SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(*) > 1 ) GROUP BY idcase
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(CASE WHEN activity LIKE '%permissão%' THEN 1 ELSE NULL END) > 1
SELECT idcase, COUNT(*) AS num_executions FROM event_log WHERE activity LIKE 'permissão%' AND activity NOT LIKE '%permissão%$' GROUP BY idcase HAVING COUNT(*) > 1;
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(*) > 1 AND activity LIKE 'permissão%';
SELECT idcase FROM event_log WHERE activity LIKE 'permissão%' AND id IN ( SELECT id FROM event_log GROUP BY id HAVING COUNT(*) > 1 )
SELECT idcase FROM event_log WHERE activity LIKE 'permissão%' AND id IN ( SELECT id FROM event_log GROUP BY id HAVING COUNT(*) > 1 )
SELECT DISTINCT idcase, activity FROM event_log WHERE activity LIKE '%permissão%' AND activity LIKE '%declaração%'
SELECT idcase, COUNT(*) AS num_actions FROM event_log WHERE activity LIKE '%permissão%' GROUP BY idcase HAVING COUNT(*) > 1;
SELECT idcase, id, timestamp FROM event_log WHERE id IN ( SELECT id FROM event_log GROUP BY idcase ORDER BY timestamp DESC )
SELECT idcase, id, timestamp FROM ( SELECT idcase, id, timestamp, ROW_NUMBER() OVER (PARTITION BY idcase ORDER BY timestamp DESC) AS row_num FROM event_log ) AS subquery WHERE row_num = 1 ORDER BY timestamp DESC;
SELECT id, timestamp FROM event_log WHERE idcase IN ( SELECT idcase FROM event_log GROUP BY idcase ORDER BY timestamp DESC ) ORDER BY timestamp;
SELECT idcase, activity, timestamp FROM event_log WHERE (SELECT COUNT(*) FROM event_log WHERE idcase = event_log.idcase) = (SELECT MAX(COUNT(*)) FROM event_log GROUP BY idcase) ORDER BY timestamp DESC;
SELECT id, activity, timestamp FROM event_log WHERE idcase IN ( SELECT idcase FROM event_log ORDER BY timestamp DESC LIMIT 1 ) ORDER BY timestamp DESC;
SELECT idcase, id, timestamp FROM ( SELECT idcase, id, timestamp, ROW_NUMBER() OVER (PARTITION BY idcase ORDER BY timestamp DESC) as row_num FROM event_log ) as subquery WHERE row_num = 1 ORDER BY timestamp DESC;
SELECT idcase, MAX(timestamp) AS last_event_timestamp, id FROM event_log GROUP BY idcase, id ORDER BY last_event_timestamp;
SELECT idcase, activity, timestamp FROM ( SELECT idcase, activity, timestamp, ROW_NUMBER() OVER (PARTITION BY idcase ORDER BY timestamp DESC) AS row_num FROM event_log ) AS subquery WHERE row_num = 1 ORDER BY idcase;
SELECT idcase, MAX(timestamp) AS last_timestamp, activity AS last_activity FROM event_log GROUP BY idcase, activity ORDER BY idcase;
SELECT activity FROM event_log GROUP BY activity HAVING COUNT(*) >= 100;
SELECT DISTINCT activity FROM event_log GROUP BY activity HAVING COUNT(*) >= 100;
SELECT activity FROM event_log GROUP BY activity HAVING COUNT(*) >= 100;
SELECT activity FROM event_log GROUP BY activity HAVING COUNT(*) >= 100
SELECT activity FROM event_log GROUP BY activity HAVING COUNT(*) >= 100;
SELECT activity FROM event_log GROUP BY activity HAVING COUNT(*) >= 100;
SELECT activity FROM event_log GROUP BY activity HAVING COUNT(*) >= 100
SELECT activity FROM event_log GROUP BY activity HAVING COUNT(*) >= 100;
SELECT grupo, COUNT(*) as quantidade_casos FROM ( SELECT 'funcionário' as grupo FROM event_log WHERE activity like '%funcionário%' UNION ALL SELECT'supervisor' as grupo FROM event_log WHERE activity like '%supervisor%' UNION ALL SELECT 'administração' as grupo FROM event_log WHERE activity like '%administração%' UNION ALL SELECT 'pré-aprovador' as grupo FROM event_log WHERE activity like '%pré-aprovador%' UNION ALL SELECT'responsável pelo orçamento' as grupo FROM event_log WHERE activity like '%responsável pelo orçamento%' UNION ALL SELECT 'diretor' as grupo FROM event_log WHERE activity like '%diretor%' ) as subquery GROUP BY grupo ORDER BY quantidade_casos DESC;
SELECT grupo, COUNT(*) as quantidade_de_casos FROM event_log WHERE activity LIKE '%funcionário%' OR activity LIKE '%supervisor%' OR activity LIKE '%administração%' OR activity LIKE '%pré-aprovador%' OR activity LIKE '%responsável pelo orçamento%' OR activity LIKE '%diretor%' GROUP BY grupo ORDER BY quantidade_de_casos DESC;
SELECT grupo, COUNT(*) as quantidade FROM ( SELECT 'funcionário' as grupo FROM event_log WHERE activity like '%funcionário%' UNION ALL SELECT'supervisor' as grupo FROM event_log WHERE activity like '%supervisor%' UNION ALL SELECT 'administração' as grupo FROM event_log WHERE activity like '%administração%' UNION ALL SELECT 'pré-aprovador' as grupo FROM event_log WHERE activity like '%pré-aprovador%' UNION ALL SELECT'responsável pelo orçamento' as grupo FROM event_log WHERE activity like '%responsável pelo orçamento%' UNION ALL SELECT 'diretor' as grupo FROM event_log WHERE activity like '%diretor%' ) as subquery GROUP BY grupo ORDER BY quantidade DESC;
SELECT COUNT(DISTINCT idcase) AS quantidade_casos, grupo FROM event_log WHERE activity LIKE '%funcionário%' OR activity LIKE '%supervisor%' OR activity LIKE '%administração%' OR activity LIKE '%pré-aprovador%' OR activity LIKE '%responsável pelo orçamento%' OR activity LIKE '%diretor%' GROUP BY grupo ORDER BY quantidade_casos DESC;
SELECT u.role, COUNT(*) as count FROM event_log el JOIN users u ON el.resource = u.id GROUP BY u.role
SELECT grupo, activity, COUNT(*) as frequency FROM event_log WHERE activity LIKE '%funcionário%' OR activity LIKE '%supervisor%' OR activity LIKE '%administração%' OR activity LIKE '%pré-aprovador%' OR activity LIKE '%responsável pelo orçamento%' OR activity LIKE '%diretor%' GROUP BY grupo, activity ORDER BY frequency DESC;
SELECT grupo, COUNT(*) as quantidade, activity FROM event_log WHERE activity LIKE '%funcionário%' OR activity LIKE '%supervisor%' OR activity LIKE '%administração%' OR activity LIKE '%pré-aprovador%' OR activity LIKE '%responsável pelo orçamento%' OR activity LIKE '%diretor%' GROUP BY grupo, activity ORDER BY quantidade DESC;
SELECT grupo, COUNT(DISTINCT idcase) AS quantidade FROM event_log WHERE activity LIKE '%funcionário%' OR activity LIKE '%supervisor%' OR activity LIKE '%administração%' OR activity LIKE '%pré-aprovador%' OR activity LIKE '%responsável pelo orçamento%' OR activity LIKE '%diretor%' GROUP BY grupo ORDER BY quantidade DESC;
SELECT e1.activity, e1.resource, e1.idcase FROM event_log AS e1 INNER JOIN event_log AS e2 ON e1.idcase = e2.idcase WHERE e2.activity = 'Fim da viagem' AND e1.timestamp > e2.timestamp
SELECT e1.idcase FROM event_log AS e1 INNER JOIN event_log AS e2 ON e1.idcase = e2.idcase WHERE e2.activity = 'Fim da viagem' GROUP BY e1.idcase HAVING MAX(e2.timestamp) < e1.timestamp
SELECT idcase FROM event_log WHERE activity = 'Início da viagem' INTERSECT SELECT idcase FROM event_log WHERE activity = 'Fim da viagem' AND timestamp > (SELECT MAX(timestamp) FROM event_log WHERE activity = 'Início da viagem' AND timestamp <= '2018-03-31')
SELECT idcase FROM event_log WHERE idcase IN ( SELECT idcase FROM event_log WHERE activity = 'Fim da viagem' ) AND idcase IN ( SELECT idcase FROM event_log WHERE activity!= 'Fim da viagem' AND timestamp > '2018-03-31' )
SELECT idcase FROM event_log WHERE activity = 'Fim da viagem' AND id IN ( SELECT id FROM event_log WHERE activity!= 'Fim da viagem' AND timestamp > ( SELECT timestamp FROM event_log WHERE activity = 'Fim da viagem' ) )
SELECT e1.idcase, e1.activity, e1.resource FROM event_log AS e1 WHERE e1.idcase IN ( SELECT idcase FROM event_log WHERE activity = 'Fim da viagem' ) AND e1.timestamp > ( SELECT timestamp FROM event_log WHERE activity = 'Fim da viagem' ) ORDER BY e1.idcase;
SELECT COUNT(DISTINCT idcase) AS total_cases FROM event_log WHERE activity = 'Envio de lembrete' ORDER BY timestamp DESC LIMIT 1;
SELECT COUNT(DISTINCT idcase) AS num_cases FROM event_log WHERE activity = 'Envio de lembrete' AND timestamp = (SELECT MAX(timestamp) FROM event_log)
SELECT COUNT(*) FROM event_log WHERE activity = 'envio de lembrete' ORDER BY timestamp DESC LIMIT 1;
SELECT COUNT(DISTINCT idcase) AS num_cases FROM event_log WHERE activity = 'Envio de lembrete' ORDER BY timestamp DESC LIMIT 1;
SELECT COUNT(DISTINCT idcase) AS quantidade_casos FROM event_log WHERE activity = 'Envio de lembrete' ORDER BY timestamp DESC LIMIT 1;
SELECT COUNT(*) FROM event_log WHERE activity = 'Envio de lembrete' AND status = 'parada';
SELECT DISTINCT resource FROM event_log WHERE timestamp < '2018-03-31' OR id NOT IN ( SELECT id FROM event_log WHERE timestamp = '2018-03-31' )
SELECT DISTINCT resource FROM event_log WHERE timestamp < '2018-04-01' AND timestamp >= '2018-03-31' AND idcase IS NOT NULL MINUS SELECT DISTINCT resource FROM event_log WHERE idcase IS NOT NULL
SELECT resource FROM event_log WHERE timestamp LIKE '%2018-03-31%' AND resource IS NOT NULL GROUP BY resource HAVING COUNT(*) = 0;
SELECT resource FROM event_log WHERE timestamp = '2018-03-31' AND activity IS NOT NULL GROUP BY resource HAVING COUNT(*) = 0
SELECT DISTINCT resource FROM event_log WHERE activity = 'Declaração de viagem' AND timestamp <= '2018-03-31' EXCEPT SELECT DISTINCT resource FROM event_log WHERE activity = 'Início da viagem' OR activity = 'Fim da viagem'
SELECT e.id, e.name FROM employee e LEFT JOIN event_log el ON e.idcase = el.idcase WHERE el.id IS NULL AND strftime('%Y-%m-%d', el.timestamp) = '2018-03-31'
SELECT activity, COUNT(*) AS quantidade_eventos FROM event_log WHERE timestamp BETWEEN '2018-12-01' AND '2018-12-05' AND idcase NOT IN (SELECT idcase FROM event_log WHERE timestamp > '2018-12-05') GROUP BY activity ORDER BY quantidade_eventos DESC;
SELECT activity, COUNT(*) as frequency FROM event_log WHERE timestamp BETWEEN '2018-12-01' AND '2018-12-05' AND idcase NOT LIKE '%open%' -- suponho que os casos abertos não têm 'open' no nome GROUP BY activity ORDER BY frequency DESC;
SELECT activity, COUNT(*) as frequency FROM event_log WHERE timestamp BETWEEN '2018-12-01' AND '2018-12-05' AND idcase NOT IN (SELECT idcase FROM event_log WHERE timestamp > '2018-12-05') GROUP BY activity ORDER BY frequency DESC;
SELECT activity, COUNT(*) AS frequency FROM event_log WHERE timestamp BETWEEN '2018-12-01' AND '2018-12-05' AND idcase NOT IN (SELECT idcase FROM event_log WHERE timestamp > '2018-12-05') GROUP BY activity ORDER BY frequency DESC;
SELECT activity, COUNT(*) AS frequency FROM event_log WHERE timestamp BETWEEN '2018-12-01' AND '2018-12-05' AND idcase NOT LIKE '%_IN_PROGRESS%' -- adicione essa condição para filtrar apenas casos finalizados GROUP BY activity ORDER BY frequency DESC;
SELECT activity, COUNT(*) as frequency FROM event_log WHERE timestamp BETWEEN '2018-12-01' AND '2018-12-05' GROUP BY activity ORDER BY frequency DESC;
SELECT COUNT(DISTINCT idcase) AS num_cases FROM event_log WHERE idcase NOT IN ( SELECT idcase FROM event_log WHERE activity = 'Requisição de pagamento' OR activity = 'Pagamento efetuado' )
SELECT COUNT(DISTINCT idcase) AS num_cases FROM event_log WHERE idcase NOT IN (SELECT idcase FROM event_log WHERE activity = 'Pagamento efetuado')
SELECT COUNT(DISTINCT idcase) AS num_cases_without_payment_record FROM event_log WHERE idcase NOT IN ( SELECT idcase FROM event_log WHERE activity = 'Pagamento efetuado' )
SELECT COUNT(DISTINCT idcase) AS num_cases_without_payment FROM event_log WHERE activity NOT LIKE '%Pagamento efetuado%'
SELECT COUNT(*) FROM event_log WHERE activity!= 'pagamanto efetuado'
SELECT COUNT(DISTINCT idcase) AS num_cases_without_payment FROM event_log WHERE idcase NOT IN ( SELECT idcase FROM event_log WHERE activity = 'Pagamento efetuado' )
SELECT COUNT(DISTINCT idcase) AS num_cases_without_payment FROM event_log WHERE idcase NOT IN ( SELECT idcase FROM event_log WHERE activity = 'Requisição de pagamento' OR activity = 'Pagamento efetuado' )
SELECT idcase FROM event_log WHERE activity = 'Fim da viagem' AND NOT EXISTS ( SELECT 1 FROM event_log WHERE idcase = event_log.idcase AND activity IN ('Requisição de pagamento', 'Pagamento efetuado') AND timestamp > event_log.timestamp )
SELECT activity, COUNT(DISTINCT resource) AS num_resources FROM event_log GROUP BY activity
SELECT activity, COUNT(DISTINCT resource) AS num_resources FROM event_log GROUP BY activity
SELECT activity, COUNT(DISTINCT resource) AS num_resources FROM event_log GROUP BY activity ORDER BY activity;
SELECT activity, COUNT(DISTINCT resource) AS num_resources FROM event_log GROUP BY activity
SELECT activity, COUNT(DISTINCT resource) AS num_resources FROM event_log GROUP BY activity
SELECT activity, COUNT(DISTINCT resource) AS num_resources FROM event_log GROUP BY activity
SELECT DISTINCT activity FROM event_log WHERE activity!= 'Envio de lembrete' ORDER BY activity;
SELECT activity FROM event_log WHERE activity!= 'Envio de lembrete' ORDER BY timestamp DESC LIMIT 1;
SELECT activity FROM event_log WHERE id IN ( SELECT id FROM event_log WHERE activity LIKE '%declaração%' AND activity LIKE '%remind%' ORDER BY timestamp LIMIT 1 ) ORDER BY timestamp;
SELECT idcase, COUNT(*) as num_events, COUNT(*)/ (SELECT COUNT(*) FROM event_log) as percentage FROM event_log GROUP BY idcase ORDER BY num_events DESC;
SELECT idcase, COUNT(*) AS num_events, COUNT(DISTINCT id) AS num_cases FROM event_log GROUP BY idcase ORDER BY num_events DESC;
SELECT COUNT(idcase) AS quantidade_casos, COUNT(*) AS quantidade_eventos FROM event_log GROUP BY COUNT(idcase) ORDER BY quantidade_eventos DESC;
SELECT idcase, COUNT(DISTINCT id) AS num_cases, COUNT(*) AS num_events FROM event_log GROUP BY idcase
SELECT idcase, COUNT(*) AS num_events, COUNT(*) AS num_cases FROM event_log GROUP BY idcase ORDER BY num_events DESC;
SELECT idcase, SUM(cost) AS total_cost FROM event_log GROUP BY idcase;
SELECT AVG(total_cost) AS average_total_cost FROM ( SELECT idcase, SUM(cost) AS total_cost FROM event_log GROUP BY idcase ) AS total_costs;
SELECT AVG(total_cost) AS average_total_cost FROM ( SELECT idcase, SUM(cost) AS total_cost FROM event_log GROUP BY idcase ) AS case_costs;
SELECT AVG(total_cost) AS average_total_cost FROM ( SELECT idcase, SUM(cost) AS total_cost FROM event_log GROUP BY idcase ) AS total_costs;
SELECT idcase, SUM(cost) AS total_cost FROM event_log GROUP BY idcase;
SELECT AVG(cost) FROM event_log
SELECT resource, AVG(cost) AS avg_cost FROM event_log GROUP BY resource
SELECT resource, AVG(cost) AS average_cost FROM event_log GROUP BY resource
SELECT resource, AVG(cost) AS average_cost FROM event_log GROUP BY resource
SELECT resource, AVG(cost) AS average_cost FROM event_log GROUP BY resource
SELECT resource, AVG(cost) AS average_cost FROM event_log GROUP BY resource
SELECT idcase, AVG(cost) AS avg_cost FROM event_log GROUP BY idcase
SELECT resource, COUNT(*) as frequency FROM event_log GROUP BY resource ORDER BY frequency DESC LIMIT 10;
SELECT resource, COUNT(*) as frequency FROM event_log GROUP BY resource ORDER BY frequency DESC LIMIT 10;
SELECT resource, COUNT(*) as frequency FROM event_log GROUP BY resource ORDER BY frequency DESC LIMIT 10;
SELECT resource, COUNT(*) as frequency FROM event_log GROUP BY resource ORDER BY frequency DESC LIMIT 10;
SELECT resource, COUNT(*) as total_events FROM event_log WHERE activity = (SELECT activity FROM event_log ORDER BY timestamp DESC LIMIT 1) GROUP BY resource ORDER BY total_events DESC LIMIT 10;
SELECT resource, COUNT(*) as total_activities FROM event_log GROUP BY resource ORDER BY total_activities DESC LIMIT 10;
SELECT DATE(timestamp) AS data, COUNT(*) AS quantidade_eventos FROM event_log GROUP BY DATE(timestamp) ORDER BY data;
SELECT DATE(timestamp) AS date, COUNT(*) AS occurrences FROM event_log GROUP BY DATE(timestamp) ORDER BY date;
SELECT DATE(timestamp) AS data, activity, COUNT(*) AS quantidade FROM event_log GROUP BY DATE(timestamp), activity ORDER BY data, activity;
SELECT idcase, activity, resource1, resource2 FROM ( SELECT idcase, activity, resource, LAG(resource) OVER (PARTITION BY idcase, activity ORDER BY timestamp) AS resource1, LEAD(resource) OVER (PARTITION BY idcase, activity ORDER BY timestamp) AS resource2 FROM event_log ) AS subquery WHERE resource1 IS NOT NULL AND resource2 IS NOT NULL
SELECT idcase, activity, resource1, resource2 FROM ( SELECT idcase, activity, resource, LAG(resource) OVER (PARTITION BY idcase, activity ORDER BY timestamp) AS resource1 FROM event_log ) AS subquery WHERE resource!= resource1
SELECT DISTINCT el1.idcase FROM event_log el1 JOIN event_log el2 ON el1.idcase = el2.idcase WHERE el1.activity = el2.activity AND el1.timestamp < el2.timestamp AND el1.resource!= el2.resource AND el1.activity LIKE '%declaração%'
SELECT idcase, count(*) as num_events FROM event_log WHERE activity = 'Permissão final aprovada pelo diretor' GROUP BY idcase HAVING idcase IN ( SELECT idcase FROM event_log WHERE activity = 'Declaração final aprovada pelo diretor' )
SELECT idcase, COUNT(*) - ROW_NUMBER() OVER (PARTITION BY idcase ORDER BY timestamp DESC) AS num_events_antes FROM event_log WHERE activity = 'Declaração final aprovada pelo diretor' GROUP BY idcase
SELECT idcase, COUNT(*) AS num_intervencoes FROM event_log WHERE activity IN ('Declaração enviada ao diretor', 'Declaração rejeitada', 'Declaração aprovada pelo diretor') GROUP BY idcase ORDER BY idcase;
SELECT el1.idcase, TIMESTAMPDIFF(SECOND, el1.timestamp, el2.timestamp) AS time_diff FROM event_log el1 JOIN event_log el2 ON el1.idcase = el2.idcase WHERE el1.activity LIKE '%permissão requisitada pelo funcionário%' AND el2.activity LIKE '%permissão aprovada pela administração%' ORDER BY el1.idcase, time_diff;
SELECT el1.idcase, TIMESTAMPDIFF(SECOND, el1.timestamp, el2.timestamp) AS time_diff FROM event_log el1 JOIN event_log el2 ON el1.idcase = el2.idcase WHERE el1.activity LIKE '%permissão requisitada pelo funcionário%' AND el2.activity LIKE '%permissão aprovada pela administração%' ORDER BY el1.idcase;
SELECT idcase, activity, timestamp AS request_timestamp, (SELECT timestamp FROM event_log WHERE activity LIKE '%aprovado%' AND idcase = el.idcase ORDER BY timestamp LIMIT 1) AS approval_timestamp, TIMESTAMPDIFF(SECOND, request_timestamp, approval_timestamp) AS time_diff FROM event_log el WHERE activity LIKE '%permissão%' AND activity NOT LIKE '%aprovado%' ORDER BY idcase, request_timestamp;
SELECT idcase, activity FROM event_log WHERE id IN ( SELECT id FROM event_log GROUP BY idcase, activity HAVING COUNT(*) > 1 )
SELECT idcase FROM event_log GROUP BY idcase, activity HAVING COUNT(*) > 1
SELECT idcase FROM event_log WHERE activity = LEAD(activity) OVER (PARTITION BY idcase ORDER BY timestamp)
SELECT idcase, activity FROM event_log WHERE activity LIKE '%rejeitada%' AND EXISTS ( SELECT 1 FROM event_log AS log2 WHERE log2.idcase = event_log.idcase AND log2.activity NOT LIKE '%rejeitada%' AND log2.timestamp > event_log.timestamp )
SELECT activity, COUNT(*) AS count FROM event_log WHERE id IN ( SELECT id FROM event_log GROUP BY resource, activity HAVING COUNT(*) > 1 ) GROUP BY activity;
SELECT idcase, activity FROM event_log GROUP BY idcase, activity HAVING COUNT(*) > 1;
SELECT idcase, activity, timestamp FROM event_log WHERE activity IN ( SELECT activity FROM event_log GROUP BY activity HAVING COUNT(*) > 1 ) ORDER BY idcase, timestamp;
SELECT idcase FROM ( SELECT idcase, activity, LAG(activity) OVER (PARTITION BY idcase ORDER BY timestamp) AS prev_activity FROM event_log ) AS subquery WHERE activity = prev_activity;
SELECT idcase, activity, timestamp FROM event_log WHERE id IN ( SELECT id FROM event_log GROUP BY idcase, activity HAVING COUNT(*) > 1 ) ORDER BY idcase, activity, timestamp;
SELECT activity, COUNT(*) as count FROM event_log GROUP BY activity HAVING COUNT(*) > 1
SELECT idcase, activity, timestamp, resource, cost FROM event_log WHERE id IN ( SELECT id FROM event_log WHERE id IN ( SELECT id FROM event_log GROUP BY id HAVING COUNT(DISTINCT activity) = 1 ) )
SELECT idcase, activity FROM event_log WHERE id IN ( SELECT id - 1 FROM ( SELECT id, LAG(id) OVER (ORDER BY id) AS prev_id FROM event_log ) AS t WHERE id - LAG(id) OVER (ORDER BY id) = 1 )
SELECT * FROM employee WHERE role ='supervisor';
CREATE TABLE employee_declarations AS SELECT e.id, e.name, e1.activity, e1.timestamp FROM event_log e1 JOIN employees e ON e1.resource = e.name WHERE e1.activity LIKE '%Declaração%';
SELECT DISTINCT resource FROM event_log WHERE activity = 'Declaração aprovada pelo responsável pelo orçamento'
SELECT DISTINCT resource FROM event_log WHERE activity LIKE '%budget%';
