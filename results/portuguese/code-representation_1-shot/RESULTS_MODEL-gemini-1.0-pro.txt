SELECT COUNT(*) FROM event_log WHERE activity = 'Fim da viagem';
SELECT COUNT(*) FROM event_log WHERE activity = 'Fim da viagem';
SELECT COUNT(*) FROM event_log WHERE activity = 'Fim da viagem';
SELECT COUNT(*) FROM event_log WHERE activity = 'Fim da viagem';
SELECT COUNT(*) FROM event_log WHERE activity = 'Fim da viagem';
SELECT COUNT(*) FROM event_log WHERE activity = 'Fim da viagem'
SELECT COUNT(*) FROM event_log WHERE activity = 'Fim da viagem';
SELECT COUNT(*) FROM event_log WHERE activity = 'Fim da viagem';
SELECT COUNT(*) FROM event_log WHERE activity = 'Fim da viagem';
SELECT COUNT(*) FROM event_log WHERE activity = 'Fim da viagem';
SELECT COUNT(*) FROM event_log WHERE activity = 'Fim da viagem';
SELECT count(*) FROM event_log WHERE activity = 'Fim da viagem' AND resource = 'James'
SELECT count(*) FROM event_log WHERE activity = 'Fim da viagem' AND resource = 'James'
SELECT count(*) FROM event_log WHERE activity = 'Fim da viagem' AND resource = 'James'
SELECT count(*) FROM event_log WHERE activity = 'Fim da viagem' AND resource = 'James'
SELECT count(*) FROM event_log WHERE activity = 'Fim da viagem' AND resource = 'James'
SELECT COUNT(*) FROM event_log WHERE activity = 'Fim da viagem' AND resource = 'James'
SELECT COUNT(*) FROM event_log WHERE activity = 'Fim da viagem' AND resource = 'James'
SELECT count(*) FROM event_log WHERE activity = 'Fim da viagem' AND resource = 'James'
SELECT count(*) FROM event_log WHERE activity = 'Fim da viagem' AND resource = 'James'
SELECT COUNT(*) FROM event_log WHERE activity = 'Fim da viagem' AND resource = 'James'
SELECT count(*) FROM event_log WHERE activity = 'Fim da viagem' AND resource = 'James'
SELECT COUNT(*) AS "Quantidade de Eventos", resource AS "Recurso" FROM event_log GROUP BY resource;
SELECT COUNT(*) AS "Quantidade de Eventos", resource AS "Recurso" FROM event_log GROUP BY resource;
SELECT COUNT(*) AS event_count, resource FROM event_log GROUP BY resource;
SELECT COUNT(*), resource FROM event_log GROUP BY resource
SELECT COUNT(*), resource FROM event_log GROUP BY resource
SELECT resource, COUNT(*) AS count FROM event_log GROUP BY resource
SELECT resource, COUNT(*) AS count FROM event_log GROUP BY resource
SELECT COUNT(*), resource FROM event_log GROUP BY resource
SELECT COUNT(DISTINCT activity), resource FROM event_log GROUP BY resource
SELECT COUNT(*) AS "Execuções de Atividade", resource FROM event_log GROUP BY resource;
SELECT resource, count(*) AS action_count FROM event_log WHERE activity LIKE '%travel%' GROUP BY resource;
SELECT count(*) FROM event_log WHERE resource = 'Peter'
SELECT count(*) FROM event_log WHERE resource = 'Peter'
SELECT count(*) FROM event_log WHERE resource = 'Peter'
SELECT count(*) FROM event_log WHERE resource = 'Peter'
SELECT count(*) FROM event_log WHERE resource = 'Peter'
SELECT COUNT(*) FROM event_log WHERE resource = 'Peter';
SELECT resource,COUNT(*) FROM event_log WHERE resource = 'Peter' GROUP BY resource
SELECT * FROM event_log WHERE timestamp BETWEEN '2018-10-01' AND '2018-10-02'
SELECT * FROM event_log WHERE timestamp BETWEEN '2017-01-01' AND '2017-12-31'
SELECT idcase FROM event_log WHERE timestamp BETWEEN '2018-03-01' AND '2018-03-31'
SELECT idcase FROM event_log WHERE activity = 'Declaração final aprovada pelo diretor' AND timestamp BETWEEN '2018-03-01' AND '2018-03-31'
SELECT DISTINCT idcase FROM event_log WHERE timestamp IN ( SELECT MAX(timestamp) FROM event_log WHERE timestamp BETWEEN '2018-03-01' AND '2018-03-31' GROUP BY idcase );
SELECT idcase FROM event_log GROUP BY idcase HAVING max(timestamp) BETWEEN '2018-03-01' AND '2018-03-31';
SELECT idcase FROM event_log WHERE activity = 'CLOSED' AND timestamp BETWEEN '2018-03-01' AND '2018-03-31';
SELECT * FROM event_log WHERE timestamp BETWEEN '2018-03-01' AND '2018-04-01'
SELECT DISTINCT idcase FROM event_log WHERE activity = 'Declaração rejeitada pelo pré-aprovador' EXCEPT SELECT DISTINCT idcase FROM event_log WHERE activity = 'Declaração rejeitada pelo pré-aprovador' AND resource = 'Douglas'
SELECT DISTINCT idcase FROM event_log WHERE activity = 'Declaração rejeitada pelo pré-aprovador' EXCEPT SELECT DISTINCT idcase FROM event_log WHERE activity = 'Declaração rejeitada pelo pré-aprovador' AND resource = 'Douglas';
SELECT DISTINCT idcase FROM event_log WHERE activity = 'Declaração rejeitada pelo pré-aprovador' EXCEPT SELECT DISTINCT idcase FROM event_log WHERE activity = 'Declaração rejeitada pelo pré-aprovador' AND resource = 'Douglas'
SELECT DISTINCT idcase FROM event_log WHERE activity = 'Declaração rejeitada pelo pré-aprovador' EXCEPT SELECT DISTINCT idcase FROM event_log WHERE activity = 'Declaração rejeitada pelo pré-aprovador' AND resource = 'Douglas'
SELECT DISTINCT idcase FROM event_log WHERE activity = 'Declaração rejeitada pelo pré-aprovador' EXCEPT SELECT DISTINCT idcase FROM event_log WHERE activity = 'Declaração rejeitada pelo pré-aprovador' AND resource = 'Douglas';
SELECT DISTINCT idcase FROM event_log WHERE activity = 'Declaração rejeitada pelo pré-aprovador' EXCEPT SELECT DISTINCT idcase FROM event_log WHERE activity = 'Declaração rejeitada pelo pré-aprovador' AND resource = 'Douglas';
SELECT DISTINCT idcase FROM event_log WHERE activity = 'Declaração rejeitada pelo pré-aprovador' EXCEPT SELECT DISTINCT idcase FROM event_log WHERE activity = 'Declaração rejeitada pelo pré-aprovador' AND resource = 'Douglas';
SELECT DISTINCT idcase FROM event_log WHERE activity = 'Declaração rejeitada pelo pré-aprovador' AND resource <> 'Douglas'
SELECT DISTINCT idcase FROM event_log WHERE activity = 'Declaração rejeitada pelo pré-aprovador' AND resource <> 'Douglas'
SELECT DISTINCT idcase FROM event_log WHERE activity = 'Declaração rejeitada pelo pré-aprovador' EXCEPT SELECT DISTINCT idcase FROM event_log WHERE activity = 'Declaração rejeitada pelo pré-aprovador' AND resource = 'Douglas'
SELECT DISTINCT idcase FROM event_log WHERE activity = 'Declaração rejeitada pelo pré-aprovador' AND resource <> 'Douglas';
SELECT activity FROM event_log WHERE activity = 'Declaração rejeitada pelo pré-aprovador' AND resource <> 'Douglas';
SELECT * FROM event_log WHERE activity = 'Declaração rejeitada pelo pré-aprovador' AND resource NOT LIKE '%Douglas%'
SELECT COUNT (DISTINCT resource) FROM event_log
SELECT COUNT (DISTINCT resource) FROM event_log
SELECT COUNT (DISTINCT resource) FROM event_log
SELECT COUNT(DISTINCT resource) FROM event_log
SELECT COUNT(DISTINCT resource)
SELECT COUNT (DISTINCT resource) FROM event_log
SELECT COUNT(DISTINCT resource) FROM event_log;
SELECT COUNT(DISTINCT resource) FROM event_log
SELECT COUNT(DISTINCT resource) FROM event_log
SELECT COUNT(DISTINCT resource) FROM event_log
SELECT COUNT(DISTINCT "idcase") FROM event_log
SELECT COUNT(DISTINCT resource) FROM event_log
SELECT COUNT(DISTINCT resource) FROM event_log WHERE activity = 'process statement'
SELECT resource,COUNT(*) FROM event_log GROUP BY resource
SELECT count(*) AS "Total de Eventos", resource FROM event_log GROUP BY resource;
SELECT resource,COUNT(*) FROM event_log GROUP BY resource
SELECT resource, COUNT(*) AS total_actions FROM event_log GROUP BY resource
SELECT DISTINCT idcase FROM event_log WHERE cost > 2.225;
SELECT idcase FROM event_log WHERE cost > 2.225
SELECT DISTINCT idcase FROM event_log WHERE cost > 2.225;
SELECT **Ações mais comuns no processamento de declarações:** * **Seleção:** Recuperar dados de uma tabela com base em critérios específicos. * **Inserção:** Adicionar novos dados a uma tabela. * **Atualização:** Modificar dados existentes em uma tabela. * **Exclusão:** Remover dados de uma tabela. * **Criação de tabela:** Criar uma nova tabela com uma estrutura específica. * **Modificação de tabela:** Alterar a estrutura de uma tabela existente. * **Exclusão de tabela:** Remover uma tabela do banco de dados. * **Criação de índice:** Criar um índice para melhorar o desempenho das consultas. * **Exclusão de índice:** Remover um índice do banco de dados. * **Transações:** Agrupar várias operações em uma única unidade de trabalho. **Declarações associadas a ações que custaram mais do que 2.225:** * **SELECT:** Recuperar dados da tabela event_log onde o custo é maior que 2.225. * **WHERE:** Filtrar os resultados da consulta para incluir apenas ações com custo maior que 2.225. * **GROUP BY:** Agrupar os resultados por atividade para identificar as atividades mais caras. * **HAVING:** Filtrar os resultados agrupados para incluir apenas atividades com custo total maior que o custo máximo.
SELECT **Declaração 1:** * **Ação:** Leitura de linhas da tabela event_log * **Custo:** O custo de leitura de cada linha é desconhecido, pois não é fornecido na declaração. **Declaração 2:** * **Ação:** Filtragem de linhas da tabela event_log com base na condição cost IS NOT NULL * **Custo:** O custo de filtragem de cada linha é desconhecido, pois não é fornecido na declaração. **Declaração 3:** * **Ação:** Leitura de linhas da tabela event_log com base na condição cost > 2.225 * **Custo:** O custo de leitura de cada linha é desconhecido, pois não é fornecido na declaração.
SELECT resource, COUNT(*) AS event_count FROM event_log GROUP BY resource ORDER BY event_count DESC LIMIT 1;
SELECT resource, COUNT(*) AS event_count FROM event_log GROUP BY resource ORDER BY event_count DESC LIMIT 1;
SELECT resource, COUNT(*) AS event_count FROM event_log GROUP BY resource ORDER BY event_count DESC LIMIT 1;
SELECT resource, COUNT(*) AS event_count FROM event_log GROUP BY resource ORDER BY event_count DESC LIMIT 1
SELECT resource, COUNT(*) AS event_count FROM event_log GROUP BY resource ORDER BY event_count DESC LIMIT 1;
SELECT resource, COUNT(*) AS event_count FROM event_log GROUP BY resource ORDER BY event_count DESC LIMIT 1;
SELECT resource, COUNT(*) AS event_count FROM event_log GROUP BY resource ORDER BY event_count DESC LIMIT 1;
SELECT resource, COUNT(*) AS event_count FROM event_log GROUP BY resource ORDER BY event_count DESC LIMIT 1;
SELECT resource, COUNT(*) AS event_count FROM event_log GROUP BY resource ORDER BY event_count DESC LIMIT 1;
SELECT resource, COUNT(*) AS event_count FROM event_log GROUP BY resource ORDER BY event_count DESC LIMIT 1;
SELECT resource, COUNT(*) AS num_processos FROM ( SELECT resource, MIN(timestamp) AS start_time FROM event_log WHERE activity = 'Process Statement' GROUP BY idcase ) AS subquery GROUP BY resource ORDER BY num_processos DESC;
SELECT resource, COUNT(*) AS event_count FROM event_log GROUP BY resource ORDER BY event_count DESC LIMIT 1;
SELECT resource, COUNT(*) AS event_count FROM event_log GROUP BY resource ORDER BY event_count DESC LIMIT 1;
SELECT resource, COUNT(*) AS event_count FROM event_log GROUP BY resource ORDER BY event_count DESC;
SELECT resource, COUNT(*) AS event_count FROM event_log GROUP BY resource ORDER BY event_count DESC LIMIT 1;
SELECT resource, COUNT(*) AS event_count FROM event_log GROUP BY resource ORDER BY event_count DESC LIMIT 1;
SELECT resource, COUNT(*) AS event_count FROM event_log GROUP BY resource ORDER BY event_count DESC LIMIT 1;
SELECT resource, COUNT(*) AS event_count FROM event_log GROUP BY resource ORDER BY event_count DESC LIMIT 1;
SELECT resource, COUNT(*) AS count FROM event_log GROUP BY resource ORDER BY count DESC LIMIT 1;
SELECT resource, COUNT(*) AS event_count FROM event_log GROUP BY resource ORDER BY event_count DESC;
SELECT resource, COUNT(*) AS event_count FROM event_log GROUP BY resource ORDER BY event_count DESC;
SELECT resource, COUNT(*) AS event_count FROM event_log GROUP BY resource ORDER BY event_count DESC;
SELECT resource, COUNT(*) AS event_count FROM event_log GROUP BY resource ORDER BY event_count DESC;
SELECT resource, COUNT(*) AS activity_count FROM event_log GROUP BY resource ORDER BY activity_count DESC;
SELECT resource, COUNT(*) AS count FROM event_log GROUP BY resource ORDER BY count DESC;
SELECT * FROM event_log WHERE cost IS NOT NULL
SELECT * FROM event_log WHERE cost IS NOT NULL
SELECT * FROM event_log WHERE cost IS NOT NULL
SELECT * FROM event_log WHERE cost IS NOT NULL;
SELECT * FROM event_log WHERE cost IS NOT NULL
SELECT * FROM event_log WHERE cost IS NOT NULL
SELECT * FROM event_log WHERE cost IS NOT NULL
SELECT * FROM event_log WHERE cost IS NOT NULL
SELECT * FROM event_log WHERE cost IS NOT NULL
SELECT * FROM event_log WHERE cost IS NOT NULL
SELECT * FROM event_log WHERE activity IN ('Início da viagem', 'Requisição de pagamento');
SELECT * FROM event_log WHERE activity = 'Início da viagem' OR activity = 'Requisição de pagamento';
SELECT * FROM event_log WHERE activity = 'Início da viagem' OR activity = 'Requisição de pagamento';
SELECT * FROM event_log WHERE activity IN ('Início da viagem', 'Requisição de pagamento');
SELECT * FROM event_log WHERE activity IN ('Início da viagem', 'Requisição de pagamento')
SELECT activity, COUNT(*) AS count FROM event_log GROUP BY activity ORDER BY count DESC LIMIT 10;
SELECT activity, COUNT(*) AS count FROM event_log GROUP BY activity ORDER BY count DESC
SELECT activity FROM event_log GROUP BY activity ORDER BY COUNT(*) DESC LIMIT 1;
SELECT activity FROM event_log GROUP BY activity ORDER BY COUNT (*) DESC
SELECT activity, COUNT(*) AS count FROM event_log WHERE activity LIKE '%process%' GROUP BY activity ORDER BY count DESC;
SELECT activity, COUNT(*) AS occurrence_count FROM event_log GROUP BY activity ORDER BY occurrence_count DESC;
SELECT activity, COUNT(*) AS count FROM event_log GROUP BY activity ORDER BY count DESC;
SELECT activity, COUNT(*) AS count FROM event_log GROUP BY activity ORDER BY count DESC;
SELECT activity, COUNT(*) AS count FROM event_log WHERE activity LIKE '%declaração%' GROUP BY activity ORDER BY count DESC;
SELECT * FROM event_log WHERE strftime('%Y', timestamp) = '2017';
SELECT * FROM event_log WHERE timestamp BETWEEN '2017-01-01' AND '2017-12-31'
SELECT * FROM event_log WHERE strftime('%Y', timestamp) = '2017';
SELECT * FROM event_log WHERE strftime('%Y', timestamp) = '2017'
SELECT * FROM event_log WHERE strftime('%Y', timestamp) = '2017';
SELECT idcase FROM event_log GROUP BY idcase HAVING MIN(timestamp) < '2017-03-01';
SELECT * FROM event_log WHERE strftime('%Y', timestamp) = '2017';
SELECT * FROM event_log WHERE strftime('%Y', timestamp) = '2017';
SELECT * FROM event_log WHERE strftime('%Y', timestamp) = '2017';
SELECT * FROM event_log WHERE strftime('%Y', timestamp) = '2017';
SELECT * FROM event_log WHERE timestamp BETWEEN '2017-01-01' AND '2017-12-31'
SELECT * FROM event_log WHERE timestamp BETWEEN '2017-01-01' AND '2017-12-31'
SELECT activity, COUNT(*) AS count FROM event_log WHERE timestamp BETWEEN '2017-01-01' AND '2017-12-31' GROUP BY activity ORDER BY count DESC
SELECT activity, COUNT(*) AS count FROM event_log WHERE timestamp BETWEEN '2017-01-01' AND '2017-12-31' GROUP BY activity ORDER BY count DESC
SELECT activity, COUNT(*) AS count FROM event_log WHERE timestamp BETWEEN '2017-01-01' AND '2017-12-31' GROUP BY activity ORDER BY count DESC;
SELECT idcase FROM event_log group by idcase having count(*) <= 20
SELECT idcase FROM event_log group by idcase having count(*) <= 20
SELECT idcase FROM event_log group by idcase having count(*) <= 20
SELECT idcase FROM event_log GROUP BY idcase HAVING count(*) <= 20
SELECT idcase, count(*) AS event_count FROM event_log GROUP BY idcase HAVING event_count <= 20;
SELECT * FROM event_log WHERE id IN (SELECT DISTINCT id FROM event_log GROUP BY id HAVING COUNT(*) <= 20)
SELECT * FROM event_log WHERE id IN (SELECT DISTINCT id FROM event_log GROUP BY id HAVING COUNT(*) <= 20)
SELECT resource from event_log GROUP BY resource HAVING COUNT(*) IN (SELECT COUNT(*) FROM event_log GROUP BY resource ORDER BY COUNT(*) desc LIMIT 5)
SELECT resource, COUNT(DISTINCT idcase) AS case_count FROM event_log GROUP BY resource ORDER BY case_count DESC LIMIT 5;
SELECT resource from event_log GROUP BY resource HAVING COUNT(*) IN (SELECT COUNT(*) FROM event_log GROUP BY resource ORDER BY COUNT(*) desc LIMIT 5)
SELECT resource from event_log GROUP BY resource HAVING COUNT(*) IN (SELECT COUNT(*) FROM event_log GROUP BY resource ORDER BY COUNT(*) desc LIMIT 5)
SELECT resource from event_log GROUP BY resource HAVING COUNT(*) IN (SELECT COUNT(*) FROM event_log GROUP BY resource ORDER BY COUNT(*) desc LIMIT 5)
SELECT resource, COUNT(*) AS event_count FROM event_log GROUP BY resource ORDER BY event_count DESC LIMIT 5
SELECT resource,COUNT(*) AS event_count FROM event_log GROUP BY resource ORDER BY event_count DESC LIMIT 5
SELECT resource from event_log GROUP BY resource HAVING COUNT(*) IN (SELECT COUNT(*) FROM event_log GROUP BY resource ORDER BY COUNT(*) desc LIMIT 5)
SELECT resource from event_log GROUP BY resource HAVING COUNT(*) IN (SELECT COUNT(*) FROM event_log GROUP BY resource ORDER BY COUNT(*) desc LIMIT 5)
SELECT resource from event_log GROUP BY resource HAVING COUNT(DISTINCT idcase) IN (SELECT COUNT(DISTINCT idcase) FROM event_log GROUP BY resource ORDER BY COUNT(DISTINCT idcase) desc LIMIT 5)
SELECT resource, COUNT(*) AS num_occurrences FROM event_log WHERE activity = 'Início da viagem' AND strftime('%Y', timestamp) = '2016' GROUP BY resource
SELECT resource, COUNT(*) AS num_occurrences FROM event_log WHERE activity = 'Início da viagem' AND strftime('%Y', timestamp) = '2016' GROUP BY resource
SELECT resource, COUNT(DISTINCT idcase) AS num_execucoes FROM event_log WHERE activity = 'Início da viagem' AND strftime('%Y', timestamp) = '2016' GROUP BY resource
SELECT resource, COUNT(*) AS num_occurrences FROM event_log WHERE activity = 'Início da viagem' AND strftime('%Y', timestamp) = '2016' GROUP BY resource
SELECT resource, COUNT(*) AS num_execucoes FROM event_log WHERE activity = 'Início da viagem' AND strftime('%Y', timestamp) = '2016' GROUP BY resource
SELECT resource, COUNT(*) AS num_occurrences FROM event_log WHERE activity = 'Início da viagem' AND timestamp BETWEEN '2016-01-01' AND '2016-12-31' GROUP BY resource
SELECT resource, COUNT(*) AS total_occurrences FROM event_log WHERE activity = 'Início da viagem' AND timestamp BETWEEN '2016-01-01' AND '2016-12-31' GROUP BY resource ORDER BY total_occurrences DESC;
SELECT e.activity, e.timestamp, e.resource, e.cost, e.idcase FROM event_log AS e WHERE e.timestamp BETWEEN '2017-01-01' AND '2018-01-01';
SELECT resource, COUNT(*) AS num_activities FROM event_log WHERE activity = 'Início da viagem' AND strftime('%Y', timestamp) = '2016' GROUP BY resource
SELECT COUNT(*) AS "Quantidade de execuções", resource FROM event_log WHERE activity = 'Declaração rejeitada pelo supervisor' GROUP BY resource
SELECT COUNT(*) AS "Ocorrências", resource FROM event_log WHERE activity = 'Declaração rejeitada pelo supervisor' GROUP BY resource
SELECT COUNT(*) AS "Execuções", resource FROM event_log WHERE activity = 'Declaração rejeitada pelo supervisor' GROUP BY resource
SELECT COUNT(DISTINCT idcase), resource FROM event_log WHERE activity = 'Declaração rejeitada pelo supervisor' GROUP BY resource
SELECT COUNT(DISTINCT idcase), resource FROM event_log WHERE activity = 'Declaração rejeitada pelo supervisor' GROUP BY resource
SELECT COUNT(DISTINCT idcase), resource FROM event_log WHERE activity = 'Declaração rejeitada pelo supervisor' GROUP BY resource
SELECT COUNT(*) AS "Execuções", resource FROM event_log WHERE activity = 'Declaração rejeitada pelo supervisor' GROUP BY resource
SELECT resource, COUNT(*) AS num_declaracoes_rejeitadas FROM event_log WHERE activity = 'Declaração rejeitada pelo supervisor' GROUP BY resource ORDER BY num_declaracoes_rejeitadas DESC;
SELECT resource, COUNT(*) AS num_occurrences FROM event_log WHERE activity = 'Declaração rejeitada pelo supervisor' GROUP BY resource ORDER BY num_occurrences DESC;
SELECT resource, COUNT(*) AS total_occurrences FROM event_log WHERE activity = 'Declaração rejeitada pelo supervisor' GROUP BY resource ORDER BY total_occurrences DESC;
SELECT COUNT(*), resource FROM event_log WHERE activity = 'Declaração rejeitada pela supervisão' GROUP BY resource
SELECT idcase FROM event_log GROUP BY idcase HAVING count(*) > 20
SELECT idcase, COUNT(*) AS activity_count FROM event_log GROUP BY idcase HAVING activity_count > 20
SELECT idcase FROM event_log GROUP BY idcase HAVING count(*) > 20
SELECT DISTINCT idcase FROM event_log GROUP BY idcase, activity HAVING COUNT(*) > 20
SELECT idcase FROM event_log group by idcase having count(*) > 20
SELECT idcase FROM event_log group by idcase having count(*) > 20
SELECT idcase FROM event_log group by idcase having count(*) > 20
SELECT idcase, COUNT(*) AS num_activities FROM event_log GROUP BY idcase HAVING COUNT(*) > 20
SELECT * FROM event_log WHERE id IN (SELECT DISTINCT id FROM event_log GROUP BY id HAVING COUNT(*) > 20)
SELECT idcase, count(*) AS event_count FROM event_log GROUP BY idcase ORDER BY event_count DESC LIMIT 10;
SELECT idcase, COUNT(*) AS num_activities FROM event_log GROUP BY idcase ORDER BY num_activities DESC LIMIT 10;
SELECT idcase FROM event_log GROUP BY idcase ORDER BY COUNT(*) DESC LIMIT 1;
SELECT idcase FROM event_log GROUP BY idcase ORDER BY COUNT(DISTINCT activity) DESC LIMIT 1;
SELECT idcase, COUNT(*) AS event_count FROM event_log GROUP BY idcase ORDER BY event_count DESC LIMIT 5;
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(DISTINCT activity) > 3;
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(activity) IN (SELECT Count(activity) FROM event_log GROUP BY idcase ORDER BY Count(activity) Desc LIMIT 10) order by COUNT(activity) DESC
SELECT DISTINCT e.idcase FROM event_log AS e join (SELECT idcase, MIN(timestamp) as start_date FROM event_log GROUP BY idcase) AS e1 ON e1.idcase = e.idcase WHERE e.activity = 'Requisição de pagamento' AND e.resource = 'Sara' ORDER BY e1.start_date DESC LIMIT 10
SELECT DISTINCT idcase FROM event_log WHERE resource = 'Sara' AND activity NOT IN ( SELECT activity FROM event_log WHERE activity = 'requisição de pagamento' );
SELECT idcase FROM event_log WHERE resource = 'Sara' AND activity <> 'requisição de pagamento'
SELECT DISTINCT idcase FROM event_log WHERE resource = 'Sara' EXCEPT SELECT idcase FROM event_log WHERE activity = 'requisição de pagamento';
SELECT DISTINCT e.idcase FROM event_log AS e JOIN ( SELECT idcase, MIN(timestamp) AS start_date FROM event_log GROUP BY idcase ) AS e1 ON e1.idcase = e.idcase WHERE e.activity = 'Requisição de pagamento' ORDER BY e1.start_date DESC LIMIT 10;
SELECT * FROM event_log WHERE activity = 'Declaração' AND resource = 'Sara' AND NOT EXISTS ( SELECT 1 FROM event_log WHERE activity = 'Requisição de pagamento' AND resource = 'Sara' );
SELECT * FROM event_log WHERE timestamp BETWEEN '2017-01-10' AND '2017-02-01' AND idcase = 'declaração 143598';
SELECT * FROM event_log WHERE idcase = 'declaração 143598' AND timestamp BETWEEN '2017-01-10' AND '2017-02-01';
SELECT * FROM event_log WHERE idcase = 'declaração 143598' AND timestamp BETWEEN '2017-01-10' AND '2017-02-01';
SELECT * FROM event_log WHERE timestamp BETWEEN '2018-10-01' AND '2018-10-03'
SELECT * FROM event_log WHERE timestamp BETWEEN '2017-01-10' AND '2017-02-01' AND idcase = '143598';
SELECT COUNT(DISTINCT idcase), resource FROM event_log WHERE timestamp between '2017-01-01' and '2017-05-31' GROUP BY resource
SELECT COUNT(DISTINCT idcase), resource FROM event_log WHERE timestamp between '2017-01-01' and '2017-05-31' GROUP BY resource
SELECT COUNT(DISTINCT idcase), resource FROM event_log WHERE timestamp between '2017-01-01' and '2017-05-31' GROUP BY resource
SELECT COUNT(DISTINCT idcase), resource FROM event_log WHERE timestamp between '2017-01-01' and '2017-05-31' GROUP BY resource
SELECT COUNT(DISTINCT idcase), resource FROM event_log WHERE timestamp between '2017-01-01' and '2017-05-31' GROUP BY resource
SELECT COUNT(DISTINCT idcase), resource FROM event_log WHERE timestamp between '2017-01-01' and '2017-05-31' GROUP BY resource
SELECT COUNT(DISTINCT idcase), resource FROM event_log WHERE timestamp between '2017-01-01' and '2017-05-31' GROUP BY resource
SELECT COUNT(DISTINCT idcase), resource FROM event_log WHERE timestamp between '2017-01-01' and '2017-05-31' GROUP BY resource
SELECT COUNT(DISTINCT idcase), resource FROM event_log WHERE timestamp between '2017-01-01' and '2017-05-31' GROUP BY resource
SELECT COUNT(DISTINCT idcase), resource FROM event_log WHERE timestamp between '2017-01-01' and '2017-05-31' GROUP BY resource
SELECT COUNT(DISTINCT idcase), resource FROM event_log WHERE timestamp between '2017-01-01' and '2017-05-31' GROUP BY resource
SELECT idcase from event_log GROUP BY idcase HAVING COUNT(*) IN (SELECT COUNT(*) FROM event_log GROUP BY idcase ORDER BY COUNT(*) desc LIMIT 10) ORDER BY COUNT(*) DESC
SELECT idcase from event_log GROUP BY idcase HAVING COUNT(*) IN (SELECT COUNT(*) FROM event_log GROUP BY idcase ORDER BY COUNT(*) desc LIMIT 10) ORDER BY COUNT(*) DESC
SELECT idcase, COUNT(*) AS activity_count FROM event_log GROUP BY idcase ORDER BY activity_count DESC LIMIT 10;
SELECT idcase from event_log GROUP BY idcase HAVING COUNT(*) IN (SELECT COUNT(*) FROM event_log GROUP BY idcase ORDER BY COUNT(*) desc LIMIT 10) ORDER BY COUNT(*) DESC
SELECT idcase from event_log GROUP BY idcase HAVING COUNT(*) IN (SELECT COUNT(*) FROM event_log GROUP BY idcase ORDER BY COUNT(*) desc LIMIT 10) ORDER BY COUNT(*) DESC
SELECT idcase from event_log GROUP BY idcase HAVING COUNT(*) IN (SELECT COUNT(*) FROM event_log GROUP BY idcase ORDER BY COUNT(*) desc LIMIT 10) ORDER BY COUNT(*) DESC
SELECT idcase, count(*) AS num_activities FROM event_log GROUP BY idcase ORDER BY num_activities DESC LIMIT 10;
SELECT idcase, COUNT(*) AS num_activities FROM event_log GROUP BY idcase ORDER BY num_activities DESC LIMIT 10;
SELECT idcase from event_log GROUP BY idcase HAVING COUNT(*) IN (SELECT COUNT(*) FROM event_log GROUP BY idcase ORDER BY COUNT(*) desc LIMIT 10) ORDER BY COUNT(*) DESC
SELECT e1.activity AS activity1, e2.activity AS activity2, COUNT(*) AS count FROM event_log AS e1 JOIN event_log AS e2 ON e1.idcase = e2.idcase WHERE e1.activity <> e2.activity GROUP BY e1.activity, e2.activity ORDER BY count DESC LIMIT 10;
SELECT **Ações mais comuns no processamento de declarações:** * **Seleção (SELECT):** Recupera dados de uma ou mais tabelas. * **Inserção (INSERT):** Adiciona novos dados a uma tabela. * **Atualização (UPDATE):** Modifica dados existentes em uma tabela. * **Exclusão (DELETE):** Remove dados de uma tabela. * **Criação de tabela (CREATE TABLE):** Cria uma nova tabela. * **Modificação de tabela (ALTER TABLE):** Altera a estrutura de uma tabela existente. * **Exclusão de tabela (DROP TABLE):** Remove uma tabela do banco de dados. * **Criação de índice (CREATE INDEX):** Cria um índice para melhorar o desempenho das consultas. * **Exclusão de índice (DROP INDEX):** Remove um índice do banco de dados. * **Criação de procedimento armazenado (CREATE PROCEDURE):** Cria um procedimento armazenado que pode ser executado várias vezes.
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(*) IN (SELECT Count(*) FROM event_log GROUP BY idcase ORDER BY Count(*) Desc LIMIT 10) order by COUNT(*) DESC
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(*) IN (SELECT Count(*) FROM event_log GROUP BY idcase ORDER BY Count(*) Desc LIMIT 10) order by COUNT(*) DESC
SELECT idcase FROM event_log GROUP BY idcase ORDER BY COUNT(activity) DESC LIMIT 10
SELECT idcase FROM event_log GROUP BY idcase ORDER BY COUNT(activity) DESC LIMIT 10
SELECT idcase FROM event_log GROUP BY idcase ORDER BY COUNT(activity) DESC LIMIT 10
SELECT idcase FROM event_log GROUP BY idcase ORDER BY COUNT(activity) DESC LIMIT 10
SELECT statement_code FROM event_log GROUP BY statement_code HAVING COUNT(activity) IN (SELECT Count(activity) FROM event_log GROUP BY statement_code ORDER BY Count(activity) Desc LIMIT 10) order by COUNT(activity) DESC
SELECT idcase, SUM(cost) AS total_cost FROM event_log GROUP BY idcase;
SELECT idcase, SUM(cost) AS total_cost FROM event_log GROUP BY idcase;
SELECT idcase, SUM(cost) AS total_cost FROM event_log GROUP BY idcase;
SELECT idcase, SUM(cost) AS total_cost FROM event_log GROUP BY idcase
SELECT idcase, SUM(cost) AS total_cost FROM event_log GROUP BY idcase
SELECT idcase,SUM(cost) FROM event_log GROUP BY idcase
SELECT idcase, SUM(cost) AS total_cost FROM event_log GROUP BY idcase
SELECT 1
SELECT O texto fornecido não contém informações sobre o tempo de duração ou custo do processamento das declarações SQL. Portanto, não posso responder à pergunta.
SELECT resource, COUNT(*) AS event_count FROM event_log GROUP BY resource HAVING event_count >= 100 ORDER BY event_count DESC;
SELECT resource, COUNT(*) AS event_count FROM event_log GROUP BY resource HAVING event_count >= 100 ORDER BY event_count DESC;
SELECT resource, COUNT(*) AS action_count FROM event_log GROUP BY resource HAVING action_count >= 100 ORDER BY action_count DESC
SELECT e."idcase", e."activity", e."timestamp" FROM "event_log" e ORDER BY e."idcase", e."timestamp";
SELECT idcase, activity, timestamp FROM event_log ORDER BY idcase, timestamp;
SELECT idcase, id FROM event_log ORDER BY idcase, timestamp
SELECT idcase, activity, MIN(timestamp) AS start_date FROM event_log GROUP BY idcase, activity ORDER BY idcase, start_date;
SELECT idcase, activity, timestamp FROM event_log ORDER BY idcase, timestamp;
SELECT event_log.id, event_log.activity, event_log.timestamp, event_log.resource, event_log.cost, event_log.idcase FROM event_log ORDER BY event_log.id, event_log.timestamp;
SELECT COUNT(*), resource FROM event_log WHERE activity = 'Declaração aprovada pela administração' GROUP BY resource
SELECT COUNT(*), resource FROM event_log WHERE activity = 'Declaração aprovada pela administração' GROUP BY resource
SELECT COUNT(*), resource FROM event_log WHERE activity = 'Declaração aprovada pela administração' GROUP BY resource
SELECT resource, COUNT(*) AS count FROM event_log WHERE activity = 'Declaração aprovada pela administração' GROUP BY resource ORDER BY count DESC
SELECT count(*), resource FROM event_log WHERE activity = 'Declaração aprovada pela administração' AND resource IN (SELECT resource FROM event_log WHERE activity = 'Tornou-se administrador') GROUP BY resource
SELECT resource, COUNT(*) AS event_count FROM event_log WHERE activity = 'Declaração aprovada pela administração' GROUP BY resource ORDER BY event_count DESC;
SELECT resource, COUNT(*) AS count FROM event_log WHERE activity = 'Declaração aprovada pela administração' GROUP BY resource ORDER BY count DESC
SELECT count(*), resource FROM event_log WHERE activity = 'Declaração aprovada pela administração' GROUP BY resource
SELECT activity, count(*) AS count_activity FROM event_log WHERE resource = 'Thomas' AND timestamp BETWEEN '2017-01-01' AND '2018-01-01' GROUP BY activity
SELECT activity, count(*) AS count FROM event_log WHERE resource = 'Thomas' AND timestamp BETWEEN '2017-01-01' AND '2018-01-01' GROUP BY activity
SELECT activity, COUNT(*) AS count FROM event_log WHERE resource = 'Thomas' AND timestamp BETWEEN '2017-01-01' AND '2017-12-31' GROUP BY activity;
SELECT activity, COUNT(*) AS count FROM event_log WHERE resource = 'Thomas' AND timestamp BETWEEN '2017-01-01' AND '2018-01-01' GROUP BY activity;
SELECT COUNT(*) FROM event_log WHERE resource = 'Thomas' AND timestamp BETWEEN '2017-01-01' AND '2017-12-31';
SELECT count(*) FROM event_log WHERE resource = 'Thomas' AND timestamp BETWEEN '2017-01-01' AND '2018-01-01'
SELECT COUNT(*) FROM event_log WHERE resource = 'Thomas' AND timestamp BETWEEN '2017-01-01' AND '2018-01-01'
SELECT count(*) FROM event_log WHERE resource = 'Thomas' AND timestamp BETWEEN '2017-01-01' AND '2018-01-01'
SELECT count(*) FROM event_log WHERE resource = 'Thomas' AND timestamp BETWEEN '2017-01-01' AND '2018-01-01'
SELECT SUM(cost) FROM event_log WHERE resource = 'Thomas' AND activity LIKE '%statement%' AND timestamp BETWEEN '2017-01-01' AND '2018-01-01'
SELECT activity, MAX(timestamp) FROM event_log GROUP BY activity
SELECT activity, MAX(timestamp) AS latest_timestamp FROM event_log GROUP BY activity
SELECT activity, MAX(timestamp) AS latest_timestamp FROM event_log GROUP BY activity;
SELECT activity, MAX(timestamp) AS last_execution FROM event_log GROUP BY activity;
SELECT activity, MAX(timestamp) AS last_execution_timestamp FROM event_log GROUP BY activity;
SELECT activity, MAX(timestamp) AS last_occurrence_date FROM event_log GROUP BY activity
SELECT activity, MAX(timestamp) AS latest_timestamp FROM event_log GROUP BY activity;
SELECT **Declaração 1:** * **Análise:** O analisador de consultas analisa a declaração e cria um plano de execução. * **Otimização:** O otimizador de consultas otimiza o plano de execução para melhorar o desempenho. * **Execução:** O executor de consultas executa o plano de execução e recupera os dados da tabela event_log. * **Custo:** O custo da execução da declaração é calculado com base no número de linhas recuperadas e no custo de cada operação no plano de execução. **Declaração 2:** * **Análise:** O analisador de consultas analisa a declaração e cria um plano de execução. * **Otimização:** O otimizador de consultas otimiza o plano de execução para melhorar o desempenho. * **Execução:** O executor de consultas executa o plano de execução e recupera os dados da tabela event_log. * **Agregação:** O executor de consultas agrega os dados recuperados para calcular a data do último registro de cada tipo de ação. * **Custo:** O custo da execução da declaração é calculado com base no número de linhas recuperadas, no custo de cada operação no plano de execução e no custo da agregação.
SELECT CASE WHEN strftime('%Y', timestamp) = '2017' THEN '2017' WHEN strftime('%Y', timestamp) = '2018' THEN '2018' ELSE 'Outros' END AS ano, activity, COUNT(*) AS quantidade FROM event_log WHERE activity IN ('Declaração aprovada pelo supervisor', 'Permissão rejeitada pelo funcionário') GROUP BY 1, 2 ORDER BY 1, 2;
SELECT COUNT(*) AS "Ocorrências da atividade 'declaração aprovada pelo supervisor'" FROM event_log WHERE activity = 'Declaração aprovada pelo supervisor' AND strftime('%Y', timestamp) = '2017'; SELECT COUNT(*) AS "Ocorrências da atividade 'permissão rejeitada pelo funcionário'" FROM event_log WHERE activity = 'Permissão rejeitada pelo funcionário' AND strftime('%Y', timestamp) = '2018';
SELECT COUNT(DISTINCT id) AS "Eventos de 'Declaração aprovada pelo supervisor'" FROM event_log WHERE activity = 'Declaração aprovada pelo supervisor' AND timestamp BETWEEN '2017-01-01' AND '2017-12-31'; SELECT COUNT(DISTINCT id) AS "Eventos de 'Permissão rejeitada pelo funcionário'" FROM event_log WHERE activity = 'Permissão rejeitada pelo funcionário' AND timestamp BETWEEN '2018-01-01' AND '2018-12-31';
SELECT COUNT(*) AS "Número de vezes que a atividade 'declaração aprovada pelo supervisor' foi executada em 2017" FROM event_log WHERE activity = 'Declaração aprovada pelo supervisor' AND strftime('%Y', timestamp) = '2017'; SELECT COUNT(*) AS "Número de vezes que a atividade 'permissão rejeitada pelo funcionário' foi executada em 2018" FROM event_log WHERE activity = 'Permissão rejeitada pelo funcionário' AND strftime('%Y', timestamp) = '2018';
SELECT COUNT(*) AS "Número de vezes" FROM event_log WHERE activity = 'Declaração aprovada pelo supervisor' AND timestamp BETWEEN '2017-01-01' AND '2017-12-31'; SELECT COUNT(*) AS "Número de vezes" FROM event_log WHERE activity = 'Permissão rejeitada pelo funcionário' AND timestamp BETWEEN '2018-01-01' AND '2018-12-31';
SELECT COUNT(DISTINCT e1.idcase) FROM event_log e1 INNER JOIN event_log e2 ON e1.idcase = e2.idcase WHERE e1.activity = 'Aprovação de declaração feita pelo supervisor' AND e2.activity = 'Rejeição de permissão por funcionário' AND e1.timestamp BETWEEN '2017-01-01' AND '2017-12-31' AND e2.timestamp BETWEEN '2018-01-01' AND '2018-12-31';
SELECT activity, MAX(timestamp) AS end_date, id FROM event_log GROUP BY activity ORDER BY end_date;
SELECT activity, MAX(timestamp) AS end_timestamp, id FROM event_log GROUP BY activity ORDER BY end_timestamp;
SELECT activity, MAX(timestamp) AS end_time, id FROM event_log GROUP BY activity, id ORDER BY end_time;
SELECT count(*) FROM event_log WHERE resource = 'Thomas' AND activity = 'declaração requisitada pelo funcionário';
SELECT COUNT(*) FROM event_log WHERE activity = 'declaração requisitada pelo funcionário' AND resource = 'Thomas';
SELECT COUNT(DISTINCT id) FROM event_log WHERE activity = 'declaração requisitada pelo funcionário' AND resource = 'Thomas';
SELECT count(*) FROM event_log WHERE activity = 'declaração requisitada pelo funcionário' AND resource = 'Thomas'
SELECT COUNT(DISTINCT id) FROM event_log WHERE resource = 'Thomas' AND activity = 'declaração requisitada pelo funcionário';
SELECT count(*) FROM event_log WHERE resource = 'Thomas' AND activity = 'statement_execution' AND timestamp BETWEEN '2017-01-01' AND '2018-01-01'
SELECT COUNT(*) FROM event_log WHERE resource = 'Diana' AND cost IS NOT NULL
SELECT COUNT(*) FROM event_log WHERE resource = 'Diana' AND cost IS NOT NULL
SELECT COUNT(*) FROM event_log WHERE resource = 'Diana' AND cost IS NOT NULL
SELECT * FROM event_log WHERE resource = 'Diana' AND cost IS NOT NULL
SELECT activity, count(*) AS event_count FROM event_log WHERE resource = 'Diana' AND cost IS NOT NULL GROUP BY activity;
SELECT activity, count(*) AS event_count FROM event_log WHERE resource = 'Diana' AND cost IS NOT NULL GROUP BY activity;
SELECT activity FROM event_log WHERE resource = 'Diana' AND cost IS NOT NULL
SELECT COUNT(DISTINCT resource) FROM event_log WHERE idcase IN ( SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(*) > 3 )
SELECT resource,COUNT(*) FROM event_log GROUP BY resource HAVING COUNT(*) > 3
SELECT resource, COUNT(*) AS event_count FROM event_log GROUP BY resource HAVING event_count > 3;
SELECT COUNT(DISTINCT resource) FROM event_log WHERE idcase IN (SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(*) > 3)
SELECT COUNT(DISTINCT resource) FROM event_log WHERE idcase IN ( SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(*) > 3 );
SELECT DISTINCT resource FROM event_log WHERE activity = 'Declaração rejeitada pelo pré-aprovador'
SELECT DISTINCT resource FROM event_log WHERE activity = 'Declaração rejeitada pelo pré-aprovador'
SELECT DISTINCT resource FROM event_log WHERE activity = 'Declaração rejeitada pelo pré-aprovador';
SELECT DISTINCT resource FROM event_log WHERE activity = 'Declaração rejeitada pelo pré-aprovador'
SELECT DISTINCT resource FROM event_log WHERE activity = 'Declaração rejeitada pelo pré-aprovador'
SELECT DISTINCT resource FROM event_log WHERE activity = 'Declaração rejeitada pelo pré-aprovador';
SELECT DISTINCT resource FROM event_log WHERE activity = 'Declaração rejeitada pelo pré-aprovador'
SELECT COUNT(*) FROM event_log WHERE activity = 'declaração final aprovada pelo diretor' AND timestamp BETWEEN '2017-01-01' AND '2017-05-31';
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE activity = 'Declaração final aprovada pelo diretor' AND strftime('%Y-%m', timestamp) BETWEEN '2017-01' AND '2017-05';
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE activity='Declaração final aprovada pelo diretor' AND timestamp BETWEEN '2017-01-01' AND '2017-05-31';
SELECT COUNT(*) FROM event_log WHERE activity = 'Declaração Final Aprovada por Diretor' AND timestamp BETWEEN '2017-01-01' AND '2017-05-31';
SELECT DISTINCT idcase FROM event_log WHERE resource = 'Charles' AND timestamp NOT BETWEEN '2018-01-01' AND '2018-02-01';
SELECT DISTINCT idcase FROM event_log WHERE resource = 'Charles' EXCEPT SELECT DISTINCT idcase FROM event_log WHERE strftime('%Y-%m', timestamp) = '2018-01';
SELECT DISTINCT idcase FROM event_log WHERE resource = 'Charles' AND strftime('%Y-%m', timestamp) <> '2018-01';
SELECT DISTINCT idcase FROM event_log WHERE resource = 'Charles' AND strftime('%Y-%m', timestamp) <> '2018-01';
SELECT idcase FROM event_log WHERE activity LIKE '%intervenção%' AND timestamp NOT BETWEEN '2018-01-01' AND '2018-01-31' AND resource LIKE '%Charles%' GROUP BY idcase HAVING COUNT(*) > 1;
SELECT DISTINCT idcase FROM event_log GROUP BY idcase HAVING count(DISTINCT activity) > 3
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(DISTINCT activity) > 3;
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(DISTINCT activity) > 3
SELECT DISTINCT idcase FROM event_log GROUP BY idcase HAVING count(DISTINCT activity) > 3
SELECT DISTINCT idcase FROM event_log GROUP BY idcase HAVING count(DISTINCT activity) > 3
SELECT idcase FROM event_log GROUP BY idcase HAVING count(DISTINCT activity) > 3
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(DISTINCT activity) > 3
SELECT DISTINCT idcase FROM event_log GROUP BY idcase HAVING count(DISTINCT activity) > 3
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(DISTINCT activity) > 3
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(*) > 3
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(*) > 3
SELECT idcase, count(*) AS num_events FROM event_log GROUP BY idcase HAVING num_events > 3;
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(*) > 3
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(*) > 3
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(*) > 3
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(*) > 3
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(*) > 3
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(*) > 3
SELECT idcase, (MAX(timestamp) - MIN(timestamp)) AS duration FROM event_log GROUP BY idcase
SELECT idcase, SUM(timestamp) FROM event_log group by idcase
SELECT idcase, (MAX(timestamp) - MIN(timestamp)) AS duration FROM event_log GROUP BY idcase;
SELECT MAX(timestamp) - MIN(timestamp) AS duration, idcase FROM event_log GROUP BY idcase
SELECT idcase, MAX(timestamp) - MIN(timestamp) AS duration FROM event_log GROUP BY idcase;
SELECT idcase, SUM(cost) FROM event_log group by idcase /* Dado o seguinte esquema de banco de dados: */ CREATE TABLE "event_log" ( "id" int, "activity" TEXT COLLATE NOCASE, "timestamp" DATETIME, "resource" TEXT COLLATE NOCASE, "cost" NUMERIC, "idcase" TEXT COLLATE NOCASE, PRIMARY KEY("id") ) /* Responda o seguinte: Qual é o tempo de duração do processamento de cada declaração? */ SELECT idcase, SUM(cost) FROM event_log group by idcase
SELECT idcase, resource FROM event_log GROUP BY idcase HAVING COUNT(DISTINCT resource) = 1;
SELECT idcase, resource FROM event_log GROUP BY idcase HAVING COUNT(DISTINCT resource) = 1;
SELECT idcase, resource FROM event_log GROUP BY idcase HAVING COUNT(DISTINCT resource) = 1;
SELECT idcase, resource FROM event_log GROUP BY idcase, resource HAVING COUNT(DISTINCT activity) = 1;
SELECT idcase, resource FROM event_log GROUP BY idcase, resource HAVING COUNT(DISTINCT activity) = 1;
SELECT idcase, resource FROM event_log GROUP BY idcase, resource HAVING COUNT(DISTINCT activity) = 1;
SELECT idcase, resource FROM event_log GROUP BY idcase, resource HAVING COUNT(DISTINCT activity) = 1;
SELECT idcase, resource FROM event_log GROUP BY idcase HAVING COUNT(DISTINCT resource) = 1;
SELECT idcase, resource FROM event_log GROUP BY idcase HAVING COUNT(DISTINCT resource) = 1;
SELECT resource, GROUP_CONCAT(DISTINCT activity) AS activities FROM event_log GROUP BY resource HAVING COUNT(DISTINCT activity) = ( SELECT COUNT(*) FROM event_log GROUP BY resource ORDER BY COUNT(*) DESC LIMIT 1 );
SELECT DISTINCT idcase FROM (select idcase, timestamp, activity FROM event_log GROUP BY idcase HAVING strftime('%Y', MIN(timestamp)) BETWEEN '2016' AND '2017') where activity = 'Fim da viagem'
SELECT DISTINCT idcase FROM event_log WHERE activity = 'Fim da viagem' AND timestamp BETWEEN '2016-01-01' and '2017-12-31'
SELECT DISTINCT idcase FROM event_log WHERE activity = 'Fim da viagem' AND timestamp BETWEEN '2016-01-01' and '2017-12-31'
SELECT DISTINCT idcase FROM event_log WHERE activity = 'Fim da viagem' AND timestamp BETWEEN '2016-01-01' and '2017-12-31'
SELECT DISTINCT idcase FROM (select idcase, timestamp, activity FROM event_log GROUP BY idcase HAVING strftime('%Y', MIN(timestamp)) BETWEEN '2016' AND '2017') where activity = 'Fim da viagem'
SELECT DISTINCT idcase FROM event_log WHERE activity = 'Fim da viagem' AND timestamp BETWEEN '2016-01-01' and '2017-12-31'
SELECT DISTINCT idcase FROM event_log WHERE activity = 'Fim da viagem' AND timestamp BETWEEN '2016-01-01' and '2017-12-31'
SELECT DISTINCT idcase FROM event_log WHERE activity = 'Fim da viagem' AND timestamp BETWEEN '2016-01-01' AND '2017-12-31';
SELECT idcase FROM event_log WHERE activity = 'Fim da viagem' AND timestamp BETWEEN '2016-01-01' AND '2017-12-31'
SELECT DISTINCT idcase FROM (select idcase, timestamp, activity FROM event_log GROUP BY idcase HAVING strftime('%Y', MIN(timestamp)) BETWEEN '2016' AND '2017') where activity = 'Fim da viagem'
SELECT idcase FROM event_log WHERE activity = 'Fim da viagem' AND strftime('%Y', timestamp) BETWEEN '2016' AND '2017';
SELECT activity, resource, SUM(cost) FROM event_log GROUP BY activity, resource;
SELECT * FROM event_log WHERE activity LIKE '%rejeitada%'
SELECT * FROM event_log WHERE activity LIKE '%rejeitada%'
SELECT * FROM event_log WHERE activity LIKE '%rejeitada%'
SELECT * FROM event_log WHERE activity LIKE '%rejeitada%'
SELECT * FROM event_log WHERE activity LIKE '%rejeitada%'
SELECT activity, COUNT(*) AS intervention_count FROM event_log WHERE activity LIKE '%REJECT%' GROUP BY activity;
SELECT resource, COUNT(*) AS num_rejections FROM event_log WHERE activity = 'Rejeição' GROUP BY resource;
SELECT idcase, MIN(cost) AS min_cost, MAX(cost) AS max_cost FROM event_log WHERE idcase IN (SELECT idcase FROM event_log GROUP BY idcase HAVING MAX(cost) > 0) GROUP BY idcase;
SELECT idcase, MIN(cost) AS min_cost, MAX(cost) AS max_cost FROM event_log GROUP BY idcase HAVING MAX(cost) > 0;
SELECT idcase, MIN(cost) AS min_cost, MAX(cost) AS max_cost FROM event_log WHERE idcase IN (SELECT idcase FROM event_log GROUP BY idcase HAVING MAX(cost) > 0) GROUP BY idcase;
SELECT idcase, MIN(cost) AS min_cost, MAX(cost) AS max_cost FROM event_log WHERE idcase IN (SELECT idcase FROM event_log GROUP BY idcase HAVING MAX(cost) > 0) GROUP BY idcase;
SELECT idcase, MIN(cost) AS min_cost, MAX(cost) AS max_cost FROM event_log WHERE idcase IN (SELECT idcase FROM event_log GROUP BY idcase HAVING SUM(cost) > 0) GROUP BY idcase
SELECT idcase, MIN(cost) AS min_cost, MAX(cost) AS max_cost FROM event_log WHERE idcase IN ( SELECT idcase FROM event_log GROUP BY idcase HAVING MAX(cost) > 0 ) GROUP BY idcase
SELECT idcase, MIN(cost) AS min_cost, MAX(cost) AS max_cost FROM event_log WHERE idcase IN ( SELECT idcase FROM event_log GROUP BY idcase HAVING MAX(cost) > 0 ) GROUP BY idcase
SELECT idcase, MIN(cost) AS min_cost, MAX(cost) AS max_cost FROM event_log WHERE idcase IN (SELECT idcase FROM event_log GROUP BY idcase HAVING MAX(cost) > 0) GROUP BY idcase;
SELECT idcase, MIN(cost) AS min_cost, MAX(cost) AS max_cost FROM event_log WHERE idcase IN (SELECT idcase FROM event_log GROUP BY idcase HAVING MAX(cost) > 0) GROUP BY idcase;
SELECT idcase, MIN(cost) AS min_cost, MAX(cost) AS max_cost FROM event_log WHERE idcase IN (SELECT idcase FROM event_log GROUP BY idcase HAVING MAX(cost) > 0) GROUP BY idcase;
SELECT idcase, MIN(cost) AS min_cost, MAX(cost) AS max_cost FROM event_log WHERE idcase IN (SELECT idcase FROM event_log GROUP BY idcase HAVING MAX(cost) > 0) GROUP BY idcase;
SELECT idcase, MIN(cost) AS min_cost, MAX(cost) AS max_cost FROM event_log WHERE idcase IN (SELECT idcase FROM event_log GROUP BY idcase HAVING MAX(cost) > 0) GROUP BY idcase;
SELECT idcase, MIN(cost) AS min_cost, MAX(cost) AS max_cost FROM event_log WHERE cost > 0 GROUP BY idcase
SELECT idcase, MIN(cost) AS min_cost, MAX(cost) AS max_cost FROM event_log WHERE idcase IN (SELECT idcase FROM event_log GROUP BY idcase HAVING SUM(cost) = (SELECT SUM(cost) FROM event_log GROUP BY idcase ORDER BY SUM(cost) DESC LIMIT 1)) GROUP BY idcase
SELECT p.idcase, strftime('%s', p.timestamp) - strftime('%s', e.start_time) AS 'Fim da viagem', strftime('%s', x.timestamp) - strftime('%s', e.start_time) AS 'Declaração rejeitada pelo funcionário', strftime('%s', y.timestamp) - strftime('%s', e.start_time) AS 'Pagamento efetuado', f.activity FROM event_log p INNER JOIN ( SELECT MIN(timestamp) AS start_time, idcase FROM event_log GROUP BY idcase ) e ON e.idcase = p.idcase AND p.activity = 'Fim da viagem' LEFT JOIN event_log x ON x.idcase = e.idcase AND x.activity = 'Declaração rejeitada pelo funcionário' LEFT JOIN event_log y ON y.idcase = e.idcase AND y.activity = 'Pagamento efetuado' INNER JOIN ( SELECT MAX(timestamp) AS end_time, activity, idcase FROM event_log WHERE activity = 'Fim da viagem' OR activity = 'Declaração rejeitada pelo funcionário' OR activity = 'Pagamento efetuado' GROUP BY idcase ) f ON f.idcase = e.idcase;
SELECT p.idcase, strftime('%s', p.timestamp) - strftime('%s', e.start_time) AS 'Fim da viagem', strftime('%s', x.timestamp) - strftime('%s', e.start_time) AS 'Declaração rejeitada pelo funcionário', strftime('%s', y.timestamp) - strftime('%s', e.start_time) AS 'Pagamento efetuado', f.activity FROM event_log p INNER JOIN ( SELECT MIN(timestamp) AS start_time, idcase FROM event_log GROUP BY idcase ) e ON e.idcase = p.idcase AND p.activity = 'Fim da viagem' LEFT JOIN event_log x ON x.idcase = e.idcase AND x.activity = 'Declaração rejeitada pelo funcionário' LEFT JOIN event_log y ON y.idcase = e.idcase AND y.activity = 'Pagamento efetuado' INNER JOIN ( SELECT MAX(timestamp) AS end_time, activity, idcase FROM event_log WHERE activity = 'Fim da viagem' OR activity = 'Declaração rejeitada pelo funcionário' OR activity = 'Pagamento efetuado' GROUP BY idcase ) f ON f.idcase = e.idcase;
SELECT p.idcase, strftime('%s', p.timestamp) - strftime('%s', e.start_time) AS 'Fim da viagem', strftime('%s', x.timestamp) - strftime('%s', e.start_time) AS 'Declaração rejeitada pelo funcionário', strftime('%s', y.timestamp) - strftime('%s', e.start_time) AS 'Pagamento efetuado' FROM event_log p INNER JOIN ( SELECT MIN(timestamp) AS start_time, idcase FROM event_log GROUP BY idcase ) e ON e.idcase = p.idcase AND p.activity = 'Fim da viagem' LEFT JOIN event_log x ON x.idcase = e.idcase AND x.activity = 'Declaração rejeitada pelo funcionário' LEFT JOIN event_log y ON y.idcase = e.idcase AND y.activity = 'Pagamento efetuado' INNER JOIN ( SELECT MAX(timestamp) AS end_time, activity, idcase FROM event_log WHERE activity = 'Fim da viagem' OR activity = 'Declaração rejeitada pelo funcionário' OR activity = 'Pagamento efetuado' GROUP BY idcase ) f ON f.idcase = e.idcase;
SELECT p.idcase, strftime('%s', p.timestamp) - strftime('%s', e.start_time) AS 'Fim da viagem', strftime('%s', x.timestamp) - strftime('%s', e.start_time) AS 'Declaração rejeitada pelo funcionário', strftime('%s', y.timestamp) - strftime('%s', e.start_time) AS 'Pagamento efetuado', f.activity FROM event_log p INNER JOIN ( SELECT MIN(timestamp) AS start_time, idcase FROM event_log GROUP BY idcase ) e ON e.idcase = p.idcase AND p.activity = 'Fim da viagem' LEFT JOIN event_log x ON x.idcase = e.idcase AND x.activity = 'Declaração rejeitada pelo funcionário' LEFT JOIN event_log y ON y.idcase = e.idcase AND y.activity = 'Pagamento efetuado' INNER JOIN ( SELECT MAX(timestamp) AS end_time, activity, idcase FROM event_log WHERE activity = 'Fim da viagem' OR activity = 'Declaração rejeitada pelo funcionário' OR activity = 'Pagamento efetuado' GROUP BY idcase ) f ON f.idcase = e.idcase;
SELECT p.idcase, strftime('%s', p.timestamp) - strftime('%s', e.start_time) AS 'Fim da viagem', strftime('%s', x.timestamp) - strftime('%s', e.start_time) AS 'Declaração rejeitada pelo funcionário', strftime('%s', y.timestamp) - strftime('%s', e.start_time) AS 'Pagamento efetuado', f.activity FROM event_log p INNER JOIN ( SELECT MIN(timestamp) AS start_time, idcase FROM event_log GROUP BY idcase ) e ON e.idcase = p.idcase AND p.activity = 'Intervenção' LEFT JOIN event_log x ON x.idcase = e.idcase AND x.activity = 'Declaração rejeitada pelo funcionário' LEFT JOIN event_log y ON y.idcase = e.idcase AND y.activity = 'Pagamento efetuado' INNER JOIN ( SELECT MAX(timestamp) AS end_time, activity, idcase FROM event_log WHERE activity = 'Fim da viagem' OR activity = 'Declaração rejeitada pelo funcionário' OR activity = 'Pagamento efetuado' GROUP BY idcase ) f ON f.idcase = e.idcase;
SELECT p.idcase, strftime('%s', p.timestamp) - strftime('%s', e.start_time) AS 'Fim da viagem', strftime('%s', x.timestamp) - strftime('%s', e.start_time) AS 'Declaração rejeitada pelo funcionário', strftime('%s', y.timestamp) - strftime('%s', e.start_time) AS 'Pagamento efetuado', CASE WHEN p.activity = 'Fim da viagem' THEN 'Fim da viagem' WHEN x.activity = 'Declaração rejeitada pelo funcionário' THEN 'Declaração rejeitada pelo funcionário' WHEN y.activity = 'Pagamento efetuado' THEN 'Pagamento efetuado' END AS 'Atividade final' FROM event_log p INNER JOIN ( SELECT MIN(timestamp) AS start_time, idcase FROM event_log GROUP BY idcase ) e ON e.idcase = p.idcase AND p.activity = 'Fim da viagem' LEFT JOIN event_log x ON x.idcase = e.idcase AND x.activity = 'Declaração rejeitada pelo funcionário' LEFT JOIN event_log y ON y.idcase = e.idcase AND y.activity = 'Pagamento efetuado';
SELECT p.idcase, strftime('%s', p.timestamp) - strftime('%s', e.start_time) AS 'Tempo decorrido', p.activity AS 'Atividade final' FROM event_log p INNER JOIN ( SELECT MIN(timestamp) AS start_time, idcase FROM event_log GROUP BY idcase ) e ON e.idcase = p.idcase WHERE p.activity IN ('Fim da viagem', 'Declaração rejeitada pelo funcionário', 'Pagamento efetuado');
SELECT p.idcase, strftime('%s', p.timestamp) - strftime('%s', e.start_time) AS 'Tempo decorrido', p.activity AS 'Atividade final' FROM event_log p INNER JOIN ( SELECT MIN(timestamp) AS start_time, idcase FROM event_log GROUP BY idcase ) e ON e.idcase = p.idcase WHERE p.activity IN ('Fim da viagem', 'Declaração rejeitada pelo funcionário', 'Pagamento efetuado');
SELECT e.idcase, e.activity AS evento_de_interesse, strftime('%s', e.timestamp) - strftime('%s', s.start_time) AS tempo_decorrido FROM event_log e JOIN (SELECT MIN(timestamp) AS start_time, idcase FROM event_log GROUP BY idcase) s ON e.idcase = s.idcase WHERE e.activity IN ('Fim da viagem', 'Declaração rejeitada pelo funcionário', 'Pagamento efetuado');
SELECT AVG(JULIANDAY('Fim da viagem') - JULIANDAY('Início da viagem')) AS "Tempo médio entre início e fim da viagem" FROM event_log WHERE activity = 'Início da viagem' AND EXISTS (SELECT 1 FROM event_log WHERE activity = 'Fim da viagem' AND idcase = event_log.idcase)
SELECT * FROM event_log WHERE activity = 'Requisição de pagamento';
SELECT * FROM event_log WHERE activity = 'Requisição de pagamento';
SELECT * FROM event_log WHERE activity = 'Requisição de pagamento'
SELECT e.id, e.activity, e.timestamp, e.resource, e.cost, e.idcase FROM event_log e WHERE e.activity = 'Solicitação de pagamento' AND e.idcase IN ( SELECT idcase FROM event_log WHERE activity = 'Declaração' );
SELECT AVG(timestamp - timestamp) AS avg_duration, activity FROM event_log GROUP BY activity
SELECT AVG(timestamp - timestamp) AS avg_duration, activity FROM event_log GROUP BY activity
SELECT AVG (timestamp_end - timestamp_start) FROM event_log
SELECT AVG(duration), activity FROM event_log GROUP BY activity
SELECT AVG(duration), activity FROM event_log GROUP BY activity
SELECT AVG(duration), activity FROM event_log GROUP BY activity
SELECT AVG(duration), activity FROM event_log GROUP BY activity
SELECT AVG(duration), activity FROM event_log GROUP BY activity
SELECT AVG(duration), activity FROM event_log GROUP BY activity
SELECT AVG(timestamp - timestamp) AS avg_duration, activity FROM event_log GROUP BY activity
SELECT AVG(timestamp - timestamp) AS avg_duration, activity FROM event_log GROUP BY activity
SELECT activity, AVG(duration) AS avg_duration FROM ( SELECT idcase, activity, timestamp, LEAD(timestamp) OVER (PARTITION BY idcase ORDER BY timestamp) AS next_timestamp, (JULIANDAY(next_timestamp) - JULIANDAY(timestamp)) * 24 * 60 * 60 AS duration FROM event_log ) WHERE next_timestamp IS NOT NULL GROUP BY activity;
SELECT AVG (timestamp - timestamp) FROM event_log
SELECT activity, AVG(duration) AS avg_duration FROM ( SELECT idcase, activity, timestamp, LEAD(timestamp) OVER (PARTITION BY idcase ORDER BY timestamp) AS next_timestamp, (JULIANDAY(next_timestamp) - JULIANDAY(timestamp)) * 24 * 60 * 60 AS duration FROM event_log ) WHERE next_timestamp IS NOT NULL GROUP BY activity ORDER BY avg_duration DESC;
SELECT activity, AVG(duration) AS average_duration FROM ( SELECT idcase, activity, timestamp, LEAD(timestamp) OVER (PARTITION BY idcase ORDER BY timestamp) AS next_timestamp, JULIANDAY(next_timestamp) - JULIANDAY(timestamp) AS duration FROM event_log ) WHERE next_timestamp IS NOT NULL GROUP BY activity
SELECT AVG(duration), activity FROM event_log GROUP BY activity
SELECT AVG(duration), activity FROM event_log GROUP BY activity
SELECT AVG(duration), activity FROM event_log GROUP BY activity
SELECT AVG(duration), activity FROM event_log GROUP BY activity
SELECT AVG(duration), activity FROM event_log GROUP BY activity
SELECT AVG(duration), activity FROM event_log GROUP BY activity
SELECT AVG(duration), activity FROM event_log GROUP BY activity
SELECT AVG(duration), activity FROM event_log GROUP BY activity
SELECT AVG(duration), activity FROM event_log GROUP BY activity
SELECT AVG(cost) AS average_cost, activity FROM event_log GROUP BY activity
SELECT AVG (timestamp - timestamp) FROM event_log GROUP BY activity
SELECT * FROM event_log WHERE cost = (SELECT MAX(cost) FROM event_log)
SELECT * FROM event_log WHERE cost = (SELECT MAX(cost) FROM event_log) GROUP BY idcase
SELECT "idcase" FROM "event_log" WHERE "cost" = (SELECT MAX("cost") FROM "event_log");
SELECT * FROM event_log WHERE cost = (SELECT MAX(cost) FROM event_log)
SELECT DISTINCT idcase FROM event_log WHERE cost = (SELECT MAX(cost) FROM event_log);
SELECT * FROM event_log WHERE cost = (SELECT MAX(cost) FROM event_log)
SELECT activity, MAX(cost) FROM event_log GROUP BY activity
SELECT activity, cost FROM event_log ORDER BY cost DESC LIMIT 10;
SELECT activity FROM event_log GROUP BY activity HAVING SUM(cost) = (SELECT SUM(cost) FROM event_log GROUP BY activity ORDER BY SUM(cost) DESC LIMIT 1)
SELECT * FROM event_log WHERE cost = (SELECT MAX(cost) FROM event_log)
SELECT * FROM event_log WHERE cost = (SELECT MAX(cost) FROM event_log)
SELECT * FROM event_log WHERE cost = (SELECT MAX(cost) FROM event_log);
SELECT * FROM event_log WHERE cost = (SELECT MAX(cost) FROM event_log)
SELECT activity FROM event_log GROUP BY activity HAVING SUM(cost) = (SELECT SUM(cost) FROM event_log GROUP BY activity ORDER BY SUM(cost) DESC LIMIT 1)
SELECT * FROM event_log ORDER BY cost DESC
SELECT * FROM event_log WHERE cost = (SELECT MAX(cost) FROM event_log);
SELECT activity, cost FROM event_log ORDER BY cost DESC LIMIT 10;
SELECT * FROM event_log ORDER BY cost DESC LIMIT 1;
SELECT * FROM event_log WHERE cost = (SELECT MAX(cost) FROM event_log);
SELECT * FROM event_log ORDER BY cost DESC LIMIT 10;
SELECT * FROM event_log WHERE cost = (SELECT MAX(cost) FROM event_log);
SELECT * FROM event_log WHERE cost = (SELECT MAX(cost) FROM event_log)
SELECT * FROM event_log ORDER BY cost DESC;
SELECT activity FROM event_log WHERE cost = (SELECT MAX(cost) FROM event_log);
SELECT * FROM event_log WHERE activity = 'Início da viagem';
SELECT * FROM event_log WHERE activity = 'Início da viagem';
SELECT e.activity, e.timestamp, e.resource, e.cost, e.idcase FROM event_log AS e WHERE e.activity = 'Início da viagem';
SELECT e.activity, e.timestamp, e.resource, e.cost, e.idcase FROM event_log AS e WHERE e.activity = 'Início da viagem';
SELECT * FROM event_log WHERE activity = 'Início da viagem';
SELECT * FROM event_log WHERE activity = 'Início da viagem';
SELECT * FROM event_log WHERE activity = 'Início da viagem';
SELECT * FROM event_log WHERE activity = 'Início da viagem';
SELECT * FROM event_log WHERE activity = 'Início da viagem';
SELECT e1.activity, e1.timestamp, e1.resource, e1.cost, e1.idcase FROM event_log AS e1 WHERE e1.activity = 'Início da viagem';
SELECT * FROM event_log WHERE activity = 'Início da viagem';
SELECT * FROM event_log WHERE activity = 'Início da viagem';
SELECT * FROM event_log WHERE activity = 'Início da viagem';
SELECT * FROM event_log WHERE activity = 'Início da viagem';
SELECT * FROM event_log WHERE activity = 'Início da viagem';
SELECT * FROM event_log WHERE activity = 'Início da viagem';
SELECT * FROM event_log WHERE activity = 'START_TRIP';
SELECT e1.activity, e1.timestamp, e1.resource, e1.cost, e1.idcase FROM event_log AS e1 INNER JOIN event_log AS e2 ON e1.idcase = e2.idcase WHERE e2.activity = 'Início da viagem' AND e1.timestamp < e2.timestamp
SELECT activity, COUNT(*) AS total_records FROM event_log GROUP BY activity;
SELECT activity, count(*) AS total_executions FROM event_log GROUP BY activity
SELECT activity, COUNT(*) AS total_executions FROM event_log GROUP BY activity;
SELECT activity, COUNT(*) AS event_count FROM event_log GROUP BY activity
SELECT COUNT(DISTINCT id) AS "Execuções", activity FROM event_log GROUP BY activity;
SELECT activity, COUNT(*) AS count FROM event_log GROUP BY activity
SELECT activity, COUNT(*) AS event_count FROM event_log GROUP BY activity
SELECT activity, COUNT(*) AS event_count FROM event_log GROUP BY activity
SELECT count(DISTINCT id), activity FROM event_log GROUP BY activity
SELECT activity, COUNT(*) AS event_count FROM event_log GROUP BY activity
SELECT activity, COUNT(*) AS event_count FROM event_log GROUP BY activity;
SELECT activity, COUNT(*) AS event_count FROM event_log GROUP BY activity
SELECT activity, COUNT(*) AS total_executions FROM event_log GROUP BY activity
SELECT activity, COUNT(*) AS total_executions FROM event_log GROUP BY activity
SELECT activity, COUNT(*) AS event_count FROM event_log GROUP BY activity
SELECT COUNT(*) AS "Execuções", activity FROM event_log GROUP BY activity;
SELECT activity, COUNT(*) AS execution_count FROM event_log GROUP BY activity
SELECT activity, count(*) AS intervention_count FROM event_log GROUP BY activity;
SELECT activity, COUNT(*) AS count FROM event_log GROUP BY activity
SELECT activity, COUNT(*) AS count FROM event_log GROUP BY activity;
SELECT COUNT(*) AS "Quantidade de Intervenções", activity AS "Tipo de Ação" FROM event_log GROUP BY activity;
SELECT activity, COUNT(*) AS count FROM event_log GROUP BY activity;
SELECT activity, count(*) AS num_interventions FROM event_log GROUP BY activity;
SELECT count (*), activity FROM event_log group by activity
SELECT e.activity, e.cost FROM event_log AS e ORDER BY e.cost
SELECT cost, activity FROM event_log ORDER BY cost;
SELECT cost, activity FROM event_log ORDER BY cost DESC;
SELECT activity, cost FROM event_log ORDER BY cost;
SELECT e.cost, e.activity FROM event_log AS e ORDER BY e.cost;
SELECT cost, activity FROM event_log ORDER BY cost;
SELECT activity, cost FROM event_log ORDER BY cost DESC;
SELECT resource, SUM(cost) AS total_cost FROM event_log WHERE activity = 'process_statement' GROUP BY resource ORDER BY total_cost DESC
SELECT * FROM event_log WHERE activity = 'permissão'
SELECT * FROM event_log WHERE activity = 'permissão'
SELECT * FROM event_log WHERE activity = 'permissão'
SELECT * FROM event_log WHERE activity = 'permissão'
SELECT * FROM event_log WHERE activity = 'permissão'
SELECT * FROM event_log WHERE activity = 'permissão';
SELECT e1.activity AS "atividade_permissao", e2.activity AS "atividade_associada", e2.timestamp AS "timestamp_associado", e2.resource AS "recurso_associado", e2.cost AS "custo_associado" FROM event_log AS e1 JOIN event_log AS e2 ON e1.idcase = e2.idcase WHERE e1.activity LIKE '%permissão%' ORDER BY e2.timestamp;
SELECT e1.activity, e1.timestamp, e1.resource, e1.cost, e1.idcase FROM event_log AS e1 JOIN (SELECT idcase, MIN(timestamp) AS min_timestamp FROM event_log WHERE activity LIKE '%permissão%' GROUP BY idcase) AS e2 ON e1.idcase = e2.idcase AND e1.timestamp = e2.min_timestamp
SELECT * FROM event_log WHERE activity LIKE '%permissão%';
SELECT * FROM event_log WHERE activity = 'permissão';
SELECT idcase, activity, resource, cost FROM event_log WHERE activity LIKE '%permissão%' ORDER BY idcase, timestamp;
SELECT * FROM event_log WHERE activity = 'Permission'
SELECT MAX (cost) FROM event_log
SELECT MAX (cost) FROM event_log
SELECT MAX (cost) FROM event_log
SELECT MAX(cost) FROM event_log
SELECT MAX(cost) FROM event_log
SELECT MAX(cost) FROM event_log
SELECT DISTINCT idcase FROM event_log where resource = 'Sara' AND resource = 'Thomas'
SELECT DISTINCT idcase FROM event_log WHERE resource IN ('Sara', 'Thomas')
SELECT DISTINCT idcase FROM event_log WHERE resource IN ('Sara', 'Thomas')
SELECT DISTINCT idcase FROM event_log where resource = 'Sara' INTERSECT SELECT DISTINCT idcase FROM event_log where resource = 'Thomas'
SELECT DISTINCT idcase FROM event_log where resource = 'Sara' AND resource = 'Thomas'
SELECT DISTINCT idcase FROM event_log where resource = 'Thomas' AND resource = 'Sara'
SELECT COUNT(*), resource FROM event_log WHERE activity = 'Declaração rejeitada pela administração' GROUP BY resource
SELECT COUNT(*), resource FROM event_log WHERE activity = 'Declaração rejeitada pela administração' GROUP BY resource;
SELECT COUNT(*), resource FROM event_log WHERE activity = 'Declaração rejeitada pela administração' GROUP BY resource
SELECT COUNT(*), resource FROM event_log WHERE activity = 'Declaração rejeitada pela administração' GROUP BY resource
SELECT COUNT(*), resource FROM event_log WHERE activity = 'Declaração rejeitada pela administração' GROUP BY resource;
SELECT COUNT(*), resource FROM event_log WHERE activity = 'Declaração rejeitada pela administração' GROUP BY resource;
SELECT COUNT(*), resource, idcase FROM event_log WHERE activity = 'Declaração rejeitada pela administração' GROUP BY idcase, resource;
SELECT COUNT(*), resource FROM event_log WHERE activity = 'Declaração rejeitada pela administração' GROUP BY resource;
SELECT COUNT(*), resource, idcase FROM event_log WHERE activity = 'Declaração rejeitada pela administração' GROUP BY idcase, resource;
SELECT COUNT(*), resource, idcase FROM event_log WHERE activity = 'Declaração rejeitada pela administração' GROUP BY idcase, resource;
SELECT COUNT(*), resource FROM event_log WHERE activity = 'Declaração rejeitada pela administração' GROUP BY resource
SELECT COUNT(*), resource, idcase FROM event_log WHERE activity = 'Declaração rejeitada pela administração' GROUP BY resource, idcase
SELECT COUNT(*), resource, idcase FROM event_log WHERE activity = 'Declaração rejeitada pela administração' GROUP BY resource, idcase
SELECT COUNT(*), resource, idcase FROM event_log WHERE activity = 'Declaração rejeitada pela administração' GROUP BY resource, idcase
SELECT COUNT(*), resource, idcase FROM event_log WHERE activity = 'Declaração rejeitada pela administração' GROUP BY resource, idcase
SELECT COUNT(*), resource, idcase FROM event_log WHERE activity = 'Declaração rejeitada pela administração' GROUP BY resource, idcase
SELECT COUNT(*), resource, idcase FROM event_log WHERE activity = 'Declaração rejeitada pela administração' GROUP BY resource, idcase
SELECT COUNT(*), resource, idcase FROM event_log WHERE activity = 'Declaração rejeitada pela administração' GROUP BY resource, idcase
SELECT COUNT(*), resource, idcase FROM event_log WHERE activity = 'Declaração rejeitada pela administração' GROUP BY resource, idcase
SELECT COUNT(*), resource, idcase FROM event_log WHERE activity = 'Declaração rejeitada pela administração' GROUP BY resource, idcase
SELECT COUNT(*), resource, idcase FROM event_log WHERE activity = 'Declaração rejeitada pela administração' GROUP BY resource, idcase
SELECT AVG(cost) FROM event_log WHERE activity NOT IN ('Início da viagem', 'Fim da viagem')
SELECT AVG(cost) FROM event_log WHERE activity NOT IN ('Início da viagem', 'Fim da viagem')
SELECT AVG(cost) FROM event_log WHERE activity NOT IN ('Início da viagem', 'Fim da viagem')
SELECT AVG(cost) FROM event_log WHERE activity NOT IN ('Início da viagem', 'Fim da viagem')
SELECT AVG(cost) FROM event_log WHERE activity NOT IN ('Início da viagem', 'Fim da viagem')
SELECT AVG(cost) FROM event_log WHERE activity NOT IN ('Início da viagem', 'Fim da viagem')
SELECT AVG(cost) FROM event_log WHERE activity NOT IN ('Início da viagem', 'Fim da viagem')
SELECT AVG(cost) FROM event_log WHERE activity NOT IN ('Início da viagem', 'Fim da viagem');
SELECT AVG(cost) FROM event_log WHERE activity NOT IN ('Início da viagem', 'Fim da viagem')
SELECT AVG(cost) AS average_cost FROM event_log WHERE activity NOT IN ('START_TRIP', 'END_TRIP')
SELECT * FROM event_log ORDER BY cost DESC LIMIT 5
SELECT * FROM event_log ORDER BY cost DESC LIMIT 5;
SELECT * FROM event_log ORDER BY cost DESC LIMIT 5;
SELECT id, activity, "timestamp", resource, cost, idcase FROM event_log ORDER BY cost DESC LIMIT 5;
SELECT * FROM event_log ORDER BY cost DESC LIMIT 5
SELECT * FROM event_log ORDER BY cost DESC LIMIT 5
SELECT id, activity, "timestamp", resource, cost, idcase FROM event_log ORDER BY cost DESC LIMIT 5;
SELECT DISTINCT(idcase) FROM (SELECT idcase, activity, LEAD(activity) OVER (PARTITION BY idcase ORDER BY timestamp) AS next_activity FROM event_log) where activity = next_activity
SELECT * FROM event_log ORDER BY cost DESC LIMIT 5
SELECT * FROM event_log ORDER BY cost DESC LIMIT 5;
SELECT * FROM event_log ORDER BY cost DESC LIMIT 5;
SELECT * FROM event_log ORDER BY cost DESC LIMIT 5
SELECT * FROM event_log ORDER BY cost DESC LIMIT 5;
SELECT * FROM event_log ORDER BY cost DESC LIMIT 5;
SELECT * FROM event_log ORDER BY cost DESC LIMIT 5;
SELECT * FROM event_log ORDER BY cost DESC LIMIT 5;
SELECT idcase from event_log GROUP BY idcase HAVING COUNT(*) > 1
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(*) > 1;
SELECT idcase, COUNT(*) AS event_count FROM event_log GROUP BY idcase HAVING event_count > 1
SELECT idcase from event_log GROUP BY idcase HAVING COUNT(*) > 1
SELECT idcase FROM event_log group by idcase having count(*) > 1
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(*) > 1
SELECT idcase FROM event_log GROUP BY idcase HAVING count(*) > 1
SELECT DISTINCT idcase FROM event_log GROUP BY idcase HAVING count(activity) > 1
SELECT idcase, COUNT(DISTINCT activity) AS num_activities FROM event_log GROUP BY idcase HAVING num_activities > 1
SELECT idcase FROM event_log GROUP BY idcase HAVING count(activity) > 1
SELECT DISTINCT activity FROM event_log GROUP BY activity, idcase HAVING count(activity) > 3
SELECT * FROM event_log WHERE timestamp BETWEEN '2018-10-01' AND '2018-10-02';
SELECT * FROM event_log WHERE timestamp BETWEEN '2018-10-01' AND '2018-10-03'
SELECT * FROM event_log WHERE timestamp BETWEEN '2018-10-01' AND '2018-10-02'
SELECT * FROM event_log WHERE timestamp BETWEEN '2018-10-01' AND '2018-10-03'
SELECT * FROM event_log WHERE timestamp BETWEEN '2018-10-01' AND '2018-10-02';
SELECT * FROM event_log WHERE timestamp BETWEEN '2018-10-01' AND '2018-10-02';
SELECT * FROM event_log WHERE timestamp BETWEEN '2018-10-01' AND '2018-10-02'
SELECT * FROM event_log WHERE timestamp BETWEEN '2018-10-01' AND '2018-10-02'
SELECT activity FROM event_log WHERE timestamp BETWEEN '2018-10-01' and '2018-10-02'
SELECT * FROM event_log WHERE timestamp BETWEEN '2018-10-01' AND '2018-10-02'
SELECT * FROM event_log WHERE timestamp BETWEEN '2018-10-01' AND '2018-10-02'
SELECT * FROM event_log WHERE timestamp BETWEEN '2018-10-01' AND '2018-10-02'
SELECT * FROM event_log WHERE timestamp BETWEEN '2018-10-01' AND '2018-10-02'
SELECT * FROM event_log WHERE timestamp BETWEEN '2018-10-01' AND '2018-10-02';
SELECT * FROM event_log WHERE timestamp BETWEEN '2018-10-01' AND '2018-10-02';
SELECT * FROM event_log WHERE timestamp BETWEEN '2018-10-01' AND '2018-10-02'
SELECT * FROM event_log WHERE timestamp BETWEEN '2018-10-01' AND '2018-10-02'
SELECT DISTINCT activity FROM event_log WHERE timestamp BETWEEN '2018-10-01' AND '2018-10-02';
SELECT activity FROM event_log WHERE timestamp BETWEEN '2018-10-01' AND '2018-10-02'
SELECT * FROM event_log WHERE resource LIKE 'M%'
SELECT * FROM event_log WHERE resource LIKE 'M%'
SELECT * FROM event_log WHERE resource LIKE 'M%'
SELECT * FROM event_log WHERE resource LIKE 'M%'
SELECT * FROM event_log WHERE resource LIKE 'M%'
SELECT activity, timestamp, resource, cost FROM event_log WHERE resource LIKE 'M%';
SELECT activity FROM event_log WHERE resource LIKE 'M%' GROUP BY activity
SELECT * FROM event_log WHERE resource LIKE 'M%'
SELECT activity FROM event_log GROUP BY activity HAVING COUNT(*) > 5;
SELECT activity, COUNT(*) AS total_registros FROM event_log GROUP BY activity HAVING COUNT(*) > 5;
SELECT activity from event_log GROUP BY activity HAVING COUNT(*) > 5
SELECT activity FROM event_log GROUP BY activity HAVING COUNT (*) > 5
SELECT DISTINCT activity FROM event_log GROUP BY activity HAVING count(activity) > 5
SELECT activity FROM event_log GROUP BY activity HAVING COUNT(*) > 5;
SELECT DISTINCT activity FROM event_log GROUP BY activity HAVING count(activity) > 5
SELECT activity from event_log GROUP BY activity HAVING COUNT(*) > 5
SELECT activity FROM event_log GROUP BY activity HAVING COUNT (*) > 5
SELECT DISTINCT activity FROM event_log GROUP BY activity, idcase HAVING count(activity) > 5
SELECT activity from event_log GROUP BY activity HAVING COUNT(*) > 5
SELECT activity, COUNT(*) AS count FROM event_log WHERE timestamp < '2017-01-10' GROUP BY activity HAVING COUNT(*) > 5;
SELECT activity, idcase FROM event_log GROUP BY activity, idcase HAVING COUNT(*) > 3
SELECT activity FROM event_log WHERE idcase IN (SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(*) > 3) GROUP BY activity HAVING COUNT(*) > 3
SELECT activity FROM event_log GROUP BY idcase, activity HAVING COUNT(*) > 3;
SELECT activity FROM event_log GROUP BY activity, idcase HAVING COUNT(*) > 3
SELECT activity FROM event_log GROUP BY idcase, activity HAVING COUNT(*) > 3;
SELECT activity FROM event_log GROUP BY activity, idcase HAVING COUNT(*) > 3
SELECT activity FROM event_log GROUP BY activity, idcase HAVING COUNT(*) > 3;
SELECT activity, idcase FROM event_log GROUP BY activity, idcase HAVING COUNT(*) > 3;
SELECT activity FROM event_log GROUP BY activity, idcase HAVING COUNT(*) > 3
SELECT activity FROM event_log GROUP BY idcase, activity HAVING COUNT(*) > 3;
SELECT A declaração que teve uma ação executada mais de uma vez é: SELECT DISTINCT idcase FROM event_log GROUP BY idcase, activity HAVING COUNT(*) > 1 Esta declaração agrupa os registros por idcase e activity, e conta o número de ocorrências de cada combinação. A cláusula HAVING COUNT(*) > 1 filtra os resultados para incluir apenas as combinações que ocorreram mais de uma vez.
SELECT COUNT(*) FROM event_log WHERE idcase = 'declaração 56300'
SELECT SUM(LENGTH(activity)) FROM event_log WHERE idcase = 'declaração 56300'
SELECT COUNT(*) FROM event_log WHERE idcase = 'declaração 56300'
SELECT COUNT(*) FROM event_log WHERE idcase = 'declaração 56300'
SELECT COUNT(*) FROM event_log WHERE idcase = 'declaração 56300'
SELECT COUNT(*) FROM event_log WHERE idcase = 'declaração 56300';
SELECT **Declaração 1:** * **Leitura de índice:** O otimizador de consulta usará um índice na coluna cost para identificar rapidamente as linhas que atendem ao critério cost IS NOT NULL. * **Leitura de dados:** As linhas identificadas pelo índice serão lidas da tabela event_log. **Declaração 2:** * **Leitura de índice:** O otimizador de consulta usará um índice na coluna idcase para identificar rapidamente as linhas que correspondem ao valor 56300. * **Leitura de dados:** A linha identificada pelo índice será lida da tabela event_log.
SELECT activity, COUNT(*) AS count FROM event_log WHERE timestamp < '2017-10-01' GROUP BY activity HAVING COUNT(*) > 1 ORDER BY count DESC;
SELECT activity, COUNT(DISTINCT idcase) AS count_cases FROM event_log WHERE timestamp < '2017-01-10' GROUP BY activity HAVING COUNT(DISTINCT idcase) > 1 ORDER BY count_cases DESC;
SELECT activity, COUNT(*) AS count FROM event_log WHERE timestamp < '2017-10-01' GROUP BY activity HAVING COUNT(*) > 1 ORDER BY count DESC;
SELECT activity, COUNT(*) AS count FROM event_log WHERE timestamp < '2017-10-01' GROUP BY activity HAVING COUNT(*) > 1
SELECT activity, COUNT(DISTINCT idcase) AS count_cases FROM event_log WHERE timestamp < '2017-10-01' GROUP BY activity HAVING COUNT(DISTINCT idcase) > 1;
SELECT activity, COUNT(DISTINCT idcase) AS count_cases FROM event_log WHERE timestamp < '2017-10-01' GROUP BY activity HAVING COUNT(DISTINCT idcase) > 1 ORDER BY count_cases DESC;
SELECT activity, COUNT(DISTINCT idcase) AS count_cases FROM event_log WHERE timestamp < '2017-10-01' GROUP BY activity HAVING COUNT(DISTINCT idcase) > 1;
SELECT activity, COUNT(DISTINCT idcase) AS num_execucoes FROM event_log WHERE timestamp < '2017-01-10' GROUP BY activity HAVING COUNT(DISTINCT idcase) > 1 ORDER BY num_execucoes DESC;
SELECT activity, COUNT(*) AS count FROM event_log WHERE timestamp < '2017-10-01' GROUP BY activity HAVING COUNT(*) > 1 ORDER BY count DESC;
SELECT activity, COUNT(*) AS count FROM event_log WHERE timestamp < '2017-10-01' GROUP BY activity;
SELECT activity, COUNT(*) AS count FROM event_log WHERE timestamp < '2017-01-10' GROUP BY activity HAVING COUNT(*) > 1;
SELECT COUNT(DISTINCT idcase), resource FROM event_log GROUP BY resource
SELECT resource, count(distinct idcase) FROM event_log group by resource
SELECT resource, COUNT(DISTINCT idcase) from event_log GROUP BY resource
SELECT resource, COUNT(DISTINCT idcase) from event_log GROUP BY resource
SELECT resource, COUNT(DISTINCT idcase) from event_log GROUP BY resource
SELECT resource, COUNT(DISTINCT idcase) from event_log WHERE activity = 'allocation' GROUP BY resource
SELECT resource, count(distinct idcase) FROM event_log group by resource
SELECT resource, COUNT(DISTINCT idcase) from event_log GROUP BY resource
SELECT resource, count(distinct idcase) FROM event_log group by resource
SELECT resource, COUNT(DISTINCT idprocess) from event_log GROUP BY resource
SELECT resource, COUNT(DISTINCT idcase) FROM event_log group by resource
SELECT resource,COUNT(*) FROM event_log GROUP BY resource
SELECT resource, COUNT(*) AS count FROM event_log GROUP BY resource
SELECT COUNT(*) FROM event_log GROUP BY resource
SELECT COUNT(*) AS event_count, resource FROM event_log GROUP BY resource;
SELECT resource, COUNT(*) AS num_occurrences FROM event_log GROUP BY resource;
SELECT resource, COUNT(*) AS num_execucoes FROM event_log GROUP BY resource ORDER BY resource;
SELECT resource, COUNT(*) AS num_occurrences FROM event_log GROUP BY resource;
SELECT DISTINCT(idcase) FROM (SELECT idcase, activity, LEAD(activity) OVER (PARTITION BY idcase ORDER BY timestamp) AS next_activity FROM event_log) where activity = next_activity
SELECT idcase FROM event_log WHERE resource IN ('Thomas', 'Diana', 'Sara')
SELECT DISTINCT idcase FROM event_log WHERE resource IN ('Thomas', 'Diana', 'Sara')
SELECT idcase FROM event_log WHERE resource IN ('Thomas', 'Diana', 'Sara')
SELECT idcase FROM event_log WHERE resource IN ('Thomas', 'Diana', 'Sara')
SELECT activity FROM event_log WHERE resource IN ('Thomas', 'Diana', 'Sara')
SELECT COUNT(DISTINCT idcase), resource FROM event_log WHERE timestamp between '2017-05-01' and '2017-06-01' GROUP BY resource
SELECT resource, COUNT(DISTINCT idcase) from event_log WHERE timestamp BETWEEN '2017-05-01' AND '2017-06-01' GROUP BY resource
SELECT resource, count(DISTINCT idcase) FROM event_log WHERE timestamp BETWEEN '2017-05-01' AND '2017-06-01' GROUP BY resource
SELECT resource, count(DISTINCT idcase) FROM event_log WHERE timestamp BETWEEN '2017-05-01' AND '2017-06-01' GROUP BY resource
SELECT COUNT(DISTINCT idcase) AS case_count, resource FROM event_log WHERE timestamp BETWEEN '2017-05-01' AND '2017-06-01' GROUP BY resource;
SELECT COUNT(DISTINCT id), resource FROM event_log WHERE timestamp between '2017-05-01' and '2017-06-01' AND activity = 'process' GROUP BY resource
SELECT COUNT(DISTINCT idcase), resource FROM event_log WHERE timestamp between '2017-05-01' and '2017-06-01' AND activity = 'process' GROUP BY resource
SELECT COUNT(DISTINCT idcase), resource FROM event_log WHERE timestamp between '2017-05-01' and '2017-06-01' GROUP BY resource
SELECT COUNT(DISTINCT idcase), resource FROM event_log WHERE activity = 'process' AND timestamp between '2017-05-01' and '2017-06-01' GROUP BY resource
SELECT COUNT(DISTINCT idcase), resource FROM event_log WHERE timestamp between '2017-05-01' and '2017-06-01' GROUP BY resource
SELECT COUNT(DISTINCT idcase), resource FROM event_log WHERE timestamp between '2017-05-01' and '2017-06-01' GROUP BY resource
SELECT COUNT(DISTINCT idcase), resource FROM event_log WHERE activity LIKE '%intervention%' AND timestamp between '2017-05-01' and '2017-06-01' GROUP BY resource
SELECT activity, resource FROM event_log WHERE resource NOT IN ('Joshua', 'Teresa')
SELECT activity, resource FROM event_log WHERE resource NOT IN ('Joshua', 'Teresa');
SELECT activity, resource FROM event_log WHERE resource NOT IN ('Joshua', 'Teresa');
SELECT DISTINCT(activity) AS "Ação", resource AS "Funcionário" FROM event_log WHERE activity LIKE '%intervenção%' AND resource NOT IN ('Joshua', 'Teresa')
SELECT activity, resource FROM event_log WHERE activity LIKE '%Declarações%' AND resource NOT IN ('Joshua', 'Teresa');
SELECT DISTINCT idcase FROM event_log WHERE activity IN ('Início da viagem', 'Fim da viagem') EXCEPT SELECT DISTINCT idcase FROM event_log WHERE activity IN ('Requisição de pagamento', 'Pagamento efetuado');
SELECT DISTINCT idcase FROM event_log WHERE idcase IN ( SELECT idcase FROM event_log WHERE activity IN ('Início da viagem', 'Fim da viagem') ) AND idcase NOT IN ( SELECT idcase FROM event_log WHERE activity IN ('Requisição de pagamento', 'Pagamento efetuado') );
SELECT DISTINCT idcase FROM event_log WHERE activity IN ('Início da viagem', 'Fim da viagem') EXCEPT SELECT DISTINCT idcase FROM event_log WHERE activity IN ('Requisição de pagamento', 'Pagamento efetuado');
SELECT DISTINCT idcase FROM event_log WHERE idcase IN ( SELECT idcase FROM event_log WHERE activity IN ('Início da viagem', 'Fim da viagem') ) AND idcase NOT IN ( SELECT idcase FROM event_log WHERE activity IN ('Requisição de pagamento', 'Pagamento efetuado') );
SELECT DISTINCT idcase FROM event_log WHERE activity IN ('Início da viagem', 'Fim da viagem') EXCEPT SELECT DISTINCT idcase FROM event_log WHERE activity IN ('Requisição de pagamento', 'Pagamento efetuado');
SELECT DISTINCT idcase FROM event_log WHERE idcase NOT IN ( SELECT idcase FROM event_log WHERE activity = 'Requisição de pagamento' OR activity = 'Pagamento efetuado' );
SELECT DISTINCT idcase FROM event_log WHERE activity IN ('Início da viagem', 'Fim da viagem') AND idcase NOT IN ( SELECT DISTINCT idcase FROM event_log WHERE activity IN ('Solicitação de pagamento', 'Efetuação de pagamento') );
SELECT DISTINCT idcase FROM event_log WHERE idcase NOT IN ( SELECT idcase FROM event_log WHERE activity IN ('Solicitação de pagamento', 'Pagamento efetuado') ) AND idcase IN ( SELECT idcase FROM event_log WHERE activity IN ('Início da viagem', 'Fim da viagem') );
SELECT DISTINCT idcase FROM event_log WHERE activity IN ('Início da viagem', 'Fim da viagem') EXCEPT SELECT DISTINCT idcase FROM event_log WHERE activity IN ('Requisição de pagamento', 'Pagamento efetuado');
SELECT event_log.id, event_log.activity, event_log.timestamp, event_log.resource, event_log.cost, event_log.idcase FROM event_log WHERE (event_log.activity = 'Início da viagem' OR event_log.activity = 'Término da viagem') AND NOT EXISTS ( SELECT 1 FROM event_log AS subquery WHERE subquery.idcase = event_log.idcase AND (subquery.activity = 'Requisição de pagamento' OR subquery.activity = 'Pagamento efetuado') );
SELECT * FROM event_log WHERE resource IS NULL
SELECT * FROM event_log WHERE resource IS NULL OR resource = '';
SELECT activity FROM event_log WHERE resource IS NULL
SELECT * FROM event_log WHERE resource IS NULL
SELECT * FROM event_log WHERE resource IS NULL
SELECT activity FROM event_log WHERE resource IS NULL
SELECT * FROM event_log WHERE resource IS NULL
SELECT resource, COUNT(*) AS intervention_count FROM event_log WHERE resource NOT IN ( SELECT resource FROM event_log WHERE activity LIKE '%allocation%' ) GROUP BY resource;
SELECT idcase FROM event_log WHERE timestamp < '2017-03-01' GROUP BY idcase
SELECT idcase FROM event_log GROUP BY idcase HAVING strftime('%Y-%m', MIN(timestamp)) < '2017-03'
SELECT DISTINCT activity FROM event_log WHERE timestamp BETWEEN '2018-01-01' AND '2018-07-01';
SELECT DISTINCT idcase FROM event_log WHERE timestamp < '2017-03-01'
SELECT DISTINCT idcase FROM event_log WHERE strftime('%Y-%m', MIN(timestamp)) = '2017-03'
SELECT DISTINCT idcase FROM event_log WHERE activity = ( SELECT activity FROM event_log WHERE idcase = event_log.idcase ORDER BY timestamp LIMIT 1 ) AND timestamp < '2017-03-01';
SELECT * FROM event_log WHERE timestamp < '2017-03-01'
SELECT resource FROM event_log WHERE activity = 'Declaração' AND timestamp < '2017-03-01' GROUP BY resource
SELECT activity, COUNT(*) FROM event_log WHERE timestamp < '2017-03-01' GROUP BY activity;
SELECT DISTINCT "idcase" FROM event_log WHERE activity = 'process' AND timestamp < '2017-03-01';
SELECT DISTINCT idcase FROM event_log WHERE activity = 'Início da viagem' AND timestamp BETWEEN '2017-03-01' AND '2017-03-31'
SELECT idcase FROM event_log WHERE activity = 'Início da viagem' AND timestamp BETWEEN '2017-03-01' AND '2017-03-31' AND idcase IN ( SELECT idcase FROM event_log WHERE activity = 'Início da viagem' GROUP BY idcase ORDER BY timestamp ASC LIMIT 1 );
SELECT DISTINCT idcase FROM event_log WHERE activity = 'Início da viagem' AND timestamp LIKE '2017-03%'
SELECT idcase FROM event_log WHERE activity = 'Início da viagem' AND strftime('%Y-%m', timestamp) = '2017-03' AND id IN ( SELECT MIN(id) FROM event_log WHERE activity = 'Início da viagem' GROUP BY idcase )
SELECT idcase FROM event_log WHERE activity = 'Início da viagem' AND timestamp BETWEEN '2017-03-01' AND '2017-03-31' AND idcase IN ( SELECT idcase FROM event_log GROUP BY idcase HAVING MIN(timestamp) = ( SELECT MIN(timestamp) FROM event_log WHERE activity = 'Início da viagem' ) );
SELECT DISTINCT idcase FROM event_log WHERE activity = 'Início da viagem' AND timestamp BETWEEN '2017-03-01' AND '2017-03-31'
SELECT DISTINCT idcase FROM event_log WHERE activity = 'Início da viagem' AND timestamp BETWEEN '2017-03-01' AND '2017-03-31'
SELECT resource, COUNT(*) AS count_resource FROM event_log GROUP BY resource HAVING COUNT(*) > 5
SELECT resource, COUNT(DISTINCT idcase) AS num_cases FROM event_log GROUP BY resource HAVING num_cases > 5
SELECT resource, COUNT(*) AS count_resource FROM event_log GROUP BY resource HAVING COUNT(*) > 5
SELECT resource FROM event_log GROUP BY resource HAVING COUNT(*) > 5
SELECT resource FROM event_log GROUP BY idcase, resource HAVING COUNT(*) > 5
SELECT resource FROM event_log GROUP BY resource, idcase HAVING COUNT(*) > 5
SELECT resource FROM event_log GROUP BY resource, idcase HAVING COUNT(*) > 5;
SELECT resource FROM event_log GROUP BY resource HAVING COUNT(*) > 5
SELECT resource FROM event_log GROUP BY resource HAVING COUNT(*) > 5
SELECT resource, COUNT(DISTINCT idcase) AS num_cases FROM event_log GROUP BY resource HAVING num_cases > 5;
SELECT resource, COUNT(*) AS num_occurrences FROM event_log GROUP BY resource HAVING num_occurrences > 5;
SELECT activity FROM event_log GROUP BY activity HAVING COUNT(*) = ( SELECT COUNT(*) FROM event_log GROUP BY activity ORDER BY COUNT(*) DESC LIMIT 1 );
SELECT activity, COUNT(*) AS count FROM event_log GROUP BY activity ORDER BY count DESC LIMIT 10;
SELECT activity, COUNT(*) AS count FROM event_log GROUP BY activity ORDER BY count DESC LIMIT 1;
SELECT activity FROM event_log GROUP BY activity ORDER BY COUNT(*) DESC LIMIT 1
SELECT activity, COUNT(*) AS count FROM event_log GROUP BY activity ORDER BY count DESC
SELECT resource, COUNT(*) AS count FROM event_log WHERE activity = 'Declaração final aprovada pelo supervisor' GROUP BY resource ORDER BY count DESC LIMIT 10;
SELECT resource, count(*) AS total_activities FROM event_log WHERE activity = 'Declaração final aprovada pelo supervisor' GROUP BY resource ORDER BY total_activities DESC LIMIT 10;
SELECT resource, COUNT(*) AS count FROM event_log WHERE activity = 'Declaração final aprovada pelo supervisor' GROUP BY resource ORDER BY count DESC LIMIT 10;
SELECT resource, COUNT(DISTINCT idcase) AS num_cases FROM event_log WHERE activity = 'Declaração final aprovada pelo supervisor' GROUP BY resource ORDER BY num_cases DESC
SELECT resource, COUNT(*) AS count FROM event_log WHERE activity = 'Declaração final aprovada pelo supervisor' GROUP BY resource ORDER BY count DESC LIMIT 10;
SELECT resource, count(*) AS num_execucoes FROM event_log WHERE activity = 'Declaração final aprovada pelo supervisor' GROUP BY resource ORDER BY num_execucoes DESC;
SELECT resource, COUNT(*) AS count FROM event_log WHERE activity = 'Declaração final aprovada pelo supervisor' GROUP BY resource ORDER BY count DESC LIMIT 10;
SELECT resource FROM event_log WHERE activity = 'Declaração final aprovada pelo supervisor' GROUP BY resource ORDER BY COUNT(*) DESC LIMIT 10;
SELECT count(*) FROM event_log WHERE activity = 'Declaração aprovada pelo responsável pelo orçamento' AND resource IN ('Eugene', 'Marie')
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE activity = 'Declaração aprovada pelo responsável pelo orçamento' AND resource IN ('Eugene', 'Marie');
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE activity = 'Declaração aprovada pelo responsável pelo orçamento' AND resource IN ('Eugene', 'Marie')
SELECT count(*) FROM event_log WHERE activity = 'Declaração aprovada pelo responsável pelo orçamento' AND resource IN ('Eugene', 'Marie')
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE activity = 'declaração aprovada pelo responsável pelo orçamento' AND resource IN ('Eugene', 'Marie')
SELECT count(DISTINCT idcase) FROM event_log WHERE activity = 'Declaração aprovada pelo responsável pelo orçamento' AND resource IN ('Eugine', 'Marie')
SELECT count(DISTINCT idcase) FROM event_log WHERE activity = 'Declaração aprovada pelo responsável pelo orçamento' AND resource IN ('Eugine', 'Marie')
SELECT COUNT(DISTINCT(event_log.id)) AS "Número de Declarações Aprovadas" FROM event_log JOIN resource ON event_log.resource = resource.name WHERE event_log.activity LIKE '%aprovou%' AND resource.name IN ('Eugene', 'Marie') AND event_log.activity LIKE '%responsável pelo orçamento%';
SELECT COUNT(DISTINCT(event_log.id)) FROM event_log JOIN resource ON event_log.resource = resource.name WHERE resource.position = 'Responsável pelo orçamento' AND (resource.name = 'Eugene' OR resource.name = 'Marie') AND event_log.activity LIKE '%declaração aprovada%';
SELECT activity FROM event_log WHERE idcase = 'declaração 49464' EXCEPT SELECT activity FROM event_log WHERE idcase = 'declaração 76667';
SELECT activity FROM event_log WHERE idcase = 'declaração 49464' EXCEPT SELECT activity FROM event_log WHERE idcase = 'declaração 76667';
SELECT activity FROM event_log WHERE idcase = 'declaração 49464' EXCEPT SELECT activity FROM event_log WHERE idcase = 'declaração 76667';
SELECT activity FROM event_log WHERE idcase = 'declaração 49464' EXCEPT SELECT activity FROM event_log WHERE idcase = 'declaração 76667';
SELECT count(*) AS "Número de vezes", resource FROM event_log WHERE activity = 'declaração requisitada pelo funcionário' GROUP BY resource HAVING count(*) > 2;
SELECT resource, COUNT(*) AS activity_count FROM event_log WHERE activity = 'declaração requisitada pelo funcionário' GROUP BY resource HAVING activity_count > 2 ORDER BY resource;
SELECT resource, count(*) AS count_activity FROM event_log WHERE activity = 'Declaração requisitada pelo funcionário' GROUP BY resource HAVING count(*) > 2 ORDER BY count_activity DESC;
SELECT resource, count(*) AS count FROM event_log WHERE activity = 'Declaração requisitada pelo funcionário' GROUP BY resource HAVING count > 2 ORDER BY count DESC;
SELECT resource, COUNT(*) AS num_occurrences FROM event_log WHERE activity = 'declaração requisitada pelo funcionário' GROUP BY resource HAVING num_occurrences > 2;
SELECT resource, COUNT(*) AS event_count FROM event_log WHERE activity = 'declaração requisitada pelo funcionário' GROUP BY resource HAVING event_count > 2;
SELECT resource, COUNT(*) AS num_declaracoes FROM event_log WHERE activity = 'Declaração requisitada pelo funcionário' GROUP BY resource HAVING COUNT(*) > 2 ORDER BY num_declaracoes DESC;
SELECT DISTINCT e.idcase FROM event_log AS e join (SELECT idcase, MIN(timestamp) as start_date FROM event_log GROUP BY idcase) AS e1 ON e1.idcase = e.idcase WHERE e.activity = 'Requisição de pagamento' AND e1.start_date BETWEEN '2017-05-01' AND '2017-05-10'
SELECT DISTINCT e.idcase FROM event_log AS e JOIN ( SELECT idcase, MIN(timestamp) AS start_date FROM event_log WHERE activity = 'Requisição de pagamento' GROUP BY idcase ) AS e1 ON e1.idcase = e.idcase WHERE e.activity = 'Requisição de pagamento' AND e1.start_date BETWEEN '2017-05-01' AND '2017-05-10' ORDER BY e1.start_date DESC LIMIT 10;
SELECT DISTINCT idcase FROM event_log WHERE activity = 'Requisição de pagamento' AND timestamp >= '2017-05-01' AND timestamp <= '2017-05-10';
SELECT DISTINCT idcase FROM event_log WHERE activity = 'Requisição de pagamento' AND timestamp BETWEEN '2017-05-01' AND '2017-05-10';
SELECT DISTINCT e.idcase FROM event_log AS e join (SELECT idcase, MIN(timestamp) as start_date FROM event_log GROUP BY idcase) AS e1 ON e1.idcase = e.idcase WHERE e.activity = 'Requisição de pagamento' AND e1.start_date BETWEEN '2017-05-01' AND '2017-05-10'
SELECT DISTINCT idcase FROM event_log WHERE activity = 'Requisição de pagamento' AND timestamp BETWEEN '2017-05-01' AND '2017-05-10'
SELECT DISTINCT idcase FROM event_log WHERE activity = 'Requisição de pagamento' AND timestamp BETWEEN '2017-05-01' AND '2017-05-10';
SELECT e.idcase FROM event_log AS e join (SELECT idcase, MIN(timestamp) as start_date FROM event_log WHERE activity = 'Requisição de pagamento' GROUP BY idcase) AS e1 ON e1.idcase = e.idcase WHERE e.activity = 'Requisição de pagamento' AND e1.start_date BETWEEN '2017-05-01' AND '2017-05-10'
SELECT COUNT(DISTINCT resource), idcase FROM event_log GROUP BY idcase
SELECT idcase, COUNT(DISTINCT resource) from event_log GROUP BY idcase
SELECT count(DISTINCT resource) FROM event_log GROUP BY idcase
SELECT idcase, COUNT(DISTINCT resource) AS resource_count FROM event_log GROUP BY idcase
SELECT COUNT(DISTINCT resource), idcase FROM event_log GROUP BY idcase
SELECT idcase, COUNT(DISTINCT resource) AS num_resources FROM event_log GROUP BY idcase
SELECT COUNT(DISTINCT resource), idcase FROM event_log GROUP BY idcase
SELECT activity, COUNT(DISTINCT resource) FROM event_log GROUP BY activity
SELECT DISTINCT idcase FROM event_log WHERE resource = 'Christopher' AND NOT EXISTS ( SELECT 1 FROM event_log WHERE idcase = event_log.idcase AND resource <> 'Christopher' );
SELECT DISTINCT idcase FROM event_log WHERE resource = 'Christopher' AND activity = 'Closed'
SELECT idcase from event_log WHERE resource = 'Christopher' group by idcase HAVING COUNT(DISTINCT resource) = 1
SELECT idcase FROM event_log WHERE resource = 'Christopher' GROUP BY idcase HAVING COUNT(DISTINCT activity) = (SELECT COUNT(*) FROM event_log WHERE idcase = event_log.idcase)
SELECT idcase FROM event_log WHERE resource = 'Christopher' GROUP BY idcase HAVING COUNT(DISTINCT resource) = 1;
SELECT idcase from event_log WHERE resource = 'Christopher' group by idcase HAVING COUNT(DISTINCT resource) = 1
SELECT idcase from event_log WHERE resource = 'Christopher' GROUP BY idcase HAVING COUNT(DISTINCT resource) = 1
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(DISTINCT resource) = 1;
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(DISTINCT resource) = 1;
SELECT idcase, resource FROM event_log GROUP BY idcase HAVING COUNT(DISTINCT resource) = 1;
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(DISTINCT resource) = 1
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(DISTINCT resource) = 1;
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(DISTINCT resource) = 1;
SELECT idcase, resource FROM event_log GROUP BY idcase HAVING COUNT(DISTINCT resource) = 1;
SELECT COUNT(*), activity FROM event_log WHERE timestamp < '2017-01-10' GROUP BY activity HAVING COUNT(*) > 1;
SELECT * FROM event_log WHERE activity LIKE '%funcionário%' AND resource NOT LIKE '%supervisor%' AND resource NOT LIKE '%administração%' AND resource NOT LIKE '%pré-aprovador%' AND resource NOT LIKE '%responsável pelo orçamento%' AND resource NOT LIKE '%diretor%'
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(DISTINCT DATE(timestamp)) > 1
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(DISTINCT DATE(timestamp)) > 1
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(DISTINCT DATE(timestamp)) > 1;
SELECT DISTINCT idcase FROM event_log GROUP BY idcase HAVING count(DISTINCT DATE(timestamp)) > 1
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(*) > 1 AND DATE(timestamp) = DATE('now')
SELECT idcase FROM event_log GROUP BY idcase, DATE(timestamp) HAVING COUNT(*) > 1
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(DISTINCT activity) > 1 AND COUNT(DISTINCT DATE(timestamp)) = 1
SELECT resource, idcase, COUNT(*) AS num_null_cost_events FROM event_log WHERE cost IS NULL GROUP BY resource, idcase;
SELECT idcase, resource, COUNT(*) AS num_null_cost_events FROM event_log WHERE cost IS NULL GROUP BY idcase, resource;
SELECT COUNT(*) AS "Number of Events", resource AS "Resource" FROM event_log WHERE cost IS NULL GROUP BY resource;
SELECT resource, COUNT(*) AS num_null_cost_events FROM event_log WHERE cost IS NULL GROUP BY resource;
SELECT resource, idcase, COUNT(*) AS num_null_cost_events FROM event_log WHERE cost IS NULL GROUP BY resource, idcase
SELECT resource, idcase, COUNT(*) AS num_events_with_null_cost FROM event_log WHERE cost IS NULL GROUP BY resource, idcase;
SELECT e.activity, e.timestamp, e.resource, e.cost, e.idcase FROM event_log AS e WHERE e.activity LIKE '%rejeitada%';
SELECT resource, COUNT(*) AS intervencoes_sem_custo FROM event_log WHERE activity = 'processar declaracao' AND cost IS NULL GROUP BY resource
SELECT * FROM event_log WHERE activity = 'Permissão rejeitada pelo diretor'
SELECT * FROM event_log WHERE activity = 'Permissão rejeitada pelo diretor'
SELECT * FROM event_log WHERE activity = 'Permissão rejeitada pelo diretor'
SELECT * FROM event_log WHERE activity = 'Permissão rejeitada pelo diretor'
SELECT * FROM event_log WHERE activity = 'Permissão rejeitada pelo diretor'
SELECT * FROM event_log WHERE activity = 'Permissão rejeitada pelo diretor'
SELECT activity FROM event_log WHERE activity LIKE '%permissão rejeitada%' AND resource LIKE '%diretor%'
SELECT activity FROM event_log WHERE activity LIKE '%Diretor rejeitando uma permissão%'
SELECT DATE(timestamp) AS event_date, SUM(cost) AS total_cost FROM event_log GROUP BY event_date ORDER BY event_date;
SELECT DATE(timestamp) AS event_date, SUM(cost) AS total_cost FROM event_log GROUP BY event_date ORDER BY event_date;
SELECT DATE(timestamp) AS day, SUM(cost) AS total_cost FROM event_log GROUP BY day
SELECT strftime('%Y-%m-%d', "timestamp") AS "date", SUM("cost") AS "total_cost" FROM "event_log" GROUP BY "date" ORDER BY "date" DESC;
SELECT DATE(timestamp) AS day, SUM(cost) AS total_cost FROM event_log GROUP BY day
SELECT DATE(timestamp) AS event_date, SUM(cost) AS total_cost FROM event_log GROUP BY event_date
SELECT DATE(timestamp) AS event_date, COUNT(*) AS event_count FROM event_log GROUP BY event_date
SELECT DATE(timestamp) AS date, SUM(cost) AS total_cost FROM event_log GROUP BY date
SELECT activity FROM event_log WHERE cost > 1000 AND resource IN ( SELECT resource FROM event_log WHERE activity IN ('Supervisor', 'Diretor') );
SELECT activity FROM event_log WHERE activity IN ( SELECT activity FROM event_log WHERE activity LIKE '%supervisor%' OR activity LIKE '%diretor%' ) AND cost > 1000;
SELECT activity FROM event_log WHERE cost > 1000 AND resource IN ( SELECT resource FROM event_log WHERE activity IN ('Supervisor', 'Diretor') );
SELECT activity FROM event_log WHERE (activity LIKE '%supervisor%' OR activity LIKE '%diretor%') AND cost > 1000;
SELECT activity FROM event_log WHERE cost > 1000 AND (resource LIKE '%supervisor%' OR resource LIKE '%diretor%')
SELECT activity FROM event_log WHERE activity IN ( SELECT activity FROM event_log WHERE resource IN ('supervisor', 'diretor') ) AND cost > 1000;
SELECT idcase, COUNT(*) AS event_count FROM event_log GROUP BY idcase
SELECT idcase, COUNT(*) AS event_count FROM event_log GROUP BY idcase
SELECT count(*) AS "event_count", idcase FROM event_log GROUP BY idcase;
SELECT count(*) AS "Número de Eventos", idcase AS "ID do Caso" FROM event_log GROUP BY idcase;
SELECT COUNT(*) AS event_count, idcase FROM event_log GROUP BY idcase;
SELECT COUNT(*) AS "Event Count", idcase FROM event_log GROUP BY idcase;
SELECT activity, COUNT(*) AS count FROM event_log GROUP BY activity;
SELECT COUNT(DISTINCT idcase), resource FROM event_log WHERE activity = 'task_assigned' GROUP BY resource
SELECT resource, COUNT(*) AS task_count FROM event_log WHERE activity = 'task' GROUP BY resource;
SELECT resource, COUNT(*) AS activity_count FROM event_log GROUP BY resource
SELECT COUNT(*) AS "Quantidade de Atividades", resource FROM event_log GROUP BY resource;
SELECT resource, COUNT(DISTINCT activity) AS num_activities FROM event_log GROUP BY resource;
SELECT resource, COUNT(DISTINCT idcase) AS task_count FROM event_log GROUP BY resource
SELECT COUNT(*), resource FROM (SELECT resource, activity from event_log WHERE activity LIKE '%determine%' GROUP BY idcase) GROUP BY resource
SELECT idcase, COUNT(DISTINCT activity) AS num_activities FROM event_log WHERE resource = 'Alexis' GROUP BY idcase;
SELECT idcase, COUNT(*) AS num_activities FROM event_log WHERE activity LIKE '%Alexis%' GROUP BY idcase ORDER BY num_activities DESC;
SELECT COUNT(DISTINCT idcase), activity FROM event_log GROUP BY activity;
SELECT COUNT(DISTINCT idcase), activity FROM event_log GROUP BY activity
SELECT idcase, COUNT(*) AS activity_count FROM event_log WHERE resource = 'Alexis' GROUP BY idcase
SELECT idcase, COUNT(*) AS num_activities FROM event_log WHERE activity LIKE '%Alexis%' GROUP BY idcase ORDER BY num_activities DESC;
SELECT COUNT(DISTINCT idcase) AS "Número de instâncias de processo", COUNT(DISTINCT activity) AS "Número de tarefas" FROM event_log WHERE resource = 'Alexis' GROUP BY idcase
SELECT **Ações mais comuns no processamento de declarações:** * **Análise:** Dividir a declaração em tokens e analisar sua estrutura. * **Otimização:** Determinar o plano de execução mais eficiente para a declaração. * **Execução:** Executar o plano de execução e retornar os resultados. * **Validação:** Verificar se a declaração é válida e se tem permissão para ser executada. * **Autorização:** Verificar se o usuário tem permissão para executar a declaração. * **Registro:** Registrar a execução da declaração para fins de auditoria e depuração.
SELECT COUNT(DISTINCT e1.idcase) FROM event_log e1 inner join (SELECT idcase, MIN(timestamp) as timestamp FROM event_log GROUP BY idcase order by timestamp) AS e2 on e1.idcase=e2.idcase WHERE e1.activity = 'Permissão final aprovada pelo supervisor' AND e2.timestamp < (SELECT MIN(timestamp) FROM event_log WHERE activity = 'Início da viagem')
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE activity='Permissão final aprovada pelo supervisor' AND timestamp < (SELECT timestamp FROM event_log WHERE activity='Início da viagem' AND idcase=event_log.idcase)
SELECT WITH RankedEvents AS (SELECT id, activity, timestamp, LEAD(timestamp) OVER (PARTITION BY idcase ORDER BY timestamp) AS next_timestamp, idcase FROM event_log) SELECT idcase, coalesce((strftime('%s', next_timestamp) - strftime('%s', timestamp)),0) as duration FROM RankedEvents WHERE activity='Declaração aprovada pelo supervisor'
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE activity = 'Permissão final aprovada pelo supervisor' AND timestamp < (SELECT timestamp FROM event_log WHERE activity = 'Início da viagem')
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE activity='Início da viagem' AND timestamp > (SELECT timestamp FROM event_log WHERE activity='Permissão final aprovada pelo supervisor' AND idcase=event_log.idcase)
SELECT count(*) FROM event_log WHERE activity = 'Início da viagem' AND timestamp > ( SELECT timestamp FROM event_log WHERE activity = 'Permissão final aprovada pelo supervisor' AND idcase = ( SELECT idcase FROM event_log WHERE activity = 'Início da viagem' ) );
SELECT count(*) FROM event_log WHERE activity = 'Permissão final aprovada pelo supervisor' AND id IN ( SELECT id FROM event_log WHERE activity = 'Início da viagem' );
SELECT count(*) FROM event_log WHERE activity = 'Permissão final aprovada pelo supervisor' AND timestamp < (SELECT timestamp FROM event_log WHERE activity = 'Início da viagem')
SELECT e1.activity, e1.resource, e1.idcase FROM event_log AS e1 INNER JOIN event_log AS e2 ON e1.idcase = e2.idcase WHERE e2.activity = 'Fim da viagem' AND e1.timestamp > e2.timestamp AND e1.timestamp NOT BETWEEN '2017-12-12 00:00:00' AND '2017-12-12 23:59:59';
SELECT activity FROM event_log WHERE timestamp BETWEEN '2018-01-01' AND '2018-07-01';
SELECT * FROM event_log WHERE activity = 'Fim da viagem' AND timestamp < '2017-12-12' UNION SELECT * FROM event_log WHERE activity = 'Fim da viagem' AND timestamp > '2017-12-12';
SELECT * FROM event_log WHERE activity = 'Fim da viagem' AND (timestamp < '2017-12-12' OR timestamp > '2017-12-12')
SELECT * FROM event_log WHERE activity = 'Fim da viagem' AND timestamp NOT BETWEEN '2017-12-12 00:00:00' AND '2017-12-12 23:59:59';
SELECT activity FROM event_log WHERE activity = 'Fim da viagem' AND NOT DATE(timestamp) = '2017-12-12'
SELECT activity FROM event_log WHERE activity = 'Fim da viagem' AND timestamp NOT BETWEEN '2017-12-12 00:00:00' AND '2017-12-12 23:59:59'
SELECT resource,COUNT(*) FROM event_log GROUP BY resource
SELECT COUNT(*), resource FROM event_log GROUP BY resource;
SELECT COUNT(*) AS event_count, resource FROM event_log GROUP BY resource;
SELECT count(DISTINCT idcase), resource FROM event_log GROUP BY resource
SELECT COUNT(*), responsible FROM event_log GROUP BY responsible
SELECT responsible_person, COUNT (*) AS num_actions FROM event_log WHERE activity = 'process_statement' GROUP BY responsible_person
SELECT COUNT(DISTINCT activity) AS "Número de Ações", resource AS "Pessoa Responsável" FROM event_log GROUP BY resource;
SELECT COUNT(DISTINCT activity) AS "Number of Activities", resource FROM event_log GROUP BY resource;
SELECT COUNT(DISTINCT activity) AS "Number of Activities", resource FROM event_log GROUP BY resource;
SELECT activity, COUNT(*) AS activity_count FROM event_log GROUP BY activity;
SELECT COUNT(*) AS "Quantidade de Atividades", resource FROM event_log GROUP BY resource;
SELECT resource, COUNT(DISTINCT activity) AS activity_count FROM event_log GROUP BY resource;
SELECT COUNT(DISTINCT activity), resource FROM event_log GROUP BY resource
SELECT activity FROM event_log WHERE resource = 'Virginia' EXCEPT SELECT activity FROM event_log WHERE resource <> 'Virginia';
SELECT activity FROM event_log WHERE resource = 'Virginia' GROUP BY activity HAVING COUNT(*) = 0
SELECT DISTINCT activity FROM event_log WHERE idcase NOT IN ( SELECT idcase FROM event_log WHERE resource = 'Virginia' );
SELECT activity FROM event_log WHERE activity NOT IN ( SELECT activity FROM event_log WHERE resource = 'Virginia' );
SELECT activity FROM event_log WHERE activity NOT IN ( SELECT activity FROM event_log WHERE resource = 'Virginia' );
SELECT Não há informações suficientes no contexto fornecido para determinar quais ações a Virgínia ainda não tem experiência.
SELECT AVG(cost) FROM event_log WHERE activity LIKE '%rejeitada%'
SELECT AVG(cost) FROM event_log WHERE activity LIKE '%rejeitada%'
SELECT AVG(cost) FROM event_log WHERE idcase IN (SELECT DISTINCT idcase FROM event_log WHERE activity LIKE '%rejeitada%')
SELECT AVG(cost) FROM event_log WHERE idcase IN (SELECT idcase FROM event_log WHERE activity LIKE '%rejeitada%')
SELECT AVG(cost) FROM event_log WHERE idcase IN ( SELECT idcase FROM event_log WHERE activity LIKE '%rejeitada%' )
SELECT AVG(cost) FROM event_log WHERE activity = 'process travel claim' AND resource = 'rejection'
SELECT AVG(cost) FROM event_log WHERE activity LIKE '%rejeitada%'
SELECT e1.idcase, (e2.timestamp - e1.timestamp) AS duration FROM event_log e1 JOIN event_log e2 ON e1.idcase = e2.idcase WHERE e1.activity = 'Declaração aprovada pelo supervisor' AND e2.activity = 'Declaração aprovada pelo gerente' ORDER BY e1.idcase;
SELECT idcase, (JULIANDAY(MAX(timestamp)) - JULIANDAY(MIN(timestamp))) * 24 * 60 * 60 AS duration_in_seconds FROM event_log WHERE activity = 'Declaração aprovada pelo supervisor' GROUP BY idcase
SELECT e1.idcase, (e2.timestamp - e1.timestamp) AS duration FROM event_log e1 inner join event_log e2 ON e1.idcase = e2.idcase WHERE e1.activity = 'Declaração aprovada pelo supervisor' AND e2.activity = 'Declaração aprovada pelo supervisor' ORDER BY e1.idcase
SELECT e1.idcase, (e2.timestamp - e1.timestamp) AS duration FROM event_log e1 JOIN event_log e2 ON e1.idcase = e2.idcase WHERE e1.activity = 'Declaração aprovada pelo supervisor' AND e2.activity = 'Declaração aprovada pelo supervisor' ORDER BY e1.timestamp;
SELECT e1.idcase, (e2.timestamp - e1.timestamp) AS duration FROM event_log e1 inner join event_log e2 ON e1.idcase = e2.idcase WHERE e1.activity = 'Declaração aprovada pelo supervisor' AND e2.activity = 'Declaração aprovada pelo supervisor' ORDER BY e1.idcase
SELECT AVG(cost) FROM event_log WHERE activity = 'Declaração aprovada pelo supervisor'
SELECT timestamp_approved - timestamp_submitted FROM event_log WHERE activity = 'approved'
SELECT COUNT(*) FROM event_log WHERE activity = 'Declaração rejeitada pelo pré-aprovador'
SELECT COUNT(*) FROM event_log WHERE activity = 'Declaração rejeitada pelo pré-aprovador'
SELECT COUNT(*) FROM event_log WHERE activity = 'declaração rejeitada pelo pré-aprovador'
SELECT COUNT(*) FROM event_log WHERE activity = 'Declaração rejeitada pelo pré-aprovador'
SELECT COUNT(*) FROM event_log WHERE activity = 'Declaração rejeitada pelo pré-aprovador'
SELECT COUNT(*) FROM event_log WHERE activity = 'Declaração rejeitada pelo pré-aprovador'
SELECT COUNT(DISTINCT id) FROM event_log WHERE activity = 'Declaração rejeitada pelo pré-aprovador'
SELECT COUNT(DISTINCT id) FROM event_log WHERE activity = 'Declaração rejeitada pelo pré-aprovador'
SELECT idcase, timestamp FROM event_log WHERE activity = 'Fim da viagem' ORDER BY resource;
SELECT idcase, timestamp FROM event_log WHERE activity = 'Fim da viagem' ORDER BY resource;
SELECT resource, idcase, timestamp FROM event_log WHERE activity = 'Fim da viagem' ORDER BY resource, timestamp;
SELECT e1.idcase, e1.timestamp AS "Data da atividade 'Fim da viagem'" FROM event_log AS e1 INNER JOIN event_log AS e2 ON e1.idcase = e2.idcase WHERE e2.activity = 'Fim da viagem' ORDER BY e1.resource;
SELECT e1.activity, e1.timestamp, e2.resource from event_log AS e1 inner join event_log AS e2 on e1.idcase = e2.idcase WHERE e1.activity = 'Fim da viagem' and e2.activity = 'Fim da viagem' order by e2.resource
SELECT e1.idcase, e1.timestamp AS data_fim_viagem, e2.resource AS nome_funcionario_fim_viagem FROM event_log e1 JOIN event_log e2 ON e1.idcase = e2.idcase WHERE e1.activity = 'Fim da viagem' ORDER BY e2.resource;
SELECT count(*) AS "event_count", idcase FROM event_log GROUP BY idcase;
SELECT COUNT(*) AS event_count, idcase FROM event_log GROUP BY idcase;
SELECT count (*), idcase FROM event_log group by idcase
SELECT COUNT(*) AS "Event Count", idcase FROM event_log GROUP BY idcase;
SELECT idcase, COUNT(*) AS event_count FROM event_log GROUP BY idcase;
SELECT count(*) AS "Quantidade de Eventos", idcase FROM event_log GROUP BY idcase;
SELECT idcase, count(*) AS num_actions FROM event_log GROUP BY idcase
SELECT count (*), idcase FROM event_log group by idcase
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE activity = 'Fim da viagem' AND timestamp BETWEEN '2017-05-02' AND '2017-05-12';
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE activity = 'Fim da viagem' AND timestamp BETWEEN '2017-05-02' AND '2017-05-12'
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE activity = 'Fim da viagem' AND timestamp BETWEEN '2017-05-02' AND '2017-05-12'
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE activity = 'Fim da viagem' AND timestamp BETWEEN '2017-05-02' AND '2017-05-12'
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE activity = 'Fim da viagem' AND timestamp BETWEEN '2017-05-02' AND '2017-05-12'
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE activity = 'Fim da viagem' AND timestamp BETWEEN '2017-05-02' AND '2017-05-12'
SELECT COUNT(*) FROM event_log WHERE idcase IN (select idcase FROM event_log GROUP BY idcase HAVING MAX(strftime('%Y-%m-%d', timestamp)) BETWEEN '2017-05-02' AND '2017-05-12')
SELECT COUNT(*) FROM event_log WHERE activity = 'end_trip' AND timestamp BETWEEN '2017-05-02' AND '2017-05-12'
SELECT idcase, resource, id, timestamp FROM event_log WHERE activity = 'envio de lembrete' ORDER BY timestamp;
SELECT idcase, resource, id, timestamp FROM event_log WHERE activity = 'envio de lembrete' ORDER BY timestamp
SELECT event_log.activity, event_log.timestamp, event_log.id FROM event_log ORDER BY event_log.timestamp;
SELECT el.idcase, el.activity, el.resource, el.timestamp, MAX(el.timestamp) OVER (PARTITION BY el.idcase) AS max_timestamp FROM event_log AS el WHERE el.activity = 'Envio de lembrete' ORDER BY max_timestamp;
SELECT idcase, id, resource, MAX(timestamp) AS end_timestamp FROM event_log WHERE activity = 'envio de lembrete' GROUP BY idcase, id, resource ORDER BY end_timestamp DESC;
SELECT e.idcase, e.activity, e.resource, e.timestamp FROM event_log e INNER JOIN (SELECT idcase, MIN(timestamp) as timestamp FROM event_log where activity='Envio de lembrete' GROUP BY idcase order by idcase) e1 on e.idcase = e1.idcase and e.timestamp = e1.timestamp ORDER BY e.timestamp
SELECT "process_instance_id", "resource", "id", "timestamp" FROM "event_log" WHERE "activity" = 'Send Reminder' ORDER BY "timestamp" DESC;
SELECT DISTINCT resource FROM event_log ORDER BY resource
SELECT DISTINCT resource FROM event_log ORDER BY resource
SELECT DISTINCT resource FROM event_log ORDER BY resource
SELECT DISTINCT resource FROM event_log ORDER BY resource
SELECT DISTINCT resource FROM event_log ORDER BY resource
SELECT DISTINCT resource FROM event_log ORDER BY resource
SELECT DISTINCT resource FROM event_log WHERE activity = 'process statement' ORDER BY resource;
SELECT resource, COUNT(DISTINCT idcase) AS case_count FROM event_log GROUP BY resource HAVING case_count > 200 ORDER BY case_count DESC;
SELECT resource FROM event_log GROUP BY resource HAVING COUNT(DISTINCT idcase) > 200
SELECT resource FROM event_log WHERE activity = 'Travel Claim' GROUP BY resource HAVING COUNT(*) > 200
SELECT resource FROM event_log WHERE activity = 'Travel Claim' GROUP BY resource HAVING COUNT(*) > 200
SELECT resource FROM event_log GROUP BY resource HAVING COUNT(*) > 200;
SELECT DISTINCT resource FROM event_log WHERE activity = 'Travel Expense' GROUP BY resource HAVING COUNT(*) > 200 ORDER BY COUNT(*) DESC;
SELECT resource FROM event_log GROUP BY resource HAVING COUNT(*) > 200;
SELECT COUNT(*) FROM event_log
SELECT COUNT(*) FROM event_log
SELECT COUNT(DISTINCT resource) FROM event_log WHERE activity = 'process statement'
SELECT COUNT(DISTINCT resource) FROM event_log WHERE activity = 'process claim'
SELECT COUNT(DISTINCT idcase) FROM event_log
SELECT COUNT(DISTINCT resource) FROM event_log
SELECT Não há declarações com execução de atividades do mesmo tipo de forma seguida nos exemplos fornecidos.
SELECT COUNT(DISTINCT resource) FROM event_log WHERE activity = 'process statement'
SELECT COUNT(DISTINCT resource) FROM event_log WHERE activity = 'statement processing'
SELECT DISTINCT activity FROM event_log WHERE activity LIKE '%declaração%'
SELECT DISTINCT activity FROM event_log WHERE activity LIKE '%declaração%'
SELECT DISTINCT activity FROM event_log WHERE activity LIKE '%declaração%'
SELECT DISTINCT activity FROM event_log WHERE activity LIKE '%declaração%'
SELECT DISTINCT activity FROM event_log WHERE activity LIKE '%declaração%'
SELECT * FROM event_log WHERE activity LIKE '%declaração%'
SELECT DISTINCT activity FROM event_log WHERE activity LIKE '%declaração%' AND idcase IN ( SELECT idcase FROM event_log WHERE activity LIKE '%declaração de viagem%' );
SELECT As ações mais comuns no processamento de declarações são: * **Análise:** O analisador verifica a sintaxe da declaração e garante que ela esteja de acordo com as regras gramaticais da linguagem SQL. * **Otimização:** O otimizador determina o plano de execução mais eficiente para a declaração, levando em consideração fatores como índices, estatísticas e restrições. * **Execução:** O executor executa o plano de execução e retorna os resultados da consulta.
SELECT activity, AVG(cost) AS average_cost FROM event_log GROUP BY activity;
SELECT activity, AVG(cost) AS average_cost FROM event_log GROUP BY activity
SELECT activity, AVG(cost) AS average_cost FROM event_log GROUP BY activity
SELECT activity, AVG(cost) AS average_cost FROM event_log GROUP BY activity;
SELECT activity, AVG(cost) AS average_cost FROM event_log GROUP BY activity;
SELECT activity, AVG(cost) AS average_cost FROM event_log GROUP BY activity;
SELECT activity, AVG(cost) AS average_cost FROM event_log GROUP BY activity
SELECT activity, AVG(cost) AS average_cost FROM event_log GROUP BY activity;
SELECT activity, AVG(cost) AS average_cost FROM event_log GROUP BY activity;
SELECT COUNT(*) FROM event_log WHERE cost IS NULL
SELECT COUNT(*) FROM event_log WHERE cost IS NULL
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE cost IS NULL
SELECT COUNT(*) FROM event_log WHERE cost = 0
SELECT COUNT(*) FROM event_log WHERE cost IS NULL
SELECT COUNT(*) FROM event_log WHERE cost IS NULL GROUP BY idcase HAVING COUNT(*) = (SELECT COUNT(*) FROM event_log WHERE idcase = event_log.idcase)
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE cost IS NULL
SELECT COUNT(*) FROM event_log WHERE cost IS NULL
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE cost = 0
SELECT activity FROM event_log WHERE activity LIKE '%permissão%' OR activity LIKE '%declaração%'
SELECT activity FROM event_log WHERE activity LIKE '%permissão%' OR activity LIKE '%declaração%'
SELECT DISTINCT activity FROM event_log WHERE activity LIKE '%permissão%' OR activity LIKE '%declaração%'
SELECT DISTINCT activity FROM event_log WHERE activity LIKE '%permissão%' OR activity LIKE '%declaração%'
SELECT DISTINCT activity FROM event_log WHERE activity LIKE '%permissão%' OR activity LIKE '%declaração%'
SELECT activity FROM event_log WHERE activity LIKE '%permissão%' OR activity LIKE '%declaração%'
SELECT activity FROM event_log WHERE activity LIKE '%permissão%' OR activity LIKE '%declaração%'
SELECT activity FROM event_log WHERE activity LIKE '%permissão%' OR activity LIKE '%declaração%'
SELECT activity, resource FROM event_log WHERE activity LIKE 'permissão%' AND resource LIKE 'declaração%'
SELECT count(*) FROM event_log WHERE activity = 'Declaração rejeitada pelo diretor'
SELECT COUNT(*) FROM event_log WHERE activity = 'declaração rejeitada pelo diretor'
SELECT COUNT(*) FROM event_log WHERE activity = 'declaração rejeitada pelo diretor'
SELECT COUNT(*) FROM event_log WHERE activity = 'Declaração rejeitada pelo diretor';
SELECT count(*) FROM event_log WHERE activity = 'Declaração rejeitada pelo diretor'
SELECT COUNT(*) FROM event_log WHERE activity = 'Declaração rejeitada pelo diretor' AND idcase = '12345'
SELECT COUNT(*) FROM event_log WHERE activity = 'Declaração rejeitada pela direção'
SELECT AVG(cost) FROM event_log
SELECT AVG(cost) FROM event_log
SELECT AVG(cost) FROM event_log
SELECT AVG(cost) FROM event_log
SELECT avg(cost) FROM event_log
SELECT AVG(cost) FROM event_log
SELECT AVG(cost) FROM event_log
SELECT AVG(cost) FROM event_log
SELECT AVG(cost) FROM event_log WHERE activity = 'processo de negócio'
SELECT AVG(cost) FROM event_log WHERE activity = 'process_statement'
SELECT COUNT(DISTINCT idcase), resource FROM event_log GROUP BY resource
SELECT resource, COUNT(DISTINCT idcase) AS num_cases FROM event_log GROUP BY resource
SELECT resource, COUNT(DISTINCT idcase) AS case_count FROM event_log GROUP BY resource;
SELECT COUNT(DISTINCT idcase), resource FROM event_log GROUP BY resource
SELECT COUNT(DISTINCT idcase), resource FROM event_log GROUP BY resource;
SELECT resource, COUNT(DISTINCT idcase) AS case_count FROM event_log GROUP BY resource
SELECT resource, COUNT(DISTINCT idcase) AS num_cases FROM event_log GROUP BY resource
SELECT resource, COUNT(DISTINCT idcase) AS num_declaracoes FROM event_log WHERE activity = 'Declaração salva pelo funcionário' GROUP BY resource
SELECT count(*) FROM event_log WHERE resource = 'Peter'
SELECT count(*) FROM event_log WHERE resource = 'Peter'
SELECT count(*) FROM event_log WHERE resource = 'Peter'
SELECT count(*) FROM event_log WHERE resource = 'Peter'
SELECT resource, COUNT(DISTINCT idcase) AS num_cases FROM event_log GROUP BY resource HAVING COUNT(DISTINCT idcase) > 3
SELECT resource FROM event_log GROUP BY resource HAVING COUNT(*) > 3
SELECT resource from event_log GROUP BY resource HAVING COUNT(DISTINCT idcase) > 3
SELECT resource from event_log GROUP BY resource HAVING COUNT(DISTINCT idcase) > 3
SELECT person FROM event_log GROUP BY person HAVING COUNT(DISTINCT idcase) > 3
SELECT resource FROM event_log GROUP BY resource HAVING COUNT(*) > 3;
SELECT idcase, COUNT(*) AS num_events FROM event_log WHERE activity = 'Requisição de pagamento' GROUP BY idcase ORDER BY num_events ASC;
SELECT idcase, COUNT(*) AS event_count FROM event_log WHERE activity = 'Requisição de pagamento' GROUP BY idcase ORDER BY event_count ASC;
SELECT idcase FROM event_log WHERE activity LIKE '%Requisição de pagamento%' GROUP BY idcase ORDER BY COUNT(*) DESC;
SELECT idcase, COUNT(*) AS event_count FROM event_log WHERE activity = 'Requisição de pagamento' GROUP BY idcase ORDER BY event_count ASC;
SELECT idcase FROM event_log WHERE activity = 'Requisição de pagamento' GROUP BY idcase ORDER BY COUNT(*) ASC;
SELECT idcase, COUNT(*) AS event_count FROM event_log WHERE activity = 'Requisição de pagamento' GROUP BY idcase ORDER BY event_count DESC;
SELECT idcase, COUNT(*) AS num_activities FROM event_log GROUP BY idcase ORDER BY num_activities ASC;
SELECT idcase, COUNT(*) AS num_actions FROM event_log WHERE activity = 'Requisição de pagamento' GROUP BY idcase ORDER BY num_actions;
SELECT DATE(timestamp) AS date FROM event_log WHERE activity = 'Fim da viagem' OR activity = 'Declaração rejeitada pelo funcionário' ORDER BY date ASC;
SELECT idcase, timestamp FROM event_log WHERE activity IN ('Fim da viagem', 'Declaração rejeitada pelo funcionário') ORDER BY timestamp;
SELECT DISTINCT DATE(timestamp) AS data_atividade FROM event_log WHERE activity = 'Fim da viagem' OR activity = 'Declaração rejeitada pelo funcionário' ORDER BY data_atividade;
SELECT timestamp FROM event_log WHERE activity = 'Fim da viagem' OR activity = 'Declaração rejeitada pelo funcionário' ORDER BY timestamp ASC;
SELECT timestamp FROM event_log WHERE activity = 'Fim da viagem' OR activity = 'Closed' ORDER BY timestamp ASC;
SELECT DISTINCT DATE(timestamp) AS data_execucao FROM event_log WHERE activity = 'Fim da viagem' OR activity = 'Declaração rejeitada pelo funcionário' ORDER BY data_execucao ASC;
SELECT DATE(timestamp) AS date FROM event_log WHERE activity IN ('Fim da viagem', 'Declaração rejeitada por funcionário') GROUP BY date ORDER BY date ASC;
SELECT e1.timestamp AS "Data de Registro", e1.activity AS "Atividade" FROM event_log AS e1 WHERE e1.activity IN ('Fim da viagem', 'Rejeição de declaração') ORDER BY e1.timestamp ASC;
SELECT resource,COUNT(*) AS activity_count FROM event_log GROUP BY resource ORDER BY resource ASC
SELECT resource,COUNT(*) AS execution_count FROM event_log GROUP BY resource ORDER BY resource ASC
SELECT resource,COUNT(*) AS execution_count FROM event_log GROUP BY resource ORDER BY resource
SELECT COUNT(*) AS "Execuções", resource FROM event_log GROUP BY resource ORDER BY resource ASC;
SELECT resource, COUNT(*) AS activity_count FROM event_log GROUP BY resource ORDER BY resource;
SELECT resource, COUNT(*) AS num_execucoes FROM event_log GROUP BY resource ORDER BY resource;
SELECT resource,COUNT(*) AS activity_count FROM event_log GROUP BY resource ORDER BY resource
SELECT resource,COUNT(*) AS activity_count FROM event_log GROUP BY resource ORDER BY resource
SELECT resource, COUNT(*) AS activity_count FROM event_log GROUP BY resource ORDER BY resource
SELECT resource, COUNT(*) AS count_activities FROM event_log GROUP BY resource ORDER BY resource ASC;
SELECT resource, COUNT(*) AS count FROM event_log GROUP BY resource ORDER BY count DESC;
SELECT activity FROM event_log WHERE activity LIKE 'E%'
SELECT activity, COUNT(*) AS event_count FROM event_log GROUP BY activity HAVING activity LIKE 'E%'
SELECT activity FROM event_log WHERE activity LIKE 'E%'
SELECT resource FROM event_log GROUP BY resource HAVING COUNT(*) IN ( SELECT COUNT(*) FROM event_log GROUP BY resource ORDER BY COUNT(*) DESC LIMIT 10 )
SELECT activity FROM event_log WHERE activity LIKE 'E%'
SELECT activity FROM event_log WHERE activity LIKE 'E%'
SELECT DISTINCT activity FROM event_log WHERE activity LIKE 'E%'
SELECT activity FROM event_log GROUP BY activity HAVING COUNT(*) > 3;
SELECT id, activity, resource, cost FROM event_log WHERE cost BETWEEN 50 AND 400;
SELECT id, activity, resource, cost FROM event_log WHERE cost BETWEEN 50 AND 400;
SELECT id, activity, resource, cost FROM event_log WHERE cost BETWEEN 50 AND 400 ORDER BY cost;
SELECT id, activity, resource, cost FROM event_log WHERE cost BETWEEN 50 AND 400;
SELECT id, activity, resource, cost FROM event_log WHERE cost BETWEEN 50 AND 400
SELECT id, activity, resource, cost FROM event_log WHERE cost BETWEEN 50 AND 400 ORDER BY cost;
SELECT id, activity, resource, cost FROM event_log WHERE cost BETWEEN 50 AND 400;
SELECT id, activity, resource, cost FROM event_log WHERE cost BETWEEN 50 AND 400;
SELECT id, activity, resource, cost FROM event_log WHERE activity LIKE '%processamento de declaração%' AND cost BETWEEN 50 AND 400;
SELECT DISTINCT resource FROM event_log WHERE activity = 'Declaração salva pelo funcionário'
SELECT DISTINCT resource FROM event_log WHERE activity = 'Declaração salva pelo funcionário';
SELECT COUNT(DISTINCT idcase), activity FROM event_log GROUP BY activity
SELECT DISTINCT resource FROM event_log WHERE activity = 'SAVE'
SELECT DISTINCT activity FROM event_log WHERE timestamp BETWEEN '2018-01-01' AND '2018-07-01';
SELECT activity FROM event_log WHERE timestamp BETWEEN '2018-04-12 00:00:00' AND '2018-04-12 23:59:59';
SELECT DISTINCT activity FROM event_log WHERE timestamp BETWEEN '2018-01-01' AND '2018-07-01';
SELECT DISTINCT activity FROM event_log WHERE timestamp BETWEEN '2018-01-01' AND '2018-07-01';
SELECT activity FROM event_log WHERE timestamp >= '2018-04-12' AND timestamp < '2018-04-13'
SELECT activity FROM event_log WHERE idcase IN (select idcase FROM event_log GROUP BY idcase HAVING MAX(strftime('%Y-%m-%d', timestamp)) = '2018-04-12')
SELECT activity FROM event_log WHERE idcase IN (select idcase FROM event_log GROUP BY idcase HAVING MAX(strftime('%Y-%m-%d', timestamp)) = '2018-04-12')
SELECT activity FROM event_log WHERE timestamp BETWEEN '2018-10-01' AND '2018-10-03'
SELECT resource FROM event_log WHERE activity = 'statement_finalized' AND strftime('%Y-%m-%d', timestamp) = '2018-04-12';
SELECT e.id, e.activity, MAX(e.timestamp) AS end_date FROM event_log e WHERE e.activity IN ('Permissão final aprovada pelo supervisor', 'Declaração aprovada pelo supervisor') GROUP BY e.id, e.activity ORDER BY end_date;
SELECT e.id, e.activity, e.timestamp FROM event_log e WHERE e.activity IN ('Permissão final aprovada pelo supervisor', 'Declaração aprovada pelo supervisor') ORDER BY e.timestamp;
SELECT e.id, e.activity, e.timestamp AS end_time FROM event_log e WHERE e.activity IN ('Permissão final aprovada pelo supervisor', 'Declaração aprovada pelo supervisor') ORDER BY e.timestamp;
SELECT e.id, e.activity, e.timestamp FROM event_log e WHERE e.activity IN ('Permissão final aprovada pelo supervisor', 'Declaração aprovada pelo supervisor') ORDER BY e.timestamp;
SELECT e.id, e.activity, e.timestamp FROM event_log e WHERE e.activity IN ('Permissão final aprovada pelo supervisor', 'Declaração aprovada pelo supervisor') ORDER BY e.timestamp DESC;
SELECT e.id, e.activity, e.timestamp FROM event_log e WHERE e.activity IN ('Permissão final aprovada pelo supervisor', 'Declaração aprovada pelo supervisor') ORDER BY e.timestamp DESC;
SELECT e1.id, e1.activity, e1.timestamp AS end_date FROM event_log e1 INNER JOIN event_log e2 ON e1.idcase = e2.idcase WHERE e1.activity IN ('Permissão final aprovada pelo supervisor', 'Aprovação da declaração pelo supervisor') AND e2.activity = 'Início da viagem' AND e1.timestamp < e2.timestamp ORDER BY e1.timestamp DESC;
SELECT id, activity, timestamp FROM event_log WHERE activity IN ('Aprovação final de permissão', 'Aprovação de declaração por supervisor') ORDER BY timestamp
SELECT * FROM event_log WHERE cost IS NOT NULL;
SELECT * FROM event_log WHERE cost IS NOT NULL;
SELECT * FROM event_log WHERE cost IS NOT NULL
SELECT * FROM event_log WHERE cost IS NOT NULL
SELECT * FROM event_log WHERE cost IS NOT NULL
SELECT * FROM event_log WHERE cost IS NOT NULL;
SELECT * FROM event_log WHERE cost IS NOT NULL;
SELECT O custo do processamento de cada declaração não é fornecido no código fornecido.
SELECT COUNT(*) FROM event_log WHERE activity='Permissão final aprovada pelo diretor'
SELECT COUNT(*) FROM event_log WHERE activity = 'Permissão final aprovada pelo diretor'
SELECT COUNT(*) FROM event_log WHERE activity = 'Permissão final aprovada pelo diretor'
SELECT COUNT(*) FROM event_log WHERE activity = 'Permissão final aprovada pelo diretor'
SELECT COUNT(*) FROM event_log WHERE activity = 'Declaração final aprovada pelo diretor'
SELECT COUNT(*) FROM event_log WHERE activity = 'Permissão final aprovada pelo diretor';
SELECT COUNT(*) FROM event_log WHERE activity = 'Permissão final aprovada pelo diretor'
SELECT COUNT(*) FROM event_log WHERE activity = 'Permissão final aprovada pelo diretor'
SELECT COUNT(*) FROM event_log WHERE activity = 'Permissão final aprovada pelo diretor'
SELECT COUNT(*) FROM event_log WHERE activity = 'Permissão final aprovada pelo diretor';
SELECT COUNT(*) FROM event_log WHERE activity='Declaração final aprovada pelo diretor'
SELECT COUNT(*) FROM event_log WHERE activity = 'Declaração final aprovada pelo diretor'
SELECT timestamp FROM event_log WHERE activity = 'Início da viagem' AND resource LIKE '%s'
SELECT timestamp FROM event_log WHERE activity = 'Início da viagem' AND resource LIKE '%s' ORDER BY timestamp;
SELECT timestamp FROM event_log WHERE activity = 'Início da viagem' AND resource LIKE '%s'
SELECT timestamp FROM event_log WHERE activity = 'Início da viagem' AND resource LIKE '%s';
SELECT timestamp FROM event_log WHERE activity = 'Início da viagem' AND resource LIKE '%s';
SELECT timestamp FROM event_log WHERE activity = 'Início da viagem' AND resource LIKE '%s' ORDER BY timestamp;
SELECT timestamp FROM event_log WHERE activity = 'Início da viagem' AND resource LIKE '%s' ORDER BY timestamp;
SELECT timestamp FROM event_log WHERE activity = 'Início da viagem' AND resource LIKE '%s' ORDER BY timestamp;
SELECT DATE(timestamp) AS data_intervencao FROM event_log WHERE activity = 'Início da viagem' AND resource LIKE '%s' GROUP BY data_intervencao ORDER BY data_intervencao;
SELECT DATE(e1.timestamp) AS data_inicio_viagem FROM event_log AS e1 JOIN event_log AS e2 ON e1.idcase = e2.idcase WHERE e1.activity = 'Início de viagem' AND e2.activity = 'Envio de lembrete' AND e1.timestamp < e2.timestamp GROUP BY e1.idcase, e1.activity
SELECT activity, resource, SUM(cost) AS total_cost FROM event_log GROUP BY activity, resource ORDER BY total_cost DESC;
SELECT activity, resource, SUM(cost) AS total_cost FROM event_log GROUP BY activity, resource
SELECT activity, resource, SUM(cost) AS total_cost FROM event_log GROUP BY activity, resource;
SELECT activity, resource, SUM(cost) AS total_cost FROM event_log GROUP BY activity, resource;
SELECT activity, resource, SUM(cost) FROM event_log GROUP BY activity, resource;
SELECT activity, resource, SUM(cost) AS total_cost FROM event_log GROUP BY activity, resource;
SELECT activity, resource, SUM(cost) FROM event_log GROUP BY activity, resource;
SELECT activity, COUNT(*) AS count FROM event_log GROUP BY activity ORDER BY count DESC; **Atividades executadas durante o processamento das declarações:** 1. **Agrupamento por atividade:** 1 vez 2. **Contagem de ocorrências por atividade:** 1 vez 3. **Ordenação por contagem decrescente:** 1 vez
SELECT COUNT(*) FROM event_log WHERE activity IN ('Início da viagem', 'Fim da viagem')
SELECT activity, COUNT(*) AS count FROM event_log WHERE activity IN ('Início da viagem', 'Fim da viagem') GROUP BY activity;
SELECT count(*) FROM event_log WHERE activity IN ('Início da viagem', 'Fim da viagem')
SELECT COUNT(*) AS "Número de eventos" FROM event_log WHERE activity IN ('Início da viagem', 'Fim da viagem');
SELECT count(*) FROM event_log WHERE activity IN ('Início da viagem', 'Fim da viagem')
SELECT COUNT(*) AS "Quantidade de eventos" FROM event_log WHERE activity IN ('Início da viagem', 'Fim da viagem');
SELECT count(*) FROM event_log WHERE activity = 'Início da viagem' OR activity = 'Fim da viagem'
SELECT COUNT(*) FROM event_log WHERE activity IN ('Início da viagem', 'Fim da viagem')
SELECT count(*) from event_log AS e1 inner join event_log AS e2 on e1.idcase = e2.idcase WHERE e2.activity = 'Fim da viagem' and e1.activity = 'Início da viagem'
SELECT COUNT(*) FROM event_log WHERE activity = 'Início da viagem' AND idcase IN (SELECT idcase FROM event_log WHERE activity = 'Fim da viagem');
SELECT DISTINCT activity FROM event_log GROUP BY activity HAVING count(activity) > 3
SELECT activity, COUNT(*) AS count FROM event_log GROUP BY activity HAVING COUNT(*) > 3;
SELECT activity FROM event_log GROUP BY activity HAVING COUNT(activity) > 3
SELECT activity FROM event_log GROUP BY activity HAVING COUNT(*) > 3
SELECT DISTINCT activity FROM event_log GROUP BY activity HAVING count(activity) > 3
SELECT activity FROM event_log GROUP BY activity HAVING COUNT(DISTINCT idcase) > 3
SELECT activity FROM event_log GROUP BY activity HAVING COUNT(*) > 3;
SELECT activity FROM event_log GROUP BY activity HAVING COUNT(*) > 3
SELECT activity, COUNT(*) AS count_activity FROM event_log WHERE activity LIKE '%process declaration%' GROUP BY activity HAVING COUNT(*) > 3 ORDER BY count_activity DESC
SELECT activity, COUNT(*) AS count FROM event_log WHERE activity LIKE '%declarações de viagem%' GROUP BY activity HAVING COUNT(*) > 3 ORDER BY count DESC
SELECT activity, resource FROM event_log WHERE timestamp = ( SELECT MAX(timestamp) FROM event_log );
SELECT activity, resource FROM event_log WHERE timestamp = (SELECT MAX(timestamp) FROM event_log)
SELECT activity, resource FROM event_log WHERE timestamp = (SELECT MAX(timestamp) FROM event_log)
SELECT activity, resource FROM event_log ORDER BY timestamp DESC LIMIT 1;
SELECT activity, resource, MAX(timestamp) from event_log group by activity, resource
SELECT activity, resource FROM event_log WHERE id = (SELECT MAX(id) FROM event_log);
SELECT activity, resource FROM event_log ORDER BY timestamp DESC LIMIT 1;
SELECT resource, activity FROM event_log WHERE id = ( SELECT MAX(id) FROM event_log WHERE activity = 'Fim da viagem' );
SELECT resource, activity FROM event_log WHERE id = ( SELECT MAX(id) FROM event_log WHERE activity LIKE '%declarações de viagem%' );
SELECT e1.activity, e1.resource, e2.activity AS previous_activity FROM event_log AS e1 JOIN event_log AS e2 ON e1.idcase = e2.idcase WHERE e2.activity = 'Fim da viagem' AND e1.timestamp > e2.timestamp
SELECT e1.activity, e1.timestamp, e1.resource, e2.activity AS previous_activity, e2.timestamp AS previous_timestamp, e2.resource AS previous_resource FROM event_log AS e1 JOIN event_log AS e2 ON e1.idcase = e2.idcase WHERE e1.timestamp > e2.timestamp AND e2.activity = 'Fim da viagem';
SELECT e1.activity, e1.timestamp, e1.resource, e2.activity AS previous_activity, e2.timestamp AS previous_timestamp, e2.resource AS previous_resource FROM event_log AS e1 JOIN event_log AS e2 ON e1.idcase = e2.idcase WHERE e1.timestamp > e2.timestamp AND e2.activity = 'Fim da viagem';
SELECT el.activity, el.timestamp, el.resource, el.cost, el.idcase, u.name AS responsible_user FROM event_log AS el JOIN user AS u ON el.resource = u.id WHERE el.idcase IN ( SELECT idcase FROM event_log WHERE activity = 'Fim da viagem' ) AND el.timestamp > ( SELECT MAX(timestamp) FROM event_log WHERE activity = 'Fim da viagem' AND idcase IN ( SELECT idcase FROM event_log WHERE activity = 'Fim da viagem' ) ) ORDER BY el.timestamp;
SELECT el.activity, el.resource, el.timestamp, el.idcase FROM event_log el JOIN event_log el2 ON el.idcase = el2.idcase WHERE el2.activity = 'Fim da viagem' AND el.timestamp > el2.timestamp
SELECT el.activity, el.timestamp, el.resource, el.cost, el.idcase, u.name AS responsible_user FROM event_log AS el JOIN user AS u ON el.resource = u.id WHERE el.id > ( SELECT id FROM event_log WHERE activity = 'Fim da viagem' ) ORDER BY el.timestamp;
SELECT el.activity, el.timestamp, el.resource, el.cost, el.idcase, u.name AS responsible_user FROM event_log AS el JOIN "user" AS u ON el.resource = u.id WHERE el.idcase IN ( SELECT idcase FROM event_log WHERE activity = 'Fim da viagem' ) AND el.timestamp > ( SELECT MAX(timestamp) FROM event_log WHERE activity = 'Fim da viagem' ) ORDER BY el.timestamp;
SELECT el.activity, el.timestamp, el.resource, el.cost, el.idcase, u.name AS responsible_user FROM event_log AS el JOIN "user" AS u ON el.resource = u.id WHERE el.idcase IN ( SELECT idcase FROM event_log WHERE activity = 'Fim da viagem' ) AND el.timestamp > ( SELECT MAX(timestamp) FROM event_log WHERE activity = 'Fim da viagem' ) ORDER BY el.timestamp;
SELECT el.activity, el.resource FROM event_log AS el JOIN event_log AS el_fim_viagem ON el.idcase = el_fim_viagem.idcase WHERE el_fim_viagem.activity = 'Fim da viagem' AND el.timestamp > el_fim_viagem.timestamp
SELECT el.activity, el.resource FROM event_log AS el JOIN event_log AS el_fim_viagem ON el.idcase = el_fim_viagem.idcase WHERE el_fim_viagem.activity = 'Fim da viagem' AND el.timestamp > el_fim_viagem.timestamp
SELECT el.activity, el.timestamp, el.resource, el.cost, el.idcase, u.name AS responsible_user FROM event_log AS el JOIN user AS u ON el.resource = u.id WHERE el.id > ( SELECT id FROM event_log WHERE activity = 'Fim da viagem' ) ORDER BY el.timestamp;
SELECT e1.activity, e1.resource, e1.timestamp, e1.idcase FROM event_log AS e1 JOIN event_log AS e2 ON e1.idcase = e2.idcase WHERE e2.activity = 'Fim da viagem' AND e1.timestamp > e2.timestamp
SELECT e1.activity, e1.resource, e1.timestamp FROM event_log AS e1 JOIN event_log AS e2 ON e1.idcase = e2.idcase WHERE e2.activity = 'Fim da viagem' AND e1.timestamp > e2.timestamp;
SELECT e1.activity, e1.timestamp, e1.resource, e2.activity AS previous_activity, e2.timestamp AS previous_timestamp, e2.resource AS previous_resource FROM event_log AS e1 JOIN event_log AS e2 ON e1.idcase = e2.idcase WHERE e1.timestamp > e2.timestamp AND e2.activity = 'Fim da viagem';
SELECT event_log.activity, event_log.timestamp, event_log.resource, event_log.cost, event_log.idcase, users.name AS responsible_user FROM event_log JOIN users ON event_log.resource = users.id WHERE event_log.idcase IN ( SELECT idcase FROM event_log WHERE activity = 'Fim da viagem' ) AND event_log.timestamp > ( SELECT MAX(timestamp) FROM event_log WHERE idcase = event_log.idcase AND activity = 'Fim da viagem' );
SELECT e1.activity AS "Ação após o fim da viagem", e1.resource AS "Pessoa responsável" FROM event_log AS e1 JOIN event_log AS e2 ON e1.idcase = e2.idcase WHERE e2.activity = 'Fim da viagem' AND e1.timestamp > e2.timestamp ORDER BY e1.timestamp;
SELECT e1.activity AS "Ação após o fim da viagem", e1.timestamp AS "Data e hora da ação", e2.resource AS "Funcionário que executou a ação" FROM event_log AS e1 JOIN event_log AS e2 ON e1.idcase = e2.idcase WHERE e2.activity = 'Fim da viagem' AND e1.timestamp > e2.timestamp ORDER BY e1.idcase, e1.timestamp;
SELECT resource, COUNT(*) AS event_count FROM event_log WHERE activity <> 'Fim da viagem' GROUP BY resource;
SELECT resource, COUNT(*) AS event_count FROM event_log WHERE activity <> 'Fim da viagem' GROUP BY resource;
SELECT resource, COUNT(*) AS event_count FROM event_log WHERE activity <> 'Fim da viagem' GROUP BY resource;
SELECT resource, COUNT(*) AS event_count FROM event_log WHERE activity <> 'Fim da viagem' GROUP BY resource;
SELECT resource, COUNT(*) AS event_count FROM event_log WHERE activity <> 'Fim da viagem' GROUP BY resource;
SELECT resource, COUNT(*) AS num_events FROM event_log WHERE activity <> 'Fim da viagem' GROUP BY resource;
SELECT resource, COUNT(*) AS event_count FROM event_log WHERE activity <> 'Fim da viagem' GROUP BY resource;
SELECT resource, COUNT(*) AS event_count FROM event_log WHERE activity <> 'Fim da viagem' GROUP BY resource;
SELECT resource, COUNT(*) AS event_count FROM event_log WHERE activity <> 'Fim da viagem' GROUP BY resource;
SELECT resource, COUNT(*) AS event_count FROM event_log WHERE activity <> 'Fim da viagem' GROUP BY resource;
SELECT resource, COUNT(*) AS num_events FROM event_log WHERE activity <> 'Fim da viagem' GROUP BY resource;
SELECT resource, COUNT(*) AS event_count FROM event_log WHERE activity <> 'Fim da viagem' GROUP BY resource;
SELECT resource, COUNT(*) AS num_events FROM event_log WHERE activity <> 'Fim da viagem' GROUP BY resource;
SELECT resource, COUNT(*) AS num_events FROM event_log WHERE activity <> 'Fim da viagem' GROUP BY resource;
SELECT resource, COUNT(*) AS event_count FROM event_log WHERE activity <> 'Fim da viagem' GROUP BY resource;
SELECT resource, COUNT(*) AS event_count FROM event_log WHERE activity <> 'Fim da viagem' GROUP BY resource;
SELECT resource, COUNT(*) AS event_count FROM event_log WHERE activity <> 'Fim da viagem' GROUP BY resource;
SELECT resource, COUNT(*) AS event_count FROM event_log WHERE activity <> 'Fim da viagem' GROUP BY resource;
SELECT resource, count(*) AS event_count FROM event_log WHERE activity <> 'Fim da viagem' GROUP BY resource;
SELECT resource, COUNT(*) AS event_count FROM event_log WHERE activity <> 'Fim da viagem' GROUP BY resource;
SELECT resource, COUNT(*) AS event_count FROM event_log WHERE activity <> 'Fim da viagem' GROUP BY resource;
SELECT resource, COUNT(*) AS event_count FROM event_log WHERE activity <> 'Fim da viagem' GROUP BY resource;
SELECT resource, COUNT(*) AS event_count FROM event_log WHERE activity <> 'Fim da viagem' GROUP BY resource;
SELECT resource, COUNT(*) AS event_count FROM event_log WHERE activity <> 'Fim da viagem' GROUP BY resource;
SELECT resource, COUNT(*) AS event_count FROM event_log WHERE activity <> 'Fim da viagem' GROUP BY resource;
SELECT resource, COUNT(*) AS event_count FROM event_log WHERE activity <> 'Fim da viagem' GROUP BY resource;
SELECT resource, COUNT(*) AS event_count FROM event_log WHERE activity <> 'Fim da viagem' GROUP BY resource;
SELECT resource, COUNT(*) AS event_count FROM event_log WHERE activity <> 'Fim da viagem' GROUP BY resource;
SELECT COUNT(*) FROM event_log WHERE activity = 'Process Travel Claim' AND resource NOT IN ( SELECT resource FROM event_log WHERE activity = 'End Travel' );
SELECT e1.resource, COUNT(e1.activity) AS "Número de ações" FROM event_log AS e1 INNER JOIN event_log AS e2 ON e1.idcase = e2.idcase WHERE e2.activity = 'Fim da viagem' AND e1.timestamp > e2.timestamp GROUP BY e1.resource
SELECT idcase FROM event_log GROUP BY idcase ORDER BY MIN(timestamp) DESC;
SELECT idcase FROM event_log GROUP BY idcase ORDER BY MIN(timestamp) DESC;
SELECT idcase FROM event_log ORDER BY timestamp DESC
SELECT idcase, MIN(timestamp) AS start_time FROM event_log GROUP BY idcase ORDER BY start_time DESC
SELECT idcase FROM event_log WHERE activity = 'Início da viagem' ORDER BY timestamp
SELECT idcase, MIN(timestamp) AS first_timestamp FROM event_log WHERE activity = 'Travel Declaration' GROUP BY idcase ORDER BY first_timestamp;
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE activity = 'Requisição de pagamento'
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE activity = 'Requisição de pagamento'
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE activity = 'Requisição de pagamento'
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE activity = 'Requisição de pagamento'
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE activity = 'Requisição de pagamento'
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE activity = 'Requisição de pagamento'
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE activity = 'Requisição de pagamento'
SELECT idcase FROM event_log WHERE activity='Declaração final aprovada pelo diretor' ORDER BY timestamp DESC LIMIT 1
SELECT e.resource FROM event_log e INNER JOIN (SELECT idcase, MAX(timestamp) as timestamp FROM event_log where activity='Declaração final aprovada pelo diretor' GROUP BY idcase order by idcase) e1 on e.idcase = e1.idcase and e.timestamp = e1.timestamp
SELECT "idcase" FROM "event_log" WHERE "activity" = 'Declaração final aprovada pelo diretor' ORDER BY "timestamp" DESC LIMIT 1
SELECT "idcase" FROM "event_log" WHERE "activity" = 'Declaração final aprovada pelo diretor' ORDER BY "timestamp" DESC LIMIT 1
SELECT idcase FROM event_log WHERE activity='Declaração final aprovada pelo diretor' ORDER BY timestamp DESC LIMIT 1
SELECT e.idcase FROM event_log e INNER JOIN (SELECT idcase, MAX(timestamp) as timestamp FROM event_log where activity='Declaração final aprovada pelo diretor' GROUP BY idcase order by idcase) e1 on e.idcase = e1.idcase and e.timestamp = e1.timestamp
SELECT e.idcase, COUNT(*) FROM event_log e INNER JOIN (SELECT idcase, MIN(timestamp) as timestamp FROM event_log where activity='Declaração final aprovada pelo diretor' GROUP BY idcase order by idcase) e1 on e.idcase = e1.idcase and e.timestamp < e1.timestamp GROUP BY e.idcase
SELECT resource, count(*) AS count_activity FROM event_log WHERE activity = 'Declaração aprovada pela administração' GROUP BY resource ORDER BY count_activity DESC LIMIT 1;
SELECT resource, count(*) AS count FROM event_log WHERE activity = 'Declaração aprovada pela administração' GROUP BY resource ORDER BY count DESC LIMIT 1
SELECT resource, COUNT(*) AS "count" FROM event_log WHERE activity = 'Declaração aprovada pela administração' GROUP BY resource ORDER BY "count" DESC LIMIT 1
SELECT resource, count(*) AS event_count FROM event_log WHERE activity = 'Declaração aprovada pela administração' GROUP BY resource ORDER BY event_count DESC LIMIT 1
SELECT resource, count(*) AS count_activity FROM event_log WHERE activity = 'Declaração aprovada pela administração' GROUP BY resource ORDER BY count_activity DESC LIMIT 1
SELECT resource, count(*) AS "Número de aprovações" FROM event_log WHERE activity = 'Declaração aprovada pela administração' GROUP BY resource ORDER BY "Número de aprovações" DESC LIMIT 1;
SELECT resource, count(*) AS num_declaracoes_aprovadas FROM event_log WHERE activity = 'Declaração aprovada pela administração' GROUP BY resource ORDER BY num_declaracoes_aprovadas DESC LIMIT 1;
SELECT resource, COUNT(*) FROM ( SELECT resource, activity, ROW_NUMBER() OVER (PARTITION BY resource ORDER BY timestamp) AS row_num FROM event_log ) AS subquery WHERE row_num = 1 GROUP BY resource
SELECT resource,COUNT(*) FROM ( SELECT resource,activity,ROW_NUMBER() OVER (PARTITION BY idcase ORDER BY timestamp) AS row_num FROM event_log ) AS subquery WHERE row_num = 1 GROUP BY resource
SELECT COUNT(*) AS "Quantidade de Execuções" FROM event_log WHERE activity = ( SELECT activity FROM event_log WHERE idcase = event_log.idcase ORDER BY timestamp LIMIT 1 ) GROUP BY resource;
SELECT resource, COUNT(*) AS count_first_events FROM event_log WHERE idcase IN ( SELECT idcase FROM event_log GROUP BY idcase ORDER BY timestamp ASC LIMIT 1 ) GROUP BY resource
SELECT resource, COUNT(*) AS first_activity_count FROM ( SELECT resource, activity, ROW_NUMBER() OVER (PARTITION BY idcase ORDER BY timestamp) AS activity_order FROM event_log ) AS subquery WHERE activity_order = 1 GROUP BY resource;
SELECT COUNT(DISTINCT id) AS "Número de Declarações" FROM event_log WHERE activity = 'Primeira Ação' GROUP BY resource
SELECT resource, COUNT(*) AS num_of_statement_processing_initiations FROM event_log WHERE activity = 'statement_processing_initiation' GROUP BY resource
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE activity LIKE '%aprovada%'
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE activity LIKE '%aprovada%'
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE activity LIKE '%aprovada%'
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE activity LIKE '%aprovada%'
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE activity LIKE '%aprovada%'
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE activity LIKE '%aprovada%'
SELECT count(DISTINCT idcase) FROM event_log WHERE activity LIKE '%aprovada%'
SELECT count(DISTINCT idcase) FROM event_log WHERE activity LIKE '%aprovada%'
SELECT DATE(timestamp) AS date, COUNT(DISTINCT idcase) AS num_cases FROM event_log WHERE activity LIKE '%rejeitada%' GROUP BY date ORDER BY date;
SELECT DATE(timestamp) AS day, COUNT(DISTINCT idcase) AS num_cases FROM event_log WHERE activity LIKE '%rejeitada%' GROUP BY day ORDER BY day;
SELECT DATE(timestamp) AS day, COUNT(DISTINCT idcase) AS num_instances FROM event_log WHERE activity LIKE '%rejeitada%' GROUP BY day ORDER BY day;
SELECT DATE(timestamp) AS day, COUNT(DISTINCT idcase) AS num_cases FROM event_log WHERE activity LIKE '%rejeitada%' GROUP BY day ORDER BY day;
SELECT DATE(timestamp) AS date, COUNT(DISTINCT idcase) AS rejected_cases FROM event_log WHERE activity LIKE '%rejeitada%' GROUP BY date;
SELECT DATE(timestamp) AS date, COUNT(DISTINCT idcase) AS rejected_cases FROM event_log WHERE activity LIKE '%rejeitada%' GROUP BY date ORDER BY date;
SELECT DATE(timestamp) AS date, COUNT(DISTINCT idcase) AS rejected_cases FROM event_log WHERE activity LIKE '%rejeitada%' GROUP BY date ORDER BY date;
SELECT DATE(timestamp) AS day, COUNT(DISTINCT idcase) AS num_rejections FROM event_log WHERE activity LIKE '%rejeitada%' GROUP BY day ORDER BY day;
SELECT idcase, strftime('%s', MAX(timestamp)) - strftime('%s', MIN(timestamp)) AS duration FROM event_log GROUP BY idcase HAVING COUNT(*) >= 20 ORDER BY duration DESC LIMIT 5;
SELECT idcase, COUNT(*) AS event_count, strftime('%s', MAX(timestamp)) - strftime('%s', MIN(timestamp)) AS duration_seconds FROM event_log GROUP BY idcase HAVING event_count >= 20 ORDER BY event_count DESC LIMIT 5;
SELECT idcase, COUNT(*) AS event_count, MAX(timestamp) - MIN(timestamp) AS duration FROM event_log GROUP BY idcase ORDER BY event_count DESC LIMIT 5;
SELECT idcase, COUNT(*) AS event_count, MAX(timestamp) - MIN(timestamp) AS duration FROM event_log GROUP BY idcase ORDER BY event_count DESC LIMIT 5;
SELECT idcase, COUNT(*) AS num_execucoes, MAX(timestamp) - MIN(timestamp) AS duracao FROM event_log GROUP BY idcase ORDER BY num_execucoes DESC LIMIT 5;
SELECT strftime('%s', MAX(timestamp)) - strftime('%s', MIN(timestamp)) AS duration, idcase FROM event_log WHERE idcase IN ( SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(*) >= 20 ORDER BY COUNT(*) DESC LIMIT 5 ) GROUP BY idcase ORDER BY duration DESC LIMIT 5;
SELECT strftime('%s', MAX(timestamp)) - strftime('%s', MIN(timestamp)) AS duration, idcase FROM event_log WHERE idcase IN ( SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(*) >= 20 ORDER BY COUNT(*) DESC LIMIT 5 ) GROUP BY idcase ORDER BY duration DESC LIMIT 5;
SELECT resource, count(*) AS num_actions, SUM(timestamp) AS total_duration FROM event_log GROUP BY resource ORDER BY num_actions DESC LIMIT 5;
SELECT activity, SUM(cost) AS total_cost FROM event_log GROUP BY activity ORDER BY total_cost DESC LIMIT 5;
SELECT strftime('%s', MAX(timestamp)) - strftime('%s', MIN(timestamp)), idcase FROM event_log WHERE idcase IN ( SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(*) >= 20 ORDER BY COUNT(*) DESC LIMIT 5 ) GROUP BY idcase;
SELECT idcase, COUNT(*) AS event_count FROM event_log GROUP BY idcase HAVING COUNT(*) >= 20 ORDER BY event_count DESC LIMIT 5;
SELECT idcase, COUNT(*) AS num_events, MAX(timestamp) - MIN(timestamp) AS duration FROM event_log GROUP BY idcase HAVING COUNT(*) > 20 ORDER BY num_events DESC LIMIT 5;
SELECT idcase, MAX(timestamp) - MIN(timestamp) AS duration FROM event_log GROUP BY idcase HAVING COUNT(*) >= 20 ORDER BY duration DESC LIMIT 5;
SELECT idcase, COUNT(*) AS event_count, MAX(timestamp) - MIN(timestamp) AS duration FROM event_log GROUP BY idcase HAVING COUNT(*) >= 20 ORDER BY event_count DESC LIMIT 5;
SELECT idcase, COUNT(*) AS event_count, MAX(timestamp) - MIN(timestamp) AS execution_time FROM event_log GROUP BY idcase HAVING COUNT(*) >= 20 ORDER BY event_count DESC LIMIT 5;
SELECT idcase, MAX(strftime('%s', timestamp)) - MIN(strftime('%s', timestamp)) AS duration FROM event_log GROUP BY idcase ORDER BY duration DESC LIMIT 5
SELECT strftime('%s', MAX(timestamp)) - strftime('%s', MIN(timestamp)), idcase FROM event_log WHERE idcase IN ( SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(*) >= 20 ) GROUP BY idcase ORDER BY strftime('%s', MAX(timestamp)) - strftime('%s', MIN(timestamp)) DESC LIMIT 5;
SELECT DISTINCT idcase FROM event_log WHERE activity = 'Requisição de pagamento'
SELECT resource, COUNT(*) AS count FROM event_log WHERE activity = 'Fim da viagem' OR activity = 'Pagamento efetuado' GROUP BY resource ORDER BY count DESC LIMIT 10;
SELECT DISTINCT idcase FROM event_log WHERE activity = 'Requisição de pagamento'
SELECT DISTINCT idcase FROM event_log WHERE idcase NOT IN ( SELECT idcase FROM event_log WHERE activity = 'Requisição de pagamento' ) ORDER BY timestamp DESC LIMIT 10;
SELECT DISTINCT idcase FROM event_log WHERE activity <> 'Requisição de pagamento' ORDER BY timestamp DESC LIMIT 10;
SELECT DISTINCT idcase FROM event_log WHERE idcase NOT IN ( SELECT idcase FROM event_log WHERE activity = 'Requisição de pagamento' ) ORDER BY timestamp DESC LIMIT 10;
SELECT DISTINCT idcase FROM event_log WHERE idcase NOT IN ( SELECT idcase FROM event_log WHERE activity = 'Requisição de pagamento' ) ORDER BY timestamp DESC LIMIT 10;
SELECT DISTINCT idcase FROM event_log WHERE activity = 'Requisição de pagamento';
SELECT idcase FROM event_log WHERE activity <> 'Requisição de pagamento' GROUP BY idcase ORDER BY MAX(timestamp) DESC LIMIT 10;
SELECT DISTINCT idcase FROM event_log WHERE idcase NOT IN ( SELECT idcase FROM event_log WHERE activity = 'Requisição de pagamento' ) ORDER BY timestamp DESC LIMIT 10;
SELECT DISTINCT idcase FROM event_log WHERE idcase NOT IN ( SELECT idcase FROM event_log WHERE activity = 'Requisição de pagamento' ) ORDER BY timestamp DESC LIMIT 10;
SELECT DISTINCT idcase FROM event_log WHERE idcase NOT IN ( SELECT idcase FROM event_log WHERE activity = 'Requisição de pagamento' );
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(*) <= 10
SELECT idcase from event_log GROUP BY idcase HAVING COUNT(*) <= 10
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(*) <= 10
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(*) <= 10;
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(*) <= 10;
SELECT idcase FROM event_log GROUP BY idcase HAVING count(*) <= 10
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(*) <= 10
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(*) <= 10
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(*) <= 10
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(*) <= 10
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(*) <= 10;
SELECT idcase FROM event_log GROUP BY idcase HAVING count(*) <= 10
SELECT AVG(cost) FROM event_log WHERE activity = 'Pagamento efetuado' AND timestamp < '2018-01-01'
SELECT AVG(cost) FROM event_log WHERE activity = 'Pagamento efetuado' AND timestamp < '2018-01-01'
SELECT AVG(cost) FROM event_log WHERE activity = 'Pagamento efetuado' AND timestamp < '2018-01-01'
SELECT AVG(cost) FROM event_log WHERE activity = 'Pagamento efetuado' AND timestamp < '2018-01-01'
SELECT AVG(cost) FROM event_log WHERE activity = 'Pagamento efetuado' AND timestamp < '2018-01-01'
SELECT AVG(cost) FROM event_log WHERE activity = 'Pagamento efetuado' AND timestamp < '2018-01-01'
SELECT AVG(cost) FROM event_log WHERE activity = 'Pagamento efetuado' AND timestamp < '2018-01-01'
SELECT AVG(cost) FROM event_log WHERE activity = 'Pagamento efetuado' AND timestamp < '2018-01-01'
SELECT AVG(cost) FROM event_log WHERE activity = 'Pagamento efetuado' AND timestamp < '2018-01-01'
SELECT idcase, COUNT(*) AS num_execucoes FROM event_log WHERE activity LIKE 'permissão%' GROUP BY idcase;
SELECT idcase, count(*) as num_permissoes from event_log where activity like 'permissão%' GROUP BY idcase
SELECT idcase, COUNT(*) AS num_permissoes FROM event_log WHERE activity LIKE 'permissão%' GROUP BY idcase
SELECT idcase, count(*) as num_permissoes from event_log where activity like 'permissão%' GROUP BY idcase
SELECT event_log.idcase, COUNT(event_log.id) AS num_permissao_events FROM event_log WHERE event_log.activity LIKE '%permissão%' GROUP BY event_log.idcase
SELECT idcase, COUNT(*) AS num_permissoes FROM event_log WHERE activity LIKE 'permissão%' GROUP BY idcase;
SELECT count(DISTINCT idcase) AS "Quantidade de Casos" FROM event_log WHERE activity = 'permissão' GROUP BY idcase
SELECT event_log.idcase, COUNT(*) AS num_permissao_events FROM event_log WHERE event_log.activity LIKE '%permissão%' GROUP BY event_log.idcase
SELECT COUNT(*) AS "Número de permissões" FROM event_log WHERE activity = 'Permissão registrada' GROUP BY idcase
SELECT activity, COUNT(*) AS count FROM event_log WHERE activity LIKE 'permissão%' GROUP BY activity;
SELECT count(DISTINCT idcase), resource FROM event_log WHERE activity = 'Declaração rejeitada pelo supervisor' GROUP BY resource
SELECT count(DISTINCT idcase), resource FROM event_log WHERE activity = 'Declaração rejeitada pelo supervisor' GROUP BY resource
SELECT count(DISTINCT idcase), resource FROM event_log WHERE activity = 'Declaração rejeitada pelo supervisor' GROUP BY resource
SELECT count(DISTINCT idcase), resource FROM event_log WHERE activity = 'Declaração rejeitada pelo supervisor' GROUP BY resource
SELECT count(DISTINCT idcase), resource FROM event_log WHERE activity = 'Declaração rejeitada pelo supervisor' GROUP BY resource
SELECT count(DISTINCT idcase), resource FROM event_log WHERE activity = 'Declaração rejeitada pelo supervisor' GROUP BY resource
SELECT resource, COUNT(DISTINCT idcase) AS num_declaracoes FROM event_log WHERE activity LIKE '%rejeição%' AND resource IN ( SELECT resource FROM event_log WHERE activity LIKE '%supervisor%' ) GROUP BY resource;
SELECT COUNT(DISTINCT e1.idcase) AS "Número de declarações rejeitadas", e1.resource AS "Supervisor" FROM event_log e1 WHERE e1.activity = 'Declaração rejeitada pelo supervisor' GROUP BY e1.resource ORDER BY "Número de declarações rejeitadas" DESC;
SELECT count(DISTINCT idcase), activity FROM event_log GROUP BY activity
SELECT activity, COUNT(DISTINCT idcase) AS case_count FROM event_log GROUP BY activity ORDER BY case_count DESC;
SELECT count(DISTINCT idcase), activity FROM event_log GROUP BY activity
SELECT count(DISTINCT idcase), activity FROM event_log GROUP BY activity
SELECT count(DISTINCT idcase), activity FROM event_log GROUP BY activity
SELECT activity, COUNT(DISTINCT idcase) AS case_count FROM event_log GROUP BY activity;
SELECT activity, COUNT(DISTINCT idcase) AS num_statements FROM event_log GROUP BY activity ORDER BY num_statements DESC
SELECT activity, COUNT(*) AS count FROM event_log GROUP BY activity ORDER BY count DESC;
SELECT e1.activity FROM event_log e1 JOIN event_log e2 ON e1.idcase = e2.idcase WHERE e1.activity LIKE 'R%' AND e1.timestamp > ( SELECT MAX(timestamp) FROM event_log WHERE activity LIKE 'D%' )
SELECT event_log.activity FROM event_log WHERE event_log.activity LIKE 'R%' AND event_log.timestamp > ( SELECT MAX(event_log.timestamp) FROM event_log WHERE event_log.activity LIKE 'D%' );
SELECT * FROM event_log WHERE activity LIKE 'R%' AND timestamp > ( SELECT MAX(timestamp) FROM event_log WHERE activity LIKE 'D%' );
SELECT * FROM event_log WHERE activity LIKE 'R%' AND timestamp > ( SELECT MAX(timestamp) FROM event_log WHERE activity LIKE 'D%' );
SELECT resource, COUNT(*) AS event_count FROM event_log GROUP BY resource ORDER BY event_count DESC;
SELECT resource FROM event_log GROUP BY resource HAVING COUNT(*) IN ( SELECT COUNT(*) FROM event_log GROUP BY resource ORDER BY COUNT(*) DESC LIMIT 10 )
SELECT **Ações mais comuns no processamento de declarações:** * **Seleção:** Recuperar dados de uma tabela. * **Inserção:** Adicionar novos dados a uma tabela. * **Atualização:** Modificar dados existentes em uma tabela. * **Exclusão:** Remover dados de uma tabela. * **Criação de tabela:** Criar uma nova tabela. * **Modificação de tabela:** Alterar a estrutura de uma tabela existente. * **Exclusão de tabela:** Remover uma tabela existente. * **Criação de índice:** Criar um índice para melhorar o desempenho das consultas. * **Exclusão de índice:** Remover um índice existente. * **Criação de procedimento armazenado:** Criar um procedimento armazenado para executar uma tarefa específica. * **Exclusão de procedimento armazenado:** Remover um procedimento armazenado existente.
SELECT * FROM event_log WHERE activity LIKE 'R%' AND timestamp > ( SELECT MAX(timestamp) FROM event_log WHERE activity LIKE 'D%' );
SELECT resource,activity,COUNT(*) FROM event_log GROUP BY resource,activity
SELECT resource, activity, COUNT(*) AS execution_count FROM event_log GROUP BY resource, activity ORDER BY resource, execution_count DESC;
SELECT resource, activity, COUNT(*) AS count FROM event_log GROUP BY resource, activity
SELECT activity, resource, COUNT(*) AS count FROM event_log GROUP BY activity, resource ORDER BY count DESC;
SELECT activity, resource, COUNT(*) FROM event_log GROUP BY activity, resource;
SELECT e.idcase, e.activity, e.cost FROM event_log AS e GROUP BY e.idcase, e.activity ORDER BY e.idcase, e.activity;
SELECT activity, COUNT(*) AS count_activity FROM event_log GROUP BY activity ORDER BY count_activity DESC
SELECT activity FROM event_log WHERE timestamp BETWEEN '2018-01-01' AND '2018-06-30'
SELECT activity FROM event_log WHERE timestamp BETWEEN '2018-01-01' AND '2018-06-30'
SELECT activity FROM event_log WHERE timestamp BETWEEN '2018-01-01' AND '2018-06-30' GROUP BY activity
SELECT COUNT(*), activity FROM event_log WHERE timestamp BETWEEN '2018-01-01' AND '2018-07-31' GROUP BY activity
SELECT DISTINCT activity FROM event_log WHERE timestamp BETWEEN '2018-01-01' AND '2018-06-30'
SELECT activity FROM event_log WHERE timestamp BETWEEN '2018-01-01' AND '2018-06-30'
SELECT activity, COUNT(DISTINCT idcase) FROM event_log WHERE idcase IN ( SELECT idcase FROM event_log GROUP BY idcase HAVING strftime('%Y-%m-%d', MAX(timestamp)) BETWEEN '2018-01-01' AND '2018-06-30' ) GROUP BY activity;
SELECT DISTINCT idcase FROM event_log WHERE resource = 'Wayne' ORDER BY idcase
SELECT idcase, resource, count(*) FROM event_log WHERE cost IS NULL GROUP BY idcase, resource
SELECT idcase, resource, count(*) FROM event_log WHERE resource = 'Wayne' GROUP BY idcase, resource ORDER BY idcase
SELECT DISTINCT idcase FROM event_log WHERE resource = 'Wayne' ORDER BY idcase;
SELECT DISTINCT idcase FROM event_log WHERE resource = 'Wayne' ORDER BY idcase
SELECT DISTINCT idcase FROM event_log WHERE resource = 'Wayne' ORDER BY idcase
SELECT DISTINCT idcase FROM event_log WHERE resource = 'Wayne' ORDER BY idcase
SELECT DISTINCT idcase FROM event_log WHERE resource = 'Wayne' ORDER BY idcase
SELECT DISTINCT idcase FROM event_log WHERE activity = 'Declaração salva pelo funcionário' AND resource = 'Wayne' ORDER BY idcase
SELECT idcase FROM event_log where resource = 'Alexis' GROUP by idcase
SELECT activity, COUNT(DISTINCT idcase) AS case_count FROM event_log WHERE timestamp BETWEEN '2018-03-12 00:00:00' AND '2018-03-12 23:59:59' GROUP BY activity
SELECT activity, count(DISTINCT idcase) FROM event_log WHERE idcase IN (SELECT idcase FROM event_log WHERE timestamp >= '2018-03-12' AND timestamp <= '2018-03-12') GROUP BY activity
SELECT activity, COUNT(DISTINCT idcase) AS case_count FROM event_log WHERE idcase IN ( SELECT idcase FROM event_log WHERE timestamp >= '2018-03-12' AND timestamp < '2018-03-13' ) GROUP BY activity ORDER BY case_count DESC;
SELECT activity, COUNT(DISTINCT idcase) AS case_count FROM event_log WHERE idcase IN ( SELECT idcase FROM event_log WHERE activity = 'Finalizado' AND timestamp >= '2018-03-12' ) GROUP BY activity ORDER BY case_count DESC;
SELECT activity, COUNT(DISTINCT idcase) AS case_count FROM ( SELECT idcase, activity, timestamp, LEAD(timestamp) OVER (PARTITION BY idcase ORDER BY timestamp) AS next_timestamp FROM event_log ) AS subquery WHERE next_timestamp BETWEEN '2018-03-12' AND '2018-03-13' GROUP BY activity ORDER BY case_count DESC;
SELECT activity, COUNT(DISTINCT idcase) AS case_count FROM event_log WHERE idcase IN ( SELECT idcase FROM event_log WHERE activity = 'Finalização do caso' AND timestamp LIKE '2018-03-12%' ) GROUP BY activity ORDER BY case_count DESC;
SELECT COUNT(*), activity FROM event_log WHERE timestamp < '2018-03-12' AND activity IN ('process', 'finalize') GROUP BY activity
SELECT activity, COUNT(DISTINCT idcase) AS count_cases FROM (SELECT idcase, activity, timestamp, LEAD(timestamp) OVER (PARTITION BY idcase ORDER BY timestamp) AS next_timestamp FROM event_log) WHERE next_timestamp BETWEEN '2018-03-12' AND '2018-03-13' GROUP BY activity
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE activity LIKE 'permissão%' AND idcase IN (SELECT idcase FROM event_log WHERE activity LIKE 'permissão%' ORDER BY timestamp ASC LIMIT 1)
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE activity LIKE 'permissão%'
SELECT count(DISTINCT idcase) FROM event_log WHERE activity IN (SELECT activity FROM event_log WHERE activity LIKE 'permissão%')
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE id IN ( SELECT MIN(id) FROM event_log WHERE activity LIKE 'permissão%' GROUP BY idcase )
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE id IN (SELECT MIN(id) FROM event_log GROUP BY idcase) AND activity LIKE 'permissão%'
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE activity LIKE 'permissão%' AND row_number() OVER (PARTITION BY idcase ORDER BY timestamp) = 1
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE activity LIKE 'permissão%' AND activity LIKE '%start%';
SELECT COUNT(*) FROM event_log WHERE activity LIKE '%permissão%' AND idcase IN (SELECT idcase FROM event_log WHERE activity LIKE '%início%')
SELECT COUNT(*) FROM event_log WHERE activity LIKE '%permissão%' AND resource LIKE '%declaração de viagem%';
SELECT DISTINCT e.idcase FROM event_log AS e WHERE e.activity NOT IN ('Requisição de pagamento', 'Pagamento efetuado')
SELECT DISTINCT idcase FROM event_log WHERE activity NOT IN ('Requisição de pagamento', 'Pagamento efetuado')
SELECT DISTINCT e.idcase FROM event_log AS e WHERE e.activity NOT IN ('Requisição de pagamento', 'Pagamento efetuado')
SELECT DISTINCT idcase FROM event_log WHERE activity NOT IN ('Requisição de pagamento', 'Pagamento efetuado')
SELECT DISTINCT e.idcase FROM event_log AS e WHERE e.activity NOT IN ('Requisição de pagamento', 'Pagamento efetuado')
SELECT DISTINCT idcase FROM event_log WHERE activity NOT IN ('Requisição de pagamento', 'Pagamento efetuado')
SELECT DISTINCT idcase FROM event_log WHERE activity NOT IN ('Requisição de pagamento', 'Pagamento efetuado');
SELECT DISTINCT idcase FROM event_log WHERE activity NOT IN ('Requisição de pagamento', 'Pagamento efetuado');
SELECT DISTINCT idcase FROM event_log WHERE activity NOT IN ('Requisição de pagamento', 'Pagamento efetuado')
SELECT DISTINCT idcase FROM event_log WHERE activity NOT IN ('Requisição de pagamento', 'Pagamento efetuado')
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE idcase NOT IN (SELECT DISTINCT idcase FROM event_log where activity IN ('Pagamento efetuado', 'Requisição de pagamento'))
SELECT event_log.activity FROM event_log JOIN event_log AS payment_log ON event_log.idcase = payment_log.idcase WHERE event_log.activity = 'Requisição de pagamento' AND payment_log.activity = 'Pagamento efetuado' AND event_log.timestamp < payment_log.timestamp;
SELECT timestamp, activity, resource FROM event_log WHERE activity = 'Início da viagem' OR activity = 'Declaração requisitada pelo funcionário' ORDER BY timestamp, resource;
SELECT * FROM event_log WHERE activity IN ('Início da viagem', 'Declaração requisitada pelo funcionário') ORDER BY timestamp ASC, resource ASC;
SELECT * FROM event_log WHERE activity IN ('Início da viagem', 'Declaração requisitada pelo funcionário') ORDER BY timestamp ASC, resource ASC;
SELECT activity, resource, timestamp FROM event_log WHERE activity IN ('início da viagem', 'declaração requisitada pelo funcionário') ORDER BY timestamp, resource;
SELECT * FROM event_log WHERE activity IN ('Início da viagem', 'Declaração requisitada pelo funcionário') ORDER BY timestamp ASC, resource ASC;
SELECT * FROM event_log WHERE activity = 'Início da viagem' OR activity = 'Declaração requisitada pelo funcionário' ORDER BY timestamp ASC, resource ASC;
SELECT * FROM event_log WHERE activity IN ('Início da viagem', 'Declaração requisitada pelo funcionário') ORDER BY timestamp, resource;
SELECT * FROM event_log WHERE activity IN ('Início da viagem', 'Declaração requisitada pelo funcionário') ORDER BY timestamp, resource;
SELECT * FROM event_log WHERE activity IN ('Início da viagem', 'Declaração requisitada pelo funcionário') ORDER BY timestamp, resource;
SELECT event_log.id, event_log.activity, event_log.timestamp, event_log.resource, event_log.cost, event_log.idcase FROM event_log WHERE event_log.activity IN ('Start Trip', 'Request Statement') ORDER BY event_log.timestamp, event_log.resource;
SELECT event_log.idcase, event_log.resource, event_log.id, event_log.timestamp FROM event_log WHERE event_log.activity = 'Envio de lembrete' ORDER BY event_log.timestamp;
SELECT resource, COUNT(*) AS count FROM event_log WHERE activity = 'Declaração salva pelo funcionário' GROUP BY resource ORDER BY resource;
SELECT resource, COUNT(*) AS count FROM event_log WHERE activity = 'Declaração salva pelo funcionário' GROUP BY resource ORDER BY resource;
SELECT resource, COUNT(*) AS count FROM event_log WHERE activity = 'Declaração salva pelo funcionário' GROUP BY resource ORDER BY resource;
SELECT resource, COUNT(*) AS count FROM event_log WHERE activity = 'Declaração salva pelo funcionário' GROUP BY resource ORDER BY resource;
SELECT resource, COUNT(*) AS occurrence FROM event_log WHERE activity = 'Declaração salva pelo funcionário' GROUP BY resource ORDER BY resource
SELECT resource, COUNT(*) AS count FROM event_log WHERE activity = 'declaração salva pelo funcionário' GROUP BY resource ORDER BY resource;
SELECT COUNT(*) AS "Quantidade de Execuções", resource AS "Recurso" FROM event_log WHERE activity = 'declaração salva pelo funcionário' GROUP BY resource ORDER BY resource;
SELECT resource, COUNT(*) AS count FROM event_log WHERE activity = 'Declaração salva pelo funcionário' GROUP BY resource ORDER BY count DESC;
SELECT resource, COUNT(*) AS count FROM event_log WHERE activity = 'Declaração salva pelo funcionário' GROUP BY resource ORDER BY resource;
SELECT COUNT(*) AS "Quantidade de vezes", resource AS "Funcionário" FROM event_log WHERE activity = 'Salvar declaração de viagem' GROUP BY resource ORDER BY resource
SELECT count(*), resource FROM event_log WHERE activity = 'Declaração salva' GROUP BY resource ORDER BY resource
SELECT activity, COUNT(DISTINCT idcase) FROM event_log GROUP BY activity
SELECT COUNT(DISTINCT idcase), activity FROM event_log GROUP BY activity
SELECT activity, COUNT(DISTINCT idcase) AS case_count FROM event_log GROUP BY activity;
SELECT activity, count(DISTINCT idcase) AS num_instances FROM event_log GROUP BY activity
SELECT activity, COUNT(DISTINCT idcase) AS instance_count FROM event_log GROUP BY activity
SELECT activity, COUNT(*) AS count FROM event_log GROUP BY activity
SELECT COUNT(DISTINCT idcase), activity FROM event_log GROUP BY activity
SELECT activity, COUNT(DISTINCT idcase) AS num_cases FROM event_log GROUP BY activity;
SELECT count (*), activity FROM event_log group by activity
SELECT COUNT(DISTINCT activity), resource FROM event_log GROUP BY resource
SELECT resource, COUNT(DISTINCT activity) AS num_activities FROM event_log GROUP BY resource
SELECT resource, COUNT(DISTINCT activity) FROM event_log group by resource
SELECT resource, COUNT(DISTINCT activity) FROM event_log group by resource
SELECT resource, COUNT(DISTINCT activity) AS num_activities FROM event_log GROUP BY resource;
SELECT COUNT(DISTINCT activity), resource FROM event_log GROUP BY resource
SELECT resource,COUNT(DISTINCT activity) FROM event_log GROUP BY resource
SELECT resource, COUNT(DISTINCT activity) AS num_distinct_activities FROM event_log WHERE activity LIKE '%travel%' GROUP BY resource;
SELECT resource, COUNT(DISTINCT activity) AS num_distinct_activities FROM event_log WHERE activity LIKE '%travel%' GROUP BY resource ORDER BY num_distinct_activities DESC;
SELECT resource, COUNT(DISTINCT idcase) AS num_occurrences FROM event_log WHERE activity IN ('Fim da viagem', 'Pagamento efetuado') GROUP BY resource ORDER BY num_occurrences DESC;
SELECT resource, COUNT(DISTINCT activity) AS num_activities FROM event_log WHERE activity IN ('Fim da viagem', 'Pagamento efetuado') GROUP BY resource ORDER BY num_activities DESC;
SELECT resource, COUNT(*) AS num_finalization_activities FROM event_log WHERE activity IN ('Fim da viagem', 'Pagamento efetuado') GROUP BY resource;
SELECT resource, COUNT(*) AS num_finalization_activities FROM event_log WHERE activity IN ('Fim da viagem', 'Pagamento efetuado') GROUP BY resource;
SELECT resource, COUNT(*) AS count FROM event_log WHERE activity IN ('Fim da viagem', 'Pagamento efetuado') GROUP BY resource ORDER BY count DESC;
SELECT COUNT(*), resource FROM event_log WHERE activity IN ('Fim da viagem', 'Pagamento efetuado') GROUP BY resource
SELECT e.resource AS employee_id, COUNT(DISTINCT CASE WHEN e.activity = 'Finalizar ação de fim de viagem' THEN e.idcase WHEN e.activity = 'Efetuar pagamento' THEN e.idcase END) AS total_completed_travel_claims FROM event_log AS e GROUP BY e.resource;
SELECT e1.resource, COUNT(e1.id) AS num_finalization_activities FROM event_log AS e1 INNER JOIN event_log AS e2 ON e1.idcase = e2.idcase WHERE e2.activity IN ('Fim da viagem', 'Pagamento') GROUP BY e1.resource;
SELECT resource, COUNT(*) AS count FROM ( SELECT resource, idcase, ROW_NUMBER() OVER (PARTITION BY idcase ORDER BY timestamp) AS row_num FROM event_log WHERE activity = 'Declaração rejeitada pelo pré-aprovador' ) AS subquery WHERE row_num = 1 GROUP BY resource
SELECT resource, COUNT(DISTINCT idcase) AS num_cases FROM event_log WHERE activity = 'Declaração rejeitada pelo pré-aprovador' GROUP BY resource ORDER BY num_cases DESC;
SELECT resource, COUNT(DISTINCT idcase) AS instance_count FROM event_log WHERE activity = 'Declaração rejeitada pelo pré-aprovador' GROUP BY resource
SELECT resource, COUNT(*) AS count_first_occurrence FROM ( SELECT resource, idcase, ROW_NUMBER() OVER (PARTITION BY idcase ORDER BY timestamp) AS row_num FROM event_log WHERE activity = 'Declaração rejeitada pelo pré-aprovador' ) AS subquery WHERE row_num = 1 GROUP BY resource
SELECT resource, COUNT(*) AS count FROM ( SELECT resource, idcase, MIN(timestamp) AS first_timestamp FROM event_log WHERE activity = 'Declaração rejeitada pelo pré-aprovador' GROUP BY resource, idcase ) AS subquery GROUP BY resource;
SELECT resource, COUNT(*) AS num_rejeicoes FROM event_log WHERE activity = 'Declaração rejeitada pelo pré-aprovador' GROUP BY resource ORDER BY num_rejeicoes DESC;
SELECT resource, COUNT(DISTINCT idcase) AS num_declaracoes_rejeitadas FROM event_log WHERE activity = 'Declaração rejeitada pelo pré-aprovador' GROUP BY resource;
SELECT idcase, COUNT(*) AS num_activities FROM event_log WHERE activity <> 'Fim da viagem' GROUP BY idcase;
SELECT COUNT(*) AS "Ocorrências de atividades", idcase FROM event_log WHERE idcase IN ( SELECT idcase FROM event_log WHERE activity = 'Fim da viagem' ) GROUP BY idcase;
SELECT idcase, COUNT(*) AS num_activities FROM event_log WHERE activity <> 'Fim da viagem' GROUP BY idcase ORDER BY num_activities DESC;
SELECT COUNT(*) AS "Número de eventos" FROM event_log WHERE idcase IN ( SELECT idcase FROM event_log WHERE activity = 'Fim da viagem' ) GROUP BY idcase;
SELECT COUNT(*) AS "Ocorrências de atividades" FROM event_log WHERE idcase IN ( SELECT idcase FROM event_log WHERE activity = 'Fim da viagem' ) GROUP BY idcase;
SELECT activity, COUNT(*) AS count FROM event_log WHERE idcase IN ( SELECT idcase FROM event_log WHERE activity = 'fim da viagem' ) GROUP BY activity ORDER BY count DESC;
SELECT COUNT(*) AS "Número de eventos" FROM event_log WHERE activity = 'Fim da viagem';
SELECT COUNT(*) FROM event_log WHERE idcase IN (SELECT idcase FROM event_log WHERE activity = 'Fim da viagem') GROUP BY idcase
SELECT COUNT(*) FROM event_log WHERE activity = 'Fim da viagem' GROUP BY idcase
SELECT idcase, COUNT(*) AS num_actions FROM event_log WHERE activity = 'Fim da viagem' GROUP BY idcase;
SELECT COUNT(*) FROM event_log WHERE activity = 'Fim da viagem';
SELECT DISTINCT activity FROM event_log WHERE resource = 'Thomas' AND timestamp BETWEEN '2018-01-01' AND '2018-07-01'
SELECT DISTINCT activity FROM event_log WHERE resource = 'Thomas' AND timestamp BETWEEN '2018-01-01' AND '2018-07-01';
SELECT DISTINCT activity FROM event_log WHERE resource = 'Thomas' AND timestamp BETWEEN '2018-01-01' AND '2018-07-01';
SELECT DISTINCT activity FROM event_log WHERE resource = 'Thomas' AND timestamp BETWEEN '2018-01-01' AND '2018-07-01'
SELECT DISTINCT activity FROM event_log WHERE resource = 'Thomas' AND timestamp BETWEEN '2018-01-01' AND '2018-07-31'
SELECT DISTINCT activity FROM event_log WHERE resource = 'Thomas' AND timestamp BETWEEN '2018-01-01' AND '2018-07-31';
SELECT DISTINCT activity FROM event_log WHERE resource = 'Thomas' AND timestamp BETWEEN '2018-01-01' AND '2018-07-01';
SELECT DISTINCT activity FROM event_log WHERE resource = 'Thomas' AND timestamp BETWEEN '2018-01-01' AND '2018-07-01'
SELECT DISTINCT activity FROM event_log WHERE resource = 'Thomas' AND timestamp BETWEEN '2018-01-01' AND '2018-07-01'
SELECT DISTINCT idcase FROM event_log WHERE activity = 'Declaração rejeitada pelo supervisor' ORDER BY timestamp ASC
SELECT DISTINCT idcase FROM event_log WHERE activity = 'Declaração rejeitada pelo supervisor' ORDER BY timestamp ASC;
SELECT "idcase" FROM event_log WHERE activity = 'Declaração rejeitada pelo supervisor' ORDER BY "timestamp"
SELECT idcase, MIN(timestamp) AS first_timestamp FROM event_log WHERE activity = 'Declaração rejeitada pelo supervisor' GROUP BY idcase ORDER BY first_timestamp ASC
SELECT WITH RankedEvents AS (SELECT id, activity, timestamp, LEAD(timestamp) OVER (PARTITION BY idcase ORDER BY timestamp) AS next_timestamp, idcase FROM event_log) SELECT idcase, coalesce((strftime('%s', next_timestamp) - strftime('%s', timestamp)),0) as duration FROM RankedEvents WHERE activity='Declaração aprovada pelo supervisor'
SELECT WITH RankedEvents AS (SELECT id, activity, timestamp, LEAD(timestamp) OVER (PARTITION BY idcase ORDER BY timestamp) AS next_timestamp, idcase FROM event_log) SELECT idcase FROM RankedEvents WHERE activity='Declaração rejeitada pelo supervisor' ORDER BY timestamp
SELECT idcase, MIN(timestamp) AS start_time FROM event_log WHERE activity = 'Declaração rejeitada pelo supervisor' GROUP BY idcase ORDER BY start_time ASC
SELECT WITH RankedEvents AS (SELECT id, activity, timestamp, LEAD(timestamp) OVER (PARTITION BY idcase ORDER BY timestamp) AS next_timestamp, idcase FROM event_log) SELECT idcase, coalesce((strftime('%s', next_timestamp) - strftime('%s', timestamp)),0) as duration FROM RankedEvents WHERE activity='Declaração aprovada pelo supervisor'
SELECT idcase FROM event_log WHERE activity = 'Declaração rejeitada pelo supervisor' ORDER BY timestamp
SELECT event_log.activity AS "Declaração" FROM event_log JOIN event_log AS supervisor_log ON event_log.idcase = supervisor_log.idcase WHERE supervisor_log.activity LIKE '%supervisor%' AND supervisor_log.activity LIKE '%rejeitada%' ORDER BY event_log.timestamp;
SELECT DISTINCT idcase FROM event_log WHERE activity = 'Início da viagem' AND idcase NOT IN ( SELECT DISTINCT idcase FROM event_log WHERE activity = 'Fim da viagem' AND strftime('%Y-%m', timestamp) <= '2018-03' );
SELECT DISTINCT idcase FROM event_log WHERE activity = 'Início da viagem' AND NOT EXISTS (SELECT 1 FROM event_log WHERE idcase = event_log.idcase AND activity = 'Fim da viagem' AND timestamp < '2018-03-31')
SELECT DISTINCT idcase FROM event_log WHERE activity = 'Início da viagem' AND NOT EXISTS (SELECT 1 FROM event_log WHERE idcase = event_log.idcase AND activity = 'Fim da viagem' AND timestamp < '2018-03-01')
SELECT DISTINCT idcase FROM event_log WHERE activity = 'Início da viagem' AND idcase NOT IN ( SELECT idcase FROM event_log WHERE activity = 'Fim da viagem' AND timestamp <= '2018-03-31' );
SELECT DISTINCT idcase FROM event_log WHERE activity = 'Início da viagem' AND NOT EXISTS (SELECT 1 FROM event_log WHERE idcase = event_log.idcase AND activity = 'Fim da viagem' AND timestamp <= '2018-03-31')
SELECT DISTINCT idcase FROM event_log WHERE activity = 'Início da viagem' AND NOT EXISTS (SELECT 1 FROM event_log WHERE idcase = event_log.idcase AND activity = 'Fim da viagem' AND timestamp <= '2018-03-31')
SELECT DISTINCT idcase FROM event_log WHERE activity = 'Início da viagem' AND idcase NOT IN (SELECT idcase FROM event_log WHERE activity = 'Fim da viagem' AND timestamp <= '2018-03-31')
SELECT DISTINCT idcase FROM event_log WHERE activity = 'Início da viagem' AND idcase NOT IN (SELECT idcase FROM event_log WHERE activity = 'Fim da viagem' AND timestamp <= '2018-03-31')
SELECT DISTINCT idcase FROM event_log WHERE activity = 'Início da viagem' AND idcase NOT IN (SELECT idcase FROM event_log WHERE activity = 'Fim da viagem' AND timestamp <= '2018-03-31')
SELECT e1.idcase FROM event_log AS e1 INNER JOIN event_log AS e2 ON e1.idcase = e2.idcase WHERE e2.activity = 'Início da viagem' AND e1.timestamp > e2.timestamp AND e1.timestamp < '2018-03-31 23:59:59' GROUP BY e1.idcase;
SELECT resource, activity FROM event_log WHERE activity = 'Iniciar Viagem' AND NOT EXISTS ( SELECT 1 FROM event_log WHERE resource = event_log.resource AND activity = 'Finalizar Viagem' AND timestamp <= '2018-03-31' )
SELECT DISTINCT idcase FROM event_log WHERE activity = 'Fim da viagem' AND idcase NOT IN ( SELECT idcase FROM event_log WHERE activity IN ('Requisição de pagamento', 'Pagamento efetuado') ) AND resource IN ( SELECT resource FROM event_log WHERE activity = 'Fim da viagem' GROUP BY resource HAVING COUNT(*) > 1 );
SELECT DISTINCT idcase FROM event_log WHERE activity = 'Fim da viagem' AND idcase NOT IN ( SELECT idcase FROM event_log WHERE activity = 'Requisição de pagamento' INTERSECT SELECT idcase FROM event_log WHERE activity = 'Pagamento efetuado' ) AND resource IN ( SELECT resource FROM event_log WHERE activity = 'Fim da viagem' GROUP BY resource HAVING COUNT(*) > 1 );
SELECT DISTINCT idcase FROM event_log WHERE activity = 'Fim da viagem' AND idcase NOT IN ( SELECT idcase FROM event_log WHERE activity IN ('Requisição de pagamento', 'Pagamento efetuado') ) AND resource IN ( SELECT resource FROM event_log GROUP BY resource HAVING COUNT(*) > 1 );
SELECT DISTINCT idcase FROM event_log WHERE idcase IN ( SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(DISTINCT resource) > 1 ) AND activity = 'Fim da viagem' AND idcase NOT IN ( SELECT idcase FROM event_log WHERE activity = 'Requisição de pagamento' ) AND idcase NOT IN ( SELECT idcase FROM event_log WHERE activity = 'Pagamento efetuado' );
SELECT DISTINCT idcase FROM event_log WHERE resource IN ( SELECT resource FROM event_log GROUP BY resource HAVING COUNT(*) > 1 ) AND activity = 'Fim da viagem' AND idcase NOT IN ( SELECT idcase FROM event_log WHERE activity = 'Requisição de pagamento' ) AND idcase NOT IN ( SELECT idcase FROM event_log WHERE activity = 'Pagamento efetuado' );
SELECT DISTINCT idcase from event_log WHERE (activity = 'Início da viagem' OR activity = 'Fim da viagem') and idcase NOT IN (SELECT idcase from event_log WHERE activity = 'Requisição de pagamento' INTERSECT SELECT idcase from event_log WHERE activity = 'Pagamento efetuado')
SELECT DISTINCT idcase FROM event_log WHERE resource IN ( SELECT resource FROM event_log GROUP BY resource HAVING COUNT(*) > 1 ) AND activity = 'Fim da viagem' AND idcase NOT IN ( SELECT idcase FROM event_log WHERE activity = 'Requisição de pagamento' ) AND idcase NOT IN ( SELECT idcase FROM event_log WHERE activity = 'Pagamento efetuado' );
SELECT event_log.activity FROM event_log WHERE event_log.activity = 'Declaração finalizada' AND NOT EXISTS ( SELECT 1 FROM event_log AS payment_log WHERE payment_log.idcase = event_log.idcase AND payment_log.activity IN ('Pagamento efetuado', 'Pagamento registrado') );
SELECT DISTINCT idcase FROM event_log WHERE activity = 'Fim de viagem' AND idcase NOT IN (SELECT idcase FROM event_log WHERE activity = 'Requisição de pagamento' OR activity = 'Pagamento efetuado')
SELECT COUNT(DISTINCT resource), SUM(cost) FROM event_log GROUP BY idcase
SELECT idcase, count(distinct resource) AS num_resources, sum(cost) AS total_cost FROM event_log GROUP BY idcase;
SELECT idcase, count(distinct resource), sum(cost) FROM event_log group by idcase
SELECT idcase, COUNT(DISTINCT resource) AS num_resources, SUM(cost) AS total_cost FROM event_log GROUP BY idcase
SELECT COUNT(DISTINCT resource), SUM(cost) FROM event_log GROUP BY idcase
SELECT idcase, SUM(cost) AS total_cost, COUNT(DISTINCT resource) AS num_resources FROM event_log GROUP BY idcase;
SELECT idcase, sum(cost), count(distinct resource) FROM event_log group by idcase
SELECT idcase, SUM(cost) AS total_cost, COUNT(DISTINCT resource) AS num_resources FROM event_log GROUP BY idcase;
SELECT idcase, sum(cost), count(distinct resource) FROM event_log group by idcase
SELECT COUNT(DISTINCT resource) AS num_people, SUM(cost) AS total_cost, idcase FROM event_log GROUP BY idcase;
SELECT idcase FROM event_log WHERE activity LIKE 'permissão%' GROUP BY idcase HAVING COUNT(*) > 1
SELECT idcase FROM event_log WHERE activity LIKE 'permissão%' GROUP BY idcase HAVING COUNT(*) > 1
SELECT idcase FROM event_log WHERE activity LIKE 'permissão%' GROUP BY idcase HAVING COUNT(*) >= 2
SELECT idcase FROM event_log WHERE activity LIKE '%permissão%' GROUP BY idcase HAVING COUNT(*) > 1
SELECT idcase FROM event_log WHERE activity LIKE 'permissão%' GROUP BY idcase HAVING COUNT(*) > 1
SELECT idcase FROM event_log WHERE activity LIKE '%permissão%' GROUP BY idcase HAVING COUNT(*) > 1;
SELECT idcase FROM event_log WHERE activity LIKE 'permissão%' GROUP BY idcase HAVING COUNT(*) > 1
SELECT idcase FROM event_log WHERE activity LIKE 'permissão%' GROUP BY idcase HAVING COUNT(*) > 1
SELECT DISTINCT activity FROM event_log WHERE activity LIKE '%permissão%' OR activity LIKE '%declaração%'
SELECT idcase FROM event_log WHERE activity LIKE '%permissão%' GROUP BY idcase HAVING COUNT(*) > 1
SELECT idcase, MAX(timestamp) AS last_event_timestamp FROM event_log GROUP BY idcase ORDER BY last_event_timestamp DESC
SELECT idcase, MAX(timestamp) AS last_event_timestamp FROM event_log GROUP BY idcase ORDER BY last_event_timestamp;
SELECT id FROM event_log ORDER BY timestamp DESC GROUP BY idcase
SELECT idcase, MAX(timestamp) AS last_event_timestamp FROM event_log GROUP BY idcase ORDER BY last_event_timestamp DESC;
SELECT id FROM event_log WHERE idcase IN ( SELECT idcase FROM event_log GROUP BY idcase ORDER BY MAX(timestamp) ) ORDER BY timestamp;
SELECT idcase, MAX(id) AS last_event_id FROM event_log GROUP BY idcase ORDER BY timestamp DESC;
SELECT id FROM event_log WHERE idcase IN ( SELECT idcase FROM event_log GROUP BY idcase ORDER BY timestamp DESC ) ORDER BY timestamp;
SELECT idcase, activity, timestamp FROM event_log ORDER BY idcase, timestamp DESC;
SELECT DISTINCT(idcase) FROM (SELECT idcase, activity, LEAD(activity) OVER (PARTITION BY idcase ORDER BY timestamp) AS next_activity FROM event_log) where activity = next_activity
SELECT activity FROM event_log GROUP BY activity HAVING count(activity) >= 100
SELECT activity FROM event_log GROUP BY activity HAVING COUNT(*) >= 100;
SELECT activity FROM event_log GROUP BY activity HAVING count(activity) >= 100
SELECT activity FROM event_log GROUP BY activity HAVING COUNT(*) >= 100;
SELECT activity from event_log GROUP BY activity HAVING COUNT(*) >= 100
SELECT activity FROM event_log GROUP BY activity HAVING COUNT(*) >= 100
SELECT activity FROM event_log GROUP BY activity HAVING COUNT(*) >= 100
SELECT activity FROM event_log GROUP BY activity HAVING COUNT(*) >= 100
SELECT CASE WHEN activity LIKE '%funcionário%' THEN 'funcionário' WHEN activity LIKE '%supervisor%' THEN 'supervisor' WHEN activity LIKE '%administração%' THEN 'administração' WHEN activity LIKE '%pré-aprovador%' THEN 'pré-aprovador' WHEN activity LIKE '%responsável pelo orçamento%' THEN 'responsável pelo orçamento' WHEN activity LIKE '%diretor%' THEN 'diretor' END AS grupo, COUNT(DISTINCT idcase) AS quantidade_casos FROM event_log GROUP BY grupo ORDER BY quantidade_casos DESC;
SELECT CASE WHEN activity LIKE '%funcionário%' THEN 'funcionário' WHEN activity LIKE '%supervisor%' THEN 'supervisor' WHEN activity LIKE '%administração%' THEN 'administração' WHEN activity LIKE '%pré-aprovador%' THEN 'pré-aprovador' WHEN activity LIKE '%responsável pelo orçamento%' THEN 'responsável pelo orçamento' WHEN activity LIKE '%diretor%' THEN 'diretor' END AS grupo, COUNT(DISTINCT idcase) AS num_casos FROM event_log GROUP BY grupo ORDER BY num_casos DESC;
SELECT CASE WHEN activity LIKE '%funcionário%' THEN 'funcionário' WHEN activity LIKE '%supervisor%' THEN 'supervisor' WHEN activity LIKE '%administração%' THEN 'administração' WHEN activity LIKE '%pré-aprovador%' THEN 'pré-aprovador' WHEN activity LIKE '%responsável pelo orçamento%' THEN 'responsável pelo orçamento' WHEN activity LIKE '%diretor%' THEN 'diretor' END AS grupo, COUNT(*) AS quantidade_casos FROM event_log GROUP BY grupo ORDER BY quantidade_casos DESC;
SELECT COUNT(DISTINCT idcase) AS "Quantidade de Casos" FROM event_log WHERE activity LIKE '%funcionário%' UNION SELECT COUNT(DISTINCT idcase) AS "Quantidade de Casos" FROM event_log WHERE activity LIKE '%supervisor%' UNION SELECT COUNT(DISTINCT idcase) AS "Quantidade de Casos" FROM event_log WHERE activity LIKE '%administração%' UNION SELECT COUNT(DISTINCT idcase) AS "Quantidade de Casos" FROM event_log WHERE activity LIKE '%pré-aprovador%' UNION SELECT COUNT(DISTINCT idcase) AS "Quantidade de Casos" FROM event_log WHERE activity LIKE '%responsável pelo orçamento%' UNION SELECT COUNT(DISTINCT idcase) AS "Quantidade de Casos" FROM event_log WHERE activity LIKE '%diretor%' ORDER BY "Quantidade de Casos" DESC;
SELECT resource, COUNT(*) AS num_events FROM event_log GROUP BY resource HAVING COUNT(DISTINCT idcase) = 1;
SELECT activity, COUNT(*) AS count_activity FROM event_log WHERE resource IN ('funcionário', 'supervisor', 'administração', 'pré-aprovador', 'responsável pelo orçamento', 'diretor') GROUP BY activity ORDER BY CASE WHEN resource = 'funcionário' THEN 1 WHEN resource = 'supervisor' THEN 2 WHEN resource = 'administração' THEN 3 WHEN resource = 'pré-aprovador' THEN 4 WHEN resource = 'responsável pelo orçamento' THEN 5 WHEN resource = 'diretor' THEN 6 END, count_activity DESC;
SELECT activity, COUNT(DISTINCT idcase) AS count_cases FROM event_log GROUP BY activity ORDER BY count_cases DESC;
SELECT activity, COUNT(*) AS count FROM event_log WHERE activity LIKE '%funcionário%' OR activity LIKE '%supervisor%' OR activity LIKE '%administração%' OR activity LIKE '%pré-aprovador%' OR activity LIKE '%responsável pelo orçamento%' OR activity LIKE '%diretor%' GROUP BY activity ORDER BY count DESC;
SELECT DISTINCT idcase FROM event_log WHERE activity = 'Fim da viagem' AND EXISTS ( SELECT 1 FROM event_log WHERE idcase = event_log.idcase AND timestamp > event_log.timestamp );
SELECT DISTINCT e1.idcase FROM event_log AS e1 INNER JOIN event_log AS e2 ON e1.idcase = e2.idcase WHERE e2.activity = 'Fim da viagem' AND e1.timestamp > e2.timestamp;
SELECT idcase FROM event_log where activity = 'Final da viagem' INTERSECT SELECT idcase FROM event_log GROUP BY idcase HAVING MAX(timestamp) < MIN(timestamp)
SELECT idcase FROM event_log where activity = 'Finalização da viagem' INTERSECT SELECT idcase FROM event_log GROUP BY idcase HAVING MAX(timestamp) < MIN(timestamp)
SELECT idcase, timestamp FROM event_log WHERE activity = 'Fim da viagem' ORDER BY resource;
SELECT e1.activity, e1.resource, e1.idcase FROM event_log AS e1 INNER JOIN event_log AS e2 ON e1.idcase = e2.idcase WHERE e2.activity = 'Fim da viagem' AND e1.timestamp > e2.timestamp AND e1.activity NOT IN ('Fim da viagem');
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE activity = 'Envio de lembrete' AND timestamp = (SELECT MAX(timestamp) FROM event_log WHERE idcase = event_log.idcase)
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE activity = 'Envio de lembrete' AND timestamp = ( SELECT MAX(timestamp) FROM event_log WHERE idcase = event_log.idcase );
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE activity = 'envio de lembrete' AND id IN ( SELECT id FROM event_log ORDER BY timestamp DESC LIMIT 1 )
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE activity = 'Envio de lembrete' AND timestamp = (SELECT MAX(timestamp) FROM event_log WHERE idcase = event_log.idcase)
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE activity = 'Envio de lembrete' AND timestamp = (SELECT MAX(timestamp) FROM event_log WHERE idcase = event_log.idcase)
SELECT COUNT(*) FROM event_log WHERE activity = 'Envio de lembrete' AND resource = 'Declaração'
SELECT DISTINCT resource FROM event_log WHERE timestamp = '2018-03-31' EXCEPT SELECT DISTINCT resource FROM event_log WHERE activity = 'Working' AND timestamp = '2018-03-31';
SELECT DISTINCT resource FROM event_log WHERE idcase NOT IN ( SELECT idcase FROM event_log WHERE timestamp >= '2018-03-31' AND timestamp < '2018-04-01' );
SELECT resource FROM event_log WHERE timestamp NOT IN ( SELECT timestamp FROM event_log WHERE DATE(timestamp) = '2018-03-31' );
SELECT resource FROM event_log WHERE timestamp = '2018-03-31' AND activity = 'idle'
SELECT DISTINCT resource FROM event_log WHERE activity = 'Declaração de viagem' AND timestamp < '2018-03-31' AND resource NOT IN (SELECT DISTINCT resource FROM event_log WHERE activity = 'Início da viagem' AND timestamp < '2018-03-31' AND resource NOT IN (SELECT DISTINCT resource FROM event_log WHERE activity = 'Fim da viagem' AND timestamp < '2018-03-31'));
SELECT resource FROM event_log WHERE activity = 'Process Statement' AND strftime('%Y-%m-%d', timestamp) = '2018-03-31' GROUP BY resource
SELECT activity, COUNT(*) AS event_count FROM event_log WHERE idcase IN ( SELECT idcase FROM event_log WHERE timestamp BETWEEN '2018-12-01' AND '2018-12-05' AND activity = 'case_closed' ) GROUP BY activity;
SELECT activity, COUNT(*) AS frequency FROM event_log WHERE idcase IN ( SELECT idcase FROM event_log WHERE timestamp BETWEEN '2018-12-01' AND '2018-12-05' AND activity = 'Case Finalizado' ) GROUP BY activity;
SELECT activity, COUNT(*) AS frequency FROM event_log WHERE idcase IN ( SELECT idcase FROM event_log WHERE activity = 'case_closed' AND timestamp BETWEEN '2018-12-01' AND '2018-12-05' ) GROUP BY activity ORDER BY frequency DESC;
SELECT activity, COUNT(*) AS frequency FROM event_log WHERE idcase IN ( SELECT idcase FROM event_log WHERE timestamp BETWEEN '2018-12-01' AND '2018-12-05' AND activity = 'case_closed' ) GROUP BY activity
SELECT activity, COUNT(*) AS execution_count FROM event_log WHERE idcase IN ( SELECT idcase FROM event_log WHERE timestamp BETWEEN '2018-12-01' AND '2018-12-05' AND activity = 'case_closed' ) GROUP BY activity;
SELECT activity, count(DISTINCT idcase) FROM event_log WHERE idcase in ( SELECT idcase FROM event_log GROUP BY idcase HAVING strftime('%Y-%m-%d', MAX(timestamp)) BETWEEN '2018-12-01' AND '2018-12-05' ) group by activity
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE activity <> 'Pagamento efetuado'
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE idcase NOT IN (SELECT idcase FROM event_log WHERE activity = 'Pagamento efetuado')
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE idcase NOT IN (SELECT idcase FROM event_log WHERE activity = 'Pagamento efetuado')
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE activity <> 'Pagamento efetuado'
SELECT count(DISTINCT idcase) FROM event_log WHERE activity = 'pagamento efetuado' AND timestamp IS NULL
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE idcase NOT IN (SELECT idcase FROM event_log WHERE activity = 'Pagamento efetuado')
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE idcase NOT IN (SELECT idcase FROM event_log WHERE activity = 'Pagamento efetuado')
SELECT DISTINCT idcase FROM event_log where activity = 'Fim da viagem' AND NOT activity = 'Requisição de pagamento' OR activity = 'Pagamento efetuado'
SELECT COUNT(DISTINCT resource) FROM event_log GROUP BY activity
SELECT activity, COUNT(DISTINCT resource) AS num_resources FROM event_log GROUP BY activity;
SELECT activity, COUNT(DISTINCT resource) AS resource_count FROM event_log GROUP BY activity
SELECT COUNT(DISTINCT resource) AS "Number of Unique Resources", activity FROM event_log GROUP BY activity;
SELECT COUNT(DISTINCT resource) FROM event_log GROUP BY activity
SELECT COUNT (DISTINCT resource) FROM event_log WHERE activity = 'process statement'
SELECT DISTINCT activity FROM event_log WHERE idcase IN ( SELECT idcase FROM event_log WHERE activity = 'Envio de lembrete' ) AND timestamp < ( SELECT timestamp FROM event_log WHERE activity = 'Envio de lembrete' );
SELECT activity FROM event_log WHERE idcase IN (SELECT idcase FROM event_log WHERE activity='Envio de lembrete') AND timestamp < (SELECT timestamp FROM event_log WHERE activity='Envio de lembrete')
SELECT DISTINCT activity FROM event_log WHERE activity LIKE '%declaração%'
SELECT count(*) AS "Quantidade de Eventos", idcase AS "ID do Caso" FROM event_log GROUP BY idcase ORDER BY "Quantidade de Eventos" DESC;
SELECT COUNT(*) AS "Número de Eventos", idcase AS "Caso" FROM event_log GROUP BY idcase ORDER BY "Número de Eventos" DESC;
SELECT COUNT(DISTINCT idcase) FROM event_log GROUP BY COUNT(*)
SELECT count(distinct idcase) FROM (SELECT count(*) as event_count, idcase FROM event_log group by idcase) group by event_count
SELECT COUNT(*) AS event_count, COUNT(DISTINCT activity) AS statement_count FROM event_log GROUP BY event_count
SELECT AVG (SUM (cost)) FROM event_log GROUP BY idcase
SELECT AVG(SUM(cost)) FROM event_log group by idcase
SELECT AVG(SUM(cost)) FROM event_log group by idcase
SELECT AVG(SUM(cost)) FROM event_log group by idcase
SELECT AVG(SUM(cost)) FROM event_log group by idcase
SELECT AVG(cost) FROM event_log
SELECT AVG (cost) FROM event_log GROUP BY resource
SELECT resource, AVG(cost) AS average_cost FROM event_log GROUP BY resource
SELECT resource, AVG(cost) AS average_cost FROM event_log GROUP BY resource
SELECT resource,AVG(cost) FROM event_log GROUP BY resource
SELECT resource, AVG(cost) AS average_cost FROM event_log GROUP BY resource
SELECT AVG(el.cost) AS average_cost FROM event_log AS el JOIN employee AS e ON el.idcase = e.idcase GROUP BY e.name;
SELECT resource, COUNT(*) AS count_resource FROM event_log GROUP BY resource ORDER BY count_resource DESC LIMIT 10
SELECT resource, COUNT(*) AS activity_count FROM event_log GROUP BY resource ORDER BY activity_count DESC LIMIT 10;
SELECT resource, COUNT(*) AS activity_count FROM event_log GROUP BY resource ORDER BY activity_count DESC LIMIT 10;
SELECT resource, COUNT(*) AS frequency FROM event_log GROUP BY resource ORDER BY frequency DESC LIMIT 10
SELECT resource, COUNT(*) AS event_count FROM event_log GROUP BY resource ORDER BY event_count DESC LIMIT 10;
SELECT resource, COUNT(*) AS num_activities FROM event_log GROUP BY resource ORDER BY num_activities DESC LIMIT 10;
SELECT count (*), date(timestamp) FROM event_log group by date(timestamp)
SELECT DATE(timestamp) AS date, COUNT(*) AS activity_count FROM event_log GROUP BY date ORDER BY date;
SELECT **Ações mais comuns no processamento de declarações:** * **SELECT:** Recupera dados de uma ou mais tabelas. * **INSERT:** Insere novos dados em uma tabela. * **UPDATE:** Atualiza dados existentes em uma tabela. * **DELETE:** Remove dados de uma tabela. * **CREATE TABLE:** Cria uma nova tabela. * **DROP TABLE:** Exclui uma tabela existente. * **ALTER TABLE:** Altera a estrutura de uma tabela existente. * **GRANT:** Concede permissões a usuários ou funções. * **REVOKE:** Revoga permissões de usuários ou funções.
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(DISTINCT resource) = 1;
SELECT e1.idcase, e1.activity, e1.resource AS resource1, e2.resource AS resource2 FROM event_log AS e1 JOIN event_log AS e2 ON e1.idcase = e2.idcase AND e1.activity = e2.activity AND e1.timestamp < e2.timestamp AND e1.resource <> e2.resource WHERE e1.resource IN ( SELECT resource FROM event_log GROUP BY resource HAVING COUNT(*) > 1 ) AND e2.resource IN ( SELECT resource FROM event_log GROUP BY resource HAVING COUNT(*) > 1 ) ORDER BY e1.idcase, e1.timestamp;
SELECT DISTINCT activity FROM event_log WHERE activity LIKE '%declaração%'
SELECT idcase, COUNT(*) AS event_count FROM event_log WHERE activity = 'Declaração final aprovada pelo diretor' GROUP BY idcase;
SELECT COUNT(*) FROM event_log WHERE idcase IN (SELECT idcase FROM event_log WHERE activity = 'Declaração final aprovada pelo diretor') AND timestamp < (SELECT timestamp FROM event_log WHERE activity = 'Declaração final aprovada pelo diretor' ORDER BY timestamp DESC LIMIT 1)
SELECT idcase, COUNT(*) AS num_interventions FROM event_log WHERE activity LIKE '%Aprovação final do diretor%' GROUP BY idcase ORDER BY num_interventions DESC;
SELECT idcase, (SELECT timestamp FROM event_log WHERE activity LIKE '%permissão aprovada pela administração%' AND idcase = e.idcase ORDER BY timestamp DESC LIMIT 1) - (SELECT timestamp FROM event_log WHERE activity LIKE '%permissão requisitada pelo funcionário%' AND idcase = e.idcase ORDER BY timestamp DESC LIMIT 1) AS time_elapsed FROM event_log e WHERE activity LIKE '%permissão requisitada pelo funcionário%' AND EXISTS (SELECT 1 FROM event_log WHERE activity LIKE '%permissão aprovada pela administração%' AND idcase = e.idcase) GROUP BY idcase
SELECT idcase, MIN(timestamp) OVER (PARTITION BY idcase ORDER BY timestamp) AS first_activity_timestamp, MAX(timestamp) OVER (PARTITION BY idcase ORDER BY timestamp) AS last_activity_timestamp, (MAX(timestamp) OVER (PARTITION BY idcase ORDER BY timestamp) - MIN(timestamp) OVER (PARTITION BY idcase ORDER BY timestamp)) AS time_interval FROM event_log WHERE activity IN ('permissão requisitada pelo funcionário', 'permissão aprovada pela administração') GROUP BY idcase HAVING COUNT(*) = 2 ORDER BY time_interval DESC;
SELECT event_log1.timestamp AS permissao_solicitada, event_log2.timestamp AS permissao_aprovada, (event_log2.timestamp - event_log1.timestamp) AS tempo_decorrido FROM event_log AS event_log1 JOIN event_log AS event_log2 ON event_log1.idcase = event_log2.idcase WHERE event_log1.activity LIKE '%permissão solicitada%' AND event_log2.activity LIKE '%permissão aprovada%' ORDER BY tempo_decorrido DESC;
SELECT idcase FROM event_log WHERE activity LIKE '%Retrabalho%'
SELECT idcase FROM event_log WHERE activity LIKE '%Retrabalho%'
SELECT DISTINCT(idcase) FROM (SELECT idcase, activity, LEAD(activity) OVER (PARTITION BY idcase ORDER BY timestamp) AS next_activity FROM event_log) where activity = next_activity
SELECT DISTINCT idcase FROM event_log WHERE activity LIKE '%retrabalho%'
SELECT resource, COUNT(*) AS num_activities FROM event_log GROUP BY resource;
SELECT idcase FROM event_log GROUP BY activity HAVING COUNT(*) > 1
SELECT activity, idcase, LAG(activity, 1, NULL) OVER (PARTITION BY idcase ORDER BY timestamp) AS prev_activity FROM event_log WHERE activity = prev_activity;
SELECT idcase FROM event_log GROUP BY idcase, activity HAVING COUNT(*) > 1 ORDER BY idcase;
SELECT DISTINCT idcase FROM event_log GROUP BY idcase, activity HAVING COUNT(*) > 1 ORDER BY idcase;
SELECT activity, COUNT(*) AS count_consecutive FROM ( SELECT activity, LAG(activity) OVER (ORDER BY timestamp) AS prev_activity FROM event_log ) AS subquery WHERE activity = prev_activity GROUP BY activity HAVING COUNT(*) > 1;
SELECT idcase, activity, timestamp FROM event_log WHERE activity = 'intervencao' AND idcase IN (SELECT idcase FROM event_log WHERE activity = 'intervencao' GROUP BY idcase HAVING COUNT(*) > 1) ORDER BY idcase, timestamp
SELECT idcase, activity, COUNT(*) AS count FROM event_log GROUP BY idcase, activity HAVING COUNT(*) > 1 ORDER BY count DESC;
SELECT DISTINCT resource FROM event_log WHERE activity = 'Declaração rejeitada pelo supervisor'
SELECT DISTINCT e1.resource FROM event_log e1 inner join (SELECT idcase, MIN(timestamp) as timestamp FROM event_log GROUP BY idcase order by timestamp) AS e2 on e1.idcase=e2.idcase WHERE e1.activity = 'Declaração rejeitada pelo supervisor' ORDER by e2.timestamp
SELECT DISTINCT resource FROM event_log WHERE activity = 'Declaração aprovada pelo responsável pelo orçamento';
SELECT DISTINCT resource FROM event_log WHERE activity = 'Process Statement' AND cost > 1000;
