SELECT COUNT(*) FROM event_log WHERE activity = 'End trip';
SELECT COUNT(*) FROM event_log WHERE activity = 'end trip';
SELECT COUNT(*) FROM event_log WHERE activity = 'end trip';
SELECT COUNT(*) FROM event_log WHERE activity = 'end trip';
SELECT COUNT(*) FROM event_log WHERE activity = 'end trip';
SELECT COUNT(*) FROM event_log WHERE activity = 'End trip';
SELECT COUNT(*) FROM event_log WHERE activity = 'end trip';
SELECT COUNT(*) FROM event_log WHERE activity = 'end trip';
SELECT COUNT(*) FROM event_log WHERE activity = 'End trip';
SELECT count(*), resource FROM event_log WHERE activity = 'end trip' AND timestamp LIKE '2016%' GROUP BY resource
SELECT COUNT(*) as total_end_trips FROM event_log WHERE activity = 'End trip';
SELECT COUNT(*) FROM event_log WHERE activity = 'End trip' AND resource = 'James'
SELECT count(*) FROM event_log WHERE activity = 'End trip' AND resource = 'James'
SELECT COUNT(*) FROM event_log WHERE activity = 'end trip' AND resource = 'James' AND activity!= 'update';
SELECT count(*) FROM event_log WHERE activity = 'End trip' AND resource = 'James'
SELECT COUNT(*) FROM event_log WHERE activity = 'end trip' AND resource = 'James';
SELECT COUNT(*) FROM event_log WHERE activity = 'End trip' AND resource = 'James';
SELECT COUNT(*) FROM event_log WHERE activity = 'End trip' AND resource = 'James';
SELECT COUNT(*) FROM event_log WHERE activity = 'end trip' AND resource = 'James';
SELECT COUNT(*) FROM event_log WHERE activity = 'End trip' AND resource = 'James';
SELECT COUNT(*) FROM event_log WHERE activity = 'End trip' AND resource = 'James'
SELECT count(*) FROM event_log WHERE activity = 'End trip' AND resource = 'James'
SELECT COUNT(*), resource FROM event_log GROUP BY resource
SELECT resource, COUNT(*) AS num_events FROM event_log GROUP BY resource
SELECT COUNT(*), resource FROM event_log GROUP BY resource;
SELECT COUNT(*) as event_count, resource FROM event_log GROUP BY resource
SELECT resource, COUNT(*) as num_events FROM event_log GROUP BY resource
SELECT resource, COUNT(*) AS frequency FROM event_log GROUP BY resource
SELECT resource, COUNT(*) as frequency FROM event_log GROUP BY resource ORDER BY frequency DESC;
SELECT resource, COUNT(*) as num_events FROM event_log GROUP BY resource
SELECT resource, COUNT(*) AS num_activities FROM event_log GROUP BY resource
SELECT resource, COUNT(*) AS num_performances FROM event_log GROUP BY resource;
SELECT resource, COUNT(*) AS num_actions FROM event_log WHERE activity LIKE '%travel declaration%' GROUP BY resource ORDER BY num_actions DESC;
SELECT COUNT(*) FROM event_log WHERE resource = 'Peter';
SELECT COUNT(*) FROM event_log WHERE resource = 'Peter';
SELECT COUNT(*) FROM event_log WHERE resource = 'Peter';
SELECT COUNT(*) FROM event_log WHERE resource = 'Peter';
SELECT COUNT(*) FROM event_log WHERE resource = 'Peter';
SELECT COUNT(*) FROM event_log WHERE activity LIKE '%Peter%';
SELECT resource, COUNT(*) AS num_actions FROM event_log WHERE resource = 'Peter' AND activity LIKE '%travel declaration%' GROUP BY resource;
SELECT idcase FROM event_log WHERE timestamp BETWEEN '2018-03-01' AND '2018-03-31' GROUP BY idcase
SELECT idcase FROM event_log WHERE timestamp BETWEEN '2018-03-01' AND '2018-03-31' GROUP BY idcase
SELECT idcase FROM event_log WHERE timestamp BETWEEN '2018-03-01' AND '2018-04-01' AND activity = 'terminated';
SELECT idcase FROM event_log WHERE timestamp BETWEEN '2018-03-01' AND '2018-04-01' AND activity = 'Ended';
SELECT idcase FROM event_log WHERE timestamp = ( SELECT MAX(timestamp) FROM event_log WHERE EXTRACT(MONTH FROM timestamp) = 3 AND EXTRACT(YEAR FROM timestamp) = 2018 )
SELECT idcase FROM event_log WHERE timestamp BETWEEN '2018-03-01' AND '2018-03-31' GROUP BY idcase HAVING MAX(timestamp) BETWEEN '2018-03-01' AND '2018-03-31';
SELECT idcase FROM event_log WHERE timestamp BETWEEN '2018-03-01' AND '2018-03-31' GROUP BY idcase
SELECT idcase FROM event_log GROUP BY idcase HAVING max(timestamp) BETWEEN '2018-03-01' AND '2018-03-31';
SELECT DISTINCT idcase FROM event_log WHERE activity = 'Declaration rejected by pre-approver' AND resource!= 'Douglas';
SELECT idcase FROM event_log WHERE activity = 'Declaration rejected by pre-approver' AND resource!= 'Douglas'
SELECT DISTINCT idcase FROM event_log WHERE activity = 'Declaration rejected by pre-approver' AND resource <> 'Douglas';
SELECT DISTINCT idcase FROM event_log WHERE activity = 'Declaration rejected by pre-approver' AND resource <> 'Douglas'
SELECT DISTINCT idcase FROM event_log WHERE activity = 'Declaration rejected by pre-approver' AND resource!= 'Douglas'
SELECT DISTINCT idcase FROM event_log WHERE activity = 'Declaration rejected by pre-approver' AND resource <> 'Douglas'
SELECT DISTINCT idcase FROM event_log WHERE activity = 'Declaration rejected by pre-approver' AND resource!= 'Douglas'
SELECT DISTINCT idcase FROM event_log WHERE activity = 'Declaration rejected by pre-approver' AND resource <> 'Douglas';
SELECT DISTINCT idcase FROM event_log WHERE activity = 'Declaration rejected by pre-approver' AND resource <> 'Douglas'
SELECT DISTINCT idcase FROM event_log WHERE activity = 'Declaration rejected by pre-approver' AND resource!= 'Douglas'
SELECT DISTINCT idcase FROM event_log WHERE activity = 'Declaration rejected by pre-approver' AND resource!= 'Douglas';
SELECT DISTINCT idcase FROM event_log WHERE activity = 'Declaration rejected by pre-approver' AND resource!= 'Douglas'
SELECT * FROM event_log WHERE activity = 'Declaration rejected by pre-approver' AND resource!= 'Douglas'
SELECT COUNT(DISTINCT resource) FROM event_log;
SELECT COUNT(DISTINCT resource) FROM event_log;
SELECT COUNT(DISTINCT resource) FROM event_log;
SELECT COUNT(DISTINCT resource) AS num_resources FROM event_log;
SELECT COUNT(DISTINCT resource) FROM event_log;
SELECT COUNT(DISTINCT resource) FROM event_log;
SELECT COUNT(DISTINCT resource) AS num_resources FROM event_log
SELECT COUNT(DISTINCT resource) FROM event_log;
SELECT COUNT(DISTINCT resource) FROM event_log;
SELECT COUNT(DISTINCT resource) FROM event_log
SELECT COUNT(DISTINCT "resource") AS "Number of different people" FROM "event_log";
SELECT COUNT(DISTINCT resource) AS total_employees FROM event_log;
SELECT idcase, count(distinct resource) AS num_employees FROM event_log GROUP BY idcase
SELECT resource, SUM(1) AS total_events FROM event_log GROUP BY resource;
SELECT resource, COUNT(*) as total_events FROM event_log GROUP BY resource
SELECT resource, COUNT(*) AS total_events FROM event_log GROUP BY resource
SELECT resource, SUM(1) as total_actions FROM event_log WHERE activity LIKE '%declaration processing%' GROUP BY resource
SELECT idcase FROM event_log WHERE cost > 2225 GROUP BY idcase
SELECT idcase FROM event_log WHERE cost > 2225 GROUP BY idcase HAVING COUNT(*) > 0
SELECT idcase FROM event_log WHERE cost > 2225;
SELECT * FROM event_log WHERE cost > 2225;
SELECT id FROM event_log WHERE cost > 2225
SELECT resource, COUNT(*) as event_count FROM event_log GROUP BY resource ORDER BY event_count DESC LIMIT 1;
SELECT resource, COUNT(*) FROM event_log GROUP BY resource ORDER BY COUNT(*) DESC;
SELECT resource, COUNT(*) FROM event_log GROUP BY resource HAVING COUNT(*) = (SELECT COUNT(*) FROM event_log GROUP BY resource ORDER BY COUNT(*) DESC LIMIT 1)
SELECT resource, COUNT(*) FROM event_log GROUP BY resource ORDER BY COUNT(*) DESC LIMIT 1;
SELECT resource, COUNT(*) as total_events FROM event_log GROUP BY resource ORDER BY total_events DESC;
SELECT resource, COUNT(*) as total_events FROM event_log GROUP BY resource ORDER BY total_events DESC LIMIT 1;
SELECT resource, COUNT(*) as event_count FROM event_log GROUP BY resource ORDER BY event_count DESC LIMIT 1;
SELECT resource, COUNT(*) as event_count FROM event_log GROUP BY resource ORDER BY event_count DESC LIMIT 1;
SELECT resource, COUNT(*) FROM event_log GROUP BY resource HAVING COUNT(*) = (SELECT COUNT(*) FROM event_log GROUP BY resource ORDER BY COUNT(*) DESC LIMIT 1)
SELECT resource, COUNT(*) as event_count FROM event_log GROUP BY resource ORDER BY event_count DESC LIMIT 1;
SELECT resource, COUNT(*) as count FROM event_log WHERE activity LIKE '%declaration%' GROUP BY resource ORDER BY count DESC LIMIT 1;
SELECT resource, COUNT(*) as total_events FROM event_log GROUP BY resource ORDER BY total_events DESC LIMIT 1;
SELECT resource, COUNT(*) as event_count FROM event_log GROUP BY resource ORDER BY event_count DESC LIMIT 1;
SELECT resource, COUNT(*) as event_count FROM event_log GROUP BY resource ORDER BY event_count DESC LIMIT 1;
SELECT resource, COUNT(*) as event_count FROM event_log GROUP BY resource ORDER BY event_count DESC;
SELECT resource, COUNT(*) as total_events FROM event_log GROUP BY resource ORDER BY total_events DESC LIMIT 1;
SELECT resource, COUNT(*) as total_events FROM event_log GROUP BY resource ORDER BY total_events DESC LIMIT 1;
SELECT resource, COUNT(*) as event_count FROM event_log GROUP BY resource ORDER BY event_count DESC LIMIT 1;
SELECT resource, COUNT(*) as count FROM event_log WHERE activity = 'processing declarations' GROUP BY resource ORDER BY count DESC;
SELECT resource, COUNT(*) AS num_events FROM event_log GROUP BY resource ORDER BY num_events DESC;
SELECT resource, COUNT(*) AS num_events FROM event_log GROUP BY resource ORDER BY num_events DESC;
SELECT resource, COUNT(*) as num_events FROM event_log GROUP BY resource ORDER BY num_events DESC;
SELECT resource, COUNT(*) as event_count FROM event_log GROUP BY resource ORDER BY event_count DESC;
SELECT resource, COUNT(*) AS num_performances FROM event_log GROUP BY resource ORDER BY num_performances DESC;
SELECT resource, COUNT(*) as total_declarations FROM event_log WHERE activity = 'Declaration saved by employee' GROUP BY resource ORDER BY total_declarations DESC;
SELECT * FROM event_log WHERE cost IS NOT NULL;
SELECT * FROM event_log WHERE cost IS NOT NULL;
SELECT * FROM event_log WHERE cost IS NOT NULL;
SELECT * FROM event_log WHERE cost IS NOT NULL;
SELECT * FROM event_log WHERE cost IS NOT NULL;
SELECT * FROM event_log WHERE cost IS NOT NULL;
SELECT idcase, SUM(cost) FROM event_log GROUP BY idcase;
SELECT * FROM event_log WHERE cost IS NOT NULL;
SELECT * FROM event_log WHERE cost IS NOT NULL;
SELECT * FROM event_log WHERE cost IS NOT NULL;
SELECT * FROM event_log WHERE activity = 'Start trip' OR activity ='request payment'
SELECT * FROM event_log WHERE activity = 'Start trip' OR activity ='request payment';
SELECT * FROM event_log WHERE activity = 'Start trip' OR activity = 'Request payment'
SELECT * FROM event_log WHERE activity IN ('Start trip','request payment');
SELECT * FROM event_log WHERE activity IN ('Start trip', 'Request payment');
SELECT activity, COUNT(*) as frequency FROM event_log GROUP BY activity ORDER BY frequency DESC LIMIT 1;
SELECT activity, COUNT(*) as frequency FROM event_log GROUP BY activity ORDER BY frequency DESC LIMIT 10;
SELECT activity, COUNT(*) as frequency FROM event_log GROUP BY activity ORDER BY frequency DESC LIMIT 1;
SELECT activity FROM event_log GROUP BY activity ORDER BY COUNT(*) DESC LIMIT 1;
SELECT activity, COUNT(*) as count FROM event_log WHERE timestamp BETWEEN '2017-01-01' AND '2018-01-01' GROUP BY activity ORDER BY count DESC LIMIT 10;
SELECT activity, COUNT(*) AS frequency FROM event_log GROUP BY activity ORDER BY frequency DESC;
SELECT activity, COUNT(*) as frequency FROM event_log GROUP BY activity ORDER BY frequency DESC;
SELECT idcase FROM ( SELECT idcase, COUNT(*) AS activity_count FROM event_log GROUP BY idcase ORDER BY COUNT(*) DESC ) AS subquery WHERE RANK() OVER (ORDER BY activity_count DESC) <= 10 ORDER BY idcase DESC;
SELECT activity, COUNT(*) as frequency FROM event_log GROUP BY activity ORDER BY frequency DESC;
SELECT * FROM event_log WHERE EXTRACT(YEAR FROM timestamp) = 2017;
SELECT * FROM event_log WHERE timestamp BETWEEN '2017-01-01' AND '2017-12-31';
SELECT * FROM event_log WHERE EXTRACT(YEAR FROM timestamp) = 2017;
SELECT * FROM event_log WHERE EXTRACT(YEAR FROM timestamp) = 2017
SELECT * FROM event_log WHERE timestamp BETWEEN '2017-01-01' AND '2017-12-31';
SELECT DISTINCT activity FROM event_log WHERE timestamp BETWEEN '2017-01-01' AND '2017-12-31';
SELECT * FROM event_log WHERE timestamp BETWEEN '2017-01-01' AND '2017-12-31';
SELECT DISTINCT activity FROM event_log WHERE timestamp BETWEEN '2017-01-01' AND '2017-12-31';
SELECT DISTINCT activity FROM event_log WHERE timestamp BETWEEN '2017-01-01' AND '2017-12-31';
SELECT * FROM event_log WHERE timestamp BETWEEN '2017-01-01' AND '2017-12-31';
SELECT * FROM event_log WHERE EXTRACT(YEAR FROM timestamp) = 2017 AND idcase LIKE '%declaration%'
SELECT activity, COUNT(*) as count, GROUPING SETS((activity), ()) FROM event_log WHERE timestamp BETWEEN '2017-01-01' AND '2017-12-31' AND activity LIKE '%declaration%' GROUP BY activity WITH ROLLUP ORDER BY activity;
SELECT * FROM event_log WHERE EXTRACT(YEAR FROM timestamp) = 2017 AND idcase IS NOT NULL;
SELECT activity, COUNT(*) as count FROM event_log WHERE timestamp BETWEEN '2017-01-01' AND '2017-12-31' GROUP BY activity ORDER BY count DESC;
SELECT activity, COUNT(*) as count FROM event_log WHERE timestamp BETWEEN '2017-01-01' AND '2017-12-31' GROUP BY activity ORDER BY count DESC;
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(*) <= 20
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(*) <= 20
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(*) <= 20
SELECT idcase FROM event_log GROUP BY idcase HAVING count(*) <= 20
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(*) <= 20;
SELECT events_count, COUNT(*) FROM (SELECT COUNT(*) as events_count, idcase FROM event_log GROUP BY idcase) GROUP BY events_count
SELECT DISTINCT idcase FROM event_log GROUP BY idcase HAVING COUNT(*) <= 20;
SELECT resource FROM event_log GROUP BY resource HAVING COUNT(idcase) IN ( SELECT COUNT(idcase) FROM event_log GROUP BY idcase ORDER BY COUNT(idcase) DESC LIMIT 5 )
SELECT resource FROM event_log GROUP BY resource ORDER BY COUNT(idcase) DESC LIMIT 5;
SELECT resource FROM event_log GROUP BY resource HAVING COUNT(DISTINCT idcase) IN ( SELECT COUNT(DISTINCT idcase) FROM event_log GROUP BY resource ORDER BY COUNT(DISTINCT idcase) DESC LIMIT 5 )
SELECT resource, COUNT(*) as case_count FROM event_log GROUP BY resource ORDER BY case_count DESC LIMIT 5;
SELECT "resource" AS "Employee", COUNT(*) AS "Number of Declarations" FROM "event_log" WHERE "activity" = 'declaration' GROUP BY "resource" ORDER BY "Number of Declarations" DESC LIMIT 5;
SELECT resource, COUNT(*) as event_count FROM event_log GROUP BY resource ORDER BY event_count DESC LIMIT 5;
SELECT resource, COUNT(*) as count FROM event_log GROUP BY resource ORDER BY count DESC LIMIT 5;
SELECT resource, COUNT(*) as count FROM event_log GROUP BY resource ORDER BY count DESC LIMIT 5;
SELECT resource, COUNT(*) as event_count FROM event_log GROUP BY resource ORDER BY event_count DESC LIMIT 5;
SELECT resource, COUNT(*) as total_hours FROM event_log WHERE activity LIKE '%processing the declarations%' GROUP BY resource ORDER BY total_hours DESC LIMIT 5;
SELECT resource, COUNT(*) as count_start_trip FROM event_log WHERE activity = 'Start trip' AND EXTRACT(YEAR FROM timestamp) = 2016 GROUP BY resource
SELECT resource, COUNT(*) as count_start_trip FROM event_log WHERE activity = 'Start trip' AND EXTRACT(YEAR FROM timestamp) = 2016 GROUP BY resource
SELECT resource, COUNT(*) FROM event_log WHERE activity = 'Start trip' AND EXTRACT(YEAR FROM timestamp) = 2016 GROUP BY resource
SELECT resource, COUNT(*) as count FROM event_log WHERE activity ='start trip' AND timestamp >= '2016-01-01 00:00:00' AND timestamp < '2017-01-01 00:00:00' GROUP BY resource
SELECT resource, COUNT(*) AS count_start_trips FROM event_log WHERE activity = 'Start trip' AND EXTRACT(YEAR FROM timestamp) = 2016 GROUP BY resource
SELECT resource, COUNT(*) AS count FROM event_log WHERE activity ='start trip' AND EXTRACT(YEAR FROM timestamp) = 2016 GROUP BY resource
SELECT resource, COUNT(*) AS total_occurrences FROM event_log WHERE activity ='start trip' AND timestamp >= '2016-01-01 00:00:00' AND timestamp < '2017-01-01 00:00:00' GROUP BY resource
SELECT COUNT(*), resource FROM event_log WHERE activity = 'Start trip' AND timestamp >= '2016-01-01' AND timestamp < '2017-01-01' GROUP BY resource
SELECT COUNT(*), resource FROM event_log WHERE activity LIKE '%start of trip%' AND EXTRACT(YEAR FROM timestamp) = 2016 GROUP BY resource
SELECT resource, COUNT(*) as count FROM event_log WHERE activity = 'Declaration rejected by supervisor' GROUP BY resource
SELECT resource, COUNT(*) as count FROM event_log WHERE activity = 'Declaration rejected by supervisor' GROUP BY resource
SELECT COUNT(*) AS num_performances, resource FROM event_log WHERE activity = 'Declaration rejected by supervisor' GROUP BY resource
SELECT resource, COUNT(*) as count FROM event_log WHERE activity = 'declaration rejected by supervisor' GROUP BY resource
SELECT resource, COUNT(*) as num_performances FROM event_log WHERE activity = 'Declaration rejected by supervisor' GROUP BY resource
SELECT resource, COUNT(*) as count FROM event_log WHERE activity = 'declaration rejected by supervisor' GROUP BY resource
SELECT resource, COUNT(*) as num_performances FROM event_log WHERE activity = 'Declaration rejected by supervisor' GROUP BY resource
SELECT COUNT(*), resource FROM event_log WHERE activity = 'Declaration rejected by supervisor' GROUP BY resource;
SELECT COUNT(*), resource FROM event_log WHERE activity = 'Declaration rejected by supervisor' GROUP BY resource;
SELECT COUNT(*), resource FROM event_log WHERE activity = 'Declaration rejected by supervisor' GROUP BY resource
SELECT resource, COUNT(*) as count FROM event_log WHERE activity = 'Declaration rejected by supervisor' GROUP BY resource
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(*) > 20;
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(*) > 20;
SELECT idcase, COUNT(*) as count FROM event_log GROUP BY idcase HAVING COUNT(*) > 20
SELECT idcase, COUNT(*) as count FROM event_log GROUP BY idcase HAVING COUNT(*) > 20
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(*) > 20;
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(*) > 20
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(*) > 20;
SELECT idcase, count(*) as count FROM event_log GROUP BY idcase HAVING count(*) > 20
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(*) > 20;
SELECT idcase, COUNT(*) as event_count FROM event_log GROUP BY idcase ORDER BY event_count DESC LIMIT 10;
SELECT idcase, COUNT(*) as total_activities FROM event_log GROUP BY idcase ORDER BY total_activities DESC LIMIT 10;
SELECT idcase FROM event_log GROUP BY idcase ORDER BY COUNT(*) DESC LIMIT 10;
SELECT idcase, COUNT(*) as num_activities FROM event_log GROUP BY idcase ORDER BY num_activities DESC LIMIT 10;
SELECT idcase FROM event_log GROUP BY idcase ORDER BY COUNT(*) DESC LIMIT 5;
SELECT idcase FROM event_log GROUP BY idcase ORDER BY COUNT(*) DESC LIMIT 5;
SELECT idcase FROM event_log GROUP BY idcase ORDER BY COUNT(*) DESC LIMIT 1;
SELECT idcase FROM event_log WHERE resource = 'Sara' AND activity!= 'Request payment'
SELECT idcase FROM event_log WHERE resource = 'Sara' AND activity!= 'Request payment'
SELECT DISTINCT idcase FROM event_log WHERE resource = 'Sara' AND activity!='request payment'
SELECT idcase FROM event_log WHERE resource = 'Sara' AND activity!= 'Request payment'
SELECT idcase FROM event_log WHERE idcase NOT IN ( SELECT idcase FROM event_log WHERE activity = 'Request payment' ) AND resource = 'Sara'
SELECT idcase FROM event_log WHERE activity = 'Declare' AND idcase IN ( SELECT idcase FROM event_log WHERE resource = 'Sara' ) AND id NOT IN ( SELECT id FROM event_log WHERE activity = 'Request payment' )
SELECT * FROM event_log WHERE timestamp BETWEEN '2017-01-10' AND '2017-02-01' AND idcase = 'declaration 143598';
SELECT * FROM event_log WHERE idcase = 'declaration 143598' AND timestamp BETWEEN '2017-01-10' AND '2017-02-01' ORDER BY idcase, timestamp;
SELECT * FROM event_log WHERE idcase = 'declaration 143598' AND timestamp BETWEEN '2017-01-10' AND '2017-02-01';
SELECT activity, timestamp, resource, cost, idcase FROM event_log WHERE timestamp BETWEEN '2017-01-10' AND '2017-02-01' AND idcase = 'declaration 143598';
SELECT * FROM event_log WHERE timestamp BETWEEN '2017-01-10' AND '2017-02-01' AND idcase = '143598';
SELECT COUNT(DISTINCT idcase), resource FROM event_log WHERE timestamp BETWEEN '2017-01-01' AND '2017-05-31' GROUP BY resource
SELECT resource, COUNT(DISTINCT idcase) AS num_cases FROM event_log WHERE timestamp BETWEEN '2017-01-01' AND '2017-05-31' GROUP BY resource
SELECT COUNT(DISTINCT idcase), resource FROM event_log WHERE timestamp BETWEEN '2017-01-01' AND '2017-05-31' GROUP BY resource
SELECT COUNT(DISTINCT idcase), resource FROM event_log WHERE timestamp BETWEEN '2017-01-01' AND '2017-05-31' GROUP BY resource
SELECT COUNT(DISTINCT idcase), resource FROM event_log WHERE timestamp BETWEEN '2017-01-01' AND '2017-05-31' GROUP BY resource
SELECT COUNT(DISTINCT idcase), resource FROM event_log WHERE timestamp BETWEEN '2017-01-01' AND '2017-05-31' GROUP BY resource
SELECT COUNT(DISTINCT idcase), resource FROM event_log WHERE timestamp BETWEEN '2017-01-01' AND '2017-05-31' GROUP BY resource
SELECT COUNT(DISTINCT idcase), resource FROM event_log WHERE timestamp BETWEEN '2017-01-01' AND '2017-05-31' GROUP BY resource
SELECT COUNT(DISTINCT idcase), resource FROM event_log WHERE timestamp BETWEEN '2017-01-01' AND '2017-05-31' GROUP BY resource
SELECT COUNT(DISTINCT idcase), resource FROM event_log WHERE timestamp BETWEEN '2017-01-01' AND '2017-05-31' GROUP BY resource
SELECT idcase, COUNT(*) as num_declarations FROM event_log WHERE timestamp BETWEEN '2017-01-01' AND '2017-05-31' GROUP BY idcase
SELECT idcase, COUNT(*) as activity_count FROM event_log GROUP BY idcase ORDER BY activity_count DESC LIMIT 10;
SELECT idcase, COUNT(*) as num_activities FROM event_log GROUP BY idcase ORDER BY num_activities DESC LIMIT 10;
SELECT idcase, COUNT(*) as activity_count FROM event_log GROUP BY idcase ORDER BY activity_count DESC LIMIT 10;
SELECT idcase, COUNT(*) as total_activities FROM event_log GROUP BY idcase ORDER BY total_activities DESC LIMIT 10;
SELECT idcase, COUNT(*) as count FROM event_log GROUP BY idcase ORDER BY count DESC LIMIT 10;
SELECT idcase, COUNT(*) as num_activities FROM event_log GROUP BY idcase ORDER BY num_activities DESC LIMIT 10;
SELECT idcase, COUNT(*) as activity_count FROM event_log GROUP BY idcase ORDER BY activity_count DESC LIMIT 10;
SELECT idcase, COUNT(*) as activity_count FROM event_log GROUP BY idcase ORDER BY activity_count DESC LIMIT 10;
SELECT idcase, COUNT(*) as activity_count FROM event_log GROUP BY idcase ORDER BY activity_count DESC LIMIT 10;
SELECT idcase FROM event_log GROUP BY idcase ORDER BY COUNT(*) DESC LIMIT 10;
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(*) IN ( SELECT COUNT(*) FROM event_log GROUP BY idcase ORDER BY COUNT(*) DESC LIMIT 10 ) ORDER BY idcase DESC;
SELECT idcase, COUNT(*) as event_count FROM event_log GROUP BY idcase ORDER BY event_count DESC LIMIT 10;
SELECT idcase, COUNT(*) as event_count FROM event_log GROUP BY idcase ORDER BY event_count DESC LIMIT 10;
SELECT idcase, COUNT(*) as event_count FROM event_log GROUP BY idcase ORDER BY event_count DESC LIMIT 10;
SELECT idcase, COUNT(*) as event_count FROM event_log GROUP BY idcase ORDER BY event_count DESC LIMIT 10;
SELECT idcase, COUNT(*) as event_count FROM event_log GROUP BY idcase ORDER BY event_count DESC LIMIT 10;
SELECT idcase, COUNT(*) as event_count FROM event_log GROUP BY idcase ORDER BY event_count DESC LIMIT 10;
SELECT idcase, COUNT(*) as num_actions FROM event_log GROUP BY idcase ORDER BY num_actions DESC LIMIT 10;
SELECT idcase, AVG(cost) AS total_cost FROM event_log GROUP BY idcase;
SELECT COUNT(DISTINCT resource), SUM(cost), idcase FROM event_log GROUP BY idcase;
SELECT COUNT(DISTINCT resource), SUM(cost), idcase FROM event_log GROUP BY idcase;
SELECT idcase, SUM(cost) AS total_cost FROM event_log GROUP BY idcase;
SELECT MAX(cost) FROM event_log;
SELECT idcase, SUM(cost) AS total_cost FROM event_log GROUP BY idcase
SELECT idcase, SUM(cost) as total_cost FROM event_log GROUP BY idcase;
SELECT idcase, SUM(cost) AS total_cost FROM event_log GROUP BY idcase;
SELECT SUM(cost) as total_cost FROM event_log WHERE activity = 'declaration' GROUP BY idcase
SELECT resource, COUNT(*) as num_events FROM event_log GROUP BY resource HAVING COUNT(*) >= 100 ORDER BY num_events DESC;
SELECT resource, COUNT(*) AS num_events FROM event_log GROUP BY resource HAVING COUNT(*) >= 100 ORDER BY num_events DESC;
SELECT idcase, COUNT(*) AS num_actions FROM event_log GROUP BY idcase HAVING COUNT(*) >= 100 ORDER BY num_actions DESC;
SELECT idcase, activity, timestamp FROM event_log ORDER BY idcase, MIN(timestamp)
SELECT idcase, activity, timestamp FROM event_log ORDER BY idcase, MIN(timestamp)
SELECT idcase, MIN(timestamp) AS start_date, activity FROM event_log GROUP BY idcase, activity ORDER BY idcase, start_date;
SELECT idcase FROM event_log GROUP BY idcase ORDER BY MIN(timestamp) DESC;
SELECT idcase, activity, timestamp FROM event_log ORDER BY idcase, timestamp
SELECT activity, COUNT(*) as frequency FROM event_log GROUP BY activity ORDER BY frequency DESC;
SELECT COUNT(*), resource FROM event_log WHERE activity = 'Declaration approved by administration' GROUP BY resource
SELECT COUNT(*), resource FROM event_log WHERE activity = 'Declaration approved by administration' GROUP BY resource;
SELECT resource, COUNT(*) as total_count FROM event_log WHERE activity = 'Declaration approved by administration' GROUP BY resource
SELECT COUNT(*), resource FROM event_log WHERE activity = 'Declaration approved by administration' GROUP BY resource
SELECT resource, COUNT(*) AS num_approvals FROM event_log WHERE activity = 'Declaration approved by administration' GROUP BY resource
SELECT resource, COUNT(*) as count FROM event_log WHERE activity = 'Declaration approved by administration' GROUP BY resource;
SELECT resource, COUNT(*) as count FROM event_log WHERE activity = 'Declaration approved by administration' GROUP BY resource
SELECT resource, count(*) as num_approvals FROM event_log WHERE activity = 'Declaration approved by administration' GROUP BY resource
SELECT activity, COUNT(*) as count FROM event_log WHERE resource = 'Thomas' AND timestamp BETWEEN '2017-01-01' AND '2018-01-01' GROUP BY activity
SELECT activity, COUNT(*) AS count FROM event_log WHERE resource = 'Thomas' AND EXTRACT(YEAR FROM timestamp) = 2017 GROUP BY activity
SELECT activity, COUNT(*) AS count FROM event_log WHERE resource = 'Thomas' AND timestamp BETWEEN '2017-01-01' AND '2018-01-01' GROUP BY activity ORDER BY count DESC;
SELECT activity, COUNT(*) AS frequency FROM event_log WHERE EXTRACT(YEAR FROM timestamp) = 2017 AND idcase = 'Thomas' GROUP BY activity
SELECT COUNT(*) FROM event_log WHERE resource = 'Thomas' AND timestamp BETWEEN '2017-01-01' AND '2017-12-31';
SELECT COUNT(*) FROM event_log WHERE resource = 'Thomas' AND timestamp BETWEEN '2017-01-01' AND '2017-12-31';
SELECT COUNT(*) FROM event_log WHERE resource = 'Thomas' AND timestamp BETWEEN '2017-01-01' AND '2017-12-31';
SELECT COUNT(*) FROM event_log WHERE resource = 'Thomas' AND timestamp BETWEEN '2017-01-01' AND '2018-01-01';
SELECT COUNT(*) FROM event_log WHERE resource = 'Thomas' AND timestamp BETWEEN '2017-01-01' AND '2017-12-31';
SELECT SUM(cost) AS workload FROM event_log WHERE EXTRACT(YEAR FROM timestamp) = 2017 AND activity = 'Declaration submitted by employee' AND resource = 'Thomas'
SELECT activity, MAX(timestamp) AS most_recent_date FROM event_log GROUP BY activity
SELECT activity, MAX(timestamp) AS most_recent_date FROM event_log GROUP BY activity
SELECT activity, MAX(timestamp) AS max_timestamp FROM event_log GROUP BY activity ORDER BY max_timestamp DESC;
SELECT activity, MAX(timestamp) AS last_performance FROM event_log GROUP BY activity
SELECT activity, MAX(timestamp) AS latest_performance FROM event_log GROUP BY activity
SELECT activity, MAX(timestamp) AS last_occurrence FROM event_log GROUP BY activity
SELECT activity, MAX(timestamp) AS max_timestamp FROM event_log GROUP BY activity ORDER BY max_timestamp DESC;
SELECT activity, MAX(timestamp) AS last_timestamp FROM event_log WHERE timestamp < '2017-01-10' GROUP BY activity
SELECT COUNT(*) FROM event_log WHERE (activity = 'declaration approved by supervisor' AND timestamp LIKE '2017%') OR (activity = 'permit rejected by employee' AND timestamp LIKE '2018%')
SELECT SUM(CASE WHEN activity = 'declaration approved by supervisor' AND EXTRACT(YEAR FROM timestamp) = 2017 THEN 1 ELSE 0 END) AS 'declaration approved by supervisor in 2017', SUM(CASE WHEN activity = 'permit rejected by employee' AND EXTRACT(YEAR FROM timestamp) = 2018 THEN 1 ELSE 0 END) AS 'permit rejected by employee in 2018' FROM event_log
SELECT SUM(CASE WHEN activity = 'declaration approved by supervisor' AND EXTRACT(YEAR FROM timestamp) = 2017 THEN 1 ELSE 0 END) AS 'declaration approved by supervisor in 2017', SUM(CASE WHEN activity = 'permit rejected by employee' AND EXTRACT(YEAR FROM timestamp) = 2018 THEN 1 ELSE 0 END) AS 'permit rejected by employee in 2018' FROM event_log WHERE EXTRACT(YEAR FROM timestamp) IN (2017, 2018)
SELECT COUNT(CASE WHEN activity = 'declaration approved by supervisor' AND YEAR(timestamp) = 2017 THEN 1 ELSE NULL END) AS declaration_approved_2017, COUNT(CASE WHEN activity = 'permit rejected by employee' AND YEAR(timestamp) = 2018 THEN 1 ELSE NULL END) AS permit_rejected_2018 FROM event_log
SELECT count(*) FROM event_log WHERE activity = 'Permit final approved by director';
SELECT count(*), resource FROM event_log WHERE activity = 'Declaration rejected by supervisor' GROUP BY resource
SELECT activity, timestamp, id FROM event_log ORDER BY timestamp;
SELECT id FROM (SELECT id, MAX(timestamp) as timestamp FROM event_log GROUP BY idcase) ORDER BY timestamp;
SELECT activity, timestamp AS "performance end date", id AS "action identifier" FROM event_log WHERE activity LIKE '%declaration%' ORDER BY timestamp;
SELECT COUNT(*) FROM event_log WHERE resource = 'Thomas' AND activity = 'declaration submitted by employee'
SELECT COUNT(*) FROM event_log WHERE activity = 'declaration submitted by employee' AND resource = 'Thomas';
SELECT COUNT(*) FROM event_log WHERE activity = 'declaration submitted by employee' AND resource = 'Thomas' AND timestamp BETWEEN '2017-01-01' AND '2018-01-01';
SELECT COUNT(*) FROM event_log WHERE activity = 'Declaration submitted by employee' AND resource = 'Thomas';
SELECT COUNT(*) FROM event_log WHERE activity = 'Declaration submitted by employee' AND resource = 'Thomas';
SELECT COUNT(*) FROM event_log WHERE activity LIKE '%declaration%' AND resource = 'Thomas';
SELECT COUNT(*) FROM event_log WHERE resource = 'Diana' AND cost IS NOT NULL;
SELECT COUNT(*) FROM event_log WHERE resource = 'Diana' AND cost IS NOT NULL;
SELECT COUNT(*) FROM event_log WHERE resource = 'Diana' AND cost IS NOT NULL;
SELECT * FROM event_log WHERE resource = 'Diana' AND cost IS NOT NULL AND activity LIKE '%declaration%';
SELECT activity, count(*) as num_events FROM event_log WHERE resource = 'Diana' AND cost IS NOT NULL GROUP BY activity
SELECT activity, count(*) as count FROM event_log WHERE resource = 'Diana' AND cost IS NOT NULL GROUP BY activity
SELECT activity FROM event_log WHERE resource = 'Diana' AND cost IS NOT NULL
SELECT COUNT(DISTINCT resource) FROM event_log WHERE id IN ( SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(*) > 3 )
SELECT COUNT(DISTINCT resource) AS active_resources FROM event_log WHERE idcase IN ( SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(*) > 3 )
SELECT COUNT(DISTINCT resource) FROM event_log GROUP BY idcase HAVING COUNT(*) > 3;
SELECT COUNT(DISTINCT resource) AS num_resources FROM event_log WHERE idcase IN ( SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(*) > 3 )
SELECT COUNT(DISTINCT idcase) AS num_employees FROM event_log WHERE idcase IN ( SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(*) > 3 )
SELECT resource FROM event_log WHERE activity = 'Declaration rejected by pre-approver' GROUP BY resource;
SELECT DISTINCT resource FROM event_log WHERE activity = 'Declaration rejected by pre-approver';
SELECT DISTINCT resource FROM event_log WHERE activity = 'Declaration rejected by pre-approver'
SELECT DISTINCT resource FROM event_log WHERE activity = 'Declaration rejected by pre-approver';
SELECT resource FROM event_log WHERE activity = 'Declaration rejected by pre-approver' GROUP BY resource;
SELECT DISTINCT resource FROM event_log WHERE activity = 'Declaration rejected by pre-approver'
SELECT DISTINCT resource FROM event_log WHERE activity = 'Declaration rejected by pre-approver';
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE activity = 'Declaration final approved by director' AND EXTRACT(MONTH FROM timestamp) BETWEEN 1 AND 5 AND EXTRACT(YEAR FROM timestamp) = 2017;
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE activity = 'Declaration final approved by director' AND timestamp BETWEEN '2017-01-01' AND '2017-05-31';
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE activity = 'Declaration final approved by director' AND timestamp BETWEEN '2017-01-01' AND '2017-05-31';
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE activity LIKE '%approved%' AND timestamp BETWEEN '2017-01-01' AND '2017-05-31' AND resource LIKE '%director%'
SELECT idcase FROM event_log WHERE resource = 'Charles' AND strftime('%Y-%m', timestamp)!= '2018-01' GROUP BY idcase HAVING COUNT(*) = (SELECT COUNT(*) FROM event_log WHERE resource = 'Charles' AND strftime('%Y-%m', timestamp)!= '2018-01')
SELECT idcase FROM event_log WHERE resource = 'Charles' AND timestamp < '2018-01-01 00:00:00' OR timestamp > '2018-01-31 23:59:59' GROUP BY idcase
SELECT idcase FROM event_log WHERE idcase IS NOT NULL AND idcase!= '' AND NOT EXISTS ( SELECT 1 FROM event_log AS jan WHERE jan.idcase = event_log.idcase AND strftime('%Y-%m', jan.timestamp) = '2018-01' AND jan.resource = 'Charles' ) GROUP BY idcase
SELECT DISTINCT resource FROM event_log WHERE timestamp NOT LIKE '%-01-2018%' AND resource = 'Charles'
SELECT idcase FROM event_log WHERE activity LIKE '%intervention%' AND resource LIKE '%Charles%' AND timestamp NOT LIKE '%2018-01-%' GROUP BY idcase
SELECT idcase, COUNT(DISTINCT activity) AS num_activities FROM event_log GROUP BY idcase HAVING COUNT(DISTINCT activity) > 3;
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(DISTINCT activity) > 3;
SELECT idcase, COUNT(DISTINCT activity) AS num_activities FROM event_log GROUP BY idcase HAVING COUNT(DISTINCT activity) > 3
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(DISTINCT activity) > 3
SELECT idcase, COUNT(DISTINCT activity) AS num_activities FROM event_log GROUP BY idcase HAVING COUNT(DISTINCT activity) > 3;
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(DISTINCT activity) > 3;
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(DISTINCT activity) > 3
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(DISTINCT activity) > 3
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(*) > 3
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(*) > 3;
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(*) > 3
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(*) > 3
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(*) > 3
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(*) > 3
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(*) > 3;
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(*) > 3
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(*) > 3
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(DISTINCT activity) > 3
SELECT idcase, MAX(timestamp) - MIN(timestamp) AS duration FROM event_log GROUP BY idcase
SELECT idcase, SUM((strftime('%s', next_timestamp) - strftime('%s', timestamp))) as total_time FROM ( SELECT id, activity, timestamp, LEAD(timestamp) OVER (PARTITION BY idcase ORDER BY timestamp) AS next_timestamp, idcase FROM event_log ) AS RankedEvents WHERE next_timestamp IS NOT NULL GROUP BY idcase
SELECT idcase, MAX(timestamp) - MIN(timestamp) AS duration FROM event_log GROUP BY idcase;
SELECT idcase, MAX(timestamp) - MIN(timestamp) AS duration FROM event_log GROUP BY idcase
SELECT idcase, MAX(timestamp) - MIN(timestamp) AS duration FROM event_log GROUP BY idcase
SELECT idcase, MAX(timestamp) - MIN(timestamp) AS duration FROM event_log GROUP BY idcase
SELECT idcase, resource FROM event_log WHERE (idcase, resource) IN ( SELECT idcase, resource FROM event_log GROUP BY idcase, resource HAVING COUNT(DISTINCT id) = (SELECT COUNT(*) FROM event_log) )
SELECT idcase, resource FROM event_log GROUP BY idcase, resource HAVING COUNT(DISTINCT activity) = (SELECT COUNT(*) FROM event_log WHERE idcase = event_log.idcase)
SELECT idcase, resource FROM event_log GROUP BY idcase, resource HAVING COUNT(DISTINCT activity) = (SELECT COUNT(DISTINCT activity) FROM event_log)
SELECT idcase, resource FROM event_log GROUP BY idcase, resource HAVING COUNT(DISTINCT activity) = (SELECT COUNT(*) FROM event_log WHERE idcase = event_log.idcase)
SELECT idcase, resource FROM event_log GROUP BY idcase, resource HAVING COUNT(DISTINCT activity) = (SELECT COUNT(*) FROM event_log WHERE idcase = event_log.idcase)
SELECT idcase, resource FROM event_log GROUP BY idcase, resource HAVING COUNT(DISTINCT activity) = (SELECT COUNT(*) FROM event_log WHERE idcase = event_log.idcase)
SELECT idcase, resource FROM event_log GROUP BY idcase, resource HAVING COUNT(DISTINCT activity) = (SELECT COUNT(*) FROM event_log WHERE idcase = event_log.idcase)
SELECT idcase, resource FROM event_log GROUP BY idcase, resource HAVING COUNT(DISTINCT activity) = (SELECT COUNT(*) FROM event_log WHERE idcase = event_log.idcase)
SELECT idcase, resource FROM event_log GROUP BY idcase, resource HAVING COUNT(DISTINCT activity) = (SELECT COUNT(*) FROM event_log WHERE idcase = event_log.idcase)
SELECT resource, COUNT(*) as count FROM event_log GROUP BY resource HAVING COUNT(*) = 1
SELECT idcase FROM event_log WHERE activity = 'End trip' AND timestamp BETWEEN '2016-01-01' AND '2017-12-31';
SELECT idcase FROM event_log WHERE activity = 'End trip' AND timestamp BETWEEN '2016-01-01' AND '2017-12-31';
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE activity = 'End trip' AND timestamp BETWEEN '2016-01-01' AND '2017-12-31'
SELECT idcase FROM event_log WHERE activity = 'End trip' AND timestamp BETWEEN '2016-01-01' AND '2017-12-31' GROUP BY idcase
SELECT idcase FROM event_log WHERE activity = 'End trip' AND timestamp BETWEEN '2016-01-01' AND '2017-12-31'
SELECT idcase FROM event_log WHERE activity = 'End trip' AND timestamp BETWEEN '2016-01-01' AND '2017-12-31'
SELECT idcase FROM event_log WHERE activity = 'End trip' AND timestamp BETWEEN '2016-01-01 00:00:00' AND '2017-01-01 00:00:00'
SELECT idcase FROM event_log WHERE activity = 'End trip' AND timestamp BETWEEN '2016-01-01' AND '2017-12-31'
SELECT idcase FROM event_log WHERE activity = 'End trip' AND timestamp BETWEEN '2016-01-01' AND '2017-12-31'
SELECT idcase FROM event_log WHERE activity = 'End trip' AND timestamp BETWEEN '2016-01-01' AND '2017-12-31'
SELECT * FROM event_log WHERE activity = 'End trip' AND timestamp BETWEEN '2016-01-01' AND '2017-12-31'
SELECT * FROM event_log WHERE activity LIKE '%rejected%'
SELECT * FROM event_log WHERE activity LIKE '%rejected%'
SELECT * FROM event_log WHERE activity LIKE '%rejected%';
SELECT * FROM event_log WHERE activity LIKE '%rejected%'
SELECT * FROM event_log WHERE activity LIKE '%rejected%'
SELECT * FROM event_log WHERE activity LIKE '%rejected%';
SELECT * FROM event_log WHERE activity = 'Declaration rejected by pre-approver'
SELECT activity, count(*) as num_rejections FROM event_log WHERE activity ='rejection' GROUP BY activity;
SELECT idcase, MIN(cost) AS min_cost, MAX(cost) AS max_cost FROM event_log WHERE cost > 0 GROUP BY idcase;
SELECT idcase, MIN(cost) AS min_cost, MAX(cost) AS max_cost FROM event_log WHERE cost > 0 GROUP BY idcase
SELECT idcase, MIN(cost) AS min_cost, MAX(cost) AS max_cost FROM event_log WHERE cost > 0 GROUP BY idcase
SELECT idcase, MIN(cost) AS min_cost, MAX(cost) AS max_cost FROM event_log WHERE cost > 0 GROUP BY idcase
SELECT idcase, MIN(cost) AS min_cost, MAX(cost) AS max_cost FROM event_log WHERE cost > 0 GROUP BY idcase HAVING MAX(cost) > 0
SELECT idcase, MIN(cost) AS min_cost, MAX(cost) AS max_cost FROM event_log WHERE cost > 0 GROUP BY idcase HAVING MAX(cost) > 0
SELECT idcase, MIN(cost) AS min_cost, MAX(cost) AS max_cost FROM event_log WHERE cost > 0 GROUP BY idcase HAVING MAX(cost) > 0
SELECT idcase, MIN(cost) AS min_cost, MAX(cost) AS max_cost FROM event_log WHERE cost > 0 GROUP BY idcase
SELECT idcase, MIN(cost) AS min_cost, MAX(cost) AS max_cost FROM event_log WHERE cost > 0 GROUP BY idcase
SELECT idcase, MIN(cost) AS min_cost, MAX(cost) AS max_cost FROM event_log WHERE cost > 0 GROUP BY idcase
SELECT idcase, MIN(cost) AS min_cost, MAX(cost) AS max_cost FROM event_log WHERE cost > 0 GROUP BY idcase
SELECT idcase, MIN(cost) AS min_cost, MAX(cost) AS max_cost FROM event_log WHERE cost > 0 GROUP BY idcase
SELECT MIN(cost) AS min_cost, MAX(cost) AS max_cost FROM event_log WHERE cost > 0 GROUP BY idcase
SELECT idcase, MIN(cost) AS min_cost, MAX(cost) AS max_cost FROM event_log WHERE cost > 0 GROUP BY idcase
SELECT e.idcase, strftime('%s', p.timestamp) - strftime('%s', e.start_time) AS time_taken, f.activity AS end_activity FROM (SELECT idcase, MIN(timestamp) AS start_time FROM event_log GROUP BY idcase) e INNER JOIN event_log p ON e.idcase = p.idcase AND p.activity = 'End trip' LEFT JOIN event_log x ON x.idcase = e.idcase AND x.activity = 'Declaration rejected by employee' LEFT JOIN event_log y ON y.idcase = e.idcase AND y.activity = 'Payment handled' INNER JOIN (SELECT idcase, MAX(timestamp) AS end_time, activity FROM event_log WHERE activity IN ('End trip', 'Declaration rejected by employee', 'Payment handled') GROUP BY idcase, activity) f ON f.idcase = e.idcase AND f.end_time = COALESCE(x.timestamp, y.timestamp, p.timestamp) ORDER BY time_taken;
SELECT e.idcase, strftime('%s', e.start_time) - strftime('%s', (SELECT timestamp FROM event_log WHERE idcase = e.idcase ORDER BY timestamp LIMIT 1)) as 'Time to End Trip/Declaration Rejected/Payment Handled', (SELECT activity FROM event_log WHERE idcase = e.idcase AND timestamp = (SELECT MAX(timestamp) FROM event_log WHERE idcase = e.idcase AND activity IN ('End Trip', 'Declaration Rejected by Employee', 'Payment Handled'))) as 'End Activity' FROM (SELECT idcase, MIN(timestamp) as start_time FROM event_log GROUP BY idcase) e
SELECT p.idcase, f.activity, strftime('%s', f.end_time) - strftime('%s', e.start_time) AS elapsed_time FROM event_log p INNER JOIN (SELECT idcase, MIN(timestamp) AS start_time FROM event_log GROUP BY idcase) e ON e.idcase = p.idcase LEFT JOIN event_log x ON x.idcase = e.idcase AND x.activity = 'Declaration rejected by employee' LEFT JOIN event_log y ON y.idcase = e.idcase AND y.activity = 'Payment handled' INNER JOIN (SELECT idcase, MAX(CASE WHEN activity IN ('End trip', 'Declaration rejected by employee', 'Payment handled') THEN timestamp ELSE NULL END) AS end_time FROM event_log GROUP BY idcase) f ON f.idcase = e.idcase;
SELECT p.idcase, strftime('%s', p.timestamp) - strftime('%s', e.start_time) as 'End trip', strftime('%s', x.timestamp) - strftime('%s', e.start_time) as 'Declaration rejected by employee', strftime('%s', y.timestamp) - strftime('%s', e.start_time) as 'Payment handled', f.activity FROM event_log p INNER JOIN (SELECT MIN(timestamp) as start_time, idcase FROM event_log GROUP BY idcase) e ON e.idcase = p.idcase AND p.activity = 'Start trip' LEFT JOIN event_log x ON x.idcase=e.idcase AND x.activity = 'Declaration rejected by employee' LEFT JOIN event_log y ON y.idcase=e.idcase AND y.activity = 'Payment handled' INNER JOIN (SELECT MAX(timestamp) as end_time, activity, idcase FROM event_log WHERE activity='End trip' OR activity= 'Declaration rejected by employee' OR activity='Payment handled' GROUP BY idcase) f ON f.idcase=e.idcase
SELECT e.idcase, strftime('%s', p.timestamp) - strftime('%s', e.start_time) as 'End trip', strftime('%s', x.timestamp) - strftime('%s', e.start_time) as 'Declaration rejected by employee', strftime('%s', y.timestamp) - strftime('%s', e.start_time) as 'Payment handled', f.activity FROM (SELECT idcase, MIN(timestamp) as start_time FROM event_log GROUP BY idcase) e INNER JOIN event_log p ON e.idcase = p.idcase AND p.activity = 'End trip' LEFT JOIN event_log x ON x.idcase = e.idcase AND x.activity = 'Declaration rejected by employee' LEFT JOIN event_log y ON y.idcase = e.idcase AND y.activity = 'Payment handled' INNER JOIN (SELECT idcase, MAX(timestamp) as end_time, activity FROM event_log WHERE activity='End trip' OR activity= 'Declaration rejected by employee' OR activity='Payment handled' GROUP BY idcase) f ON f.idcase = e.idcase AND (f.end_time = p.timestamp OR f.end_time = x.timestamp OR f.end_time = y.timestamp)
SELECT p.idcase, strftime('%s', p.timestamp) - strftime('%s', e.start_time) as 'End trip', COALESCE(strftime('%s', x.timestamp) - strftime('%s', e.start_time), 0) as 'Declaration rejected by employee', COALESCE(strftime('%s', y.timestamp) - strftime('%s', e.start_time), 0) as 'Payment handled', CASE WHEN p.activity = 'End trip' THEN p.activity WHEN x.activity = 'Declaration rejected by employee' THEN x.activity WHEN y.activity = 'Payment handled' THEN y.activity END as 'Final Activity' FROM event_log p INNER JOIN (SELECT MIN(timestamp) as start_time, idcase FROM event_log GROUP by idcase) e ON e.idcase = p.idcase LEFT JOIN event_log x ON x.idcase = e.idcase AND x.activity = 'Declaration rejected by employee' LEFT JOIN event_log y ON y.idcase = e.idcase AND y.activity = 'Payment handled' WHERE p.activity = 'End trip' ORDER BY p.idcase;
SELECT p.idcase, p.activity, strftime('%s', p.timestamp) - strftime('%s', e.start_time) as 'Time', 'End trip' as 'End Activity' FROM event_log p INNER JOIN ( SELECT idcase, MIN(timestamp) as start_time FROM event_log GROUP BY idcase ) e ON e.idcase = p.idcase WHERE p.activity IN ('End trip', 'Declaration rejected by employee', 'Payment handled') ORDER BY p.idcase, p.timestamp;
SELECT p.idcase, p.activity, strftime('%s', p.timestamp) - strftime('%s', e.start_time) as 'Time', (strftime('%s', COALESCE(x.timestamp, y.timestamp, p.timestamp)) - strftime('%s', e.start_time)) as 'End Time' FROM event_log p INNER JOIN (SELECT MIN(timestamp) as start_time, idcase FROM event_log GROUP by idcase) e ON e.idcase = p.idcase LEFT JOIN event_log x ON x.idcase = e.idcase AND x.activity = 'Declaration rejected by employee' LEFT JOIN event_log y ON y.idcase = e.idcase AND y.activity = 'Payment handled' WHERE p.activity IN ('End trip', 'Declaration rejected by employee', 'Payment handled') ORDER BY p.idcase, p.activity;
SELECT p.idcase, p.activity AS event_of_interest, strftime('%s', p.timestamp) - strftime('%s', e.start_time) AS elapsed_time FROM event_log p INNER JOIN ( SELECT idcase, MIN(timestamp) AS start_time FROM event_log GROUP BY idcase ) e ON e.idcase = p.idcase WHERE p.activity IN ('End trip', 'Declaration rejected by employee', 'Payment handled') ORDER BY p.idcase, p.activity;
SELECT p.idcase, COALESCE( strftime('%s', p.timestamp) - strftime('%s', e.start_time), strftime('%s', x.timestamp) - strftime('%s', e.start_time), strftime('%s', y.timestamp) - strftime('%s', e.start_time) ) AS time_taken FROM event_log p INNER JOIN ( SELECT idcase, MIN(timestamp) AS start_time FROM event_log GROUP BY idcase ) e ON e.idcase = p.idcase AND p.activity = 'Start processing' LEFT JOIN event_log x ON x.idcase = e.idcase AND x.activity = 'Declaration rejected by employee' LEFT JOIN event_log y ON y.idcase = e.idcase AND y.activity = 'Payment handled' LEFT JOIN event_log z ON z.idcase = e.idcase AND z.activity = 'End trip' ORDER BY p.idcase;
SELECT * FROM event_log WHERE activity ='request payment';
SELECT * FROM event_log WHERE activity = 'Request payment';
SELECT idcase FROM event_log WHERE activity = 'Request payment' INTERSECT SELECT idcase FROM event_log WHERE activity = 'Payment made'
SELECT activity, SUM(cost) AS total_cost FROM event_log WHERE activity LIKE '%payment for declaration%' GROUP BY activity ORDER BY total_cost DESC;
SELECT activity, AVG(DATEDIFF(SECOND, timestamp, LAG(timestamp) OVER (PARTITION BY activity ORDER BY timestamp))) AS mean_duration FROM event_log GROUP BY activity
SELECT activity, AVG(TIMESTAMPDIFF(SECOND, LAG(timestamp) OVER (PARTITION BY activity ORDER BY timestamp), timestamp)) AS average_duration FROM event_log GROUP BY activity
SELECT activity, AVG(DATEDIFF(timestamp, LAG(timestamp) OVER (PARTITION BY activity ORDER BY timestamp))) AS mean_duration FROM event_log GROUP BY activity
SELECT activity, AVG(DATEDIFF(timestamp, LAG(timestamp) OVER (PARTITION BY activity ORDER BY timestamp))) AS average_duration FROM event_log GROUP BY activity
SELECT activity, AVG(DATEDIFF(timestamp, LAG(timestamp) OVER (PARTITION BY activity ORDER BY timestamp))) AS mean_duration FROM event_log GROUP BY activity
SELECT activity, AVG(DATEDIFF(SECOND, timestamp, LAG(timestamp) OVER (PARTITION BY activity ORDER BY timestamp))) AS mean_duration FROM event_log GROUP BY activity
SELECT activity, AVG(DATEDIFF(timestamp, LAG(timestamp) OVER (PARTITION BY activity ORDER BY timestamp))) AS average_duration FROM event_log GROUP BY activity
SELECT activity, AVG(DATEDIFF(timestamp, LAG(timestamp) OVER (PARTITION BY activity ORDER BY timestamp))) AS average_duration FROM event_log GROUP BY activity
SELECT activity, AVG(DATEDIFF(SECOND, timestamp, LAG(timestamp) OVER (PARTITION BY activity ORDER BY timestamp))) AS average_duration FROM event_log GROUP BY activity
SELECT activity, AVG(TIMESTAMPDIFF(SECOND, MIN(timestamp), MAX(timestamp))) AS average_duration FROM event_log GROUP BY activity;
SELECT activity, AVG(DATEDIFF(timestamp, LAG(timestamp) OVER (PARTITION BY activity ORDER BY timestamp))) AS average_duration FROM event_log GROUP BY activity
SELECT activity, AVG(cost) AS mean_duration FROM event_log GROUP BY activity;
SELECT activity, AVG(cost) AS mean_duration FROM event_log GROUP BY activity
SELECT activity, AVG(cost) AS mean_duration_time FROM event_log GROUP BY activity
SELECT activity, AVG(cost) AS mean_duration FROM event_log GROUP BY activity
SELECT activity, AVG(DATEDIFF(timestamp, LAG(timestamp) OVER (PARTITION BY activity ORDER BY timestamp))) AS average_duration FROM event_log GROUP BY activity
SELECT activity, AVG(cost) AS mean_duration FROM event_log GROUP BY activity
SELECT activity, AVG(cost) AS mean_duration FROM event_log GROUP BY activity
SELECT activity, AVG(DATEDIFF(SECOND, timestamp, LAG(timestamp) OVER (PARTITION BY activity ORDER BY timestamp))) AS mean_duration FROM event_log GROUP BY activity
SELECT activity, AVG(cost) AS mean_duration FROM event_log GROUP BY activity
SELECT activity, AVG(TIMESTAMPDIFF(SECOND, LAG(timestamp) OVER (PARTITION BY activity ORDER BY timestamp), timestamp)) AS average_duration FROM event_log GROUP BY activity
SELECT activity, AVG(TIMESTAMPDIFF(SECOND, LAG(timestamp) OVER (PARTITION BY activity ORDER BY timestamp), timestamp)) AS average_duration FROM event_log GROUP BY activity
SELECT activity, AVG(TIMESTAMPDIFF(SECOND, LAG(timestamp) OVER (PARTITION BY activity ORDER BY timestamp), timestamp)) AS average_duration FROM event_log GROUP BY activity
SELECT activity, AVG(TIMESTAMPDIFF(SECOND, timestamp, timestamp)) AS average_duration FROM event_log GROUP BY activity
SELECT activity, AVG(DATEDIFF(timestamp, LAG(timestamp) OVER (PARTITION BY activity ORDER BY timestamp))) AS average_duration FROM event_log GROUP BY activity
SELECT idcase, AVG(MAX(strftime('%s', timestamp)) - MIN(strftime('%s', timestamp))) AS average_duration FROM event_log GROUP BY idcase
SELECT * FROM event_log WHERE idcase = (SELECT idcase FROM event_log WHERE cost = (SELECT MAX(cost) FROM event_log))
SELECT idcase, MAX(cost) AS highest_cost FROM event_log GROUP BY idcase ORDER BY highest_cost DESC;
SELECT idcase, MAX(cost) AS max_cost FROM event_log GROUP BY idcase HAVING MAX(cost) = (SELECT MAX(cost) FROM event_log)
SELECT * FROM event_log WHERE cost = (SELECT MAX(cost) FROM event_log) AND idcase IN ( SELECT idcase FROM event_log WHERE cost = (SELECT MAX(cost) FROM event_log) )
SELECT * FROM event_log WHERE cost = (SELECT MAX(cost) FROM event_log)
SELECT * FROM event_log WHERE cost = (SELECT MAX(cost) FROM event_log)
SELECT idcase, SUM(cost) AS total_cost FROM event_log GROUP BY idcase ORDER BY total_cost DESC LIMIT 1;
SELECT * FROM event_log WHERE cost IN (SELECT MAX(cost) FROM event_log)
SELECT * FROM event_log WHERE cost IN (SELECT MAX(cost) FROM event_log)
SELECT * FROM event_log WHERE cost = (SELECT MAX(cost) FROM event_log)
SELECT * FROM event_log WHERE cost = (SELECT MAX(cost) FROM event_log)
SELECT * FROM event_log WHERE cost = (SELECT MAX(cost) FROM event_log)
SELECT * FROM event_log WHERE cost = (SELECT MAX(cost) FROM event_log)
SELECT * FROM event_log WHERE cost IN (SELECT MAX(cost) FROM event_log)
SELECT * FROM event_log WHERE cost IN (SELECT MAX(cost) FROM event_log)
SELECT * FROM event_log WHERE cost = (SELECT MAX(cost) FROM event_log)
SELECT * FROM event_log ORDER BY cost DESC LIMIT 1;
SELECT * FROM event_log WHERE cost = (SELECT MAX(cost) FROM event_log)
SELECT * FROM event_log WHERE cost = (SELECT MAX(cost) FROM event_log)
SELECT * FROM event_log WHERE cost = (SELECT MAX(cost) FROM event_log)
SELECT * FROM event_log WHERE cost = (SELECT MAX(cost) FROM event_log)
SELECT * FROM event_log WHERE cost = (SELECT MAX(cost) FROM event_log)
SELECT * FROM event_log WHERE cost = (SELECT MAX(cost) FROM event_log)
SELECT idcase, cost FROM event_log WHERE cost = (SELECT MAX(cost) FROM event_log)
SELECT * FROM event_log WHERE activity ='start trip';
SELECT * FROM event_log WHERE activity ='start trip';
SELECT * FROM event_log WHERE activity ='start trip';
SELECT * FROM event_log WHERE activity = 'Start trip';
SELECT * FROM event_log WHERE activity ='start trip';
SELECT * FROM event_log WHERE activity ='start trip';
SELECT * FROM event_log WHERE activity ='start trip';
SELECT * FROM event_log WHERE activity = 'Start trip';
SELECT * FROM event_log WHERE activity ='start trip';
SELECT * FROM event_log WHERE activity ='start trip';
SELECT * FROM event_log WHERE activity = 'Start trip';
SELECT * FROM event_log WHERE activity ='start trip';
SELECT * FROM event_log WHERE activity ='start trip';
SELECT * FROM event_log WHERE activity ='start trip';
SELECT * FROM event_log WHERE activity ='start trip';
SELECT * FROM event_log WHERE activity = 'Start trip';
SELECT * FROM event_log WHERE activity = 'Start trip';
SELECT select DISTINCT idcase FROM (select idcase, timestamp, activity FROM event_log GROUP BY idcase HAVING strftime('%Y-%m', MIN(timestamp)) = '2017-03') WHERE activity = 'Start trip';
SELECT activity, COUNT(*) as total_records FROM event_log GROUP BY activity
SELECT activity, COUNT(*) as total_performances FROM event_log GROUP BY activity
SELECT activity, COUNT(*) AS total_performances FROM event_log GROUP BY activity
SELECT activity, COUNT(*) as num_events FROM event_log GROUP BY activity
SELECT activity, count(*) as frequency FROM event_log GROUP BY activity
SELECT COUNT(*) AS num_performances, activity FROM event_log GROUP BY activity;
SELECT activity, COUNT(*) as event_count FROM event_log GROUP BY activity
SELECT activity, COUNT(*) FROM event_log GROUP BY activity
SELECT activity, COUNT(*) as num_events FROM event_log GROUP BY activity
SELECT activity, COUNT(*) as num_events FROM event_log GROUP BY activity
SELECT activity, COUNT(*) AS num_events FROM event_log GROUP BY activity
SELECT activity, COUNT(*) as event_count FROM event_log GROUP BY activity
SELECT activity, COUNT(*) as total_performances FROM event_log GROUP BY activity
SELECT activity, COUNT(*) as total_performances FROM event_log GROUP BY activity
SELECT activity, COUNT(*) as event_count FROM event_log GROUP BY activity;
SELECT activity, COUNT(*) as count FROM event_log GROUP BY activity
SELECT activity, COUNT(*) as num_performances FROM event_log GROUP BY activity
SELECT activity, count(*) as intervention_count FROM event_log GROUP BY activity;
SELECT activity, COUNT(*) as count FROM event_log WHERE idcase = 'declarations' GROUP BY activity ORDER BY count DESC;
SELECT activity, COUNT(*) as count FROM event_log GROUP BY activity ORDER BY count DESC;
SELECT activity, count(*) as num_interventions FROM event_log WHERE activity LIKE '%intervention%' GROUP BY activity
SELECT COUNT(*), activity FROM event_log WHERE activity LIKE 'intervention%' GROUP BY activity;
SELECT activity, count(*) as num_interventions FROM event_log WHERE activity LIKE '%intervention%' GROUP BY activity
SELECT idcase, COUNT(*) as num_interventions FROM event_log GROUP BY idcase
SELECT activity, resource, SUM(cost) FROM event_log GROUP BY activity, resource;
SELECT activity, cost FROM event_log WHERE cost IS NOT NULL ORDER BY cost
SELECT activity, resource, SUM(cost) as total_cost FROM event_log GROUP BY activity, resource;
SELECT activity, cost FROM event_log ORDER BY cost;
SELECT activity, resource, SUM(cost) from event_log group by activity, resource
SELECT activity, resource, SUM(cost) FROM event_log GROUP BY activity, resource;
SELECT activity, SUM(cost) AS total_cost FROM event_log GROUP BY activity ORDER BY total_cost DESC;
SELECT id, activity, resource, cost FROM event_log WHERE activity LIKE '%declaration processing%' ORDER BY cost DESC;
SELECT idcase FROM event_log WHERE activity LIKE 'Permit%' GROUP BY idcase HAVING COUNT(*) > 1
SELECT idcase FROM event_log WHERE activity LIKE 'Permit%' GROUP BY idcase HAVING COUNT(*) > 1;
SELECT * FROM event_log WHERE activity LIKE '%permit%' ORDER BY timestamp;
SELECT * FROM event_log WHERE activity LIKE 'Permit%';
SELECT * FROM event_log WHERE activity LIKE 'Permit%';
SELECT * FROM event_log WHERE activity = 'permit'
SELECT DISTINCT resource, COUNT(*) AS permit_count FROM event_log WHERE activity LIKE 'Permit%' GROUP BY resource;
SELECT idcase, COUNT(*) FROM event_log WHERE activity LIKE 'Permit%' GROUP by idcase
SELECT * FROM event_log WHERE activity = 'permit';
SELECT DISTINCT resource, idcase FROM event_log WHERE activity LIKE 'Permit%';
SELECT select idcase from event_log where activity like 'Permit%' GROUP BY idcase HAVING count(*) > 1
SELECT * FROM event_log WHERE activity LIKE 'Permit%' AND idcase IS NOT NULL;
SELECT MAX(cost) AS highest_cost FROM event_log;
SELECT MAX(cost) AS highest_cost FROM event_log;
SELECT MAX(cost) AS highest_cost FROM event_log;
SELECT MAX(cost) AS highest_cost FROM event_log;
SELECT MAX(cost) AS highest_cost FROM event_log;
SELECT MAX(cost) AS most_expensive_cost FROM event_log
SELECT idcase FROM event_log WHERE resource = 'Sara' AND resource = 'Thomas'
SELECT DISTINCT idcase FROM event_log WHERE resource = 'Sara' AND resource = 'Thomas'
SELECT DISTINCT idcase FROM event_log WHERE resource = 'Sara' OR resource = 'Thomas';
SELECT DISTINCT idcase FROM event_log WHERE resource = 'Sara' AND resource = 'Thomas';
SELECT DISTINCT idcase FROM event_log WHERE resource = 'Sara' AND resource = 'Thomas'
SELECT DISTINCT idcase FROM event_log WHERE resource = 'Sara' AND resource = 'Thomas'
SELECT COUNT(*), resource FROM event_log WHERE activity = 'declaration rejected by administration' GROUP BY resource
SELECT COUNT(*), resource FROM event_log WHERE activity = 'Declaration rejected by administration' GROUP BY resource
SELECT COUNT(*), resource FROM event_log WHERE activity = 'Declaration rejected by administration' GROUP BY resource
SELECT COUNT(*), resource FROM event_log WHERE activity = 'Declaration rejected by administration' GROUP BY resource
SELECT COUNT(*), resource FROM event_log WHERE activity = 'Declaration rejected by administration' GROUP BY resource
SELECT COUNT(*), resource FROM event_log WHERE activity = 'Declaration rejected by administration' GROUP BY resource
SELECT COUNT(*), resource FROM event_log WHERE activity = 'Declaration rejected by administration' GROUP BY resource
SELECT COUNT(*), resource FROM event_log WHERE activity = 'Declaration rejected by administration' GROUP BY resource
SELECT resource, COUNT(*) as count FROM event_log WHERE activity = 'Declaration rejected by administration' GROUP BY resource
SELECT COUNT(*), resource FROM event_log WHERE activity = 'Declaration rejected by administration' GROUP BY resource
SELECT resource, COUNT(*) as count FROM event_log WHERE activity = 'Declaration rejected by administration' GROUP BY resource
SELECT idcase, resource, COUNT(*) FROM event_log WHERE activity = 'Declaration rejected by administration' GROUP BY idcase, resource
SELECT idcase, resource, COUNT(*) FROM event_log WHERE activity = 'Declaration rejected by administration' GROUP BY idcase, resource
SELECT idcase, resource, COUNT(*) AS count FROM event_log WHERE activity = 'Declaration rejected by administration' GROUP BY idcase, resource
SELECT idcase, resource, COUNT(*) FROM event_log WHERE activity = 'Declaration rejected by administration' GROUP BY idcase, resource
SELECT idcase, resource, COUNT(*) FROM event_log WHERE activity = 'Declaration rejected by administration' GROUP BY idcase, resource
SELECT resource, COUNT(*) AS count FROM event_log WHERE activity = 'Declaration rejected by administration' GROUP BY resource
SELECT idcase, resource, COUNT(*) as count FROM event_log WHERE activity = 'Declaration rejected by administration' GROUP BY idcase, resource
SELECT idcase, resource, COUNT(*) FROM event_log WHERE activity = 'Declaration rejected by administration' GROUP BY idcase, resource
SELECT idcase, resource, COUNT(*) FROM event_log WHERE activity = 'Declaration rejected by administration' GROUP BY idcase, resource
SELECT idcase, COUNT(*) as count_rejections, resource FROM event_log WHERE activity = 'Declaration rejected by administration' GROUP BY idcase, resource
SELECT AVG(cost) FROM event_log WHERE activity NOT IN ('start trip', 'end trip')
SELECT AVG(cost) FROM event_log WHERE activity NOT IN ('start trip', 'end trip')
SELECT AVG(cost) FROM event_log WHERE activity NOT IN ('start trip', 'end trip')
SELECT AVG(cost) FROM event_log WHERE activity NOT IN ('start trip', 'end trip')
SELECT AVG(cost) FROM event_log WHERE activity NOT IN ('Start trip', 'End trip');
SELECT AVG(cost) FROM event_log WHERE activity NOT IN ('Start trip', 'End trip');
SELECT AVG(cost) FROM event_log WHERE activity NOT IN ('Start trip', 'End trip');
SELECT AVG(cost) FROM event_log WHERE activity NOT IN ('start trip', 'end trip');
SELECT AVG(cost) FROM event_log WHERE activity NOT IN ('start trip', 'end trip');
SELECT AVG(cost) AS average_cost FROM event_log WHERE activity NOT LIKE 'trip_start%' AND activity NOT LIKE 'trip_end%'
SELECT * FROM event_log ORDER BY cost DESC LIMIT 5;
SELECT * FROM event_log ORDER BY cost DESC LIMIT 5;
SELECT * FROM event_log ORDER BY cost DESC LIMIT 5;
SELECT * FROM event_log ORDER BY cost DESC LIMIT 5;
SELECT * FROM event_log ORDER BY cost DESC LIMIT 5;
SELECT * FROM event_log ORDER BY cost DESC LIMIT 5;
SELECT * FROM event_log WHERE cost IN ( SELECT cost FROM event_log ORDER BY cost DESC LIMIT 5 )
SELECT cost, activity FROM event_log ORDER BY cost DESC;
SELECT * FROM event_log ORDER BY cost DESC LIMIT 5;
SELECT * FROM event_log ORDER BY cost DESC LIMIT 5;
SELECT * FROM event_log ORDER BY cost DESC LIMIT 5;
SELECT * FROM event_log ORDER BY cost DESC LIMIT 5;
SELECT * FROM event_log ORDER BY cost DESC LIMIT 5;
SELECT * FROM event_log ORDER BY cost DESC LIMIT 5;
SELECT * FROM event_log ORDER BY cost DESC LIMIT 5;
SELECT * FROM event_log ORDER BY cost DESC LIMIT 5;
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(*) > 1
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(*) > 1;
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(*) > 1
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(*) > 1
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(*) > 1
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(DISTINCT activity) > 1
SELECT idcase, activity FROM event_log GROUP BY idcase, activity HAVING COUNT(activity) > 1
SELECT DISTINCT idcase FROM event_log GROUP BY idcase HAVING COUNT(DISTINCT activity) > 1;
SELECT idcase, COUNT(*) as count FROM event_log WHERE activity IS NOT NULL GROUP BY idcase HAVING COUNT(*) > 1
SELECT idcase, activity FROM event_log GROUP BY idcase, activity HAVING COUNT(*) > 1
SELECT DISTINCT idcase FROM event_log GROUP BY idcase, activity HAVING COUNT(*) > 1
SELECT * FROM event_log WHERE timestamp BETWEEN '2018-10-01' AND '2018-10-02';
SELECT * FROM event_log WHERE timestamp BETWEEN '2018-10-01' AND '2018-10-02';
SELECT * FROM event_log WHERE timestamp BETWEEN '2018-10-01' AND '2018-10-02'
SELECT COUNT(*), activity FROM event_log WHERE timestamp < '2017-01-10' GROUP BY activity HAVING COUNT(*) > 1
SELECT * FROM event_log WHERE timestamp BETWEEN '2018-10-01' AND '2018-10-02'
SELECT * FROM event_log WHERE timestamp BETWEEN '2018-10-01' AND '2018-10-02';
SELECT * FROM event_log WHERE timestamp BETWEEN '2018-10-01' AND '2018-10-02'
SELECT * FROM event_log WHERE timestamp BETWEEN '2018-10-01' AND '2018-10-02'
SELECT * FROM event_log WHERE timestamp BETWEEN '2018-10-01' AND '2018-10-02'
SELECT * FROM event_log WHERE timestamp BETWEEN '2018-10-01' AND '2018-10-02'
SELECT * FROM event_log WHERE timestamp BETWEEN '2018-10-01' AND '2018-10-02'
SELECT * FROM event_log WHERE strftime('%Y-%m-%d', timestamp) IN ('2018-10-01', '2018-10-02');
SELECT * FROM event_log WHERE activity = 'End trip' AND strftime('%Y-%m-%d', timestamp)!= '2017-12-12';
SELECT * FROM event_log WHERE timestamp BETWEEN '2018-10-01' AND '2018-10-02';
SELECT * FROM event_log WHERE timestamp BETWEEN '2018-10-01' AND '2018-10-02';
SELECT * FROM event_log WHERE idcase = 'declaration 143598' AND timestamp BETWEEN '2018-10-01' AND '2018-10-02'
SELECT activity, idcase FROM event_log WHERE timestamp BETWEEN '2018-10-01' AND '2018-10-02'
SELECT DISTINCT activity FROM event_log WHERE timestamp BETWEEN '2018-10-01' AND '2018-10-02'
SELECT * FROM event_log WHERE timestamp BETWEEN '2018-10-01' AND '2018-10-02'
SELECT * FROM event_log WHERE resource LIKE 'M%';
SELECT * FROM event_log WHERE resource LIKE 'M%';
SELECT * FROM event_log WHERE resource LIKE 'M%'
SELECT * FROM event_log WHERE resource LIKE 'M%'
SELECT * FROM event_log WHERE resource LIKE 'M%';
SELECT activity, timestamp, resource, cost, idcase FROM event_log WHERE resource COLLATE NOCASE LIKE 'M%' ORDER BY resource;
SELECT activity, COUNT(*) as count FROM event_log WHERE resource LIKE 'M%' AND activity LIKE '%declaration%' GROUP BY activity ORDER BY count DESC;
SELECT * FROM event_log JOIN employees ON event_log.resource = employees.name WHERE employees.name LIKE 'M%' AND activity = 'intervention'
SELECT activity FROM event_log GROUP BY activity HAVING COUNT(*) > 5
SELECT activity FROM event_log GROUP BY activity HAVING COUNT(*) > 5;
SELECT activity FROM event_log GROUP BY activity HAVING COUNT(*) > 5;
SELECT activity FROM event_log GROUP BY activity HAVING COUNT(*) > 5;
SELECT DISTINCT activity FROM event_log GROUP BY activity HAVING COUNT(*) > 5;
SELECT DISTINCT activity FROM event_log GROUP BY activity HAVING COUNT(activity) > 5;
SELECT DISTINCT activity FROM event_log GROUP BY activity HAVING COUNT(*) > 5;
SELECT DISTINCT activity FROM event_log GROUP BY activity HAVING COUNT(activity) > 5;
SELECT activity FROM event_log GROUP BY activity HAVING COUNT(*) > 5;
SELECT activity FROM event_log GROUP BY activity HAVING COUNT(*) > 5;
SELECT activity FROM event_log GROUP BY activity HAVING COUNT(activity) > 5;
SELECT activity FROM event_log GROUP BY activity HAVING COUNT(*) > 5;
SELECT idcase, activity FROM event_log GROUP BY idcase, activity HAVING COUNT(*) > 3
SELECT idcase, activity FROM event_log GROUP BY idcase, activity HAVING COUNT(*) > 3
SELECT idcase, activity FROM event_log GROUP BY idcase, activity HAVING COUNT(*) > 3
SELECT idcase, activity FROM event_log GROUP BY idcase, activity HAVING COUNT(*) > 3
SELECT idcase, activity FROM event_log GROUP BY idcase, activity HAVING COUNT(*) > 3
SELECT idcase, activity FROM event_log GROUP BY idcase, activity HAVING COUNT(*) > 3
SELECT idcase, activity FROM event_log GROUP BY idcase, activity HAVING COUNT(*) > 3
SELECT idcase, activity FROM event_log GROUP BY idcase, activity HAVING COUNT(*) > 3
SELECT idcase, activity FROM event_log GROUP BY idcase, activity HAVING COUNT(*) > 3
SELECT idcase, activity FROM event_log GROUP BY idcase, activity HAVING COUNT(*) > 3
SELECT idcase, activity, COUNT(*) as count FROM event_log GROUP BY idcase, activity HAVING COUNT(*) > 3
SELECT COUNT(*) FROM event_log WHERE idcase = 'declaration 56300';
SELECT SUM(cost) AS total_cost FROM event_log WHERE idcase = 'declaration 56300'
SELECT COUNT(*) FROM event_log WHERE idcase = 'declaration 56300';
SELECT COUNT(*) FROM event_log WHERE idcase = 'declaration 56300';
SELECT COUNT(*) FROM event_log WHERE idcase = 'declaration 56300';
SELECT COUNT(*) FROM event_log WHERE idcase = 'declaration 56300';
SELECT COUNT(*) FROM event_log WHERE idcase = '56300';
SELECT activity, COUNT(*) as frequency FROM event_log WHERE timestamp < '2017-10-01' GROUP BY activity HAVING COUNT(*) > 1
SELECT activity, COUNT(*) as count FROM event_log WHERE timestamp < '2017-01-10' GROUP BY activity HAVING COUNT(*) > 1
SELECT activity, count(*) as count FROM event_log WHERE timestamp < '2017-01-10' AND activity IN ( SELECT activity FROM event_log GROUP BY activity HAVING count(*) > 1 ) GROUP BY activity;
SELECT activity, count(*) as frequency FROM event_log WHERE timestamp < '2017-01-10' GROUP BY activity HAVING count(*) > 1
SELECT activity, count(*) as count FROM event_log WHERE timestamp < '2017-01-10' GROUP BY activity HAVING count(*) > 1;
SELECT activity, COUNT(*) FROM event_log WHERE timestamp < '2017-10-01' GROUP BY activity HAVING COUNT(*) > 1;
SELECT activity, COUNT(*) as count FROM event_log WHERE timestamp < '2017-10-01' GROUP BY activity HAVING COUNT(*) > 1
SELECT activity, count(*) as frequency FROM event_log WHERE timestamp < '2017-01-10' GROUP BY activity HAVING count(*) > 1
SELECT activity, count(*) as frequency FROM event_log WHERE timestamp < '2017-01-10' GROUP BY activity HAVING count(*) > 1
SELECT activity, COUNT(*) AS frequency FROM event_log WHERE timestamp < '2017-10-01' GROUP BY activity ORDER BY frequency DESC;
SELECT activity, count(*) FROM event_log WHERE activity IN (SELECT activity FROM event_log GROUP BY activity HAVING count(*) > 1) AND timestamp < '2017-01-10' GROUP BY activity
SELECT resource, COUNT(DISTINCT idcase) AS num_cases FROM event_log GROUP BY resource
SELECT COUNT(DISTINCT idcase), resource FROM event_log GROUP BY resource
SELECT resource, COUNT(DISTINCT idcase) as num_cases FROM event_log GROUP BY resource
SELECT resource, count(distinct idcase) FROM event_log group by resource
SELECT resource, COUNT(idcase) as num_cases FROM event_log GROUP BY resource
SELECT resource, count(distinct idcase) FROM event_log group by resource
SELECT resource, COUNT(DISTINCT idcase) AS num_cases FROM event_log GROUP BY resource
SELECT resource, count(distinct idcase) as num_cases FROM event_log GROUP BY resource
SELECT COUNT(DISTINCT idcase), resource FROM event_log GROUP BY resource
SELECT resource, count(distinct idcase) AS num_instances FROM event_log GROUP BY resource
SELECT idcase, COUNT(DISTINCT resource) AS num_declarations FROM event_log GROUP BY idcase
SELECT resource, COUNT(*) as total_events FROM event_log GROUP BY resource
SELECT resource, COUNT(*) AS allocation_count FROM event_log GROUP BY resource
SELECT COUNT(*) as count, resource FROM event_log GROUP BY resource
SELECT resource, COUNT(*) AS num_events FROM event_log GROUP BY resource
SELECT resource, COUNT(*) as num_occurrences FROM event_log GROUP BY resource
SELECT resource, COUNT(*) as activity_count FROM event_log GROUP BY resource
SELECT resource, COUNT(*) as count FROM event_log GROUP BY resource
SELECT resource, COUNT(*) AS num_interventions FROM event_log WHERE activity LIKE '%intervention%' GROUP BY resource
SELECT idcase FROM event_log WHERE resource IN ('Sara', 'Thomas', 'Diana');
SELECT idcase FROM event_log WHERE resource IN ('Thomas', 'Diana', 'Sara')
SELECT idcase FROM event_log WHERE resource IN ('Thomas', 'Diana', 'Sara')
SELECT idcase FROM event_log WHERE resource = 'Thomas' UNION SELECT idcase FROM event_log WHERE resource = 'Diana' UNION SELECT idcase FROM event_log WHERE resource = 'Sara'
SELECT idcase FROM event_log WHERE resource = 'Thomas' UNION SELECT idcase FROM event_log WHERE resource = 'Diana' UNION SELECT idcase FROM event_log WHERE resource = 'Sara'
SELECT COUNT(DISTINCT idcase), resource FROM event_log WHERE timestamp BETWEEN '2017-05-01' AND '2017-06-01' GROUP BY resource
SELECT resource, COUNT(DISTINCT idcase) FROM event_log WHERE timestamp BETWEEN '2017-05-01' AND '2017-06-01' GROUP BY resource
SELECT resource, count(DISTINCT idcase) AS num_cases FROM event_log WHERE timestamp BETWEEN '2017-05-01' AND '2017-06-01' GROUP BY resource;
SELECT resource, count(DISTINCT idcase) FROM event_log WHERE timestamp BETWEEN '2017-05-01' AND '2017-06-01' GROUP BY resource
SELECT resource, count(DISTINCT idcase) FROM event_log WHERE timestamp BETWEEN '2017-05-01' AND '2017-06-01' GROUP BY resource
SELECT COUNT(DISTINCT idcase), resource FROM event_log WHERE timestamp BETWEEN '2017-05-01' AND '2017-06-01' GROUP BY resource
SELECT COUNT(DISTINCT idcase), resource FROM event_log WHERE timestamp BETWEEN '2017-05-01' AND '2017-06-01' GROUP BY resource
SELECT COUNT(DISTINCT idcase), resource FROM event_log WHERE timestamp BETWEEN '2017-05-01' AND '2017-06-01' GROUP BY resource
SELECT COUNT(DISTINCT idcase), resource FROM event_log WHERE timestamp BETWEEN '2017-05-01' AND '2017-06-01' GROUP BY resource
SELECT COUNT(DISTINCT idcase), resource FROM event_log WHERE timestamp BETWEEN '2017-05-01' AND '2017-06-01' GROUP BY resource
SELECT COUNT(DISTINCT idcase), resource FROM event_log WHERE timestamp BETWEEN '2017-05-01' AND '2017-06-01' GROUP BY resource
SELECT resource, COUNT(DISTINCT idcase) AS num_declarations FROM event_log WHERE activity LIKE '%intervention%' AND timestamp BETWEEN '2017-05-01' AND '2017-06-01' GROUP BY resource
SELECT DISTINCT activity, resource FROM event_log WHERE resource NOT IN ('Joshua', 'Teresa')
SELECT activity, resource FROM event_log WHERE resource NOT IN ('Joshua', 'Teresa')
SELECT DISTINCT activity, resource FROM event_log WHERE resource NOT IN ('Joshua', 'Teresa') ORDER BY activity, resource;
SELECT DISTINCT activity, resource FROM event_log WHERE activity LIKE '%intervention%' AND resource NOT IN ('Joshua', 'Teresa')
SELECT grupo, COUNT(DISTINCT idcase) AS num_declarations FROM event_log WHERE activity LIKE '%employee%' OR activity LIKE '%supervisor%' OR activity LIKE '%administration%' OR activity LIKE '%pre-approver%' OR activity LIKE '%budget owner%' OR activity LIKE '%director%' GROUP BY grupo;
SELECT idcase FROM event_log WHERE activity IN ('Start trip', 'End trip') AND idcase NOT IN ( SELECT idcase FROM event_log WHERE activity IN ('Request Payment', 'Payment handled') )
SELECT DISTINCT idcase FROM event_log WHERE activity IN ('Start trip', 'End trip') AND idcase NOT IN ( SELECT idcase FROM event_log WHERE activity IN ('Request Payment', 'Payment handled') )
SELECT idcase FROM event_log WHERE idcase NOT IN ( SELECT idcase FROM event_log WHERE activity = 'Request payment' OR activity = 'Payment handled' ) AND (activity = 'Start trip' OR activity = 'End trip');
SELECT DISTINCT idcase FROM event_log WHERE idcase IN ( SELECT idcase FROM event_log WHERE activity = 'Start trip' OR activity = 'Trip end' ) AND idcase NOT IN ( SELECT idcase FROM event_log WHERE activity = 'Request payment' OR activity = 'Payment handled' )
SELECT DISTINCT idcase FROM event_log WHERE (activity ='start trip' OR activity = 'end trip') AND idcase NOT IN ( SELECT idcase FROM event_log WHERE activity IN ('request payment', 'payment handled') )
SELECT idcase FROM event_log WHERE activity NOT IN ('Request payment', 'Payment handled') AND idcase NOT IN ( SELECT idcase FROM event_log WHERE activity = 'Request payment' OR activity = 'Payment handled' )
SELECT idcase FROM event_log WHERE activity IN ('Start trip', 'End trip') AND NOT EXISTS ( SELECT 1 FROM event_log WHERE activity IN ('Request Payment', 'Payment handled') AND idcase = event_log.idcase )
SELECT DISTINCT idcase FROM event_log WHERE activity IN ('Start trip', 'End trip') AND idcase NOT IN ( SELECT idcase FROM event_log WHERE activity IN ('Request Payment', 'Payment handled') )
SELECT DISTINCT idcase FROM event_log WHERE activity IN ('Start trip', 'End trip') AND idcase NOT IN ( SELECT idcase FROM event_log WHERE activity IN ('Request Payment', 'Payment handled') )
SELECT DISTINCT idcase FROM event_log WHERE activity IN ('Start trip', 'End trip') AND idcase NOT IN ( SELECT idcase FROM event_log WHERE activity IN ('Request Payment', 'Payment handled') )
SELECT * FROM event_log WHERE resource IS NULL;
SELECT * FROM event_log WHERE resource IS NULL OR resource = ''
SELECT activity FROM event_log WHERE resource IS NULL
SELECT * FROM event_log WHERE resource IS NULL;
SELECT activity, timestamp FROM event_log WHERE resource IS NULL;
SELECT el.activity FROM event_log el LEFT JOIN ( SELECT DISTINCT resource FROM event_log ) r ON el.resource = r.resource WHERE r.resource IS NULL
SELECT * FROM event_log WHERE resource IS NULL
SELECT idcase, resource, count(*) FROM event_log WHERE cost IS NULL GROUP BY idcase, resource;
SELECT idcase FROM event_log GROUP BY idcase HAVING strftime('%Y-%m', MIN(timestamp)) < '2017-03'
SELECT idcase FROM event_log WHERE strftime('%Y-%m', timestamp) < '2017-03' GROUP BY idcase
SELECT idcase, activity, timestamp FROM event_log WHERE timestamp < '2017-03-01' AND id = (SELECT MIN(id) FROM event_log WHERE activity = event_log.activity AND timestamp < '2017-03-01')
SELECT idcase FROM event_log WHERE timestamp < '2017-03-01';
SELECT idcase FROM event_log WHERE timestamp < '2017-03-01' GROUP BY idcase
SELECT idcase FROM event_log WHERE activity = (SELECT activity FROM event_log WHERE timestamp < '2017-03-01' ORDER BY timestamp LIMIT 1)
SELECT * FROM event_log WHERE timestamp < '2017-03-01';
SELECT DISTINCT(idcase) FROM event_log WHERE timestamp < '2017-03-01 00:00:00' ORDER BY idcase;
SELECT DISTINCT(idcase) FROM event_log WHERE timestamp < '2017-03-01'
SELECT DISTINCT idcase FROM event_log WHERE timestamp < '2017-03-01'
SELECT idcase FROM event_log WHERE activity = 'Start trip' AND timestamp >= '2017-03-01' AND timestamp < '2017-04-01'
SELECT idcase, timestamp FROM event_log WHERE activity = 'Start trip' AND timestamp BETWEEN '2017-03-01 00:00:00' AND '2017-03-31 23:59:59' ORDER BY timestamp ASC LIMIT 1;
SELECT idcase FROM event_log WHERE activity = 'Start trip' AND timestamp BETWEEN '2017-03-01' AND '2017-03-31';
SELECT DISTINCT idcase FROM event_log WHERE activity = 'Start trip' AND timestamp LIKE '2017-03-%' ORDER BY idcase;
SELECT DISTINCT idcase FROM event_log WHERE activity ='start trip' AND timestamp BETWEEN '2017-03-01' AND '2017-03-31' AND id NOT IN ( SELECT id FROM event_log WHERE activity!='start trip' )
SELECT DISTINCT idcase FROM event_log WHERE activity ='start trip' AND timestamp BETWEEN '2017-03-01' AND '2017-03-31' ORDER BY idcase;
SELECT idcase FROM event_log WHERE timestamp >= '2017-03-01' AND activity LIKE'start of trip information' GROUP BY idcase
SELECT resource, idcase, COUNT(*) as count FROM event_log GROUP BY resource, idcase HAVING COUNT(*) > 5
SELECT resource FROM event_log GROUP BY resource, idcase HAVING COUNT(*) > 5
SELECT resource, idcase, COUNT(*) as count FROM event_log GROUP BY resource, idcase HAVING COUNT(*) > 5
SELECT resource FROM event_log GROUP BY resource, idcase HAVING COUNT(*) > 5;
SELECT resource FROM event_log GROUP BY resource, idcase HAVING COUNT(*) > 5;
SELECT resource FROM event_log GROUP BY resource, idcase HAVING COUNT(*) > 5
SELECT resource, idcase, COUNT(*) as num_events FROM event_log GROUP BY resource, idcase HAVING COUNT(*) > 5;
SELECT resource FROM event_log GROUP BY resource HAVING COUNT(*) > 5
SELECT resource, idcase, COUNT(*) as count FROM event_log GROUP BY resource, idcase HAVING COUNT(*) > 5
SELECT idcase, COUNT(*) as num_interventions FROM event_log GROUP BY idcase HAVING COUNT(*) > 5
SELECT resource, idcase, COUNT(*) FROM event_log GROUP BY resource, idcase HAVING COUNT(*) > 5;
SELECT activity, COUNT(*) as frequency FROM event_log GROUP BY activity ORDER BY frequency DESC LIMIT 1;
SELECT activity, COUNT(*) as frequency FROM event_log GROUP BY activity ORDER BY frequency DESC;
SELECT activity FROM ( SELECT activity, COUNT(*) AS frequency FROM event_log GROUP BY activity ORDER BY COUNT(*) DESC ) AS most_frequent_activities WHERE frequency = (SELECT MAX(frequency) FROM ( SELECT activity, COUNT(*) AS frequency FROM event_log GROUP BY activity ) AS frequency_table);
SELECT activity FROM event_log GROUP BY activity ORDER BY COUNT(*) DESC LIMIT 1;
SELECT activity, COUNT(*) as frequency FROM event_log WHERE idcase LIKE '%declaration%' -- assuming idcase contains the word "declaration" GROUP BY activity ORDER BY frequency DESC LIMIT 5;
SELECT resource, COUNT(*) as count FROM event_log WHERE activity = 'Declaration final approved by supervisor' GROUP BY resource ORDER BY count DESC LIMIT 10;
SELECT resource FROM event_log WHERE activity = 'Declaration final approved by supervisor' GROUP BY resource ORDER BY COUNT(*) DESC LIMIT 10;
SELECT resource, COUNT(*) as count FROM event_log WHERE activity = 'Declaration final approved by supervisor' GROUP BY resource ORDER BY count DESC LIMIT 10;
SELECT resource, COUNT(*) as count FROM event_log WHERE activity = 'Declaration final approved by supervisor' GROUP BY resource ORDER BY count DESC;
SELECT resource, COUNT(*) as count FROM event_log WHERE activity = 'Declaration final approved by supervisor' GROUP BY resource ORDER BY COUNT(*) DESC;
SELECT resource, COUNT(*) as frequency FROM event_log WHERE activity = 'Declaration final approved by supervisor' GROUP BY resource ORDER BY frequency DESC;
SELECT resource, COUNT(*) as frequency FROM event_log WHERE activity = 'Declaration final approved by supervisor' GROUP BY resource ORDER BY frequency DESC;
SELECT resource FROM event_log WHERE activity = 'Declaration final approved by supervisor' GROUP BY resource ORDER BY COUNT(*) DESC LIMIT 10;
SELECT COUNT(*) FROM event_log WHERE activity = 'declaration approved by budget owner' AND resource IN ('Eugene', 'Marie');
SELECT COUNT(*) FROM event_log WHERE activity LIKE '%declaration approved by budget owner%' AND (resource LIKE '%Eugene%' OR resource LIKE '%Marie%')
SELECT COUNT(*) FROM event_log WHERE activity = 'declaration approved by budget owner' AND resource IN ('Eugene', 'Marie');
SELECT COUNT(*) FROM event_log WHERE activity = 'declaration approved by budget owner' AND (resource = 'Eugene' OR resource = 'Marie')
SELECT COUNT(*) FROM event_log WHERE activity = 'declaration approved by budget owner' AND resource IN ('Eugene', 'Marie');
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE activity = 'declaration approved by budget owner' AND resource IN ('Eugine', 'Marie');
SELECT COUNT(*) FROM event_log WHERE activity = 'declaration approved by budget owner' AND resource IN ('Eugine', 'Marie');
SELECT resource, COUNT(*) as num_declarations FROM event_log WHERE activity LIKE '%approved%' AND activity LIKE '%budget holder%' AND resource IN ('Eugene', 'Marie') GROUP BY resource;
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE activity = 'approved' AND (resource = 'Eugene' OR resource = 'Marie');
SELECT activity FROM event_log WHERE idcase = '49464' EXCEPT SELECT activity FROM event_log WHERE idcase = '76667';
SELECT activity FROM event_log WHERE idcase = 'declaration 49464' EXCEPT SELECT activity FROM event_log WHERE idcase = 'declaration 76667'
SELECT DISTINCT activity FROM event_log WHERE idcase IN ('declaration 49464', 'declaration 76667') AND idcase NOT IN ('declaration 76667')
SELECT * FROM event_log WHERE id = 49464 EXCEPT SELECT * FROM event_log WHERE id = 76667;
SELECT resource, count(*) as count FROM event_log WHERE activity = 'Declaration submitted by employee' GROUP BY resource HAVING count(*) > 2
SELECT resource, count(*) as performance_count FROM event_log WHERE activity = 'Declaration submitted by employee' GROUP BY resource HAVING count(*) > 2 ORDER BY resource;
SELECT resource, count(*) as performance_count FROM event_log WHERE activity = 'Declaration submitted by employee' GROUP BY resource HAVING count(*) > 2 ORDER BY performance_count DESC;
SELECT resource, count(*) as frequency FROM event_log WHERE activity = 'Declaration submitted by employee' GROUP BY resource HAVING count(*) > 2 ORDER BY resource;
SELECT resource, count(*) as count FROM event_log WHERE activity = 'Declaration submitted by employee' GROUP BY resource HAVING count(*) > 2
SELECT resource, count(*) as num_events FROM event_log WHERE activity = 'Declaration submitted by employee' GROUP BY resource HAVING count(*) > 2
SELECT e.name, COUNT(DISTINCT el.idcase) AS num_declarations FROM event_log el JOIN employees e ON el.idcase = e.id GROUP BY e.name HAVING COUNT(DISTINCT el.idcase) > 2 ORDER BY num_declarations DESC;
SELECT idcase FROM event_log WHERE activity = 'Request payment' AND timestamp BETWEEN '2017-05-01' AND '2017-05-10'
SELECT idcase FROM event_log WHERE activity = 'Request payment' AND timestamp BETWEEN '2017-05-01 00:00:00' AND '2017-05-10 23:59:59';
SELECT idcase FROM event_log WHERE activity = 'Request payment' AND timestamp BETWEEN '2017-05-01 00:00:00' AND '2017-05-10 23:59:59'
SELECT idcase FROM event_log WHERE activity = 'Request payment' AND timestamp BETWEEN '2017-05-01' AND '2017-05-10' GROUP BY idcase
SELECT idcase FROM event_log WHERE activity = 'Request payment' AND timestamp BETWEEN '2017-05-01 00:00:00' AND '2017-05-10 23:59:59';
SELECT DISTINCT idcase FROM event_log WHERE activity = 'Request payment' AND timestamp BETWEEN '2017-05-01' AND '2017-05-10';
SELECT DISTINCT idcase FROM event_log WHERE activity = 'Request payment' AND timestamp BETWEEN '2017-05-01' AND '2017-05-10'
SELECT idcase FROM event_log WHERE activity = 'Request payment' AND timestamp BETWEEN '2017-05-01 00:00:00' AND '2017-05-10 23:59:59'
SELECT COUNT(DISTINCT resource), idcase FROM event_log GROUP BY idcase
SELECT idcase, COUNT(resource) as num_resources FROM event_log GROUP BY idcase
SELECT idcase, COUNT(DISTINCT resource) AS num_resources FROM event_log GROUP BY idcase
SELECT idcase, COUNT(DISTINCT resource) as num_resources FROM event_log GROUP BY idcase
SELECT idcase, COUNT(DISTINCT resource) AS num_resources FROM event_log GROUP BY idcase
SELECT idcase, COUNT(DISTINCT resource) AS num_resources FROM event_log GROUP BY idcase
SELECT COUNT(DISTINCT resource), idcase FROM event_log GROUP BY idcase
SELECT idcase, COUNT(DISTINCT resource) AS num_employees FROM event_log GROUP BY idcase
SELECT DISTINCT idcase FROM event_log WHERE resource = 'Christopher'
SELECT DISTINCT idcase FROM event_log WHERE resource = 'Christopher' AND activity = 'Completed';
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(DISTINCT resource) = 1 AND resource = 'Christopher';
SELECT idcase, activity FROM event_log WHERE resource = 'Christopher' AND activity = (SELECT activity FROM event_log WHERE resource = 'Christopher' GROUP BY activity HAVING COUNT(DISTINCT idcase) = (SELECT COUNT(DISTINCT idcase) FROM event_log WHERE resource = 'Christopher'));
SELECT idcase FROM event_log WHERE resource = 'Christopher' AND (SELECT COUNT(DISTINCT resource) FROM event_log WHERE idcase = event_log.idcase) = 1;
SELECT idcase FROM event_log WHERE resource = 'Christopher' GROUP BY idcase HAVING COUNT(DISTINCT activity) = (SELECT COUNT(*) FROM event_log WHERE resource = 'Christopher')
SELECT idcase FROM event_log WHERE resource = 'Christopher' GROUP BY idcase HAVING COUNT(DISTINCT activity) = (SELECT COUNT(*) FROM event_log WHERE resource = 'Christopher')
SELECT idcase, resource FROM event_log WHERE activity LIKE '%Christopher%' AND COUNT(DISTINCT resource) = 1 GROUP BY idcase, resource
SELECT idcase, COUNT(DISTINCT resource) as num_resources FROM event_log GROUP BY idcase HAVING COUNT(DISTINCT resource) = 1;
SELECT idcase, resource FROM event_log GROUP BY idcase, resource HAVING COUNT(DISTINCT id) = (SELECT COUNT(*) FROM event_log WHERE idcase = event_log.idcase)
SELECT idcase, COUNT(DISTINCT resource) as num_resources FROM event_log GROUP BY idcase HAVING COUNT(DISTINCT resource) = 1;
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(DISTINCT resource) = 1;
SELECT * FROM event_log WHERE resource IN ( SELECT resource FROM event_log GROUP BY resource HAVING COUNT(*) = 1 )
SELECT idcase FROM event_log GROUP BY idcase, resource HAVING COUNT(DISTINCT activity) = (SELECT MAX(COUNT(DISTINCT activity)) FROM event_log WHERE idcase = event_log.idcase)
SELECT idcase, resource FROM event_log GROUP BY idcase, resource HAVING COUNT(DISTINCT id) > 1
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(DISTINCT resource) = 1;
SELECT idcase, COUNT(*) as num_events, timestamp FROM event_log WHERE timestamp >= DATE_TRUNC('day', timestamp) GROUP BY idcase, timestamp HAVING COUNT(*) > 1
SELECT idcase, COUNT(*) as num_events, DATE(timestamp) as event_date FROM event_log GROUP BY idcase, DATE(timestamp) HAVING COUNT(*) > 1
SELECT idcase, DATE(timestamp) AS date FROM event_log GROUP BY idcase, DATE(timestamp) HAVING COUNT(*) > 1
SELECT idcase FROM event_log WHERE timestamp >= DATE_TRUNC('day', timestamp) GROUP BY idcase, DATE_TRUNC('day', timestamp) HAVING COUNT(*) > 1
SELECT idcase, COUNT(*) as num_events FROM event_log WHERE timestamp >= DATE_TRUNC('day', timestamp) GROUP BY idcase, DATE_TRUNC('day', timestamp) HAVING COUNT(*) > 1
SELECT idcase, DATE(timestamp) AS date, COUNT(*) AS num_interventions FROM event_log WHERE activity LIKE '%intervention%' GROUP BY idcase, DATE(timestamp) HAVING COUNT(*) > 1;
SELECT idcase FROM ( SELECT idcase, timestamp, activity, LAG(activity) OVER (PARTITION BY idcase ORDER BY timestamp) AS prev_activity, LEAD(activity) OVER (PARTITION BY idcase ORDER BY timestamp) AS next_activity FROM event_log ) AS subquery WHERE prev_activity!= '' AND next_activity!= '' AND prev_activity!= next_activity
SELECT idcase, resource, COUNT(*) AS num_null_cost_events FROM event_log WHERE cost IS NULL GROUP BY idcase, resource
SELECT idcase, resource, COUNT(*) AS num_null_cost_events FROM event_log WHERE cost IS NULL GROUP BY idcase, resource
SELECT idcase, resource, COUNT(*) AS null_cost_events FROM event_log WHERE cost IS NULL GROUP BY idcase, resource
SELECT idcase, resource, COUNT(*) AS num_null_cost_events FROM event_log WHERE cost IS NULL GROUP BY idcase, resource
SELECT resource, idcase, COUNT(*) AS num_null_cost_events FROM event_log WHERE cost IS NULL GROUP BY resource, idcase
SELECT idcase, COUNT(*) AS num_null_cost_events FROM event_log WHERE cost IS NULL GROUP BY idcase
SELECT resource, COUNT(*) AS num_interventions_without_cost FROM event_log WHERE cost IS NULL GROUP BY resource
SELECT resource, COUNT(*) AS num_interventions FROM event_log WHERE cost IS NULL GROUP BY resource
SELECT * FROM event_log WHERE activity = 'permit rejected by director'
SELECT * FROM event_log WHERE activity = 'Permit rejected by director'
SELECT id, activity, timestamp FROM event_log WHERE activity = 'Permit rejected by director' ORDER BY timestamp;
SELECT * FROM event_log WHERE activity = 'Permit rejected by the director';
SELECT * FROM event_log WHERE activity = 'permit rejected by director'
SELECT * FROM event_log WHERE activity = 'Permit rejected by director'
SELECT * FROM event_log WHERE activity LIKE '%Permit%' AND activity LIKE '%rejected%' AND activity LIKE '%director%'
SELECT DISTINCT resource FROM event_log WHERE activity LIKE '%rejection%' AND activity LIKE '%director%' AND activity LIKE '%permit%'
SELECT DATE(timestamp) AS date, SUM(cost) AS total_cost FROM event_log GROUP BY DATE(timestamp)
SELECT DATE(timestamp) AS date, SUM(cost) AS total_cost FROM event_log GROUP BY DATE(timestamp)
SELECT DATE(timestamp) AS date, SUM(cost) AS total_cost FROM event_log GROUP BY DATE(timestamp) ORDER BY date;
SELECT DATE(timestamp) AS date, SUM(cost) AS total_cost FROM event_log GROUP BY DATE(timestamp) ORDER BY date;
SELECT DATE(timestamp) AS day, SUM(cost) AS total_cost FROM event_log GROUP BY DATE(timestamp) ORDER BY day;
SELECT DATE(timestamp) AS date, SUM(cost) AS total_cost FROM event_log GROUP BY DATE(timestamp) ORDER BY date;
SELECT strftime('%Y-%m-%d', timestamp) as event_date, SUM(1) as total_events FROM event_log GROUP BY strftime('%Y-%m-%d', timestamp)
SELECT DATE(timestamp) AS date, SUM(cost) AS total_cost FROM event_log GROUP BY DATE(timestamp)
SELECT id, activity, resource, cost FROM event_log WHERE cost > 1000 AND idcase IN ('supervisor', 'director')
SELECT activity, cost FROM event_log WHERE idcase IN ('supervisor', 'director') AND cost > 1000
SELECT activity, cost, idcase FROM event_log WHERE cost > 1000 AND idcase IN ('supervisor', 'director')
SELECT count(DISTINCT idcase), 'employee' as grupo FROM event_log WHERE activity like '%employee%' UNION SELECT count(DISTINCT idcase),'supervisor' as grupo FROM event_log WHERE activity like '%supervisor%' UNION SELECT count(DISTINCT idcase), 'administration' as grupo FROM event_log WHERE activity like '%administration%' UNION SELECT count(DISTINCT idcase), 'pre-approver' as grupo FROM event_log WHERE activity like '%pre-approver%' UNION SELECT count(DISTINCT idcase), 'budget owner' as grupo FROM event_log WHERE activity like '%budget owner%' UNION SELECT count(DISTINCT idcase), 'director' as grupo FROM event_log WHERE activity like '%director%'
SELECT * FROM event_log WHERE cost > 1000 AND resource IN ('supervisor', 'director')
SELECT activity, cost FROM event_log WHERE idcase IN ('supervisor', 'director') AND cost > 1000
SELECT idcase, COUNT(*) as events_count FROM event_log GROUP BY idcase;
SELECT idcase, COUNT(*) as event_count FROM event_log GROUP BY idcase
SELECT COUNT(*), idcase FROM event_log GROUP BY idcase;
SELECT idcase, COUNT(*) as events_count FROM event_log GROUP BY idcase ORDER BY events_count DESC;
SELECT idcase, COUNT(*) AS num_events FROM event_log GROUP BY idcase;
SELECT idcase, COUNT(*) AS num_events FROM event_log GROUP BY idcase;
SELECT e.idcase, COUNT(*) as num_interventions FROM event_log e WHERE e.activity!= 'Declaration final approved by director' GROUP BY e.idcase
SELECT COUNT(DISTINCT id), resource FROM event_log GROUP BY resource;
SELECT COUNT(DISTINCT activity) AS num_tasks, resource FROM event_log GROUP BY resource
SELECT resource, COUNT(DISTINCT activity) as num_activities FROM event_log GROUP BY resource
SELECT resource, COUNT(DISTINCT activity) AS num_activities FROM event_log GROUP BY resource
SELECT resource, COUNT(*) AS activity_count FROM event_log GROUP BY resource
SELECT resource, COUNT(*) as num_tasks FROM event_log GROUP BY resource
SELECT idcase, COUNT(*) FROM event_log WHERE activity LIKE '%determined%' GROUP BY idcase
SELECT idcase, COUNT(*) as activity_count FROM event_log WHERE resource = 'Alexis' GROUP BY idcase
SELECT idcase, COUNT(*) AS num_activities FROM event_log WHERE resource = 'Alexis' GROUP BY idcase;
SELECT idcase, COUNT(*) as num_activities FROM event_log WHERE resource = 'Alexis' GROUP BY idcase
SELECT idcase, COUNT(*) as num_activities FROM event_log WHERE resource = 'Alexis' GROUP BY idcase
SELECT idcase, COUNT(*) as num_activities FROM event_log WHERE resource = 'Alexis' GROUP BY idcase;
SELECT idcase, COUNT(*) as num_activities FROM event_log WHERE resource = 'Alexis' GROUP BY idcase
SELECT idcase from event_log group by idcase HAVING COUNT(DISTINCT resource) = 1 AND resource = 'Christopher'
SELECT idcase, COUNT(*) as num_actions FROM event_log WHERE resource = 'Alexis' GROUP BY idcase
SELECT COUNT(DISTINCT el1.idcase) FROM event_log el1 JOIN event_log el2 ON el1.id < el2.id AND el1.activity LIKE 'Permit%' AND el2.activity LIKE 'Start Trip'
SELECT COUNT(*) FROM event_log AS e1 WHERE EXISTS ( SELECT 1 FROM event_log AS e2 WHERE e2.activity ='start trip' AND e1.id < e2.id AND e1.activity = 'permit final approved by supervisor' )
SELECT COUNT(*) FROM event_log AS a, event_log AS b WHERE a.activity = 'Permit final approved by supervisor' AND b.activity ='start trip' AND a.idcase = b.idcase AND a.timestamp < b.timestamp
SELECT COUNT(DISTINCT el1.id) FROM event_log el1 JOIN event_log el2 ON el1.id < el2.id WHERE el1.activity = 'Permit final approved by supervisor' AND el2.activity ='start trip' ORDER BY COUNT(DISTINCT el1.id) DESC;
SELECT COUNT(*) FROM event_log AS e1, event_log AS e2 WHERE e1.activity = 'Permit final approved by supervisor' AND e2.activity ='start trip' AND e1.id < e2.id
SELECT COUNT(DISTINCT el1.idcase) AS num_declarations FROM event_log el1 JOIN event_log el2 ON el1.idcase = el2.idcase AND el2.activity = 'final_approval' WHERE el1.activity ='start_trip' AND el1.timestamp > el2.timestamp
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE activity LIKE 'Permit%' AND activity LIKE '%final approval%' AND timestamp < (SELECT timestamp FROM event_log WHERE activity LIKE 'Trip%' ORDER BY timestamp LIMIT 1)
SELECT COUNT(*) FROM event_log WHERE activity = 'Start trip' AND idcase IN ( SELECT idcase FROM event_log WHERE activity = 'Approved by supervisor' AND timestamp < (SELECT timestamp FROM event_log WHERE activity = 'Start trip' AND idcase = event_log.idcase) )
SELECT id, activity, timestamp FROM event_log WHERE activity = 'End trip' AND timestamp NOT LIKE '%2017-12-12%'
SELECT DISTINCT idcase FROM event_log WHERE activity = 'End trip' AND timestamp < '2017-12-12' OR timestamp > '2017-12-12'
SELECT * FROM event_log WHERE activity = 'End trip' AND timestamp < '2017-12-12' OR timestamp > '2017-12-12'
SELECT * FROM event_log WHERE activity = 'End trip' AND timestamp < '2017-12-12' OR timestamp > '2017-12-12'
SELECT * FROM event_log WHERE activity = 'End trip' AND timestamp NOT LIKE '%2017-12-12%'
SELECT DISTINCT idcase FROM event_log WHERE activity = 'End trip' AND timestamp NOT LIKE '%2017-12-12%'
SELECT e1.idcase, e1.activity FROM event_log AS e1 WHERE e1.activity = 'End trip' AND e1.timestamp NOT LIKE '%2017-12-12%'
SELECT COUNT(*), resource FROM event_log GROUP BY resource
SELECT resource, COUNT(*) AS num_events FROM event_log GROUP BY resource;
SELECT COUNT(*), resource FROM event_log GROUP BY resource;
SELECT resource, COUNT(*) AS num_activities FROM event_log GROUP BY resource
SELECT "idcase", COUNT(*) AS "number_of_events" FROM "event_log" GROUP BY "idcase" ORDER BY "number_of_events" DESC;
SELECT resource, COUNT(*) as count FROM event_log WHERE activity LIKE '%declaration%' GROUP BY resource
SELECT person, COUNT(*) AS num_actions FROM event_log GROUP BY person
SELECT COUNT(DISTINCT activity), resource FROM event_log GROUP BY resource
SELECT resource, COUNT(DISTINCT activity) AS num_activities FROM event_log GROUP BY resource
SELECT resource, COUNT(DISTINCT activity) AS activity_count FROM event_log GROUP BY resource
SELECT resource, COUNT(*) AS num_activities FROM event_log GROUP BY resource ORDER BY resource;
SELECT COUNT(DISTINCT activity) AS num_activities, resource FROM event_log GROUP BY resource
SELECT COUNT(*), resource FROM event_log GROUP BY resource
SELECT activity FROM event_log WHERE resource = 'Virginia' EXCEPT SELECT activity FROM event_log WHERE resource = 'Virginia' GROUP BY activity HAVING COUNT(*) = 0
SELECT DISTINCT grupo FROM ( SELECT 'employee' as grupo FROM event_log WHERE resource = 'Virginia' AND activity like '%employee%' UNION SELECT'supervisor' as grupo FROM event_log WHERE resource = 'Virginia' AND activity like '%supervisor%' UNION SELECT 'administration' as grupo FROM event_log WHERE resource = 'Virginia' AND activity like '%administration%' UNION SELECT 'pre-approver' as grupo FROM event_log WHERE resource = 'Virginia' AND activity like '%pre-approver%' UNION SELECT 'budget owner' as grupo FROM event_log WHERE resource = 'Virginia' AND activity like '%budget owner%' UNION SELECT 'director' as grupo FROM event_log WHERE resource = 'Virginia' AND activity like '%director%' ) AS subquery WHERE grupo NOT IN ( SELECT activity FROM event_log WHERE resource = 'Virginia' ) ORDER BY grupo;
SELECT activity FROM event_log WHERE idcase!= 'Virginia' GROUP BY activity HAVING COUNT(*) = 0
SELECT DISTINCT activity FROM event_log WHERE activity NOT IN ( SELECT activity FROM event_log WHERE resource = 'Virginia' )
SELECT activity FROM employee_activity WHERE employee!= 'Virginia' EXCEPT SELECT activity FROM employee_activity WHERE employee = 'Virginia';
SELECT COUNT(DISTINCT idcase), resource FROM event_log GROUP BY resource
SELECT AVG(cost) FROM event_log WHERE activity ='rejected';
SELECT AVG(cost) FROM event_log WHERE activity ='rejected' GROUP BY idcase;
SELECT AVG(cost) FROM event_log WHERE activity ='rejected' GROUP BY idcase
SELECT AVG(cost) FROM event_log WHERE activity LIKE '%rejected%' GROUP BY idcase
SELECT AVG(cost) FROM event_log WHERE activity ='rejected'
SELECT AVG(cost) FROM event_log WHERE activity = 'REJECTED' GROUP BY activity
SELECT AVG(cost) AS average_cost FROM event_log WHERE activity = 'REJECTED'
SELECT DISTINCT e1.idcase FROM event_log e1 INNER JOIN (SELECT idcase, MIN(timestamp) as timestamp FROM event_log GROUP BY idcase ORDER BY timestamp) AS e2 ON e1.idcase = e2.idcase WHERE e1.activity = 'Declaration rejected by supervisor' ORDER BY e2.timestamp;
SELECT e1.idcase, e2.timestamp_end - e1.timestamp_start AS duration FROM (SELECT idcase, timestamp AS timestamp_start, LAG(timestamp) OVER (PARTITION BY idcase ORDER BY timestamp) AS timestamp_end FROM event_log WHERE activity = 'Declaration approved by supervisor') e1 WHERE e1.timestamp_end - e1.timestamp_start > 0 ORDER BY e1.idcase, e1.timestamp_start;
SELECT e1.idcase, e2.timestamp_start, e3.timestamp_end, TIMESTAMPDIFF(SECOND, e2.timestamp, e3.timestamp) AS duration FROM event_log e1 INNER JOIN (SELECT idcase, MIN(timestamp) as timestamp_start FROM event_log GROUP BY idcase) AS e2 ON e1.idcase = e2.idcase AND e1.activity = 'Declaration approved by supervisor' INNER JOIN (SELECT idcase, MAX(timestamp) as timestamp_end FROM event_log GROUP BY idcase) AS e3 ON e1.idcase = e3.idcase AND e1.activity = 'Declaration approved by supervisor' ORDER BY e2.timestamp_start;
SELECT idcase, MAX(timestamp) - MIN(timestamp) AS duration FROM event_log WHERE activity = 'Declaration approved by supervisor' GROUP BY idcase
SELECT e1.idcase, TIMESTAMPDIFF(SECOND, e2.timestamp, e3.timestamp) AS duration FROM event_log e1 INNER JOIN (SELECT idcase, timestamp as start_time FROM event_log WHERE activity = 'Declaration approved by supervisor') e2 ON e1.idcase = e2.idcase INNER JOIN (SELECT idcase, MIN(timestamp) as end_time FROM event_log WHERE activity = 'Declaration approved by supervisor' GROUP BY idcase) e3 ON e1.idcase = e3.idcase AND e1.timestamp > e3.timestamp ORDER BY e2.timestamp;
SELECT DISTINCT e1.idcase FROM event_log e1 INNER JOIN ( SELECT idcase, MIN(timestamp) AS timestamp FROM event_log GROUP BY idcase ORDER BY timestamp ) AS e2 ON e1.idcase = e2.idcase WHERE e1.activity = 'Declaration rejected by supervisor' ORDER BY e2.timestamp;
SELECT strftime('%s', p.timestamp) - strftime('%s', s.timestamp) as 'Time spent for approval' FROM event_log p INNER JOIN event_log s ON p.idcase = s.idcase WHERE p.activity = 'Approved by supervisor' AND s.activity = 'Declaration submitted'
SELECT COUNT (*) FROM event_log WHERE activity = 'Declaration rejected by pre-approver'
SELECT COUNT(*) FROM event_log WHERE activity = 'Declaration rejected by pre-approver';
SELECT COUNT(*) FROM event_log WHERE activity = 'Declaration rejected by pre-approver';
SELECT COUNT(*) FROM event_log WHERE activity = 'Declaration rejected by pre-approver';
SELECT COUNT(*) FROM event_log WHERE activity = 'Declaration rejected by pre-approver';
SELECT COUNT(*) as count, activity FROM event_log WHERE activity = 'Declaration rejected by pre-approver' GROUP BY activity;
SELECT COUNT(*) FROM event_log WHERE activity = 'Declaration rejected by director' AND resource = 'pre-approval'
SELECT COUNT(*) FROM event_log WHERE activity = 'Declaration rejected by pre-approver';
SELECT e1.activity, e1.resource, e1.idcase FROM event_log AS e1 INNER JOIN event_log AS e2 ON e1.idcase = e2.idcase WHERE e2.activity = 'End trip' AND e1.timestamp > e2.timestamp;
SELECT idcase, timestamp, resource FROM event_log WHERE activity = 'End trip' ORDER BY resource;
SELECT e1.activity, e1.resource, e1.idcase FROM event_log AS e1 INNER JOIN event_log AS e2 ON e1.idcase = e2.idcase WHERE e2.activity = 'End trip' AND e1.timestamp > e2.timestamp;
SELECT idcase, timestamp, resource FROM event_log WHERE activity = 'End trip' ORDER BY resource;
SELECT e2.idcase, e2.resource, e2.timestamp FROM event_log AS e2 WHERE e2.activity = 'End trip' ORDER BY e2.resource;
SELECT e2.idcase AS "Code of the processed declaration", e2.timestamp AS "Date on which the trip ended", e1.resource AS "Employee who recorded the end of the trip" FROM event_log AS e1 INNER JOIN event_log AS e2 ON e1.idcase = e2.idcase WHERE e2.activity = 'End trip' ORDER BY e1.resource;
SELECT idcase, COUNT(*) AS num_events FROM event_log GROUP BY idcase;
SELECT idcase, COUNT(*) AS num_events FROM event_log GROUP BY idcase
SELECT idcase, COUNT(*) AS num_events FROM event_log GROUP BY idcase;
SELECT idcase, COUNT(*) as num_events FROM event_log GROUP BY idcase
SELECT idcase, COUNT(*) as events_count FROM event_log GROUP BY idcase;
SELECT COUNT(*), idcase FROM event_log GROUP BY idcase;
SELECT idcase, COUNT(*) AS num_actions FROM event_log GROUP BY idcase
SELECT count(*), idcase FROM event_log GROUP BY idcase
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE activity = 'End trip' AND timestamp BETWEEN '2017-05-02' AND '2017-05-12'
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE activity = 'End trip' AND timestamp BETWEEN '2017-05-02' AND '2017-05-12'
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE activity = 'End trip' AND timestamp BETWEEN '2017-05-02' AND '2017-05-12'
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE activity = 'End trip' AND timestamp BETWEEN '2017-05-02 00:00:00' AND '2017-05-12 23:59:59';
SELECT COUNT(*) FROM event_log WHERE activity = 'End trip' AND timestamp BETWEEN '2017-05-02 00:00:00' AND '2017-05-12 23:59:59'
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE activity = 'End trip' AND timestamp BETWEEN '2017-02-05' AND '2017-12-05';
SELECT COUNT(*) FROM event_log WHERE activity = 'End trip' AND timestamp BETWEEN '2017-05-02' AND '2017-05-12';
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE activity = 'End trip' AND timestamp BETWEEN '2017-05-02' AND '2017-05-12';
SELECT e1.idcase, e1.resource, e1.id, MAX(e1.timestamp) AS completion_date FROM event_log AS e1 WHERE e1.activity = 'Send reminder' GROUP BY e1.idcase, e1.resource, e1.id ORDER BY completion_date;
SELECT e1.idcase, e1.resource, e1.id, MAX(e1.timestamp) AS completion_date FROM event_log AS e1 WHERE e1.activity = 'Send reminder' GROUP BY e1.idcase, e1.resource, e1.id ORDER BY completion_date;
SELECT e1.idcase, e1.activity, e1.resource, e1.timestamp AS completion_date FROM event_log AS e1 WHERE e1.activity = 'Send reminder' ORDER BY e1.timestamp;
SELECT distinct(e1.activity) FROM event_log AS e1 INNER JOIN event_log AS e2 ON e1.idcase = e2.idcase WHERE e2.activity = 'Send reminder' AND e1.timestamp < e2.timestamp GROUP BY e1.idcase, e1.activity;
SELECT e1.idcase, e1.id, e1.resource, e1.timestamp FROM event_log AS e1 WHERE e1.activity = 'Send reminder' ORDER BY e1.timestamp;
SELECT e1.id, e1.resource, e1.timestamp AS completion_date FROM event_log AS e1 WHERE e1.activity = 'Send reminder' ORDER BY e1.timestamp;
SELECT e1.idcase AS "Code of the declaration process", e1.resource AS "Resource that recorded this submission", e1.id AS "Identifier of this submission occurrence", e2.timestamp AS "Completion date" FROM event_log AS e1 INNER JOIN event_log AS e2 ON e1.id = e2.id WHERE e2.activity = 'Send reminder' ORDER BY e2.timestamp;
SELECT DISTINCT resource FROM event_log ORDER BY resource ASC;
SELECT DISTINCT resource FROM event_log ORDER BY resource ASC;
SELECT DISTINCT resource FROM event_log ORDER BY resource ASC;
SELECT DISTINCT resource FROM event_log ORDER BY resource;
SELECT DISTINCT resource FROM event_log ORDER BY resource;
SELECT DISTINCT resource FROM event_log ORDER BY resource ASC;
SELECT DISTINCT resource AS "Employee Name" FROM event_log ORDER BY "Employee Name" ASC;
SELECT resource, COUNT(DISTINCT idcase) as num_cases FROM event_log GROUP BY resource HAVING COUNT(DISTINCT idcase) > 200;
SELECT resource, COUNT(DISTINCT idcase) AS num_instances FROM event_log GROUP BY resource HAVING COUNT(DISTINCT idcase) > 200;
SELECT resource, COUNT(*) as count FROM event_log WHERE idcase IN ( SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(*) > 200 ) GROUP BY resource
SELECT resource FROM event_log GROUP BY resource HAVING COUNT(DISTINCT idcase) > 200
SELECT DISTINCT resource FROM event_log WHERE activity = 'travel declaration' GROUP BY resource HAVING COUNT(*) > 200;
SELECT DISTINCT resource FROM event_log WHERE cost > 0 GROUP BY resource HAVING COUNT(*) > 200
SELECT resource FROM event_log GROUP BY resource HAVING COUNT(idcase) > 200
SELECT COUNT(DISTINCT resource) FROM event_log;
SELECT COUNT(DISTINCT resource) FROM event_log
SELECT COUNT(DISTINCT resource) AS num_employees FROM event_log WHERE activity LIKE '%declaration%';
SELECT COUNT(DISTINCT resource) AS num_resources FROM event_log WHERE activity = 'handling declarations';
SELECT COUNT(DISTINCT resource) FROM event_log
SELECT COUNT(DISTINCT resource) FROM event_log
SELECT COUNT(DISTINCT id) FROM event_log WHERE activity LIKE '%declaration management%'
SELECT COUNT(DISTINCT resource) AS num_resources FROM event_log WHERE activity LIKE '%processing declarations%';
SELECT COUNT(DISTINCT resource) FROM event_log WHERE activity LIKE '%declaration handling%';
SELECT DISTINCT activity FROM event_log WHERE activity LIKE '%declaration%';
SELECT DISTINCT activity FROM event_log WHERE activity LIKE '%declaration%';
SELECT DISTINCT activity FROM event_log WHERE activity LIKE '%declaration%';
SELECT DISTINCT activity FROM event_log WHERE activity LIKE '%declaration%';
SELECT DISTINCT activity FROM event_log WHERE activity LIKE '%declaration%';
SELECT activity, timestamp, id FROM event_log WHERE activity LIKE '%declaration%' ORDER BY timestamp;
SELECT DISTINCT activity FROM event_log WHERE activity LIKE '%declaration%';
SELECT * FROM event_log WHERE activity LIKE '%declaration%';
SELECT activity, AVG(cost) AS mean_cost FROM event_log GROUP BY activity
SELECT activity, AVG(cost) AS avg_cost FROM event_log GROUP BY activity;
SELECT activity, AVG(cost) AS average_cost FROM event_log GROUP BY activity
SELECT activity, AVG(cost) AS mean_cost FROM event_log GROUP BY activity
SELECT activity, AVG(cost) AS mean_cost FROM event_log GROUP BY activity
SELECT activity, AVG(cost) AS average_cost FROM event_log GROUP BY activity
SELECT activity, AVG(cost) AS average_cost FROM event_log GROUP BY activity
SELECT activity, AVG(cost) AS mean_cost FROM event_log GROUP BY activity
SELECT activity, AVG(cost) AS mean_cost FROM event_log WHERE activity LIKE '%travel declaration%' GROUP BY activity
SELECT COUNT(*) FROM event_log WHERE cost = 0;
SELECT COUNT(*) FROM event_log WHERE cost = 0;
SELECT COUNT(*) FROM event_log WHERE cost = 0;
SELECT COUNT(*) FROM event_log WHERE cost = 0;
SELECT COUNT(*) FROM event_log WHERE cost = 0;
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE cost IS NULL
SELECT COUNT(*) FROM event_log WHERE cost IS NULL
SELECT COUNT(*) FROM event_log WHERE cost IS NULL
SELECT COUNT(*) FROM event_log WHERE cost = 0;
SELECT activity FROM event_log WHERE activity LIKE '%permit%' OR activity LIKE '%declaration%';
SELECT select idcase from event_log where activity like 'Permit%' GROUP BY idcase HAVING count(*) > 1
SELECT activity FROM event_log WHERE activity LIKE '%permit%' OR activity LIKE '%declaration%';
SELECT * FROM event_log WHERE activity LIKE '%Permit%';
SELECT DISTINCT activity FROM event_log WHERE activity LIKE '%permit%' OR activity LIKE '%declaration%'
SELECT activity FROM event_log WHERE activity LIKE '%permit%' OR activity LIKE '%declaration%';
SELECT activity FROM event_log WHERE activity LIKE '%permit%' OR activity LIKE '%declaration%';
SELECT DISTINCT activity FROM event_log WHERE activity LIKE '%permit%' OR activity LIKE '%declaration%'
SELECT select idcase from event_log where activity like 'Permit%' GROUP BY idcase HAVING count(*) > 1
SELECT count(*) FROM event_log WHERE activity = 'Declaration rejected by director'
SELECT COUNT(*) FROM event_log WHERE activity = 'declaration rejected by director';
SELECT COUNT(*) FROM event_log WHERE activity = 'declaration rejected by director';
SELECT COUNT(*) FROM event_log WHERE activity = 'declaration rejected by director';
SELECT count(*) FROM event_log WHERE activity = 'Declaration rejected by director'
SELECT count(*) FROM event_log WHERE activity = 'Declaration rejected by director'
SELECT COUNT(*) FROM event_log WHERE activity = 'Declaration rejected by director'
SELECT AVG(cost) FROM event_log;
SELECT AVG(cost) FROM event_log;
SELECT AVG(cost) FROM event_log;
SELECT AVG(cost) FROM event_log;
SELECT AVG(cost) FROM event_log;
SELECT AVG(cost) AS mean_cost FROM event_log;
SELECT AVG(cost) AS mean_cost FROM event_log GROUP BY activity;
SELECT AVG(cost) FROM event_log;
SELECT AVG(cost) FROM event_log;
SELECT AVG(cost) AS mean_cost FROM event_log WHERE activity LIKE '%process declaration%' GROUP BY idcase;
SELECT COUNT(DISTINCT idcase), resource FROM event_log GROUP BY resource
SELECT resource, COUNT(DISTINCT idcase) AS num_cases FROM event_log GROUP BY resource ORDER BY num_cases DESC;
SELECT resource, count(distinct idcase) as num_cases FROM event_log GROUP BY resource
SELECT COUNT(DISTINCT idcase), resource FROM event_log GROUP BY resource
SELECT COUNT(DISTINCT idcase), resource FROM event_log GROUP BY resource
SELECT resource, count(DISTINCT idcase) as num_cases FROM event_log GROUP BY resource
SELECT resource, count(distinct idcase) FROM event_log group by resource
SELECT COUNT(*), idcase AS "Employee" FROM event_log GROUP BY idcase
SELECT COUNT(*) FROM event_log WHERE resource = 'Peter';
SELECT COUNT(*) FROM event_log WHERE resource = 'Peter';
SELECT COUNT(*) FROM event_log WHERE resource = 'Peter';
SELECT COUNT(*) AS total_actions FROM event_log WHERE resource = 'Peter';
SELECT resource, COUNT(*) as count FROM event_log GROUP BY resource HAVING COUNT(*) > 3
SELECT idcase, COUNT(*) as num_declarations FROM event_log GROUP BY idcase HAVING COUNT(*) > 3;
SELECT p.id, COUNT(DISTINCT el.idcase) AS num_cases FROM event_log el JOIN people p ON el.id = p.id GROUP BY p.id HAVING COUNT(DISTINCT el.idcase) > 3;
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(DISTINCT activity) > 3
SELECT resource FROM event_log GROUP BY resource HAVING COUNT(id) > 3;
SELECT resource, COUNT(*) as count FROM event_log GROUP BY resource HAVING COUNT(*) > 3
SELECT idcase, COUNT(*) as num_events FROM event_log WHERE activity = 'Request payment' GROUP BY idcase ORDER BY num_events ASC;
SELECT idcase, COUNT(*) as num_events FROM event_log WHERE activity = 'Request payment' GROUP BY idcase ORDER BY num_events ASC;
SELECT idcase, COUNT(*) as num_events FROM event_log WHERE activity LIKE '%request payment%' GROUP BY idcase ORDER BY num_events ASC;
SELECT idcase, COUNT(*) as num_events FROM event_log WHERE activity = 'Request payment' AND timestamp BETWEEN '2017-05-01' AND '2017-05-10' GROUP BY idcase ORDER BY num_events ASC;
SELECT idcase, COUNT(*) as num_events FROM event_log WHERE activity = 'Request payment' GROUP BY idcase ORDER BY num_events ASC;
SELECT idcase, COUNT(*) as num_events FROM event_log WHERE activity = 'Request payment' GROUP BY idcase ORDER BY num_events ASC;
SELECT idcase, COUNT(*) as activity_count FROM event_log WHERE activity = 'Request payment' GROUP BY idcase ORDER BY activity_count ASC;
SELECT idcase, COUNT(*) AS num_actions, id FROM event_log WHERE activity = 'Request payment' GROUP BY idcase ORDER BY num_actions;
SELECT * FROM event_log WHERE activity = 'End trip' OR activity = 'Declaration rejected by employee' ORDER BY timestamp;
SELECT timestamp FROM event_log WHERE activity = 'End trip' OR activity = 'Declaration rejected by employee' ORDER BY timestamp;
SELECT DISTINCT timestamp FROM event_log WHERE activity = 'End trip' OR activity = 'Declaration rejected by employee' ORDER BY timestamp ASC;
SELECT DISTINCT timestamp FROM event_log WHERE activity IN ('End trip', 'Declaration rejected by employee') ORDER BY timestamp ASC;
SELECT timestamp FROM event_log WHERE activity IN ('end trip', 'closed') ORDER BY timestamp;
SELECT DISTINCT strftime('%Y-%m-%d', timestamp) AS date FROM event_log WHERE activity IN ('End trip', 'declaration rejected by employee') ORDER BY date ASC;
SELECT DISTINCT e2.timestamp FROM event_log AS e1 INNER JOIN event_log AS e2 ON e1.idcase = e2.idcase WHERE e2.activity IN ('End trip', 'Reject declaration') ORDER BY e2.timestamp ASC;
SELECT DISTINCT timestamp FROM event_log WHERE activity IN ('End trip', 'Rejection') ORDER BY timestamp ASC;
SELECT resource, COUNT(*) AS occurrences FROM event_log GROUP BY resource ORDER BY resource;
SELECT resource, COUNT(*) FROM event_log GROUP BY resource ORDER BY resource
SELECT resource, COUNT(*) AS num_performances FROM event_log GROUP BY resource ORDER BY resource;
SELECT resource, COUNT(*) as num_activities FROM event_log GROUP BY resource ORDER BY resource;
SELECT resource, COUNT(*) as activity_count FROM event_log GROUP BY resource ORDER BY resource ASC;
SELECT resource, COUNT(*) as num_activities FROM event_log GROUP BY resource ORDER BY resource ASC;
SELECT resource, COUNT(*) AS occurrences FROM event_log GROUP BY resource ORDER BY resource;
SELECT resource, COUNT(*) AS activity_occurrences FROM event_log GROUP BY resource ORDER BY resource;
SELECT resource, COUNT(*) as activity_occurrences FROM event_log GROUP BY resource ORDER BY resource ASC;
SELECT resource, COUNT(*) as count FROM event_log WHERE activity LIKE 'Declaration saved by %' GROUP BY resource ORDER BY resource;
SELECT count(*), 'employee' as grupo FROM event_log WHERE activity like '%employee%' UNION SELECT count(*),'supervisor' as grupo FROM event_log WHERE activity like '%supervisor%' UNION SELECT count(*), 'administration' as grupo FROM event_log WHERE activity like '%administration%' UNION SELECT count(*), 'pre-approver' as grupo FROM event_log WHERE activity like '%pre-approver%' UNION SELECT count(*), 'budget owner' as grupo FROM event_log WHERE activity like '%budget owner%' UNION SELECT count(*), 'director' as grupo FROM event_log WHERE activity like '%director%' ORDER BY count(*);
SELECT activity FROM event_log WHERE activity COLLATE NOCASE LIKE 'E%';
SELECT * FROM event_log WHERE activity LIKE 'E%';
SELECT * FROM event_log WHERE activity LIKE 'E%';
SELECT * FROM event_log WHERE activity LIKE 'E%';
SELECT activity FROM event_log GROUP BY activity HAVING COUNT(*) > 3
SELECT * FROM event_log WHERE activity LIKE 'E%';
SELECT DISTINCT activity FROM event_log WHERE activity LIKE 'E%' AND activity LIKE '%declaration%';
SELECT * FROM event_log WHERE activity LIKE 'E%';
SELECT id, activity, resource, cost FROM event_log WHERE cost BETWEEN 50 AND 400;
SELECT id, activity, resource, cost FROM event_log WHERE cost BETWEEN 50 AND 400;
SELECT id, activity, resource, cost FROM event_log WHERE cost BETWEEN 50 AND 400
SELECT id, activity, resource, cost FROM event_log WHERE cost BETWEEN 50 AND 400 ORDER BY cost;
SELECT id, activity, resource, cost FROM event_log WHERE cost BETWEEN 50 AND 400
SELECT id, activity, resource, cost FROM event_log WHERE cost BETWEEN 50 AND 400
SELECT id, activity, resource, cost FROM event_log WHERE cost BETWEEN 50 AND 400;
SELECT id, activity, resource, cost FROM event_log WHERE cost BETWEEN 50 AND 400 ORDER BY cost;
SELECT id, activity, "resource" AS responsible_employee, cost FROM event_log WHERE cost BETWEEN 50 AND 400 ORDER BY cost;
SELECT DISTINCT resource FROM event_log WHERE activity = 'Declaration saved by employee';
SELECT DISTINCT resource FROM event_log WHERE activity = 'Declaration saved by employee';
SELECT idcase, resource from event_log group by idcase HAVING COUNT(DISTINCT resource) = 1
SELECT resource, COUNT(DISTINCT idcase) from event_log GROUP BY resource
SELECT activity FROM event_log WHERE timestamp = '2018-04-12';
SELECT * FROM event_log WHERE activity!= 'End trip' AND strftime('%Y-%m-%d', timestamp) = '2018-04-12';
SELECT activity FROM event_log WHERE timestamp = '2018-04-12';
SELECT * FROM event_log WHERE timestamp = '2018-04-12';
SELECT DISTINCT activity FROM event_log WHERE timestamp <= '2018-04-12'
SELECT DISTINCT activity FROM event_log WHERE timestamp = '2018-04-12';
SELECT DISTINCT el1.activity FROM event_log el1 JOIN event_log el2 ON el1.id = el2.id AND el1.activity = 'End trip' AND strftime('%Y-%m-%d', el1.timestamp) = '2018-04-12' WHERE el2.activity!= 'End trip'
SELECT DISTINCT el1.activity FROM event_log el1 JOIN event_log el2 ON el1.idcase = el2.idcase AND el1.activity = 'Start trip' AND el2.activity = 'End trip' WHERE strftime('%Y-%m-%d', el2.timestamp) = '2018-04-12'
SELECT DISTINCT resource AS "Task Name" FROM event_log WHERE timestamp = '2018-04-12' AND activity LIKE '%declaration processing%'
SELECT id, activity, timestamp AS "performance_end_date" FROM event_log WHERE activity IN ('permit final approved by supervisor', 'declaration approved by supervisor') ORDER BY timestamp;
SELECT id, activity, timestamp AS "performance_end_date" FROM event_log WHERE activity IN ('Permit final approved by supervisor', 'Declaration approved by supervisor') ORDER BY timestamp;
SELECT id, activity, timestamp AS "performance_end_date" FROM event_log WHERE activity IN ('Permit final approved by supervisor', 'Declaration approved by supervisor') ORDER BY timestamp;
SELECT id, activity, timestamp AS "performance_end_date" FROM event_log WHERE activity IN ('Permit final approved by supervisor', 'Declaration approved by supervisor') ORDER BY timestamp;
SELECT el.id, el.activity, el.timestamp AS "performance_end_date" FROM event_log el WHERE el.activity IN ('Permit final approved by supervisor', 'Declaration approved by supervisor') ORDER BY el.timestamp;
SELECT id, activity, timestamp as end_date FROM event_log WHERE activity IN ('permit final approved by supervisor', 'declaration final approved by supervisor') ORDER BY timestamp DESC;
SELECT id, activity, timestamp FROM event_log WHERE activity IN ('Declaration final approved by supervisor', 'Permit final approved by supervisor') ORDER BY timestamp DESC;
SELECT resource FROM event_log WHERE activity = 'Declaration final approved by supervisor' GROUP BY resource ORDER BY COUNT(*) DESC;
SELECT * FROM event_log WHERE cost IS NOT NULL
SELECT * FROM event_log WHERE cost IS NOT NULL
SELECT * FROM event_log WHERE cost IS NOT NULL;
SELECT activity, resource, SUM(cost) from event_log group by activity, resource
SELECT * FROM event_log WHERE cost IS NOT NULL
SELECT * FROM event_log WHERE cost IS NOT NULL
SELECT * FROM event_log WHERE cost IS NOT NULL
SELECT id, activity, resource, cost FROM event_log WHERE cost IS NOT NULL;
SELECT COUNT(*) FROM event_log WHERE activity = 'permit final approved by director';
SELECT COUNT(*) FROM event_log WHERE activity = 'permit final approved by director';
SELECT COUNT(*) FROM event_log WHERE activity = 'permit final approved by director';
SELECT COUNT(*) FROM event_log WHERE activity = 'Permit final approved by director';
SELECT COUNT(*) FROM event_log WHERE activity = 'permit final approved by director';
SELECT COUNT(*) FROM event_log WHERE activity = 'permit final approved by director';
SELECT COUNT(*) FROM event_log WHERE activity = 'Permit final approved by director';
SELECT COUNT(*) FROM event_log WHERE activity = 'Permit final approved by director';
SELECT COUNT(*) FROM event_log WHERE activity = 'Permit final approved by director';
SELECT COUNT(*) FROM event_log WHERE activity = 'Permit final approved by a director';
SELECT COUNT(*) FROM event_log WHERE activity LIKE 'Permit%' AND activity LIKE '%Director%'
SELECT COUNT(*) FROM event_log WHERE activity = 'Final permit approved by director';
SELECT * FROM event_log WHERE activity ='start trip' AND resource LIKE '%s' ORDER BY timestamp;
SELECT timestamp FROM event_log WHERE activity = 'Start trip' AND resource LIKE '%s' ORDER BY timestamp;
SELECT timestamp FROM event_log WHERE activity = 'Start trip' AND resource LIKE '%s' ORDER BY timestamp;
SELECT timestamp FROM event_log WHERE activity = 'Start trip' AND resource LIKE '%s' ORDER BY timestamp;
SELECT * FROM event_log WHERE activity = 'Start trip' AND resource LIKE '%s';
SELECT * FROM event_log WHERE activity = 'Start trip' AND resource LIKE '%s';
SELECT * FROM event_log WHERE activity = 'Start trip' AND resource LIKE '%s';
SELECT * FROM event_log WHERE activity = 'Start trip' AND resource LIKE '%s';
SELECT DISTINCT strftime('%Y-%m-%d', timestamp) AS date FROM event_log WHERE activity = 'Start trip' AND resource LIKE '%s';
SELECT DISTINCT strftime('%Y-%m-%d', timestamp) AS date FROM event_log WHERE activity = 'Start trip' AND resource LIKE '%s';
SELECT SUM(cost), activity, resource FROM event_log GROUP BY activity, resource
SELECT SUM(cost), activity, resource FROM event_log GROUP BY activity, resource
SELECT SUM(cost) AS total_cost, activity, resource FROM event_log GROUP BY activity, resource
SELECT activity, resource, SUM(cost) AS total_cost FROM event_log GROUP BY activity, resource
SELECT activity, resource, SUM(cost) AS total_cost FROM event_log GROUP BY activity, resource ORDER BY total_cost DESC;
SELECT SUM(cost), activity, resource FROM event_log GROUP BY activity, resource
SELECT SUM(cost), activity, resource FROM event_log GROUP BY activity, resource
SELECT activity, resource, SUM(cost) AS total_cost FROM event_log WHERE activity LIKE '%declaration%' -- adjust this to match your activity name GROUP BY activity, resource
SELECT COUNT(*) FROM event_log WHERE activity IN ('start trip', 'end trip');
SELECT activity, COUNT(*) as count FROM event_log WHERE activity IN ('start trip', 'end trip') GROUP BY activity;
SELECT COUNT(*) FROM event_log WHERE activity IN ('start trip', 'end trip');
SELECT COUNT(*) AS total_events FROM event_log WHERE activity IN ('Start trip', 'End trip');
SELECT COUNT(*) FROM event_log WHERE activity IN ('Start trip', 'End trip');
SELECT activity, COUNT(*) FROM event_log WHERE activity IN ('start trip', 'end trip') GROUP BY activity;
SELECT activity, COUNT(*) as count FROM event_log GROUP BY activity
SELECT SUM(CASE WHEN activity = 'Start trip' THEN 1 ELSE 0 END) AS start_trips, SUM(CASE WHEN activity = 'End trip' THEN 1 ELSE 0 END) AS end_trips FROM event_log
SELECT select count(*), e1.idcase from event_log AS e1 inner join event_log AS e2 on e1.idcase = e2.idcase WHERE e2.activity = 'End trip' and e1.timestamp < e2.timestamp group by e1.idcase
SELECT COUNT(DISTINCT e1.idcase) FROM event_log AS e1 WHERE e1.activity IN ('Begin trip', 'End trip')
SELECT activity FROM event_log GROUP BY activity HAVING COUNT(activity) > 3;
SELECT activity FROM event_log GROUP BY activity HAVING COUNT(activity) > 3;
SELECT DISTINCT activity FROM event_log GROUP BY activity HAVING COUNT(activity) > 3;
SELECT activity FROM event_log GROUP BY activity HAVING COUNT(activity) > 3;
SELECT activity FROM event_log GROUP BY activity HAVING COUNT(*) > 3;
SELECT activity FROM event_log GROUP BY activity HAVING COUNT(*) > 3;
SELECT activity FROM event_log GROUP BY activity HAVING COUNT(*) > 3;
SELECT DISTINCT activity FROM event_log GROUP BY activity HAVING COUNT(*) > 3;
SELECT activity FROM event_log GROUP BY activity HAVING COUNT(*) > 3;
SELECT activity, COUNT(*) as count FROM event_log GROUP BY activity HAVING COUNT(*) > 3;
SELECT activity, resource FROM event_log ORDER BY timestamp DESC LIMIT 1;
SELECT activity, resource FROM ( SELECT activity, resource, timestamp, ROW_NUMBER() OVER (PARTITION BY activity ORDER BY timestamp DESC) AS row_num FROM event_log ) AS subquery WHERE row_num = 1
SELECT resource, activity FROM event_log ORDER BY timestamp DESC LIMIT 1;
SELECT activity, resource FROM event_log ORDER BY timestamp DESC LIMIT 1;
SELECT activity, resource FROM event_log ORDER BY timestamp DESC LIMIT 1;
SELECT activity, resource FROM event_log ORDER BY timestamp DESC LIMIT 1;
SELECT resource FROM event_log GROUP BY resource HAVING COUNT(*) IN (SELECT COUNT(*) FROM event_log GROUP BY resource ORDER BY COUNT(*) DESC LIMIT 10)
SELECT e1.resource, e1.activity FROM event_log AS e1 WHERE e1.id IN ( SELECT MAX(e2.id) FROM event_log AS e2 GROUP BY e2.idcase )
SELECT resource, activity FROM event_log ORDER BY timestamp DESC LIMIT 1;
SELECT el2.activity, el2.resource FROM event_log el2 WHERE el2.idcase IN ( SELECT el1.idcase FROM event_log el1 WHERE el1.activity = 'End trip' ) AND el2.timestamp > ( SELECT timestamp FROM event_log el3 WHERE el3.activity = 'End trip' AND el3.idcase = el2.idcase ) ORDER BY el2.idcase, el2.timestamp;
SELECT el2.idcase, el2.resource, el2.activity, el2.timestamp FROM event_log el2 JOIN event_log el1 ON el2.id > el1.id WHERE el1.activity = 'End trip' ORDER BY el2.resource;
SELECT el1.idcase, el1.timestamp, el1.resource FROM event_log el1 WHERE el1.activity!= 'End trip' AND el1.idcase IN ( SELECT el2.idcase FROM event_log el2 WHERE el2.activity = 'End trip' ) ORDER BY el1.timestamp;
SELECT el1.activity, el1.resource FROM event_log el1 JOIN event_log el2 ON el1.idcase = el2.idcase AND el1.timestamp < el2.timestamp WHERE el1.activity = 'End trip' AND el2.activity!= 'End trip' ORDER BY el1.idcase, el1.timestamp;
SELECT el1.activity, el1.timestamp, el1.resource FROM event_log el1 WHERE el1.idcase IN ( SELECT el2.idcase FROM event_log el2 WHERE el2.activity = 'End trip' ) ORDER BY el1.timestamp;
SELECT idcase, timestamp FROM event_log WHERE activity = 'End trip' ORDER BY resource;
SELECT el2.activity, el2.timestamp, el2.resource, el2.idcase FROM event_log el2 WHERE el2.id > ( SELECT MAX(id) FROM event_log el1 WHERE el1.activity = 'End trip' )
SELECT el1.idcase, el1.activity, el1.timestamp, p.name FROM event_log el1 JOIN event_log el2 ON el1.id > el2.id JOIN person p ON el1.resource = p.id WHERE el2.activity = 'End trip' ORDER BY el1.id;
SELECT el2.activity, el2.resource FROM event_log el1 JOIN event_log el2 ON el1.idcase = el2.idcase AND el1.timestamp < el2.timestamp WHERE el1.activity = 'End trip' ORDER BY el1.idcase, el1.timestamp, el2.timestamp;
SELECT e1.id, e1.activity, e1.timestamp, e1.resource, e2.id AS next_id, e2.activity AS next_activity, e2.timestamp AS next_timestamp, e2.resource AS next_resource FROM event_log e1 JOIN event_log e2 ON e1.idcase = e2.idcase AND e1.id < e2.id WHERE e1.activity = 'End trip' ORDER BY e1.id;
SELECT el1.idcase, el1.activity, el1.timestamp, el1.resource, el1.cost, el2.activity AS next_activity, el2.timestamp AS next_timestamp, el2.resource AS next_resource, el2.cost AS next_cost FROM event_log el1 JOIN event_log el2 ON el1.id = el2.id - 1 WHERE el1.activity = 'End trip' ORDER BY el1.idcase, el1.timestamp;
SELECT el1.idcase, el1.activity, el1.resource, el2.activity AS next_activity FROM event_log el1 JOIN event_log el2 ON el1.id < el2.id AND el1.activity = 'End trip' ORDER BY el1.id;
SELECT el1.activity, el1.resource, el1.timestamp, el1.idcase FROM event_log el1 JOIN event_log el2 ON el1.idcase = el2.idcase AND el1.timestamp < el2.timestamp WHERE el1.activity = 'End trip' ORDER BY el1.idcase, el1.timestamp;
SELECT el2.id, el2.activity, el2.timestamp, el2.resource FROM event_log el2 WHERE el2.id > ( SELECT el1.id FROM event_log el1 WHERE el1.activity = 'End trip' ) ORDER BY el2.timestamp;
SELECT el2.id, el2.activity, el2.timestamp, el2.resource, el2.cost, el2.idcase, el1.resource AS previous_resource FROM event_log el2 JOIN event_log el1 ON el2.id > el1.id AND el1.activity = 'End trip' ORDER BY el2.id;
SELECT el.idcase, el.activity, el.resource, el.timestamp, el.cost, eu.name FROM event_log el JOIN user_event ue ON el.id = ue.event_id JOIN users eu ON ue.user_id = eu.id WHERE el.idcase IN ( SELECT idcase FROM event_log GROUP BY idcase ORDER BY MIN(timestamp) DESC ) AND el.timestamp > ( SELECT MAX(timestamp) FROM event_log WHERE idcase = el.idcase ) ORDER BY el.idcase, el.timestamp;
SELECT idcase, timestamp FROM event_log WHERE activity = 'End trip' ORDER BY resource;
SELECT resource, COUNT(*) as count FROM event_log WHERE activity!= 'End trip' GROUP BY resource
SELECT resource, COUNT(*) as count FROM event_log WHERE activity!= 'End trip' GROUP BY resource
SELECT resource, COUNT(*) as count FROM event_log WHERE activity!= 'End trip' GROUP BY resource
SELECT resource, COUNT(*) AS num_events FROM event_log WHERE activity!= 'End trip' GROUP BY resource
SELECT resource, COUNT(*) as count FROM event_log WHERE activity!= 'End trip' GROUP BY resource
SELECT resource, COUNT(*) AS count_events FROM event_log WHERE activity!= 'End trip' GROUP BY resource
SELECT resource, COUNT(*) AS non_end_trip_events FROM event_log WHERE activity!= 'End trip' GROUP BY resource
SELECT resource, count(*) as num_events FROM event_log WHERE activity!= 'End trip' GROUP BY resource
SELECT resource, COUNT(*) as num_events FROM event_log WHERE activity!= 'End trip' GROUP BY resource
SELECT resource, COUNT(*) as count FROM event_log WHERE activity!= 'End trip' GROUP BY resource
SELECT resource, count(*) as num_events FROM event_log WHERE activity!= 'End trip' GROUP BY resource
SELECT resource, COUNT(*) as non_end_trip_events FROM event_log WHERE activity!= 'End trip' GROUP BY resource
SELECT resource, COUNT(*) AS num_events FROM event_log WHERE activity!= 'End trip' GROUP BY resource
SELECT resource, COUNT(*) AS non_end_trip_events FROM event_log WHERE activity!= 'End trip' GROUP BY resource
SELECT resource, COUNT(*) as events_amount FROM event_log WHERE activity!= 'End trip' GROUP BY resource
SELECT resource, COUNT(*) as count FROM event_log WHERE activity!= 'End trip' GROUP BY resource
SELECT resource, COUNT(*) FROM event_log WHERE activity!= 'End trip' GROUP BY resource
SELECT resource, count(*) as event_count FROM event_log WHERE activity!= 'End trip' GROUP BY resource
SELECT resource, COUNT(*) as non_end_trip_events FROM event_log WHERE activity!= 'End trip' GROUP BY resource
SELECT resource, COUNT(*) AS event_amount FROM event_log WHERE activity!= 'End trip' GROUP BY resource
SELECT resource, COUNT(*) AS non_end_trip_events FROM event_log WHERE activity!= 'End trip' GROUP BY resource
SELECT resource, COUNT(*) FROM event_log WHERE activity!= 'End trip' GROUP BY resource
SELECT resource, COUNT(*) as events_amount FROM event_log WHERE activity!= 'End trip' GROUP BY resource
SELECT resource, COUNT(*) AS events_amount FROM event_log WHERE activity!= 'End trip' GROUP BY resource
SELECT resource, COUNT(*) as non_end_trip_events FROM event_log WHERE activity!= 'End trip' GROUP BY resource
SELECT resource, COUNT(*) AS events_amount FROM event_log WHERE activity!= 'End trip' GROUP BY resource
SELECT resource, COUNT(*) AS non_end_trip_events FROM event_log WHERE activity!= 'End trip' GROUP BY resource
SELECT resource, COUNT(*) AS events_amount FROM event_log WHERE activity!= 'End trip' GROUP BY resource
SELECT COUNT(*) FROM event_log WHERE activity LIKE 'Processing travel declaration%' AND activity NOT LIKE 'End of trip%'
SELECT resource, count(*) as total_actions FROM event_log WHERE activity!= 'End trip' GROUP BY resource
SELECT idcase FROM event_log GROUP BY idcase ORDER BY MIN(timestamp) DESC;
SELECT DISTINCT idcase AS case_identifier, MIN(timestamp) AS start_date FROM event_log GROUP BY idcase ORDER BY start_date DESC;
SELECT idcase FROM event_log WHERE (idcase, timestamp) IN ( SELECT idcase, MIN(timestamp) FROM event_log GROUP BY idcase ) ORDER BY MIN(timestamp) DESC;
SELECT idcase, MIN(timestamp) AS start_date FROM event_log GROUP BY idcase ORDER BY start_date DESC;
SELECT count(DISTINCT idcase), activity FROM event_log GROUP BY activity;
SELECT idcase FROM event_log WHERE activity = 'Travel declaration' ORDER BY timestamp;
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE activity = 'Request payment'
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE activity = 'Request payment'
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE activity ='request payment';
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE activity = 'Request payment'
SELECT COUNT(DISTINCT idcase) AS num_cases FROM event_log WHERE activity = 'Request payment'
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE activity = 'Request payment';
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE activity = 'Request payment';
SELECT idcase FROM event_log WHERE activity = 'Declaration final approved by director' ORDER BY timestamp DESC LIMIT 1;
SELECT idcase FROM event_log WHERE activity = 'declaration final approved by director' ORDER BY timestamp DESC LIMIT 1;
SELECT idcase FROM event_log WHERE activity = 'Declaration final approved by director' ORDER BY timestamp DESC LIMIT 1;
SELECT idcase FROM event_log WHERE activity = 'Declaration final approved by director' ORDER BY timestamp DESC LIMIT 1;
SELECT idcase FROM event_log WHERE activity = 'Declaration final approved by director' ORDER BY timestamp DESC LIMIT 1;
SELECT e.idcase, e.resource, e.timestamp FROM event_log e WHERE e.activity = 'Declaration final approved by director' ORDER BY e.timestamp DESC LIMIT 1;
SELECT idcase, timestamp FROM event_log WHERE activity = 'Declaration final approved by director' ORDER BY timestamp DESC LIMIT 1;
SELECT resource, COUNT(*) as count FROM event_log WHERE activity = 'Declaration approved by administration' GROUP BY resource ORDER BY count DESC LIMIT 1;
SELECT resource, COUNT(*) as count FROM event_log WHERE activity = 'Declaration approved by administration' GROUP BY resource ORDER BY count DESC LIMIT 1;
SELECT resource, COUNT(*) as count FROM event_log WHERE activity = 'Declaration approved by administration' GROUP BY resource ORDER BY count DESC LIMIT 1;
SELECT resource, COUNT(*) as count FROM event_log WHERE activity = 'Declaration approved by administration' GROUP BY resource ORDER BY count DESC LIMIT 1;
SELECT resource, COUNT(*) as count FROM event_log WHERE activity = 'Declaration approved by administration' GROUP BY resource ORDER BY count DESC LIMIT 1;
SELECT resource, COUNT(*) as count FROM event_log WHERE activity = 'Declaration approved by administration' GROUP BY resource ORDER BY count DESC LIMIT 1;
SELECT resource FROM event_log GROUP BY resource HAVING COUNT(*) = (SELECT COUNT(*) FROM event_log WHERE activity = 'approve' GROUP BY resource ORDER BY COUNT(*) DESC LIMIT 1)
SELECT resource, COUNT(*) FROM event_log WHERE activity = (SELECT MIN(activity) FROM event_log) GROUP BY resource
SELECT resource, COUNT(*) FROM event_log WHERE id = (SELECT MIN(id) FROM event_log WHERE idcase IS NOT NULL) GROUP BY resource
SELECT COUNT(DISTINCT idcase), resource FROM event_log WHERE activity = (SELECT activity FROM event_log WHERE id = (SELECT MIN(id) FROM event_log WHERE idcase = event_log.idcase)) GROUP BY resource
SELECT COUNT(*) as count, resource FROM event_log WHERE id = (SELECT MIN(id) FROM event_log GROUP BY idcase) GROUP BY resource
SELECT resource, COUNT(*) as first_activity_count FROM event_log WHERE id = (SELECT MIN(id) FROM event_log WHERE idcase = event_log.idcase) GROUP BY resource
SELECT COUNT(DISTINCT idcase), resource FROM event_log WHERE activity = 'first' GROUP BY resource
SELECT COUNT(*), resource FROM event_log WHERE activity LIKE '%initiated%' GROUP BY resource
SELECT count(*) FROM event_log WHERE activity LIKE '%approved%'
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE activity LIKE '%approved%';
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE activity LIKE '%approved%'
SELECT COUNT(*) FROM event_log WHERE activity LIKE '%approved%';
SELECT COUNT(*) FROM event_log WHERE activity LIKE '%approved%'
SELECT count(*) FROM event_log WHERE activity LIKE '%approved%'
SELECT COUNT(DISTINCT idcase) AS num_declarations FROM event_log WHERE activity LIKE '%approved%';
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE activity LIKE '%approved%';
SELECT DATE(timestamp) AS date, COUNT(*) AS count FROM event_log WHERE activity LIKE '%rejected%' GROUP BY DATE(timestamp) ORDER BY date;
SELECT DATE(timestamp) AS date, COUNT(DISTINCT idcase) AS num_cases FROM event_log WHERE activity LIKE '%rejected%' GROUP BY DATE(timestamp)
SELECT DATE(timestamp) AS date, COUNT(*) AS count FROM event_log WHERE activity ='rejected' GROUP BY DATE(timestamp) ORDER BY date;
SELECT DATE(timestamp) AS date, COUNT(*) AS count FROM event_log WHERE activity LIKE '%rejected%' GROUP BY DATE(timestamp) ORDER BY date;
SELECT DATE(timestamp) AS date, COUNT(DISTINCT idcase) AS num_cases FROM event_log WHERE activity LIKE '%rejected%' GROUP BY DATE(timestamp) ORDER BY date;
SELECT DATE(timestamp) AS date, COUNT(*) AS count FROM event_log WHERE activity LIKE '%rejected%' GROUP BY DATE(timestamp) ORDER BY date;
SELECT DATE(timestamp) AS date, COUNT(*) AS rejected_declarations FROM event_log WHERE activity = 'Declaration rejected by pre-approver' GROUP BY DATE(timestamp) ORDER BY date;
SELECT DATE(timestamp) AS date, COUNT(*) AS rejection_actions FROM event_log WHERE activity = 'Declaration rejected by director' GROUP BY DATE(timestamp)
SELECT idcase, strftime('%s', MAX(timestamp)) - strftime('%s', MIN(timestamp)) AS duration FROM event_log GROUP BY idcase ORDER BY COUNT(*) DESC LIMIT 5;
SELECT idcase, strftime('%s', MAX(timestamp)) - strftime('%s', MIN(timestamp)) AS duration FROM event_log WHERE idcase IN ( SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(*) IN ( SELECT COUNT(*) FROM event_log GROUP BY idcase HAVING COUNT(*) >= 20 ORDER BY COUNT(*) DESC LIMIT 5 ) ) GROUP BY idcase ORDER BY duration DESC;
SELECT idcase, strftime('%s', MAX(timestamp)) - strftime('%s', MIN(timestamp)) AS duration FROM event_log WHERE idcase IN ( SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(*) IN ( SELECT COUNT(*) FROM event_log GROUP BY idcase HAVING COUNT(*) >= 20 ORDER BY COUNT(*) DESC LIMIT 5 ) GROUP BY idcase;
SELECT idcase, strftime('%s', MAX(timestamp)) - strftime('%s', MIN(timestamp)) AS duration FROM event_log WHERE idcase IN ( SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(*) IN ( SELECT COUNT(*) FROM event_log GROUP BY idcase HAVING COUNT(*) >= 20 ORDER BY COUNT(*) DESC LIMIT 5 ) ) GROUP BY idcase ORDER BY duration DESC;
SELECT idcase, SUM(TIMESTAMPDIFF(SECOND, MIN(timestamp), MAX(timestamp))) AS total_duration FROM event_log GROUP BY idcase ORDER BY total_duration DESC LIMIT 5;
SELECT idcase, SUM(TIMESTAMPDIFF(SECOND, MIN(timestamp), MAX(timestamp))) AS total_duration FROM event_log GROUP BY idcase ORDER BY total_duration DESC LIMIT 5;
SELECT idcase, strftime('%s', MAX(timestamp)) - strftime('%s', MIN(timestamp)) AS duration FROM event_log WHERE idcase IN ( SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(*) IN ( SELECT COUNT(*) FROM event_log GROUP BY idcase HAVING COUNT(*) >= 20 ORDER BY COUNT(*) DESC LIMIT 5 ) GROUP BY idcase;
SELECT idcase, COUNT(*) as num_actions, SUM(cost) as total_cost FROM event_log GROUP BY idcase ORDER BY num_actions DESC LIMIT 5;
SELECT idcase, activity, SUM(TIMESTAMPDIFF(SECOND, timestamp, LAG(timestamp) OVER (PARTITION BY idcase ORDER BY timestamp), 0)) AS total_processing_time FROM event_log WHERE activity!= 'NEW' GROUP BY idcase, activity ORDER BY total_processing_time DESC LIMIT 5;
SELECT idcase, strftime('%s', MAX(timestamp)) - strftime('%s', MIN(timestamp)) AS duration, COUNT(*) AS num_events FROM event_log WHERE idcase IN ( SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(*) >= 20 ORDER BY COUNT(*) DESC LIMIT 5 ) GROUP BY idcase ORDER BY num_events DESC;
SELECT idcase, strftime('%s', MAX(timestamp)) - strftime('%s', MIN(timestamp)) AS duration FROM event_log WHERE idcase IN ( SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(*) >= 20 ORDER BY COUNT(*) DESC LIMIT 5 ) GROUP BY idcase;
SELECT idcase, SUM(TIMESTAMPDIFF(SECOND, MIN(timestamp), MAX(timestamp))) AS duration FROM event_log WHERE idcase IN ( SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(*) >= 20 ORDER BY COUNT(*) DESC LIMIT 5 ) GROUP BY idcase ORDER BY duration DESC;
SELECT strftime('%s', MAX(timestamp)) - strftime('%s', MIN(timestamp)) AS duration, idcase FROM event_log WHERE idcase IN ( SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(*) >= 20 ORDER BY COUNT(*) DESC LIMIT 5 ) GROUP BY idcase;
SELECT strftime('%s', MAX(timestamp)) - strftime('%s', MIN(timestamp)) AS duration, idcase FROM event_log WHERE idcase IN ( SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(*) >= 20 ORDER BY COUNT(*) DESC LIMIT 5 ) GROUP BY idcase
SELECT strftime('%s', MAX(timestamp)) - strftime('%s', MIN(timestamp)) AS duration, idcase FROM event_log WHERE idcase IN ( SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(*) >= 20 ORDER BY COUNT(*) DESC LIMIT 5 ) GROUP BY idcase;
SELECT idcase, COUNT(*) AS num_events, strftime('%s', MAX(timestamp)) - strftime('%s', MIN(timestamp)) AS duration FROM event_log WHERE COUNT(*) IN ( SELECT COUNT(*) FROM event_log GROUP BY idcase HAVING COUNT(*) >= 20 ORDER BY COUNT(*) DESC LIMIT 5 ) GROUP BY idcase ORDER BY num_events DESC;
SELECT idcase, strftime('%s', MAX(timestamp)) - strftime('%s', MIN(timestamp)) AS processing_time FROM event_log WHERE idcase IN ( SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(*) >= 20 ) GROUP BY idcase ORDER BY processing_time DESC LIMIT 5;
SELECT * FROM event_log WHERE activity!= 'Request payment' ORDER BY timestamp DESC LIMIT 10;
SELECT * FROM event_log WHERE activity!= 'Request Payment' ORDER BY timestamp DESC LIMIT 10;
SELECT * FROM event_log WHERE activity!= 'Request payment' ORDER BY timestamp DESC LIMIT 10;
SELECT * FROM event_log WHERE activity!= 'Request payment' AND idcase IN ( SELECT idcase FROM event_log ORDER BY timestamp DESC LIMIT 10 ) ORDER BY timestamp DESC;
SELECT * FROM event_log WHERE activity!= 'Request payment' ORDER BY timestamp DESC LIMIT 10;
SELECT idcase FROM event_log WHERE activity!= 'Request payment' ORDER BY timestamp DESC LIMIT 10;
SELECT * FROM event_log WHERE activity!= 'Request payment' ORDER BY timestamp DESC LIMIT 10;
SELECT idcase FROM event_log WHERE activity!= 'Request payment' ORDER BY timestamp DESC LIMIT 10;
SELECT idcase FROM event_log WHERE activity!= 'Request payment' ORDER BY timestamp DESC LIMIT 10
SELECT * FROM event_log WHERE idcase NOT IN (SELECT idcase FROM event_log WHERE activity = 'Request payment') ORDER BY timestamp DESC LIMIT 10;
SELECT * FROM event_log WHERE activity!= 'Request payment' ORDER BY timestamp DESC LIMIT 10;
SELECT idcase, timestamp FROM event_log WHERE activity = 'Processing declaration' AND id NOT IN ( SELECT id FROM event_log WHERE activity = 'Request payment' ) ORDER BY timestamp DESC LIMIT 10;
SELECT idcase, count(*) as num_events FROM event_log GROUP BY idcase HAVING count(*) <= 10;
SELECT idcase, count(*) as num_events FROM event_log GROUP BY idcase HAVING count(*) <= 10;
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(*) <= 10
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(*) <= 10
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(*) <= 10;
SELECT idcase FROM event_log GROUP BY idcase HAVING count(*) <= 10
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(*) <= 10;
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(*) <= 10
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(*) <= 10;
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(*) <= 10
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(*) <= 10
SELECT idcase FROM event_log GROUP BY idcase HAVING count(*) <= 10
SELECT AVG(cost) FROM event_log WHERE activity = 'payment handled' AND timestamp < '2018-01-01 00:00:00'
SELECT AVG(cost) FROM event_log WHERE activity = 'payment handled' AND timestamp < '2018-01-01 00:00:00'
SELECT AVG(cost) FROM event_log WHERE activity = 'payment handled' AND timestamp < '2018-01-01 00:00:00'
SELECT AVG(cost) FROM event_log WHERE activity = 'payment handled' AND timestamp < '2018-01-01 00:00:00'
SELECT AVG(cost) FROM event_log WHERE activity = 'payment handled' AND timestamp < '2018-01-01 00:00:00'
SELECT AVG(cost) FROM event_log WHERE timestamp < '2018-01-01' AND activity = 'payment handled'
SELECT AVG(cost) FROM event_log WHERE activity = 'payment handled' AND timestamp < '2018-01-01 00:00:00'
SELECT AVG(cost) FROM event_log WHERE activity = 'payment handled' AND timestamp < '2018-01-01 00:00:00';
SELECT AVG(cost) AS mean_cost FROM event_log WHERE activity LIKE '%payment%' AND timestamp < '2018-01-01'
SELECT idcase, COUNT(*) as permit_count FROM event_log WHERE activity LIKE 'Permit%' GROUP BY idcase
SELECT idcase, COUNT(*) as permit_count FROM event_log WHERE activity LIKE 'Permit%' GROUP BY idcase
SELECT idcase, COUNT(*) as permit_count FROM event_log WHERE activity LIKE 'Permit%' GROUP BY idcase
SELECT idcase, COUNT(*) as permit_count FROM event_log WHERE activity LIKE 'Permit%' GROUP BY idcase
SELECT idcase, COUNT(*) as num_events FROM event_log WHERE activity LIKE 'Permit%' GROUP BY idcase
SELECT idcase, COUNT(*) as count_permit_activities FROM event_log WHERE activity LIKE 'Permit%' GROUP BY idcase
SELECT idcase, COUNT(*) as permit_count FROM event_log WHERE activity LIKE '%Permit%' GROUP BY idcase
SELECT idcase, COUNT(*) AS num_events FROM event_log WHERE activity LIKE '%permit%' GROUP BY idcase
SELECT idcase, COUNT(*) AS permit_count FROM event_log WHERE activity = 'Permit registered' GROUP BY idcase
SELECT idcase, COUNT(*) AS permit_count FROM event_log WHERE activity = 'Permit granted' GROUP BY idcase
SELECT e1.idcase, e1.resource, COUNT(*) as count FROM event_log e1 WHERE e1.activity = 'Declaration rejected by supervisor' GROUP BY e1.idcase, e1.resource ORDER BY e1.idcase, e1.resource;
SELECT e1.idcase, e1.resource, COUNT(*) as count FROM event_log e1 WHERE e1.activity = 'Declaration rejected by supervisor' GROUP BY e1.idcase, e1.resource ORDER BY e1.idcase, e1.resource;
SELECT COUNT(DISTINCT idcase), resource FROM event_log WHERE activity = 'Declaration rejected by supervisor' GROUP BY resource
SELECT resource, COUNT(*) AS num_cases FROM event_log WHERE activity = 'Declaration rejected by supervisor' GROUP BY resource
SELECT resource, COUNT(DISTINCT idcase) AS num_cases FROM event_log WHERE activity = 'Declaration rejected by supervisor' GROUP BY resource
SELECT resource, COUNT(*) as num_cases FROM event_log WHERE activity = 'Declaration rejected by supervisor' GROUP BY resource
SELECT resource, COUNT(*) as num_declarations FROM event_log WHERE activity = 'Declaration rejected by supervisor' GROUP BY resource
SELECT COUNT(*), resource FROM event_log WHERE activity = 'Declaration rejected by supervisor' GROUP BY resource
SELECT idcase, COUNT(*) as num_cases FROM event_log GROUP BY idcase
SELECT activity, count(*) as num_cases FROM event_log GROUP BY activity;
SELECT activity, COUNT(DISTINCT idcase) AS num_cases FROM event_log GROUP BY activity
SELECT count(DISTINCT idcase), activity FROM event_log GROUP BY activity
SELECT COUNT(DISTINCT idcase) AS num_cases, activity FROM event_log GROUP BY activity ORDER BY num_cases DESC;
SELECT COUNT(DISTINCT idcase) AS num_cases, activity FROM event_log GROUP BY activity
SELECT activity, count(*) FROM event_log GROUP BY activity
SELECT COUNT(DISTINCT idcase), activity FROM event_log GROUP BY activity;
SELECT * FROM event_log WHERE activity LIKE 'R%' AND timestamp > ( SELECT MAX(timestamp) FROM event_log WHERE activity LIKE 'D%' )
SELECT * FROM event_log WHERE activity LIKE 'R%' AND timestamp > ( SELECT MAX(timestamp) FROM event_log WHERE activity LIKE 'D%' )
SELECT * FROM event_log WHERE id IN ( SELECT id FROM event_log WHERE activity LIKE 'D%' -- filter events started by 'D' ORDER BY timestamp DESC -- order by timestamp in descending order ) AND activity LIKE 'R%' -- filter events started by 'R' ORDER BY timestamp;
SELECT * FROM event_log WHERE activity LIKE 'R%' AND timestamp > (SELECT MAX(timestamp) FROM event_log WHERE activity LIKE 'D%')
SELECT * FROM event_log WHERE activity LIKE 'R%' AND timestamp > ( SELECT MAX(timestamp) FROM event_log WHERE activity LIKE 'D%' )
SELECT * FROM event_log WHERE activity LIKE 'R%' AND timestamp > (SELECT MAX(timestamp) FROM event_log WHERE activity LIKE 'D%')
WITH sorted_events AS ( SELECT activity, timestamp FROM event_log WHERE activity LIKE 'R%' OR activity LIKE 'D%' ORDER BY activity, timestamp ) SELECT * FROM sorted_events WHERE activity LIKE 'R%' AND EXISTS ( SELECT 1 FROM sorted_events AS prev_event WHERE prev_event.activity LIKE 'D%' AND prev_event.timestamp < sorted_events.timestamp )
SELECT DISTINCT activity FROM event_log WHERE activity LIKE 'R%' AND timestamp > ( SELECT MIN(timestamp) FROM event_log WHERE activity LIKE 'D%' )
SELECT activity, resource, COUNT(*) as count FROM event_log GROUP BY activity, resource
SELECT activity, resource, COUNT(*) as count FROM event_log GROUP BY activity, resource
SELECT resource, activity, count(*) as frequency FROM event_log GROUP BY resource, activity
SELECT activity, resource, count(*) as frequency FROM event_log GROUP BY activity, resource
SELECT activity, resource, COUNT(*) FROM event_log GROUP BY activity, resource
SELECT resource, COUNT(*) as count FROM event_log WHERE activity LIKE '%processing%' GROUP BY resource
SELECT e.name, activity, count(*) as count FROM event_log el JOIN employees e ON el.idcase = e.id GROUP BY e.name, activity
SELECT DISTINCT activity FROM event_log WHERE timestamp BETWEEN '2018-01-01' AND '2018-07-01' ORDER BY activity;
SELECT DISTINCT activity FROM event_log WHERE timestamp BETWEEN '2018-01-01' AND '2018-07-01'
SELECT DISTINCT activity FROM event_log WHERE timestamp BETWEEN '2018-01-01' AND '2018-06-30'
SELECT DISTINCT activity FROM event_log WHERE timestamp BETWEEN '2018-01-01' AND '2018-07-31';
SELECT DISTINCT activity FROM event_log WHERE timestamp BETWEEN '2018-01-01' AND '2018-07-01'
SELECT DISTINCT activity FROM event_log WHERE timestamp BETWEEN '2018-01-01' AND '2018-07-01'
SELECT activity, COUNT(DISTINCT idcase) FROM event_log WHERE timestamp BETWEEN '2018-01-01' AND '2018-06-30' GROUP BY activity;
SELECT idcase FROM event_log WHERE resource = 'Wayne' ORDER BY idcase;
SELECT idcase FROM event_log WHERE resource = 'Wayne' ORDER BY idcase;
SELECT idcase, resource FROM event_log WHERE resource = 'Wayne' ORDER BY idcase;
SELECT idcase FROM event_log WHERE resource = 'Wayne' ORDER BY idcase;
SELECT idcase, activity, timestamp, resource, cost FROM event_log WHERE resource = 'Wayne' ORDER BY idcase, timestamp;
SELECT idcase FROM event_log WHERE resource = 'Wayne' ORDER BY idcase;
SELECT idcase FROM event_log WHERE resource = 'Wayne' ORDER BY idcase;
SELECT * FROM event_log WHERE resource = 'Wayne' ORDER BY timestamp;
SELECT DISTINCT idcase FROM event_log WHERE resource = 'Wayne' AND activity LIKE '%declaration%' ORDER BY idcase;
SELECT idcase FROM event_log WHERE resource = 'Wayne' ORDER BY idcase;
SELECT activity, COUNT(DISTINCT idcase) FROM event_log WHERE strftime('%Y-%m-%d', timestamp) = '2018-03-12' GROUP BY activity;
SELECT activity, COUNT(DISTINCT idcase) as num_instances FROM event_log WHERE timestamp BETWEEN '2018-03-12 00:00:00' AND '2018-03-12 23:59:59' GROUP BY activity
SELECT activity, COUNT(*) AS count FROM event_log WHERE timestamp = '2018-03-12' AND idcase IS NOT NULL GROUP BY activity ORDER BY count DESC;
SELECT activity, COUNT(DISTINCT idcase) AS num_cases FROM event_log WHERE timestamp = '2018-03-12' AND activity!= 'End trip' GROUP BY activity ORDER BY num_cases DESC;
SELECT activity, COUNT(DISTINCT idcase) AS num_cases FROM event_log WHERE timestamp = (SELECT MAX(timestamp) FROM event_log WHERE strftime('%Y-%m-%d', timestamp) = '2018-03-12') GROUP BY activity
SELECT activity, COUNT(*) as num_cases FROM event_log WHERE strftime('%Y-%m-%d', timestamp) = '2018-03-12' GROUP BY activity
SELECT COUNT(DISTINCT idcase), activity FROM event_log WHERE timestamp = '2018-03-12' GROUP BY activity
SELECT activity, COUNT(*) AS num_declarations FROM event_log WHERE timestamp BETWEEN '2018-03-12 00:00:00' AND '2018-03-12 23:59:59' GROUP BY activity
SELECT COUNT(*) FROM event_log WHERE activity LIKE 'permit%' AND idcase LIKE 'permit%';
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE activity LIKE 'Permit%';
SELECT COUNT(DISTINCT idcase) AS num_cases FROM event_log WHERE activity LIKE 'Permit%'
SELECT COUNT(*) FROM event_log WHERE activity LIKE 'Permit%' AND id = (SELECT MIN(id) FROM event_log WHERE activity LIKE 'Permit%');
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE activity LIKE 'permit%' ORDER BY COUNT(DISTINCT idcase) DESC;
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE activity LIKE 'Permit%' ORDER BY 1;
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE activity LIKE 'permit%';
SELECT COUNT(*) FROM event_log WHERE activity LIKE '%permit%' AND activity LIKE 'Start%'
SELECT COUNT(*) FROM event_log WHERE activity = 'permit' AND timestamp = (SELECT MIN(timestamp) FROM event_log WHERE idcase = event_log.idcase)
SELECT DISTINCT idcase FROM event_log WHERE activity NOT IN ('Request payment', 'payment handled')
SELECT idcase FROM event_log WHERE activity NOT IN ('Request payment', 'payment handled') GROUP BY idcase HAVING COUNT(DISTINCT activity) = (SELECT COUNT(*) - 2 FROM (SELECT DISTINCT activity FROM event_log) AS activities)
SELECT idcase FROM event_log WHERE idcase NOT IN ( SELECT idcase FROM event_log WHERE activity IN ('Request payment', 'payment handled') ) GROUP BY idcase HAVING COUNT(*) = 0
SELECT DISTINCT idcase FROM event_log WHERE idcase NOT IN ( SELECT idcase FROM event_log WHERE activity = 'Request payment' OR activity = 'Payment handled' ) AND NOT EXISTS ( SELECT 1 FROM event_log WHERE idcase = event_log.idcase AND (activity = 'Request payment' OR activity = 'Payment handled') )
SELECT e1.idcase FROM (SELECT DISTINCT idcase FROM event_log WHERE activity IN ('request payment', 'payment handled')) AS e1 LEFT JOIN event_log AS e ON e1.idcase = e.idcase WHERE e.id IS NULL
SELECT el1.idcase FROM event_log el1 LEFT JOIN event_log el2 ON el1.idcase = el2.idcase AND (el2.activity = 'Request payment' OR el2.activity = 'Payment handled') WHERE el2.id IS NULL
SELECT idcase FROM event_log WHERE idcase NOT IN ( SELECT idcase FROM event_log WHERE activity IN ('Request payment', 'Payment handled') ) GROUP BY idcase HAVING COUNT(*) = 0;
SELECT DISTINCT idcase FROM event_log WHERE idcase NOT IN ( SELECT idcase FROM event_log WHERE activity = 'Request payment' OR activity = 'Payment handled' )
SELECT e.idcase FROM event_log AS e WHERE e.activity NOT IN ('Request payment', 'payment handled') GROUP BY e.idcase HAVING NOT EXISTS ( SELECT 1 FROM event_log AS e1 WHERE e1.idcase = e.idcase AND e1.activity IN ('Request payment', 'payment handled') )
SELECT idcase FROM event_log WHERE activity NOT IN ('Request payment', 'payment handled') GROUP BY idcase HAVING COUNT(DISTINCT id) = (SELECT COUNT(*) FROM event_log WHERE idcase = event_log.idcase)
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE idcase NOT IN ( SELECT DISTINCT idcase FROM event_log WHERE activity IN ('Payment handled', 'Payment request') )
SELECT idcase FROM event_log WHERE activity = 'Request payment' AND NOT EXISTS ( SELECT 1 FROM event_log WHERE activity = 'Make payment' AND idcase = event_log.idcase AND timestamp >= (SELECT MIN(timestamp) FROM event_log WHERE activity = 'Request payment' AND idcase = event_log.idcase) )
SELECT activity, timestamp, resource, idcase FROM event_log WHERE activity IN ('start trip', 'declaration submitted by employee') ORDER BY timestamp, resource;
SELECT * FROM event_log WHERE activity = 'Start trip' OR activity = 'Declaration submitted by employee' ORDER BY timestamp, resource ASC;
SELECT * FROM event_log WHERE activity IN ('Start trip', 'declaration submitted by employee') ORDER BY timestamp, resource;
SELECT * FROM event_log WHERE activity = 'Start trip' OR activity = 'Declaration submitted by employee' ORDER BY timestamp, resource;
SELECT * FROM event_log WHERE activity = 'Start trip' OR activity = 'Declaration submitted by employee' ORDER BY timestamp, resource
SELECT * FROM event_log WHERE activity = 'Start trip' OR activity = 'Declaration submitted by employee' ORDER BY timestamp, resource ASC;
SELECT timestamp, resource FROM event_log WHERE activity = 'Start trip' OR activity = 'Declaration submitted by employee' ORDER BY timestamp, resource;
SELECT timestamp, resource FROM event_log WHERE activity = 'Start trip' OR activity = 'Declaration submitted by employee' ORDER BY timestamp, resource;
SELECT timestamp, resource, activity, cost, idcase FROM event_log WHERE activity IN ('Start trip', 'Declaration submitted by employee') ORDER BY timestamp, resource;
SELECT e1.activity, e1.resource, e1.idcase FROM event_log AS e1 INNER JOIN event_log AS e2 ON e1.idcase = e2.idcase WHERE e2.activity = 'End trip' AND e1.timestamp > e2.timestamp
SELECT e1.activity, e1.resource, e1.idcase FROM event_log AS e1 INNER JOIN event_log AS e2 ON e1.idcase = e2.idcase WHERE e2.activity = 'End trip' AND e1.timestamp > e2.timestamp
SELECT resource, COUNT(*) FROM event_log WHERE activity = 'declaration saved by employee' GROUP BY resource ORDER BY resource;
SELECT resource, count(*) as count FROM event_log WHERE activity = 'Declaration saved by employee' GROUP BY resource ORDER BY resource;
SELECT resource, COUNT(*) FROM event_log WHERE activity = 'Declaration saved by employee' GROUP BY resource ORDER BY resource;
SELECT resource, COUNT(*) as count FROM event_log WHERE activity = 'declaration saved by employee' GROUP BY resource ORDER BY resource;
SELECT resource, count(*) as occurrences FROM event_log WHERE activity = 'declaration saved by employee' GROUP BY resource ORDER BY resource;
SELECT resource, count(*) as performance_count FROM event_log WHERE activity = 'Declaration saved by employee' GROUP BY resource ORDER BY resource;
SELECT resource, count(*) as frequency FROM event_log WHERE activity = 'declaration saved by employee' GROUP BY resource ORDER BY resource;
SELECT resource, COUNT(*) as performance_count FROM event_log WHERE activity = 'Declaration saved by employee' GROUP BY resource ORDER BY resource;
SELECT resource, count(*) as performance_count FROM event_log WHERE activity = 'Declaration saved by employee' GROUP BY resource ORDER BY resource;
SELECT e.name, COUNT(*) as num_declarations FROM event_log el JOIN employees e ON el.id = e.id WHERE el.activity ='saving a travel declaration' GROUP BY e.name ORDER BY e.name;
SELECT resource, COUNT(*) AS "Number of Times Processed" FROM event_log WHERE activity ='save declaration' GROUP BY resource ORDER BY resource;
SELECT activity, COUNT(DISTINCT idcase) as num_cases FROM event_log GROUP BY activity
SELECT activity, COUNT(DISTINCT idcase) AS num_cases FROM event_log GROUP BY activity;
SELECT activity, COUNT(DISTINCT idcase) AS num_cases FROM event_log GROUP BY activity
SELECT activity, COUNT(DISTINCT idcase) AS num_instances FROM event_log GROUP BY activity
SELECT activity, COUNT(DISTINCT idcase) FROM event_log GROUP BY activity
SELECT COUNT(DISTINCT idcase), activity FROM event_log GROUP BY activity
SELECT COUNT(DISTINCT idcase) AS num_cases, activity FROM event_log GROUP BY activity
SELECT idcase, COUNT(*) as num_declarations FROM event_log GROUP BY idcase
SELECT activity, COUNT(*) as count FROM event_log GROUP BY activity ORDER BY count DESC;
SELECT resource, COUNT(DISTINCT activity) AS num_activities FROM event_log GROUP BY resource
SELECT resource, COUNT(DISTINCT activity) as num_activities FROM event_log GROUP BY resource
SELECT resource, COUNT(DISTINCT activity) FROM event_log GROUP BY resource
SELECT resource, COUNT(DISTINCT activity) FROM event_log GROUP BY resource
SELECT resource, COUNT(DISTINCT activity) AS num_activities FROM event_log GROUP BY resource
SELECT resource, COUNT(DISTINCT activity) AS num_activities FROM event_log GROUP BY resource
SELECT resource, COUNT(DISTINCT activity) AS num_activities FROM event_log GROUP BY resource
SELECT resource, COUNT(DISTINCT activity) AS num_actions FROM event_log WHERE activity LIKE '%trip%' OR activity LIKE '%payment%' GROUP BY resource
SELECT resource, COUNT(DISTINCT activity) AS num_actions FROM event_log WHERE activity LIKE '%trip%' OR activity LIKE '%payment%' GROUP BY resource
SELECT resource, COUNT(*) as occurrences FROM event_log WHERE activity IN ('end trip', 'payment handled') GROUP BY resource
SELECT resource, COUNT(*) FROM event_log WHERE activity IN ('end trip', 'payment handled') GROUP BY resource;
SELECT resource, COUNT(*) as count FROM event_log WHERE activity IN ('End trip', 'Payment handled') GROUP BY resource
SELECT resource, COUNT(*) FROM event_log WHERE activity IN ('end trip', 'payment handled') GROUP BY resource
SELECT COUNT(*), resource FROM event_log WHERE activity IN ('end trip', 'payment handled') GROUP BY resource
SELECT resource, COUNT(*) AS completion_count FROM event_log WHERE activity IN ('End trip', 'payment handled') GROUP BY resource;
SELECT resource, COUNT(*) FROM event_log WHERE activity IN ('end of trip', 'payment') GROUP BY resource
SELECT COUNT(*), resource FROM event_log WHERE activity IN ('End trip', 'Make payment') GROUP BY resource
SELECT resource, COUNT(*) FROM event_log WHERE activity = 'Declaration rejected by pre-approver' GROUP BY resource ORDER BY COUNT(*) DESC;
SELECT resource, COUNT(*) AS num_cases FROM event_log WHERE activity = 'Declaration rejected by pre-approver' GROUP BY resource
SELECT resource, COUNT(DISTINCT idcase) AS num_instances FROM ( SELECT resource, idcase, ROW_NUMBER() OVER (PARTITION BY resource, activity ORDER BY timestamp) AS row_num FROM event_log WHERE activity = 'Declaration rejected by pre-approver' ) AS subquery WHERE row_num = 1 GROUP BY resource
SELECT COUNT(*), resource FROM event_log WHERE activity = 'declaration rejected by pre-approver' AND id IN ( SELECT MIN(id) FROM event_log WHERE activity = 'declaration rejected by pre-approver' GROUP BY idcase, resource ) GROUP BY resource
SELECT resource, COUNT(*) FROM event_log WHERE activity = 'declaration rejected by pre-approver' AND id = (SELECT MIN(id) FROM event_log WHERE activity = 'declaration rejected by pre-approver') GROUP BY resource
SELECT e.employee_id, COUNT(*) as count FROM event_log el JOIN employees e ON el.idcase = e.idcase WHERE el.activity = 'Declaration rejected by pre-approver' GROUP BY e.employee_id
SELECT COUNT(DISTINCT idcase) AS num_declarations, resource FROM event_log WHERE activity LIKE'reject%' AND resource IN ( SELECT resource FROM event_log WHERE activity LIKE'reject%' AND timestamp = ( SELECT MIN(timestamp) FROM event_log WHERE activity LIKE'reject%' AND resource = event_log.resource ) AND role = 'pre-approver' GROUP BY resource
WITH activity_counts AS ( SELECT idcase, activity, ROW_NUMBER() OVER (PARTITION BY idcase ORDER BY timestamp) AS row_num, COUNT(*) OVER (PARTITION BY idcase) AS total_activities FROM event_log WHERE activity!= 'End trip' ) SELECT idcase, total_activities FROM activity_counts WHERE row_num = total_activities
SELECT idcase, SUM(CASE WHEN activity = 'End trip' THEN 0 ELSE 1 END) AS activity_occurrences FROM event_log GROUP BY idcase
SELECT idcase, SUM(CASE WHEN activity = 'End trip' THEN 0 ELSE 1 END) AS num_instances FROM event_log GROUP BY idcase
SELECT idcase, count(*) - (SELECT count(*) FROM event_log WHERE activity = 'End trip' AND idcase = e.idcase) AS events_before_end_trip FROM event_log e WHERE activity!= 'End trip' GROUP BY idcase
SELECT idcase, COUNT(*) AS activity_occurrences FROM event_log WHERE activity!= 'end trip' AND timestamp < (SELECT MAX(timestamp) FROM event_log WHERE activity = 'end trip' AND idcase = event_log.idcase) GROUP BY idcase
SELECT idcase, COUNT(*) AS num_activities FROM event_log WHERE activity!= 'End trip' GROUP BY idcase ORDER BY idcase;
SELECT idcase, COUNT(*) AS num_events FROM event_log WHERE activity!= 'End trip' GROUP BY idcase ORDER BY idcase;
SELECT idcase, COUNT(*) as num_events FROM event_log WHERE activity!= 'End trip' GROUP BY idcase ORDER BY idcase;
SELECT idcase, COUNT(*) as num_events FROM event_log WHERE activity!= 'End trip' GROUP BY idcase ORDER BY idcase;
SELECT idcase, count(*) as num_actions FROM event_log WHERE activity!= 'end_of_trip' GROUP BY idcase
SELECT idcase, COUNT(*) AS necessary_actions FROM event_log WHERE timestamp <= (SELECT MAX(timestamp) FROM event_log WHERE idcase = event_log.idcase) GROUP BY idcase
SELECT DISTINCT activity FROM event_log WHERE timestamp BETWEEN '2018-01-01' AND '2018-07-01' AND resource = 'Thomas';
SELECT activity FROM event_log WHERE resource = 'Thomas' AND timestamp BETWEEN '2018-01-01' AND '2018-06-30'
SELECT activity FROM event_log WHERE resource = 'Thomas' AND timestamp BETWEEN '2018-01-01' AND '2018-06-30'
SELECT DISTINCT activity FROM event_log WHERE timestamp BETWEEN '2018-01-01' AND '2018-07-01' AND idcase = 'Thomas';
SELECT DISTINCT activity FROM event_log WHERE resource = 'Thomas' AND timestamp BETWEEN '2018-01-01' AND '2018-07-31';
SELECT DISTINCT activity FROM event_log WHERE resource = 'Thomas' AND timestamp BETWEEN '2018-01-01' AND '2018-07-31';
SELECT DISTINCT activity FROM event_log WHERE resource = 'Thomas' AND timestamp BETWEEN '2018-01-01' AND '2018-06-30';
SELECT DISTINCT activity FROM event_log WHERE resource = 'Thomas' AND timestamp >= '2018-01-01' AND timestamp < '2018-07-01'
SELECT DISTINCT activity FROM event_log WHERE resource = 'Thomas' AND timestamp >= '2018-01-01 00:00:00' AND timestamp <= '2018-06-30 23:59:59' ORDER BY activity;
SELECT idcase, timestamp FROM event_log WHERE activity = 'Declaration rejected by supervisor' ORDER BY timestamp ASC;
SELECT idcase, timestamp FROM event_log WHERE activity = 'Declaration rejected by supervisor' ORDER BY timestamp ASC;
SELECT idcase, timestamp FROM event_log WHERE activity = 'Declaration rejected by supervisor' ORDER BY timestamp, idcase;
SELECT idcase, timestamp FROM event_log WHERE activity = 'Declaration rejected by supervisor' ORDER BY idcase, timestamp
SELECT pi.start_date, el.activity FROM event_log el JOIN process_instances pi ON el.idcase = pi.idcase WHERE el.activity = 'Declaration rejected by supervisor' ORDER BY pi.start_date;
SELECT pi.start_time, pi.id AS process_instance_id FROM event_log el JOIN process_instances pi ON el.idcase = pi.id WHERE el.activity = 'Declaration rejected by supervisor' ORDER BY pi.start_time ASC;
SELECT COUNT(DISTINCT idcase), resource FROM event_log WHERE activity = 'Declaration rejected by supervisor' GROUP BY resource
SELECT COUNT(DISTINCT idcase), resource FROM event_log WHERE activity = 'Declaration rejected by supervisor' GROUP BY resource
SELECT idcase, timestamp FROM event_log WHERE activity ='rejection' AND resource ='supervisor' ORDER BY timestamp ASC;
SELECT idcase, timestamp FROM event_log WHERE activity = 'Declaration rejected by supervisor' ORDER BY timestamp;
SELECT idcase FROM event_log WHERE activity = 'Start trip' AND NOT EXISTS ( SELECT 1 FROM event_log WHERE idcase = event_log.idcase AND activity = 'End trip' AND timestamp <= '2018-03-01' )
SELECT DISTINCT idcase FROM event_log WHERE activity = 'Start trip' AND timestamp <= '2018-03-01' AND NOT EXISTS ( SELECT 1 FROM event_log WHERE idcase = event_log.idcase AND activity = 'End trip' AND timestamp <= '2018-03-01' )
SELECT idcase FROM event_log WHERE activity = 'Start trip' AND timestamp BETWEEN '2016-01-01' AND '2018-03-01' AND id NOT IN ( SELECT id FROM event_log WHERE activity = 'End trip' AND timestamp BETWEEN '2016-01-01' AND '2018-03-01' )
SELECT idcase FROM event_log WHERE activity = 'Start trip' AND id NOT IN ( SELECT id FROM event_log WHERE activity = 'End trip' AND timestamp <= '2018-03-31' )
SELECT DISTINCT idcase FROM event_log WHERE activity = 'Start trip' AND timestamp <= '2018-03-31' AND NOT EXISTS ( SELECT 1 FROM event_log WHERE idcase = event_log.idcase AND activity = 'End trip' AND timestamp <= '2018-03-31' )
SELECT idcase FROM event_log WHERE activity = 'Start trip' AND timestamp <= '2018-03-31' AND NOT EXISTS ( SELECT 1 FROM event_log WHERE idcase = event_log.idcase AND activity = 'End trip' AND timestamp <= '2018-03-31' )
SELECT DISTINCT idcase FROM event_log WHERE activity = 'Start trip' AND timestamp <= '2018-03-31' AND NOT EXISTS ( SELECT 1 FROM event_log WHERE idcase = event_log.idcase AND activity = 'End trip' AND timestamp <= '2018-03-31' )
SELECT idcase FROM event_log WHERE activity = 'Start trip' AND NOT EXISTS ( SELECT 1 FROM event_log WHERE idcase = event_log.idcase AND activity = 'End trip' AND timestamp <= '2018-03-31' )
SELECT idcase FROM event_log WHERE activity = 'Start trip' AND timestamp <= '2018-03-31' AND id NOT IN ( SELECT id FROM event_log WHERE activity = 'End trip' AND timestamp <= '2018-03-31' )
SELECT DISTINCT idcase FROM event_log WHERE activity = 'Start trip' AND timestamp < '2018-03-31 00:00:00' AND idcase IN ( SELECT idcase FROM event_log WHERE activity = 'End trip' AND timestamp <= '2018-03-31 00:00:00' )
SELECT DISTINCT idcase FROM event_log WHERE activity = 'Start trip' AND timestamp < '2018-03-31' AND idcase IN ( SELECT idcase FROM event_log WHERE activity = 'Start trip' GROUP BY idcase HAVING MIN(timestamp) < '2018-03-31' )
SELECT idcase FROM event_log WHERE activity = 'End trip' AND id NOT IN ( SELECT id FROM event_log WHERE activity IN ('request payment', 'payment handled') ) GROUP BY idcase HAVING COUNT(DISTINCT resource) > 1
SELECT idcase FROM event_log WHERE activity = 'End trip' AND idcase IN ( SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(DISTINCT resource) > 1 ) AND idcase NOT IN ( SELECT idcase FROM event_log WHERE activity = 'Request payment' UNION SELECT idcase FROM event_log WHERE activity = 'Payment handled' )
SELECT idcase FROM event_log WHERE activity = 'End trip' AND NOT EXISTS ( SELECT 1 FROM event_log WHERE idcase = event_log.idcase AND activity IN ('request payment', 'payment handled') ) GROUP BY idcase HAVING COUNT(DISTINCT resource) > 1;
SELECT idcase FROM event_log WHERE activity = 'End trip' AND idcase IN ( SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(DISTINCT resource) > 1 ) AND idcase NOT IN ( SELECT idcase FROM event_log WHERE activity = 'Request payment' INTERSECT SELECT idcase FROM event_log WHERE activity = 'Payment handled' )
SELECT idcase FROM event_log WHERE activity = 'End trip' AND id IN ( SELECT id FROM event_log GROUP BY id HAVING COUNT(DISTINCT resource) > 1 ) AND id NOT IN ( SELECT id FROM event_log WHERE activity = 'Request payment' UNION SELECT id FROM event_log WHERE activity = 'Payment handled' )
SELECT idcase FROM event_log WHERE activity = 'End trip' AND NOT EXISTS ( SELECT 1 FROM event_log WHERE idcase = event_log.idcase AND activity IN ('request payment', 'payment handled') ) GROUP BY idcase HAVING COUNT(DISTINCT resource) > 1;
SELECT idcase FROM event_log WHERE idcase IN ( SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(DISTINCT resource) > 1 AND EXISTS ( SELECT 1 FROM event_log WHERE idcase = event_log.idcase AND activity = 'End trip' ) AND NOT EXISTS ( SELECT 1 FROM event_log WHERE idcase = event_log.idcase AND (activity = 'Request payment' OR activity = 'Payment handled') ) )
SELECT DISTINCT idcase FROM event_log WHERE activity = 'Case finalized' AND idcase NOT IN ( SELECT DISTINCT idcase FROM event_log WHERE activity = 'Payment handled' )
SELECT DISTINCT idcase FROM event_log WHERE activity = 'End trip' AND idcase NOT IN (SELECT idcase FROM event_log WHERE activity = 'Request payment') AND idcase NOT IN (SELECT idcase FROM event_log WHERE activity = 'Payment handled');
SELECT idcase, count(distinct resource) as num_resources, sum(cost) as total_cost FROM event_log GROUP BY idcase
SELECT idcase, count(distinct resource) as num_resources, sum(cost) as total_cost FROM event_log GROUP BY idcase
SELECT idcase, count(distinct resource) as num_resources, sum(cost) as total_cost FROM event_log GROUP BY idcase
SELECT idcase, COUNT(DISTINCT resource) AS num_resources, SUM(cost) AS total_cost FROM event_log GROUP BY idcase
SELECT idcase, count(distinct resource) AS num_resources FROM event_log GROUP BY idcase;
SELECT idcase, SUM(cost) AS total_cost, COUNT(DISTINCT resource) AS num_resources FROM event_log GROUP BY idcase ORDER BY total_cost DESC;
SELECT idcase, SUM(cost) AS total_cost, COUNT(DISTINCT resource) AS num_resources FROM event_log GROUP BY idcase
SELECT idcase, SUM(cost) AS total_cost, COUNT(DISTINCT resource) AS num_resources FROM event_log GROUP BY idcase;
SELECT idcase, SUM(cost) AS total_cost, COUNT(DISTINCT resource) AS num_resources FROM event_log GROUP BY idcase
SELECT idcase, COUNT(DISTINCT id) AS num_people, SUM(cost) AS total_cost FROM event_log WHERE activity LIKE '%travel declaration%' GROUP BY idcase
SELECT idcase FROM event_log WHERE activity LIKE 'Permit%' AND idcase IN ( SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(CASE WHEN activity LIKE 'Permit%' THEN 1 ELSE NULL END) > 1 )
SELECT idcase FROM event_log WHERE activity LIKE 'Permit%' GROUP BY idcase HAVING COUNT(idcase) > 1
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(CASE WHEN activity LIKE 'Permit%' THEN 1 END) >= 2;
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(CASE WHEN activity LIKE 'Permit%' THEN 1 END) > 1
SELECT idcase FROM event_log WHERE activity LIKE 'Permit%' AND id IN ( SELECT id FROM event_log GROUP BY idcase, activity HAVING COUNT(*) > 1 )
SELECT idcase FROM event_log WHERE activity LIKE 'permit%' AND id IN ( SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(*) > 1 )
SELECT idcase FROM event_log WHERE activity LIKE 'Permit%' AND id IN ( SELECT id FROM event_log GROUP BY idcase, activity HAVING COUNT(id) > 1 )
SELECT idcase FROM event_log WHERE activity LIKE 'Permit%' AND id IN ( SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(*) > 1 )
SELECT el1.idcase, el1.activity AS permit_activity, el2.activity AS declaration_activity FROM event_log el1 JOIN event_log el2 ON el1.idcase = el2.idcase WHERE el1.activity LIKE '%permit%' AND el2.activity LIKE '%declaration%' ORDER BY el1.idcase;
SELECT idcase, COUNT(*) FROM event_log WHERE activity LIKE 'Permit%' GROUP BY idcase HAVING COUNT(*) > 1;
SELECT id, timestamp, activity, resource, cost, idcase FROM event_log WHERE (id, timestamp) IN ( SELECT id, MAX(timestamp) FROM event_log GROUP BY id ) ORDER BY timestamp;
SELECT idcase, id, timestamp FROM event_log WHERE (idcase, timestamp) IN ( SELECT idcase, MAX(timestamp) FROM event_log GROUP BY idcase ) ORDER BY timestamp DESC;
SELECT id FROM event_log WHERE id IN ( SELECT id FROM event_log ORDER BY timestamp DESC GROUP BY idcase ) ORDER BY timestamp;
SELECT idcase, activity FROM event_log WHERE (idcase, timestamp) IN ( SELECT idcase, MAX(timestamp) FROM event_log GROUP BY idcase ) ORDER BY idcase;
SELECT id, idcase, timestamp FROM ( SELECT id, idcase, timestamp, ROW_NUMBER() OVER (PARTITION BY idcase ORDER BY timestamp DESC) as row_num FROM event_log ) as subquery WHERE row_num = 1 ORDER BY timestamp;
SELECT id, MAX(timestamp) AS last_event_timestamp, idcase FROM event_log GROUP BY idcase ORDER BY last_event_timestamp DESC;
SELECT id FROM event_log WHERE id IN ( SELECT id FROM event_log GROUP BY idcase ORDER BY timestamp DESC LIMIT 1 ) ORDER BY timestamp DESC;
SELECT count(*), idcase FROM event_log GROUP BY idcase
SELECT idcase, resource AS last_intervention FROM ( SELECT idcase, resource, ROW_NUMBER() OVER (PARTITION BY idcase ORDER BY timestamp DESC) AS row_num FROM event_log ) AS subquery WHERE row_num = 1 ORDER BY idcase;
SELECT activity FROM event_log GROUP BY activity HAVING count(*) >= 100
SELECT activity FROM event_log GROUP BY activity HAVING COUNT(*) >= 100;
SELECT activity FROM event_log GROUP BY activity HAVING count(*) >= 100
SELECT activity FROM event_log GROUP BY activity HAVING COUNT(*) >= 100 ORDER BY COUNT(*) DESC;
SELECT activity FROM event_log GROUP BY activity HAVING COUNT(*) >= 100;
SELECT activity FROM event_log GROUP BY activity HAVING COUNT(*) >= 100;
SELECT activity FROM event_log GROUP BY activity HAVING COUNT(*) >= 100;
SELECT activity FROM event_log WHERE activity LIKE '%processing declarations%' GROUP BY activity HAVING COUNT(*) >= 100;
SELECT count(*), 'employee' as grupo from event_log WHERE activity like '%employee%' UNION SELECT count(*),'supervisor' as grupo from event_log WHERE activity like '%supervisor%' UNION SELECT count(*), 'administration' as grupo from event_log WHERE activity like '%administration%' UNION SELECT count(*), 'pre-approver' as grupo from event_log WHERE activity like '%pre-approver%' UNION SELECT count(*), 'budget owner' as grupo from event_log WHERE activity like '%budget owner%' UNION SELECT count(*), 'director' as grupo from event_log WHERE activity like '%director%' ORDER BY count(*);
SELECT grupo, COUNT(*) as count_cases FROM (SELECT CASE WHEN activity LIKE '%employee%' THEN 'employee' WHEN activity LIKE '%supervisor%' THEN'supervisor' WHEN activity LIKE '%administration%' THEN 'administration' WHEN activity LIKE '%pre-approver%' THEN 'pre-approver' WHEN activity LIKE '%budget owner%' THEN 'budget owner' WHEN activity LIKE '%director%' THEN 'director' END as grupo FROM event_log) as subquery GROUP BY grupo ORDER BY count_cases DESC;
SELECT grupo, COUNT(*) as num_cases FROM event_log WHERE activity LIKE '%employee%' OR activity LIKE '%supervisor%' OR activity LIKE '%administration%' OR activity LIKE '%pre-approver%' OR activity LIKE '%budget owner%' OR activity LIKE '%director%' GROUP BY grupo ORDER BY num_cases;
SELECT COUNT(DISTINCT idcase) as num_cases, 'employee' as grupo FROM event_log WHERE activity LIKE '%employee%' GROUP BY grupo UNION ALL SELECT COUNT(DISTINCT idcase) as num_cases, 'supervisor' as grupo FROM event_log WHERE activity LIKE '%supervisor%' GROUP BY grupo UNION ALL SELECT COUNT(DISTINCT idcase) as num_cases, 'administration' as grupo FROM event_log WHERE activity LIKE '%administration%' GROUP BY grupo UNION ALL SELECT COUNT(DISTINCT idcase) as num_cases, 'pre-approver' as grupo FROM event_log WHERE activity LIKE '%pre-approver%' GROUP BY grupo UNION ALL SELECT COUNT(DISTINCT idcase) as num_cases, 'budget owner' as grupo FROM event_log WHERE activity LIKE '%budget owner%' GROUP BY grupo UNION ALL SELECT COUNT(DISTINCT idcase) as num_cases, 'director' as grupo FROM event_log WHERE activity LIKE '%director%' GROUP BY grupo ORDER BY num_cases;
SELECT count(*), 'employee' as grupo from event_log WHERE activity like '%employee%' UNION SELECT count(*),'supervisor' as grupo from event_log WHERE activity like '%supervisor%' UNION SELECT count(*), 'administration' as grupo from event_log WHERE activity like '%administration%' UNION SELECT count(*), 'pre-approver' as grupo from event_log WHERE activity like '%pre-approver%' UNION SELECT count(*), 'budget owner' as grupo from event_log WHERE activity like '%budget owner%' UNION SELECT count(*), 'director' as grupo from event_log WHERE activity like '%director%' ORDER BY count(*);
SELECT activity, COUNT(*) as frequency, CASE WHEN activity LIKE '%employee%' THEN 1 WHEN activity LIKE '%supervisor%' THEN 2 WHEN activity LIKE '%administration%' THEN 3 WHEN activity LIKE '%pre-approver%' THEN 4 WHEN activity LIKE '%budget owner%' THEN 5 WHEN activity LIKE '%director%' THEN 6 ELSE 7 END as order_by FROM event_log WHERE resource IN ( SELECT resource FROM event_log GROUP BY resource ORDER BY COUNT(*) DESC ) GROUP BY activity, CASE WHEN activity LIKE '%employee%' THEN 1 WHEN activity LIKE '%supervisor%' THEN 2 WHEN activity LIKE '%administration%' THEN 3 WHEN activity LIKE '%pre-approver%' THEN 4 WHEN activity LIKE '%budget owner%' THEN 5 WHEN activity LIKE '%director%' THEN 6 ELSE 7 END ORDER BY order_by, frequency DESC;
SELECT grupo, COUNT(*) as activity_count FROM (SELECT CASE WHEN activity LIKE '%employee%' THEN 'employee' WHEN activity LIKE '%supervisor%' THEN'supervisor' WHEN activity LIKE '%administration%' THEN 'administration' WHEN activity LIKE '%pre-approver%' THEN 'pre-approver' WHEN activity LIKE '%budget owner%' THEN 'budget owner' WHEN activity LIKE '%director%' THEN 'director' END as grupo FROM event_log) as grouped_activities GROUP BY grupo ORDER BY activity_count DESC;
SELECT grupo, COUNT(*) as count FROM event_log WHERE activity LIKE '%employee%' OR activity LIKE '%supervisor%' OR activity LIKE '%administration%' OR activity LIKE '%pre-approver%' OR activity LIKE '%budget owner%' OR activity LIKE '%director%' GROUP BY grupo ORDER BY count DESC;
SELECT DISTINCT e1.idcase FROM event_log AS e1 WHERE EXISTS ( SELECT 1 FROM event_log AS e2 WHERE e2.activity = 'End trip' AND e1.idcase = e2.idcase ) ORDER BY e1.idcase;
SELECT e1.activity, e1.resource, e1.idcase FROM event_log AS e1 INNER JOIN event_log AS e2 ON e1.idcase = e2.idcase WHERE e2.activity = 'End trip' AND e1.timestamp > e2.timestamp
SELECT e1.activity, e1.resource, e1.idcase FROM event_log AS e1 INNER JOIN event_log AS e2 ON e1.idcase = e2.idcase WHERE e2.activity = 'End trip' AND e1.timestamp > e2.timestamp
SELECT e1.activity, e1.resource, e1.idcase FROM event_log AS e1 INNER JOIN event_log AS e2 ON e1.idcase = e2.idcase WHERE e2.activity = 'End trip' AND e1.timestamp > e2.timestamp
SELECT idcase FROM event_log WHERE activity = 'End trip' ORDER BY timestamp
SELECT idcase FROM event_log WHERE activity = 'End trip' INTERSECT SELECT idcase FROM event_log WHERE activity = 'Start trip' AND timestamp > (SELECT MIN(timestamp) FROM event_log WHERE activity = 'End trip' AND idcase = event_log.idcase)
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE activity = 'Send reminder' AND id = (SELECT MAX(id) FROM event_log WHERE idcase = event_log.idcase)
SELECT COUNT(*) FROM ( SELECT idcase FROM event_log WHERE activity = 'Send reminder' ORDER BY timestamp DESC LIMIT 1 ) AS last_event
SELECT COUNT(*) FROM ( SELECT idcase FROM event_log WHERE activity = 'Send reminder' ORDER BY timestamp DESC LIMIT 1 ) AS last_event
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE activity = 'Send reminder' ORDER BY timestamp DESC LIMIT 1;
SELECT COUNT(*) FROM event_log WHERE activity ='send reminder' ORDER BY timestamp DESC LIMIT 1;
SELECT COUNT(*) FROM event_log WHERE activity = 'Send reminder' AND idcase NOT IN ( SELECT idcase FROM event_log WHERE activity = 'Completed' )
SELECT DISTINCT resource FROM event_log WHERE timestamp >= '2018-03-31 00:00:00' AND timestamp < '2018-04-01 00:00:00' EXCEPT SELECT resource FROM event_log WHERE timestamp >= '2018-03-31 00:00:00' AND timestamp < '2018-04-01 00:00:00';
SELECT resource FROM resource_list WHERE resource NOT IN ( SELECT resource FROM event_log WHERE timestamp = '2018-03-31' )
SELECT DISTINCT resource FROM event_log WHERE timestamp NOT LIKE '%2018-03-31%' AND resource IS NOT NULL
SELECT * FROM event_log WHERE timestamp BETWEEN '2018-03-31 00:00:00' AND '2018-03-31 23:59:59' AND resource IS NOT NULL AND cost = 0;
SELECT DISTINCT resource FROM event_log WHERE timestamp >= '2018-03-31 00:00:00' AND timestamp < '2018-04-01 00:00:00' EXCEPT SELECT resource FROM event_log WHERE activity IS NOT NULL;
SELECT DISTINCT idcase FROM event_log WHERE timestamp = '2018-03-31' AND idcase IS NOT NULL EXCEPT SELECT idcase FROM event_log WHERE timestamp = '2018-03-31'
SELECT activity, count(*) FROM event_log WHERE timestamp BETWEEN '2018-12-01' AND '2018-12-05' GROUP BY activity;
SELECT activity, COUNT(*) AS frequency FROM event_log WHERE timestamp BETWEEN '2018-12-01' AND '2018-12-05' GROUP BY activity ORDER BY frequency DESC;
SELECT activity, COUNT(DISTINCT idcase) AS frequency FROM event_log WHERE timestamp BETWEEN '2018-12-01' AND '2018-12-05' AND idcase IN (SELECT idcase FROM event_log WHERE timestamp BETWEEN '2018-12-01' AND '2018-12-05' GROUP BY idcase HAVING MAX(timestamp) BETWEEN '2018-12-01' AND '2018-12-05') GROUP BY activity
SELECT activity, COUNT(DISTINCT idcase) AS frequency FROM event_log WHERE timestamp BETWEEN '2018-12-01' AND '2018-12-05' GROUP BY activity
SELECT activity, count(*) FROM event_log WHERE timestamp BETWEEN '2018-12-01' AND '2018-12-05' GROUP BY activity;
SELECT activity, COUNT(*) as frequency FROM event_log WHERE timestamp BETWEEN '2018-12-01' AND '2018-12-05' GROUP BY activity ORDER BY frequency DESC;
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE activity!= 'payment handled'
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE idcase NOT IN (SELECT idcase FROM event_log WHERE activity = 'Payment handled')
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE idcase NOT IN (SELECT idcase FROM event_log WHERE activity = 'Payment handled')
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE activity!= 'Payment handled'
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE activity!= 'Payment handled'
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE activity NOT LIKE '%payment%' AND activity NOT LIKE '%request%';
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE activity NOT IN ('Request payment', 'Payment handled')
SELECT DISTINCT idcase FROM event_log WHERE idcase NOT IN ( SELECT idcase FROM event_log WHERE activity = 'Payment handled' ) AND idcase IN ( SELECT idcase FROM event_log WHERE activity = 'Request payment' )
SELECT activity, COUNT(DISTINCT resource) as num_resources FROM event_log GROUP BY activity
SELECT activity, COUNT(DISTINCT resource) AS num_resources FROM event_log GROUP BY activity;
SELECT activity, COUNT(DISTINCT resource) AS num_resources FROM event_log GROUP BY activity
SELECT activity, COUNT(DISTINCT resource) AS num_resources FROM event_log GROUP BY activity;
SELECT activity, COUNT(DISTINCT resource) as num_resources FROM event_log GROUP BY activity
SELECT COUNT(DISTINCT resource) AS "Number of Employees" FROM event_log WHERE activity LIKE '%declaration processing%';
SELECT el1.activity AS preceding_activity FROM event_log el1 JOIN ( SELECT idcase, MAX(timestamp) AS max_timestamp FROM event_log WHERE activity = 'Send reminder' GROUP BY idcase ) el2 ON el1.idcase = el2.idcase AND el1.timestamp < el2.max_timestamp ORDER BY el1.idcase;
SELECT el1.activity AS previous_activity, el1.timestamp AS previous_timestamp FROM event_log el1 JOIN event_log el2 ON el1.idcase = el2.idcase AND el1.timestamp < el2.timestamp WHERE el2.activity = 'Send reminder' ORDER BY el1.idcase, el1.timestamp;
SELECT DISTINCT activity FROM event_log WHERE activity!= 'Send reminder' AND idcase IN ( SELECT idcase FROM event_log WHERE activity = 'Send reminder' ) ORDER BY activity;
SELECT idcase, COUNT(*) AS num_events, PERCENTILE_CONT(0.5) WITHIN GROUP (ORDER BY COUNT(*)) OVER () AS median_num_events FROM event_log GROUP BY idcase ORDER BY num_events DESC;
SELECT event_count, count(*) as num_cases FROM ( SELECT idcase, count(*) as event_count FROM event_log GROUP BY idcase ) as subquery GROUP BY event_count ORDER BY event_count;
SELECT count(*) AS num_events, count(*) AS num_cases FROM event_log GROUP BY count(*) AS num_events HAVING count(*) > 0 ORDER BY num_events;
SELECT e.count_events, e.idcase, COUNT(DISTINCT e.idcase) AS num_cases FROM (SELECT count (*), idcase FROM event_log group by idcase) e GROUP BY e.count_events, e.idcase ORDER BY e.count_events;
SELECT COUNT(DISTINCT idcase) AS num_declarations, COUNT(*) AS num_actions FROM event_log GROUP BY COUNT(*) ORDER BY num_actions;
SELECT AVG(total_cost) AS average_total_cost FROM ( SELECT idcase, SUM(cost) AS total_cost FROM event_log GROUP BY idcase ) AS case_costs
SELECT AVG(total_cost) FROM ( SELECT SUM(cost) AS total_cost, idcase FROM event_log GROUP BY idcase ) AS case_costs
SELECT AVG(total_cost) FROM ( SELECT SUM(cost) AS total_cost, idcase FROM event_log GROUP BY idcase ) AS case_costs
SELECT AVG(total_cost) AS mean_total_cost FROM ( SELECT idcase, SUM(cost) AS total_cost FROM event_log GROUP BY idcase ) AS case_costs
SELECT AVG(SUM(cost)) FROM event_log GROUP BY idcase
SELECT AVG(cost) FROM event_log WHERE activity = 'declaration'
SELECT resource, AVG(cost) AS mean_cost FROM event_log GROUP BY resource
SELECT resource, AVG(cost) as mean_cost FROM event_log GROUP BY resource
SELECT resource, AVG(cost) AS mean_cost FROM event_log GROUP BY resource
SELECT resource, AVG(cost) as average_cost FROM event_log GROUP BY resource;
SELECT resource, AVG(cost) AS mean_cost FROM event_log GROUP BY resource
SELECT e.name, AVG(el.cost) AS mean_cost FROM event_log el JOIN employees e ON el.idcase = e.id GROUP BY e.name
SELECT resource, COUNT(*) as frequency FROM event_log GROUP BY resource ORDER BY frequency DESC LIMIT 10;
SELECT resource, COUNT(*) as frequency FROM event_log GROUP BY resource ORDER BY frequency DESC LIMIT 10;
SELECT resource, COUNT(*) as frequency FROM event_log GROUP BY resource ORDER BY frequency DESC LIMIT 10;
SELECT resource, COUNT(*) as frequency FROM event_log GROUP BY resource ORDER BY frequency DESC LIMIT 10;
SELECT resource, COUNT(*) AS event_count FROM event_log WHERE activity IS NOT NULL GROUP BY resource ORDER BY event_count DESC LIMIT 10;
SELECT resource AS "Employee", COUNT(DISTINCT idcase) AS "Number of Requests" FROM event_log GROUP BY resource ORDER BY COUNT(DISTINCT idcase) DESC LIMIT 10;
SELECT strftime('%Y-%m-%d', timestamp), count(*) FROM event_log GROUP BY strftime('%Y-%m-%d', timestamp)
SELECT DATE(timestamp) AS date, activity, COUNT(*) AS occurrences FROM event_log GROUP BY DATE(timestamp), activity ORDER BY date, activity;
SELECT DATE(timestamp) AS date, COUNT(*) AS count FROM event_log GROUP BY DATE(timestamp)
SELECT idcase, activity, resource1, resource2 FROM ( SELECT idcase, activity, resource, LAG(resource) OVER (PARTITION BY idcase, activity ORDER BY timestamp) AS resource1, LEAD(resource) OVER (PARTITION BY idcase, activity ORDER BY timestamp) AS resource2 FROM event_log ) AS subquery WHERE resource1 IS NOT NULL AND resource1 <> resource2;
SELECT idcase, activity FROM event_log WHERE id IN ( SELECT id - 1 FROM event_log GROUP BY idcase, activity HAVING COUNT(DISTINCT resource) = 2 )
SELECT idcase, activity, LAG(resource) OVER (PARTITION BY idcase, activity ORDER BY timestamp) AS prev_resource, resource FROM event_log WHERE resource!= LAG(resource) OVER (PARTITION BY idcase, activity ORDER BY timestamp) ORDER BY idcase, activity, timestamp;
SELECT el.idcase, COUNT(e.id) AS num_events_before_declaration FROM event_log el LEFT JOIN event_log e ON el.idcase = e.idcase AND el.timestamp > e.timestamp WHERE el.activity = 'Declaration final approved by director' GROUP BY el.idcase
SELECT idcase, COUNT(*) AS num_events_before FROM event_log WHERE activity = 'Declaration final approved by director' GROUP BY idcase HAVING COUNT(*) > 0
SELECT COUNT(*), idcase FROM event_log WHERE activity = 'Director Approval' AND activity = 'Final Approval' GROUP BY idcase
SELECT DATEDIFF( (SELECT timestamp FROM event_log WHERE activity = 'Permit approved by administration' AND id = e.id - 1), (SELECT timestamp FROM event_log WHERE activity = 'Permit submitted by employee' AND id = e.id) ) AS time_passed FROM event_log e WHERE e.activity IN ('Permit submitted by employee', 'Permit approved by administration') ORDER BY e.id;
SELECT (SELECT timestamp FROM event_log WHERE activity = 'Permit approved by administration' AND id = el.id) - el.timestamp AS time_interval FROM event_log el WHERE el.activity = 'Permit submitted by employee' ORDER BY time_interval;
WITH RankedEvents AS ( SELECT id, activity, timestamp, LEAD(timestamp) OVER (PARTITION BY idcase ORDER BY timestamp) AS next_timestamp, idcase FROM event_log ) SELECT idcase, coalesce((strftime('%s', next_timestamp) - strftime('%s', timestamp)), 0) as duration FROM RankedEvents WHERE activity IN ('Employee requests permit', 'Permit approved by administration') ORDER BY idcase;
SELECT idcase FROM ( SELECT idcase, activity, LEAD(activity) OVER (PARTITION BY idcase ORDER BY timestamp) AS next_activity FROM event_log ) AS subquery WHERE activity = next_activity;
SELECT idcase FROM event_log WHERE activity = (SELECT activity FROM event_log WHERE id = LAG(id) OVER (PARTITION BY idcase ORDER BY timestamp))
SELECT idcase FROM event_log WHERE id IN ( SELECT id FROM ( SELECT id, activity, LEAD(activity) OVER (PARTITION BY idcase ORDER BY timestamp) AS next_activity FROM event_log ) AS t WHERE activity = next_activity )
SELECT idcase FROM event_log WHERE activity LIKE '%rework%'
SELECT DISTINCT(idcase) FROM (SELECT idcase, activity, LEAD(activity) OVER (PARTITION BY idcase ORDER BY timestamp) AS next_activity FROM event_log) WHERE activity = next_activity
SELECT idcase FROM ( SELECT idcase, activity, COUNT(*) AS count FROM event_log GROUP BY idcase, activity HAVING COUNT(*) > 1 ) AS temp
SELECT el1.idcase, el1.activity, el1.timestamp, el2.activity AS previous_activity FROM event_log el1 JOIN event_log el2 ON el1.id = el2.id - 1 AND el1.idcase = el2.idcase WHERE el1.activity = el2.activity ORDER BY el1.idcase, el1.id;
SELECT activity, idcase, timestamp FROM event_log WHERE activity = LAG(activity) OVER (ORDER BY timestamp) AND idcase = LAG(idcase) OVER (ORDER BY timestamp) ORDER BY timestamp;
SELECT idcase, activity, timestamp FROM ( SELECT idcase, activity, timestamp, ROW_NUMBER() OVER (PARTITION BY idcase, activity ORDER BY timestamp) AS row_num FROM event_log ) AS t WHERE row_num > 1 ORDER BY idcase, activity, timestamp;
SELECT idcase, activity, timestamp FROM event_log WHERE idcase IS NOT NULL AND (SELECT COUNT(*) FROM event_log AS t2 WHERE t2.idcase = event_log.idcase AND t2.timestamp = DATE_ADD(event_log.timestamp, INTERVAL 1 SECOND)) > 0 ORDER BY idcase, timestamp;
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(DISTINCT TIMESTAMP) > 1 AND (TIMESTAMP - LAG(TIMESTAMP) OVER (PARTITION BY idcase ORDER BY TIMESTAMP)) < INTERVAL 1 DAY;
SELECT idcase FROM ( SELECT idcase, activity, LAG(activity) OVER (PARTITION BY idcase ORDER BY timestamp) AS prev_activity FROM event_log ) AS subquery WHERE activity = prev_activity;
SELECT DISTINCT resource AS supervisor FROM event_log WHERE activity LIKE '%approved by supervisor%';
SELECT resource FROM event_log WHERE activity LIKE '%supervisor%' OR activity LIKE '%oversee%' GROUP BY resource
SELECT DISTINCT resource FROM event_log WHERE activity LIKE '%budget%' OR activity LIKE '%financial%' ORDER BY resource;
SELECT DISTINCT(resource) FROM event_log WHERE activity LIKE '%budget owner%';
