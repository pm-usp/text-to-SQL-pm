SELECT COUNT(*) FROM event_log WHERE activity = 'fim da viagem';
SELECT COUNT(*) FROM event_log WHERE activity = 'fim da viagem';
SELECT COUNT(*) FROM event_log WHERE activity = 'fim da viagem';
SELECT COUNT(*) FROM event_log WHERE activity = 'fim da viagem';
SELECT COUNT(*) FROM event_log WHERE activity = 'fim da viagem';
SELECT COUNT(*) FROM event_log WHERE activity = 'fim da viagem';
SELECT COUNT(*) FROM event_log WHERE activity = 'fim da viagem';
SELECT COUNT(*) FROM event_log WHERE activity = 'fim da viagem';
SELECT COUNT(*) FROM event_log WHERE activity = 'fim da viagem';
SELECT COUNT(*) FROM event_log WHERE activity = 'fim da viagem';
SELECT COUNT(*) FROM event_log WHERE activity = 'fim de viagem';
SELECT COUNT(*) FROM event_log WHERE activity = 'fim da viagem' AND resource = 'James';
SELECT COUNT(DISTINCT activity) FROM event_log WHERE resource = 'James' AND activity = 'fim da viagem';
SELECT COUNT(*) FROM event_log WHERE resource = 'James' AND activity = 'fim da viagem';
SELECT COUNT(*) FROM event_log WHERE activity = 'fim da viagem' AND resource = 'James';
SELECT COUNT(*) FROM event_log WHERE activity = 'fim da viagem' AND resource = 'James';
SELECT COUNT(*) FROM event_log WHERE activity = 'fim da viagem' AND resource = 'James';
SELECT COUNT(*) FROM event_log WHERE activity = 'fim da viagem' AND resource = 'James';
SELECT COUNT(*) FROM event_log WHERE activity = 'fim da viagem' AND resource = 'James';
SELECT COUNT(*) FROM event_log WHERE activity = 'fim da viagem' AND resource = 'James';
SELECT COUNT(*) FROM event_log WHERE activity = 'finalização de viagem' AND resource = 'James';
SELECT COUNT(DISTINCT activity) FROM event_log WHERE resource = 'James' AND activity = 'final de viagem';
SELECT resource, COUNT(*) AS event_count FROM event_log GROUP BY resource;
SELECT "resource", COUNT(*) AS "quantidade_eventos" FROM "event_log" GROUP BY "resource";
SELECT resource, COUNT(*) AS num_events FROM event_log GROUP BY resource;
SELECT resource, COUNT(*) AS num_events FROM event_log GROUP BY resource;
SELECT "resource", COUNT(*) AS "number_of_events" FROM "event_log" GROUP BY "resource";
SELECT "resource", COUNT(*) AS "count" FROM "event_log" GROUP BY "resource"
SELECT "resource", COUNT(*) AS "count" FROM "event_log" GROUP BY "resource"
SELECT resource, COUNT(*) AS total_events FROM event_log GROUP BY resource;
SELECT resource, COUNT(DISTINCT id) AS num_executions FROM event_log GROUP BY resource;
SELECT resource, COUNT(DISTINCT activity) AS num_executions FROM event_log GROUP BY resource;
SELECT resource, COUNT(activity) AS actions_performed FROM event_log WHERE activity LIKE '%viagens%' GROUP BY resource;
SELECT COUNT(*) FROM event_log WHERE resource = 'Peter'; 
SELECT COUNT(*) FROM event_log WHERE resource = 'Peter'
SELECT COUNT(*) FROM event_log WHERE activity = 'Peter';
SELECT COUNT(*) FROM event_log WHERE resource = 'Peter';
SELECT COUNT(*) FROM event_log WHERE resource = 'Peter';
SELECT COUNT(*) FROM event_log WHERE resource = 'Peter'
SELECT COUNT(*) FROM event_log WHERE activity = 'viagem' AND resource = 'Peter';
SELECT idcase FROM event_log WHERE strftime('%Y-%m', timestamp) = '2018-03' GROUP BY idcase;
SELECT idcase FROM event_log WHERE strftime('%Y-%m', timestamp) = '2018-03' GROUP BY idcase;
SELECT "idcase" FROM "event_log" WHERE strftime('%Y-%m', "timestamp") = '2018-03';
SELECT "idcase" FROM "event_log" WHERE strftime('%Y-%m', "timestamp") = '2018-03' GROUP BY "idcase";
SELECT idcase FROM event_log WHERE timestamp = (SELECT MAX(timestamp) FROM event_log WHERE strftime('%Y-%m', timestamp) = '2018-03') GROUP BY idcase;
SELECT DISTINCT idcase FROM event_log WHERE strftime('%Y-%m', timestamp) = '2018-03';
SELECT idcase FROM event_log WHERE strftime('%Y-%m', timestamp) = '2018-03' GROUP BY idcase;
SELECT * FROM event_log WHERE timestamp >= '2018-03-01' AND timestamp < '2018-04-01';
SELECT idcase FROM event_log WHERE activity = 'declaração rejeitada pelo pré-aprovador' AND resource != 'Douglas';
SELECT idcase FROM event_log WHERE activity = 'declaração rejeitada pelo pré-aprovador' AND resource != 'Douglas';
SELECT idcase FROM event_log WHERE activity = 'declaração rejeitada pelo pré-aprovador' AND resource != 'Douglas';
SELECT idcase FROM event_log WHERE activity = 'declaração rejeitada pelo pré-aprovador' AND resource != 'Douglas';
SELECT idcase FROM event_log WHERE activity = 'declaração rejeitada pelo pré-aprovador' AND resource != 'Douglas';
SELECT idcase FROM event_log WHERE activity = 'declaração rejeitada pelo pré-aprovador' AND resource != 'Douglas';
SELECT idcase FROM event_log WHERE activity = 'declaração rejeitada pelo pré-aprovador' AND resource != 'Douglas';
SELECT idcase FROM event_log WHERE activity = 'declaração rejeitada pelo pré-aprovador' AND resource != 'Douglas';
SELECT idcase FROM event_log WHERE activity = 'declaração rejeitada pelo pré-aprovador' AND resource != 'Douglas';
SELECT idcase FROM event_log WHERE activity = 'declaração rejeitada pelo pré-aprovador' AND resource != 'Douglas';
SELECT idcase FROM event_log WHERE activity = 'declaração rejeitada pelo pré-aprovador' AND resource != 'Douglas';
SELECT "activity", "timestamp", "resource", "cost", "idcase" FROM event_log WHERE "idcase" IN ( SELECT "idcase" FROM event_log WHERE "activity" = 'pre-approval' GROUP BY "idcase" HAVING COUNT(DISTINCT "resource") > 1 )
SELECT * FROM event_log WHERE activity = 'declaração rejeitada' AND resource != 'Douglas';
SELECT COUNT(DISTINCT resource) AS total_recursos FROM event_log;
SELECT COUNT(DISTINCT resource) AS total_recursos_distintos FROM event_log;
SELECT COUNT(DISTINCT resource) AS total_recursos FROM event_log;
SELECT COUNT(DISTINCT resource) AS total_pessoas_executaram_atividades FROM event_log;
SELECT COUNT(DISTINCT resource) AS total_recursos FROM event_log;
SELECT COUNT(DISTINCT resource) AS total_pessoas FROM event_log;
SELECT COUNT(DISTINCT resource) AS total_recursos_executaram_atividades FROM event_log;
SELECT COUNT(DISTINCT resource) AS total_recursos FROM event_log;
SELECT COUNT(DISTINCT resource) AS total_recursos_executaram_atividades FROM event_log;
SELECT COUNT(DISTINCT resource) AS total_recursos FROM event_log;
SELECT COUNT(DISTINCT resource) AS total_pessoas FROM event_log;
SELECT COUNT(DISTINCT resource) AS total_funcionarios FROM event_log;
SELECT COUNT(DISTINCT resource) AS total_funcionarios FROM event_log;
SELECT "resource", COUNT(*) AS "total_events" FROM "event_log" GROUP BY "resource"
SELECT resource, COUNT(*) AS total_events FROM event_log GROUP BY resource;
SELECT resource, COUNT(*) AS total_events FROM event_log GROUP BY resource;
SELECT resource, COUNT(activity) AS total_actions FROM event_log GROUP BY resource;
SELECT "idcase" FROM "event_log" WHERE "cost" > 2.225;
SELECT "idcase" FROM "event_log" WHERE "cost" > 2.225;
SELECT "idcase" FROM "event_log" WHERE "cost" > 2.225;
SELECT * FROM event_log WHERE cost > 2.225;
SELECT id FROM event_log WHERE cost > 2.225;
SELECT "resource", COUNT(*) AS "total_events" FROM "event_log" GROUP BY "resource" ORDER BY "total_events" DESC;
SELECT "resource", COUNT(*) AS "total_events" FROM "event_log" GROUP BY "resource" ORDER BY "total_events" DESC;
SELECT "resource", COUNT(*) AS "event_count" FROM "event_log" GROUP BY "resource" ORDER BY "event_count" DESC;
SELECT resource, COUNT(*) AS event_count FROM event_log GROUP BY resource ORDER BY event_count DESC LIMIT 1;
SELECT resource, COUNT(*) AS total_events FROM event_log GROUP BY resource ORDER BY total_events DESC;
SELECT resource, COUNT(*) AS num_events FROM event_log GROUP BY resource ORDER BY num_events DESC LIMIT 1;
SELECT "resource", COUNT(*) AS "total_events" FROM "event_log" GROUP BY "resource" ORDER BY "total_events" DESC;
SELECT "resource", COUNT(*) AS "num_events" FROM "event_log" GROUP BY "resource" ORDER BY "num_events" DESC LIMIT 1;
SELECT "resource", COUNT(*) AS "total_events" FROM "event_log" GROUP BY "resource" ORDER BY "total_events" DESC;
SELECT "resource", COUNT(*) AS "num_events" FROM "event_log" GROUP BY "resource" ORDER BY "num_events" DESC LIMIT 1;
SELECT resource, COUNT(*) AS total_activities FROM event_log WHERE activity = 'processing' GROUP BY resource ORDER BY total_activities DESC;
SELECT "resource", COUNT(*) AS "num_events" FROM "event_log" GROUP BY "resource" ORDER BY "num_events" DESC;
SELECT "resource", COUNT(*) AS "num_events" FROM "event_log" GROUP BY "resource" ORDER BY "num_events" DESC LIMIT 1;
SELECT "resource", COUNT(*) AS "total_events" FROM "event_log" GROUP BY "resource" ORDER BY "total_events" DESC;
SELECT "resource", COUNT("id") AS "total_events" FROM "event_log" GROUP BY "resource" ORDER BY "total_events" DESC;
SELECT "resource", COUNT(*) AS "num_events" FROM "event_log" GROUP BY "resource" ORDER BY "num_events" DESC LIMIT 1;
SELECT "resource", COUNT(*) AS "num_events" FROM "event_log" GROUP BY "resource" ORDER BY "num_events" DESC;
SELECT "resource", COUNT(*) AS "num_events" FROM "event_log" GROUP BY "resource" ORDER BY "num_events" DESC LIMIT 1;
SELECT resource, COUNT(resource) AS total_activities FROM event_log GROUP BY resource ORDER BY total_activities DESC;
SELECT "resource", COUNT(*) AS "num_events" FROM "event_log" GROUP BY "resource" ORDER BY "num_events" DESC;
SELECT "resource", COUNT(*) AS "num_events" FROM "event_log" GROUP BY "resource" ORDER BY "num_events" DESC;
SELECT "resource", COUNT(*) AS "quantidade de eventos" FROM "event_log" GROUP BY "resource" ORDER BY COUNT(*) DESC;
SELECT "resource", COUNT(*) AS "num_events" FROM "event_log" GROUP BY "resource" ORDER BY "num_events" DESC;
SELECT "resource", COUNT("activity") AS "num_executions" FROM "event_log" GROUP BY "resource" ORDER BY "num_executions" DESC;
SELECT resource, COUNT(*) AS num_activities FROM event_log GROUP BY resource ORDER BY num_activities DESC;
SELECT * FROM event_log WHERE cost IS NOT NULL;
SELECT * FROM event_log WHERE cost IS NOT NULL;
SELECT * FROM event_log WHERE cost IS NOT NULL;
SELECT * FROM event_log WHERE cost IS NOT NULL;
SELECT * FROM event_log WHERE cost IS NOT NULL;
SELECT activity, cost FROM event_log WHERE cost IS NOT NULL;
SELECT DISTINCT activity FROM event_log WHERE cost IS NOT NULL;
SELECT * FROM event_log WHERE cost IS NOT NULL;
SELECT * FROM event_log WHERE cost IS NOT NULL;
SELECT * FROM event_log WHERE cost IS NOT NULL;
SELECT "id", "timestamp", "resource", "cost", "idcase" FROM event_log WHERE activity = 'início da viagem' OR activity = 'requisição de pagamento';
SELECT * FROM event_log WHERE activity = 'início da viagem' OR activity = 'requisição de pagamento';
SELECT * FROM event_log WHERE activity = 'início da viagem' OR activity = 'requisição de pagamento';
SELECT * FROM event_log WHERE activity = 'início da viagem' OR activity = 'requisição de pagamento';
SELECT * FROM event_log WHERE activity = 'start_trip' OR activity = 'payment_request';
SELECT activity, COUNT(activity) AS frequency FROM event_log GROUP BY activity ORDER BY frequency DESC;
SELECT activity, COUNT(activity) AS frequency FROM event_log GROUP BY activity ORDER BY frequency DESC;
SELECT activity, COUNT(activity) AS frequency FROM event_log GROUP BY activity ORDER BY frequency DESC;
SELECT activity, COUNT(activity) AS frequency FROM event_log GROUP BY activity ORDER BY frequency DESC;
SELECT activity, COUNT(activity) AS total_executions FROM event_log GROUP BY activity ORDER BY total_executions DESC;
SELECT activity, COUNT(activity) AS occurrences FROM event_log GROUP BY activity ORDER BY occurrences DESC;
SELECT activity, COUNT(activity) AS frequency FROM event_log GROUP BY activity ORDER BY frequency DESC;
SELECT activity, COUNT(activity) AS frequency FROM event_log GROUP BY activity ORDER BY frequency DESC;
SELECT activity, COUNT(activity) AS frequency FROM event_log GROUP BY activity ORDER BY frequency DESC;
SELECT * FROM event_log WHERE strftime('%Y', timestamp) = '2017';
SELECT * FROM event_log WHERE strftime('%Y', timestamp) = '2017';
SELECT * FROM event_log WHERE strftime('%Y', timestamp) = '2017';
SELECT * FROM event_log WHERE strftime('%Y', timestamp) = '2017';
SELECT * FROM event_log WHERE strftime('%Y', timestamp) = '2017';
SELECT * FROM event_log WHERE timestamp >= '2017-01-01 00:00:00' AND timestamp <= '2017-12-31 23:59:59';
SELECT activity FROM event_log WHERE timestamp >= '2017-01-01 00:00:00' AND timestamp <= '2017-12-31 23:59:59';
SELECT * FROM event_log WHERE timestamp >= '2017-01-01' AND timestamp <= '2017-12-31';
SELECT * FROM event_log WHERE timestamp >= '2017-01-01' AND timestamp <= '2017-12-31';
SELECT activity FROM event_log WHERE timestamp >= '2017-01-01 00:00:00' AND timestamp <= '2017-12-31 23:59:59';
SELECT * FROM event_log WHERE timestamp >= '2017-01-01 00:00:00' AND timestamp <= '2017-12-31 23:59:59' AND activity = 'processamento de declarações';
SELECT * FROM event_log WHERE timestamp >= '2017-01-01 00:00:00' AND timestamp <= '2017-12-31 23:59:59';
SELECT * FROM event_log WHERE timestamp >= '2017-01-01 00:00:00' AND timestamp <= '2017-12-31 23:59:59' AND activity = 'processamento das declarações';
SELECT activity FROM event_log WHERE timestamp >= '2017-01-01' AND timestamp <= '2017-12-31';
SELECT DISTINCT activity FROM event_log WHERE timestamp BETWEEN '2017-01-01' AND '2017-12-31';
SELECT * FROM event_log WHERE id <= 20;
SELECT COUNT(*) AS num_events, idcase FROM event_log GROUP BY idcase HAVING num_events <= 20;
SELECT * FROM event_log LIMIT 20;
SELECT activity, COUNT(*) AS occurrences FROM event_log GROUP BY activity HAVING COUNT(*) <= 20;
SELECT * FROM event_log GROUP BY idcase HAVING COUNT(id) <= 20;
SELECT * FROM event_log GROUP BY idcase HAVING COUNT(id) <= 20;
SELECT * FROM event_log GROUP BY idcase HAVING COUNT(id) <= 20;
SELECT resource, COUNT(DISTINCT idcase) AS num_cases FROM event_log GROUP BY resource ORDER BY num_cases DESC LIMIT 5;
SELECT resource, COUNT(DISTINCT idcase) AS num_cases FROM event_log GROUP BY resource ORDER BY num_cases DESC LIMIT 5;
SELECT resource, COUNT(DISTINCT idcase) AS num_cases FROM event_log GROUP BY resource ORDER BY num_cases DESC LIMIT 5;
SELECT resource, COUNT(DISTINCT idcase) AS num_cases FROM event_log GROUP BY resource ORDER BY num_cases DESC LIMIT 5;
SELECT resource, COUNT(idcase) AS total_declarations FROM event_log GROUP BY resource ORDER BY total_declarations DESC LIMIT 5;
SELECT "resource", COUNT(*) AS "total_events" FROM "event_log" GROUP BY "resource" ORDER BY "total_events" DESC LIMIT 5;
SELECT "resource", COUNT(*) AS "event_count" FROM "event_log" GROUP BY "resource" ORDER BY "event_count" DESC LIMIT 5;
SELECT "resource", COUNT("resource") AS "event_count" FROM "event_log" GROUP BY "resource" ORDER BY "event_count" DESC LIMIT 5;
SELECT "resource", COUNT(*) AS "event_count" FROM "event_log" GROUP BY "resource" ORDER BY "event_count" DESC LIMIT 5;
SELECT resource, COUNT(resource) AS total_activities FROM event_log GROUP BY resource ORDER BY total_activities DESC LIMIT 5;
SELECT "resource", COUNT(*) AS "ocorrencias" FROM "event_log" WHERE "activity" = 'início da viagem' AND strftime('%Y', "timestamp") = '2016' GROUP BY "resource";
SELECT "resource", COUNT(*) AS "ocorrencias" FROM "event_log" WHERE "activity" = 'início da viagem' AND strftime('%Y', "timestamp") = '2016' GROUP BY "resource";
SELECT "resource", COUNT(*) AS "num_execucoes" FROM "event_log" WHERE "activity" = 'início da viagem' AND strftime('%Y', "timestamp") = '2016' GROUP BY "resource";
SELECT "resource", COUNT(*) AS "ocorrencias" FROM "event_log" WHERE "activity" = 'início da viagem' AND strftime('%Y', "timestamp") = '2016' GROUP BY "resource";
SELECT "resource", COUNT(*) AS "num_executions" FROM "event_log" WHERE "activity" = 'início da viagem' AND strftime('%Y', "timestamp") = '2016' GROUP BY "resource";
SELECT "resource", COUNT(*) AS "num_occurrences" FROM "event_log" WHERE "activity" = 'início da viagem' AND strftime('%Y', "timestamp") = '2016' GROUP BY "resource";
SELECT resource, COUNT(*) AS total_ocorrencias FROM event_log WHERE activity = 'início da viagem' AND strftime('%Y', timestamp) = '2016' GROUP BY resource;
SELECT resource, COUNT(*) AS actions_executed FROM event_log WHERE activity = 'start_trip' AND strftime('%Y', timestamp) = '2016' GROUP BY resource;
SELECT resource, COUNT(activity) AS num_activities FROM event_log WHERE activity = 'start_trip' AND strftime('%Y', timestamp) = '2016' GROUP BY resource;
SELECT resource, COUNT(*) FROM event_log WHERE activity = 'declaração rejeitada pelo supervisor' GROUP BY resource;
SELECT "resource", COUNT(*) AS "ocorrencias" FROM "event_log" WHERE "activity" = 'declaração rejeitada pelo supervisor' GROUP BY "resource";
SELECT "resource", COUNT(*) AS "num_execucoes" FROM "event_log" WHERE "activity" = 'declaração rejeitada pelo supervisor' GROUP BY "resource";
SELECT "resource", COUNT(*) AS "ocorrencias" FROM "event_log" WHERE "activity" = 'declaração rejeitada pelo supervisor' GROUP BY "resource";
SELECT "resource", COUNT(*) AS "num_executions" FROM "event_log" WHERE "activity" = 'declaração rejeitada pelo supervisor' GROUP BY "resource";
SELECT "resource", COUNT(*) AS "ocorrencias" FROM "event_log" WHERE "activity" = 'declaração rejeitada pelo supervisor' GROUP BY "resource";
SELECT "resource", COUNT(*) AS "num_executions" FROM "event_log" WHERE "activity" = 'declaração rejeitada pelo supervisor' GROUP BY "resource";
SELECT "resource", COUNT(*) AS "quantidade" FROM "event_log" WHERE "activity" = 'declaração rejeitada pelo supervisor' GROUP BY "resource";
SELECT "resource", COUNT(*) AS "num_occurrences" FROM "event_log" WHERE "activity" = 'declaração rejeitada pelo supervisor' GROUP BY "resource";
SELECT resource, COUNT(*) AS total_occurrences FROM event_log WHERE activity = 'declaração rejeitada pelo supervisor' GROUP BY resource;
SELECT resource, COUNT(*) AS num_rejections FROM event_log WHERE activity = 'rejeitar declaração' GROUP BY resource;
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(activity) > 20;
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(activity) > 20;
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(activity) > 20;
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(activity) > 20;
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(activity) > 20;
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(activity) > 20;
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(activity) > 20;
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(activity) > 20;
SELECT activity, COUNT(*) AS interventions FROM event_log GROUP BY activity HAVING interventions > 20;
SELECT idcase, COUNT(id) AS event_count FROM event_log GROUP BY idcase ORDER BY event_count DESC;
SELECT idcase, COUNT(activity) AS num_executions FROM event_log GROUP BY idcase ORDER BY num_executions DESC;
SELECT idcase FROM event_log GROUP BY idcase ORDER BY COUNT(*) DESC LIMIT 1;
SELECT idcase FROM event_log GROUP BY idcase ORDER BY COUNT(activity) DESC LIMIT 1;
SELECT idcase, COUNT(id) AS num_events FROM event_log GROUP BY idcase ORDER BY num_events DESC LIMIT 1;
SELECT idcase FROM event_log GROUP BY idcase ORDER BY COUNT(activity) DESC LIMIT 5;
SELECT id, COUNT(*) AS num_actions FROM event_log GROUP BY id ORDER BY num_actions DESC LIMIT 1;
SELECT idcase FROM event_log WHERE resource = 'Sara' AND activity != 'requisição de pagamento';
SELECT idcase FROM event_log WHERE resource = 'Sara' AND activity != 'requisição de pagamento';
SELECT idcase FROM event_log WHERE resource = 'Sara' AND activity != 'requisição de pagamento';
SELECT idcase FROM event_log WHERE resource = 'Sara' AND activity != 'requisição de pagamento';
SELECT idcase FROM event_log WHERE activity <> 'requisição de pagamento' AND resource = 'Sara';
SELECT activity, timestamp, resource FROM event_log WHERE resource = 'Sara' AND cost IS NULL;
SELECT * FROM event_log WHERE timestamp BETWEEN '2017-01-10' AND '2017-02-01' AND idcase = 'declaração 143598';
SELECT * FROM event_log WHERE idcase = 'declaração 143598' AND timestamp BETWEEN '2017-01-10' AND '2017-02-01';
SELECT "activity", "timestamp", "resource", "cost" FROM "event_log" WHERE "idcase" = 'declaração 143598' AND "timestamp" BETWEEN '2017-01-10' AND '2017-02-01';
SELECT "id", "activity", "timestamp", "resource", "cost", "idcase" FROM event_log WHERE timestamp BETWEEN '2017-01-10' AND '2017-02-01' AND idcase = 'declaração 143598';
SELECT * FROM event_log WHERE timestamp >= '2017-01-10' AND timestamp <= '2017-02-01' AND idcase = '143598';
SELECT resource, COUNT(DISTINCT idcase) AS num_cases FROM event_log WHERE timestamp BETWEEN '2017-01-01' AND '2017-05-31' GROUP BY resource;
SELECT resource, COUNT(DISTINCT idcase) AS cases_associated FROM event_log WHERE timestamp BETWEEN '2017-01-01' AND '2017-05-31' GROUP BY resource;
SELECT resource, COUNT(DISTINCT idcase) AS cases_worked FROM event_log WHERE timestamp BETWEEN '2017-01-01' AND '2017-05-31' GROUP BY resource;
SELECT resource, COUNT(DISTINCT idcase) AS cases_count FROM event_log WHERE timestamp BETWEEN '2017-01-01' AND '2017-05-31' GROUP BY resource;
SELECT resource, COUNT(DISTINCT idcase) AS cases_associated FROM event_log WHERE timestamp BETWEEN '2017-01-01' AND '2017-05-31' GROUP BY resource;
SELECT "resource", COUNT(DISTINCT "idcase") AS "casos_trabalhados" FROM "event_log" WHERE "timestamp" BETWEEN '2017-01-01' AND '2017-05-31' GROUP BY "resource"
SELECT resource, COUNT(DISTINCT idcase) AS cases_count FROM event_log WHERE timestamp BETWEEN '2017-01-01' AND '2017-05-31' GROUP BY resource;
SELECT "resource", COUNT(DISTINCT "idcase") AS "casos_associados" FROM "event_log" WHERE "timestamp" BETWEEN '2017-01-01' AND '2017-05-31' GROUP BY "resource"
SELECT resource, COUNT(DISTINCT idcase) AS cases_worked FROM event_log WHERE timestamp BETWEEN '2017-01-01' AND '2017-05-31' GROUP BY resource;
SELECT resource, COUNT(DISTINCT idcase) AS cases_count FROM event_log WHERE timestamp BETWEEN '2017-01-01' AND '2017-05-31' GROUP BY resource;
SELECT resource, COUNT(DISTINCT idcase) AS num_declaracoes_trabalhadas FROM event_log WHERE timestamp BETWEEN '2017-01-01' AND '2017-05-31' GROUP BY resource;
SELECT idcase, COUNT(activity) AS total_activities FROM event_log GROUP BY idcase ORDER BY total_activities DESC LIMIT 10;
SELECT idcase, COUNT(activity) AS num_activities FROM event_log GROUP BY idcase ORDER BY num_activities DESC LIMIT 10;
SELECT idcase, COUNT(activity) AS num_activities FROM event_log GROUP BY idcase ORDER BY num_activities DESC LIMIT 10;
SELECT idcase, COUNT(activity) AS total_executions FROM event_log GROUP BY idcase ORDER BY total_executions DESC LIMIT 10;
SELECT idcase, COUNT(activity) AS total_executions FROM event_log GROUP BY idcase ORDER BY total_executions DESC LIMIT 10;
SELECT idcase, COUNT(activity) AS total_activities FROM event_log GROUP BY idcase ORDER BY total_activities DESC LIMIT 10;
SELECT idcase, COUNT(activity) AS num_executions FROM event_log GROUP BY idcase ORDER BY num_executions DESC LIMIT 10;
SELECT idcase, COUNT(activity) AS num_executions FROM event_log GROUP BY idcase ORDER BY num_executions DESC LIMIT 10;
SELECT idcase, COUNT(activity) AS total_activities FROM event_log GROUP BY idcase ORDER BY total_activities DESC LIMIT 10;
SELECT activity, COUNT(*) AS num_actions FROM event_log GROUP BY activity ORDER BY num_actions DESC, activity DESC LIMIT 10;
SELECT activity, COUNT(activity) AS total_actions FROM event_log GROUP BY activity ORDER BY total_actions DESC LIMIT 10;
SELECT idcase, COUNT(*) AS total_events FROM event_log GROUP BY idcase ORDER BY total_events DESC LIMIT 10;
SELECT idcase, COUNT(*) AS event_count FROM event_log GROUP BY idcase ORDER BY event_count DESC LIMIT 10;
SELECT idcase, COUNT(id) AS event_count FROM event_log GROUP BY idcase ORDER BY event_count DESC LIMIT 10;
SELECT idcase, COUNT(id) AS num_events FROM event_log GROUP BY idcase ORDER BY num_events DESC LIMIT 10;
SELECT idcase, COUNT(*) AS num_events FROM event_log GROUP BY idcase ORDER BY num_events DESC LIMIT 10;
SELECT idcase, COUNT(*) AS total_events FROM event_log GROUP BY idcase ORDER BY total_events DESC LIMIT 10;
SELECT activity, COUNT(activity) AS total_actions FROM event_log GROUP BY activity ORDER BY total_actions DESC LIMIT 10;
SELECT idcase, SUM(cost) AS total_cost FROM event_log GROUP BY idcase;
SELECT idcase, SUM(cost) AS total_cost FROM event_log GROUP BY idcase;
SELECT idcase, SUM(cost) AS total_cost FROM event_log GROUP BY idcase;
SELECT idcase, SUM(cost) AS total_cost FROM event_log GROUP BY idcase;
SELECT idcase, SUM(cost) AS total_cost FROM event_log GROUP BY idcase;
SELECT idcase, SUM(cost) AS total_cost FROM event_log GROUP BY idcase;
SELECT idcase, SUM(cost) AS total_cost FROM event_log GROUP BY idcase;
SELECT activity, SUM(cost) AS total_cost FROM event_log GROUP BY activity;
SELECT SUM(cost) as total_cost FROM event_log;
SELECT "resource", COUNT(*) AS "num_events" FROM "event_log" GROUP BY "resource" HAVING COUNT(*) >= 100 ORDER BY COUNT(*) DESC;
SELECT "resource", COUNT(*) AS "num_events" FROM "event_log" GROUP BY "resource" HAVING COUNT(*) >= 100 ORDER BY COUNT(*) DESC;
SELECT resource, COUNT(*) AS num_actions FROM event_log GROUP BY resource HAVING num_actions >= 100 ORDER BY num_actions DESC;
SELECT "idcase", "activity", "timestamp" FROM event_log ORDER BY "idcase", "timestamp";
SELECT "idcase", "activity", "timestamp" FROM "event_log" ORDER BY "idcase", "timestamp";
SELECT idcase, id FROM event_log ORDER BY idcase, timestamp;
SELECT idcase, id, timestamp FROM event_log ORDER BY idcase, timestamp;
SELECT idcase, activity, timestamp FROM event_log ORDER BY idcase, timestamp;
SELECT * FROM event_log WHERE activity = 'processamento_declaracao' ORDER BY idcase, timestamp;
SELECT "resource", COUNT(*) AS "count" FROM "event_log" WHERE "activity" = 'declaração aprovada pela administração' GROUP BY "resource";
SELECT "resource", COUNT(*) AS "total_executions" FROM "event_log" WHERE "activity" = 'declaração aprovada pela administração' GROUP BY "resource";
SELECT "resource", COUNT(*) AS "total_executions" FROM "event_log" WHERE "activity" = 'declaração aprovada pela administração' GROUP BY "resource";
SELECT resource, COUNT(*) AS occurrences FROM event_log WHERE activity = 'declaração aprovada pela administração' GROUP BY resource;
SELECT resource, COUNT(*) AS num_approvals FROM event_log WHERE activity = 'approve' AND resource IN (SELECT resource FROM event_log WHERE activity = 'admin') GROUP BY resource;
SELECT "resource", COUNT(*) AS "num_events" FROM "event_log" WHERE "activity" = 'declaração aprovada pela administração' GROUP BY "resource";
SELECT resource, COUNT(*) AS total_events FROM event_log WHERE activity = 'declaração aprovada pela administração' GROUP BY resource;
SELECT resource, COUNT(*) AS num_approvals FROM event_log WHERE activity = 'approve_declaration' GROUP BY resource;
SELECT activity, COUNT(*) AS occurrences FROM event_log WHERE resource = 'Thomas' AND timestamp BETWEEN '2017-01-01' AND '2017-12-31' GROUP BY activity;
SELECT activity, COUNT(*) AS total_executions FROM event_log WHERE resource = 'Thomas' AND strftime('%Y', timestamp) = '2017' GROUP BY activity;
SELECT activity, COUNT(*) AS occurrences FROM event_log WHERE resource = 'Thomas' AND strftime('%Y', timestamp) = '2017' GROUP BY activity;
SELECT activity, COUNT(*) as total FROM event_log WHERE resource = 'Thomas' AND activity LIKE '%processamento de declarações%' AND timestamp BETWEEN '2017-01-01' AND '2017-12-31' GROUP BY activity;
SELECT COUNT(*) FROM event_log WHERE resource = 'Thomas' AND strftime('%Y', timestamp) = '2017';
SELECT COUNT(*) FROM event_log WHERE resource = 'Thomas' AND strftime('%Y', timestamp) = '2017'
SELECT COUNT(*) FROM event_log WHERE resource = 'Thomas' AND strftime('%Y', timestamp) = '2017';
SELECT COUNT(*) FROM event_log WHERE "resource" = 'Thomas' AND strftime('%Y', "timestamp") = '2017';
SELECT COUNT(*) FROM event_log WHERE resource = 'Thomas' AND strftime('%Y', timestamp) = '2017';
SELECT SUM(cost) AS workload FROM event_log WHERE resource = 'Thomas' AND activity = 'processamento de declarações' AND timestamp BETWEEN '2017-01-01' AND '2017-12-31';
SELECT activity, MAX(timestamp) as recent_date FROM event_log GROUP BY activity;
SELECT activity, MAX(timestamp) AS recent_date FROM event_log GROUP BY activity;
SELECT activity, MAX(timestamp) AS recent_date FROM event_log GROUP BY activity;
SELECT activity, MAX(timestamp) AS last_execution FROM event_log GROUP BY activity;
SELECT activity, MAX(timestamp) AS last_execution FROM event_log GROUP BY activity;
SELECT activity, MAX(timestamp) AS last_occurrence FROM event_log GROUP BY activity;
SELECT activity, MAX(timestamp) FROM event_log GROUP BY activity;
SELECT activity, MAX(timestamp) FROM event_log GROUP BY activity;
SELECT activity, COUNT(*) AS total_executions FROM event_log WHERE (activity = 'declaração aprovada pelo supervisor' OR activity = 'permissão rejeitada pelo funcionário') AND (strftime('%Y', timestamp) = '2017' OR strftime('%Y', timestamp) = '2018') GROUP BY activity;
SELECT activity, COUNT(*) AS occurrences FROM event_log WHERE activity = 'declaração aprovada pelo supervisor' AND strftime('%Y', timestamp) = '2017' GROUP BY activity; SELECT activity, COUNT(*) AS occurrences FROM event_log WHERE activity = 'permissão rejeitada pelo funcionário' AND strftime('%Y', timestamp) = '2018' GROUP BY activity;
SELECT activity, COUNT(*) AS total_events FROM event_log WHERE (activity = 'declaração aprovada pelo supervisor' AND strftime('%Y', timestamp) = '2017') OR (activity = 'permissão rejeitada pelo funcionário' AND strftime('%Y', timestamp) = '2018') GROUP BY activity;
SELECT activity, COUNT(*) AS num_executions FROM event_log WHERE activity = 'declaração aprovada pelo supervisor' AND strftime('%Y', timestamp) = '2017' GROUP BY activity UNION SELECT activity, COUNT(*) AS num_executions FROM event_log WHERE activity = 'permissão rejeitada pelo funcionário' AND strftime('%Y', timestamp) = '2018' GROUP BY activity;
SELECT activity, COUNT(*) AS num_times FROM event_log WHERE activity = 'declaração aprovada pelo supervisor' AND strftime('%Y', timestamp) = '2017' GROUP BY activity UNION SELECT activity, COUNT(*) AS num_times FROM event_log WHERE activity = 'permissão rejeitada pelo funcionário' AND strftime('%Y', timestamp) = '2018' GROUP BY activity;
SELECT COUNT(*) AS "Aprovações de declaração feitas pelo supervisor em 2017" FROM event_log WHERE activity = 'aprovação de declaração' AND timestamp BETWEEN '2017-01-01' AND '2017-12-31' AND resource = 'supervisor'; SELECT COUNT(*) AS "Permissões rejeitadas por algum funcionário em 2018" FROM event_log WHERE activity = 'rejeição de permissão' AND timestamp BETWEEN '2018-01-01' AND '2018-12-31';
SELECT activity, MAX(timestamp) AS end_date, id FROM event_log GROUP BY activity, id ORDER BY end_date;
SELECT activity, timestamp, id FROM event_log ORDER BY timestamp;
SELECT activity, MAX(timestamp) as end_date, id FROM event_log WHERE activity LIKE '%processamento das declarações%' GROUP BY activity, id ORDER BY end_date;
SELECT COUNT(*) FROM event_log WHERE resource = 'Thomas' AND activity = 'declaração requisitada pelo funcionário';
SELECT COUNT(*) AS total_atividades FROM event_log WHERE activity = 'declaração requisitada pelo funcionário' AND resource = 'Thomas';
SELECT COUNT(*) FROM event_log WHERE activity = 'declaração requisitada pelo funcionário' AND resource = 'Thomas';
SELECT COUNT(*) FROM event_log WHERE activity = 'declaração requisitada pelo funcionário' AND resource = 'Thomas';
SELECT COUNT(*) FROM event_log WHERE resource = 'Thomas' AND activity = 'declaração requisitada pelo funcionário';
SELECT COUNT(*) FROM event_log WHERE activity = 'requisição de declaração' AND resource = 'Thomas';
SELECT COUNT(*) FROM event_log WHERE resource = 'Diana' AND cost IS NOT NULL;
SELECT COUNT(*) FROM event_log WHERE resource = 'Diana' AND cost IS NOT NULL;
SELECT COUNT(*) FROM event_log WHERE resource = 'Diana' AND cost IS NOT NULL;
SELECT * FROM event_log WHERE activity = 'processamento das declarações' AND resource = 'Diana' AND cost IS NOT NULL;
SELECT activity, COUNT(*) AS num_events FROM event_log WHERE resource = 'Diana' AND cost IS NOT NULL GROUP BY activity;
SELECT activity, COUNT(*) AS total_events FROM event_log WHERE resource = 'Diana' AND cost IS NOT NULL GROUP BY activity;
SELECT DISTINCT activity FROM event_log WHERE resource = 'Diana' AND activity LIKE '%processamento das declarações%' AND cost IS NOT NULL;
SELECT COUNT(DISTINCT resource) FROM event_log WHERE idcase IN ( SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(*) > 3 )
SELECT COUNT(DISTINCT resource) FROM event_log WHERE idcase IN ( SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(*) > 3 )
SELECT COUNT(DISTINCT resource) AS quantidade_recursos FROM event_log WHERE idcase IN ( SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(*) > 3 )
SELECT COUNT(DISTINCT resource) AS quantidade_recursos FROM event_log WHERE idcase IN ( SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(*) > 3 )
SELECT COUNT(DISTINCT resource) FROM event_log WHERE activity = 'processamento de declarações' AND idcase IN ( SELECT idcase FROM event_log WHERE activity = 'intervenção' GROUP BY idcase HAVING COUNT(DISTINCT id) > 3 )
SELECT DISTINCT resource FROM event_log WHERE activity = 'declaração rejeitada pelo pré-aprovador';
SELECT DISTINCT resource FROM event_log WHERE activity = 'declaração rejeitada pelo pré-aprovador';
SELECT DISTINCT resource FROM event_log WHERE activity = 'declaração rejeitada pelo pré-aprovador';
SELECT DISTINCT resource FROM event_log WHERE activity = 'declaração rejeitada pelo pré-aprovador';
SELECT DISTINCT resource FROM event_log WHERE activity = 'declaração rejeitada pelo pré-aprovador';
SELECT DISTINCT resource FROM event_log WHERE activity = 'declaração rejeitada pelo pré-aprovador';
SELECT DISTINCT resource FROM event_log WHERE activity = 'rejeitar declaração' AND idcase = 'pré-aprovação';
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE activity = 'declaração final aprovada pelo diretor' AND timestamp >= '2017-01-01' AND timestamp <= '2017-05-31';
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE activity = 'declaração final aprovada pelo diretor' AND timestamp BETWEEN '2017-01-01' AND '2017-05-31';
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE activity = 'declaração final aprovada pelo diretor' AND timestamp >= '2017-01-01' AND timestamp <= '2017-05-31';
SELECT COUNT(*) FROM event_log WHERE activity = 'final declaration approved by director' AND timestamp >= '2017-01-01' AND timestamp <= '2017-05-31';
SELECT DISTINCT idcase FROM event_log WHERE resource = 'Charles' AND strftime('%Y-%m', timestamp) != '2018-01';
SELECT DISTINCT idcase FROM event_log WHERE resource = 'Charles' AND idcase NOT IN ( SELECT idcase FROM event_log WHERE strftime('%Y-%m', timestamp) = '2018-01' )
SELECT idcase FROM event_log WHERE resource = 'Charles' AND idcase NOT IN ( SELECT idcase FROM event_log WHERE strftime('%Y-%m', timestamp) = '2018-01' )
SELECT idcase FROM event_log WHERE resource = 'Charles' AND strftime('%Y-%m', timestamp) != '2018-01' GROUP BY idcase;
SELECT activity FROM event_log WHERE resource = 'Charles' AND timestamp NOT LIKE '2018-01%'
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(DISTINCT activity) > 3;
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(DISTINCT activity) > 3;
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(DISTINCT activity) > 3;
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(DISTINCT activity) > 3;
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(DISTINCT activity) > 3;
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(DISTINCT activity) > 3;
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(DISTINCT activity) > 3;
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(DISTINCT activity) > 3;
SELECT activity, COUNT(DISTINCT resource) AS num_interventions FROM event_log GROUP BY activity HAVING COUNT(DISTINCT resource) > 3;
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(id) > 3;
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(id) > 3;
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(id) > 3;
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(id) > 3;
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(id) > 3;
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(id) > 3;
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(id) > 3;
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(id) > 3;
SELECT activity, COUNT(*) AS interventions FROM event_log GROUP BY activity HAVING interventions > 3;
SELECT idcase, MAX(timestamp) - MIN(timestamp) AS duration FROM event_log GROUP BY idcase;
SELECT idcase, SUM(cost) AS "Tempo total aproximado" FROM event_log GROUP BY idcase;
SELECT idcase, MIN(timestamp) AS start_time, MAX(timestamp) AS end_time, (julianday(MAX(timestamp)) - julianday(MIN(timestamp))) * 24 AS duration_hours FROM event_log GROUP BY idcase;
SELECT idcase, MIN(timestamp) AS start_time, MAX(timestamp) AS end_time, CAST((JULIANDAY(MAX(timestamp)) - JULIANDAY(MIN(timestamp))) * 24 AS INTEGER) AS duration_hours FROM event_log GROUP BY idcase;
SELECT idcase, MIN(timestamp) AS start_time, MAX(timestamp) AS end_time, julianday(MAX(timestamp)) - julianday(MIN(timestamp)) AS duration FROM event_log GROUP BY idcase;
SELECT A duração do processamento de cada declaração depende de vários fatores, como o volume de dados na tabela "event_log", a complexidade das consultas e a capacidade do sistema de gerenciamento de banco de dados em processar as consultas de forma eficiente. Para determinar o tempo de duração de cada declaração, é necessário executar as consultas em um ambiente de banco de dados específico e analisar o tempo de execução registrado pelo sistema. Além disso, é importante considerar a otimização das consultas, como a criação de índices adequados e a utilização de cláusulas WHERE para filtrar os dados de forma eficiente. Portanto, sem informações adicionais sobre o ambiente de banco de dados e o volume de dados na tabela "event_log", não é possível determinar o tempo de duração exato de cada declaração.
SELECT idcase, resource FROM event_log GROUP BY idcase, resource HAVING COUNT(DISTINCT resource) = 1;
SELECT idcase, resource FROM event_log GROUP BY idcase, resource HAVING COUNT(DISTINCT activity) = 1;
SELECT idcase, resource FROM event_log GROUP BY idcase, resource HAVING COUNT(DISTINCT resource) = 1;
SELECT idcase, resource FROM event_log GROUP BY idcase, resource HAVING COUNT(DISTINCT activity) = 1;
SELECT idcase, resource FROM event_log GROUP BY idcase, resource HAVING COUNT(DISTINCT activity) = 1;
SELECT idcase, resource FROM event_log GROUP BY idcase, resource HAVING COUNT(DISTINCT activity) = 1;
SELECT idcase, resource FROM event_log GROUP BY idcase, resource HAVING COUNT(DISTINCT activity) = 1;
SELECT idcase, resource FROM event_log GROUP BY idcase, resource HAVING COUNT(DISTINCT activity) = 1;
SELECT idcase, resource FROM event_log GROUP BY idcase, resource HAVING COUNT(DISTINCT activity) = 1;
SELECT activity, COUNT(DISTINCT resource) AS num_resources FROM event_log GROUP BY activity HAVING num_resources = 1; 
SELECT "idcase" FROM "event_log" WHERE "activity" = 'fim da viagem' AND "timestamp" BETWEEN '2016-01-01' AND '2017-12-31';
SELECT idcase FROM event_log WHERE activity = 'fim da viagem' AND timestamp BETWEEN '2016-01-01' AND '2017-12-31';
SELECT idcase FROM event_log WHERE activity = 'fim da viagem' AND timestamp BETWEEN '2016-01-01' AND '2017-12-31';
SELECT idcase FROM event_log WHERE activity = 'fim da viagem' AND timestamp BETWEEN '2016-01-01' AND '2017-12-31';
SELECT idcase FROM event_log WHERE activity = 'fim da viagem' AND timestamp BETWEEN '2016-01-01' AND '2017-12-31';
SELECT idcase FROM event_log WHERE activity = 'fim da viagem' AND timestamp BETWEEN '2016-01-01' AND '2017-12-31';
SELECT idcase FROM event_log WHERE activity = 'fim da viagem' AND timestamp BETWEEN '2016-01-01' AND '2017-12-31';
SELECT idcase FROM event_log WHERE activity = 'fim da viagem' AND timestamp BETWEEN '2016-01-01' AND '2017-12-31';
SELECT idcase FROM event_log WHERE activity = 'fim da viagem' AND timestamp BETWEEN '2016-01-01' AND '2017-12-31';
SELECT idcase FROM event_log WHERE activity = 'fim da viagem' AND timestamp BETWEEN '2016-01-01' AND '2017-12-31';
SELECT * FROM event_log WHERE activity = 'end of trip' AND timestamp BETWEEN '2016-01-01' AND '2017-12-31';
SELECT * FROM event_log WHERE activity LIKE '%rejeitada%';
SELECT * FROM event_log WHERE activity LIKE '%rejeitada%';
SELECT * FROM event_log WHERE activity LIKE '%rejeitada%';
SELECT * FROM event_log WHERE activity LIKE '%rejeitada%';
SELECT * FROM event_log WHERE activity LIKE '%rejeitada%';
SELECT * FROM event_log WHERE activity LIKE '%rejeitada%';
SELECT * FROM event_log WHERE activity LIKE '%rejeição de declaração%';
SELECT "timestamp", "resource", "activity", "cost" FROM event_log WHERE activity = 'rejeição';
SELECT idcase, MIN(cost) AS min_cost, MAX(cost) AS max_cost FROM event_log WHERE cost > 0 GROUP BY idcase;
SELECT idcase, MIN(cost) AS min_cost, MAX(cost) AS max_cost FROM event_log WHERE max_cost > 0 GROUP BY idcase;
SELECT idcase, MIN(cost) AS min_cost, MAX(cost) AS max_cost FROM event_log WHERE cost > 0 GROUP BY idcase;
SELECT idcase, MIN(cost) AS min_cost, MAX(cost) AS max_cost FROM event_log WHERE cost > 0 GROUP BY idcase;
SELECT "idcase", MIN("cost") AS "min_cost", MAX("cost") AS "max_cost" FROM "event_log" WHERE "cost" > 0 GROUP BY "idcase";
SELECT idcase, MIN(cost) AS min_cost, MAX(cost) AS max_cost FROM event_log WHERE max_cost > 0 GROUP BY idcase;
SELECT idcase, MIN(cost) AS min_cost, MAX(cost) AS max_cost FROM event_log WHERE max_cost > 0 GROUP BY idcase;
SELECT idcase, MIN(cost) as min_cost, MAX(cost) as max_cost FROM event_log WHERE cost > 0 GROUP BY idcase;
SELECT idcase, MIN(cost) AS min_cost, MAX(cost) AS max_cost FROM event_log WHERE max_cost > 0 GROUP BY idcase;
SELECT idcase, MIN(cost) AS min_cost, MAX(cost) AS max_cost FROM event_log WHERE cost > 0 GROUP BY idcase;
SELECT idcase, MIN(cost) AS min_cost, MAX(cost) AS max_cost FROM event_log WHERE max_cost > 0 GROUP BY idcase;
SELECT idcase, MIN(cost) AS min_cost, MAX(cost) AS max_cost FROM event_log WHERE max_cost > 0 GROUP BY idcase;
SELECT activity, MIN(cost) AS min_cost, MAX(cost) AS max_cost FROM event_log WHERE cost > 0 GROUP BY activity;
SELECT activity, MIN(cost) AS min_cost, MAX(cost) AS max_cost FROM event_log WHERE cost > 0 GROUP BY activity;
SELECT idcase, MIN(timestamp) AS start_time, MAX(CASE WHEN activity = 'fim da viagem' OR activity = 'declaração rejeitada pelo funcionário' OR activity = 'pagamento efetuado' THEN timestamp END) AS end_time, julianday(MAX(CASE WHEN activity = 'fim da viagem' OR activity = 'declaração rejeitada pelo funcionário' OR activity = 'pagamento efetuado' THEN timestamp END)) - julianday(MIN(timestamp)) AS duration FROM event_log GROUP BY idcase;
SELECT idcase, MIN(timestamp) AS start_time, MAX(CASE WHEN activity = 'fim da viagem' OR activity = 'declaração rejeitada pelo funcionário' OR activity = 'pagamento efetuado' THEN timestamp END) AS end_time, JULIANDAY(MAX(CASE WHEN activity = 'fim da viagem' OR activity = 'declaração rejeitada pelo funcionário' OR activity = 'pagamento efetuado' THEN timestamp END)) - JULIANDAY(MIN(timestamp)) AS duration FROM event_log GROUP BY idcase;
SELECT idcase, activity, MIN(timestamp) AS start_time, MAX(CASE WHEN activity = 'fim da viagem' OR activity = 'declaração rejeitada pelo funcionário' OR activity = 'pagamento efetuado' THEN timestamp END) AS end_time, julianday(MAX(CASE WHEN activity = 'fim da viagem' OR activity = 'declaração rejeitada pelo funcionário' OR activity = 'pagamento efetuado' THEN timestamp END)) - julianday(MIN(timestamp)) AS elapsed_time FROM event_log GROUP BY idcase;
SELECT MIN(timestamp) AS start_time, MAX(timestamp) AS end_time FROM event_log WHERE activity = 'start' OR activity = 'finish' OR activity = 'reject' OR activity = 'payment';
SELECT MIN(timestamp) AS start_time, MAX(timestamp) AS end_time, (julianday(MAX(timestamp)) - julianday(MIN(timestamp))) * 24 AS duration_hours FROM event_log WHERE activity = 'start' OR activity = 'end' OR activity = 'reject' OR activity = 'payment';
SELECT idcase, MIN(timestamp) AS start_time, MAX(CASE WHEN activity = 'fim da viagem' THEN timestamp END) AS end_time, MAX(CASE WHEN activity = 'declaração rejeitada pelo funcionário' OR activity = 'pagamento efetuado' THEN timestamp END) AS final_activity_time, MAX(CASE WHEN activity = 'declaração rejeitada pelo funcionário' OR activity = 'pagamento efetuado' THEN activity END) AS final_activity FROM event_log GROUP BY idcase;
SELECT idcase, activity AS final_activity, timestamp - MIN(timestamp) AS duration FROM event_log WHERE activity = 'fim da viagem' OR activity = 'declaração rejeitada pelo funcionário' OR activity = 'pagamento efetuado' GROUP BY idcase, final_activity;
SELECT idcase, activity AS final_activity, MAX(timestamp) - MIN(timestamp) AS duration FROM event_log WHERE activity IN ('fim da viagem', 'declaração rejeitada pelo funcionário', 'pagamento efetuado') GROUP BY idcase;
SELECT idcase, activity, MAX(julianday(timestamp) - julianday((SELECT MIN(timestamp) FROM event_log e2 WHERE e2.idcase = e1.idcase))) AS elapsed_time FROM event_log e1 WHERE activity IN ('fim da viagem', 'declaração rejeitada pelo funcionário', 'pagamento efetuado') GROUP BY idcase, activity;
SELECT MAX(timestamp) - MIN(timestamp) AS tempo_total FROM event_log WHERE activity = 'início de processamento de declaração' OR activity = 'fim da viagem registrado' OR activity = 'viagem rejeitada por funcionário' OR activity = 'pagamento efetuado';
SELECT * FROM event_log WHERE activity = 'requisição de pagamento';
SELECT * FROM event_log WHERE activity = 'requisição de pagamento';
SELECT * FROM event_log WHERE activity = 'payment request';
SELECT * FROM event_log WHERE activity = 'request payment' AND resource = 'declarations';
SELECT activity, AVG(julianday(MAX(timestamp)) - julianday(MIN(timestamp))) AS avg_duration FROM event_log GROUP BY activity;
SELECT activity, AVG(julianday(MAX(timestamp)) - julianday(MIN(timestamp))) AS avg_duration FROM event_log GROUP BY activity;
SELECT activity, AVG(julianday(MAX(timestamp)) - julianday(MIN(timestamp))) AS avg_duration FROM event_log GROUP BY activity;
SELECT activity, AVG(julianday(timestamp) - julianday(MIN(timestamp))) AS average_duration FROM event_log GROUP BY activity;
SELECT activity, AVG(julianday(MAX(timestamp)) - julianday(MIN(timestamp))) AS average_duration FROM event_log GROUP BY activity;
SELECT activity, AVG(julianday(MAX(timestamp)) - julianday(MIN(timestamp))) AS avg_duration FROM event_log GROUP BY activity;
SELECT activity, AVG(julianday(MAX(timestamp)) - julianday(MIN(timestamp))) AS average_duration FROM event_log GROUP BY activity;
SELECT activity, AVG(julianday(MAX(timestamp)) - julianday(MIN(timestamp))) AS average_duration FROM event_log GROUP BY activity;
SELECT activity, AVG(julianday(MAX(timestamp)) - julianday(MIN(timestamp))) AS average_duration FROM event_log GROUP BY activity;
SELECT activity, AVG(julianday(MAX(timestamp)) - julianday(MIN(timestamp))) AS average_duration FROM event_log GROUP BY activity;
SELECT activity, AVG(julianday(timestamp) - julianday(MIN(timestamp))) AS average_duration FROM event_log GROUP BY activity;
SELECT activity, AVG(julianday(MAX(timestamp)) - julianday(MIN(timestamp))) AS avg_duration FROM event_log GROUP BY activity;
SELECT activity, AVG(julianday(MAX(timestamp)) - julianday(MIN(timestamp))) AS avg_duration FROM event_log GROUP BY activity;
SELECT activity, AVG(julianday(MAX(timestamp)) - julianday(MIN(timestamp))) AS avg_duration FROM event_log GROUP BY activity;
SELECT activity, AVG(julianday(MAX(timestamp)) - julianday(MIN(timestamp))) AS avg_duration FROM event_log GROUP BY activity;
SELECT activity, AVG(julianday(timestamp) * 86400) AS average_duration FROM event_log GROUP BY activity;
SELECT activity, AVG(julianday(MAX(timestamp)) - julianday(MIN(timestamp))) AS average_duration FROM event_log GROUP BY activity;
SELECT activity, AVG(julianday(MAX(timestamp)) - julianday(MIN(timestamp))) AS average_duration FROM event_log GROUP BY activity;
SELECT activity, AVG(julianday(MAX(timestamp)) - julianday(MIN(timestamp))) AS average_duration FROM event_log GROUP BY activity;
SELECT activity, AVG(julianday(MAX(timestamp)) - julianday(MIN(timestamp))) AS average_duration FROM event_log GROUP BY activity;
SELECT activity, AVG(julianday(MAX(timestamp)) - julianday(MIN(timestamp))) AS average_duration FROM event_log GROUP BY activity;
SELECT activity, AVG(julianday(MAX(timestamp)) - julianday(MIN(timestamp))) AS avg_duration FROM event_log GROUP BY activity;
SELECT activity, AVG(julianday(timestamp) - julianday(MIN(timestamp))) AS average_duration FROM event_log GROUP BY activity;
SELECT activity, AVG(julianday(timestamp) - julianday(MIN(timestamp))) AS average_duration FROM event_log GROUP BY activity;
SELECT activity, AVG(julianday(timestamp) - julianday(MIN(timestamp))) AS average_duration FROM event_log GROUP BY activity;
SELECT activity, AVG(julianday(MAX(timestamp)) - julianday(MIN(timestamp))) AS average_duration FROM event_log GROUP BY activity;
SELECT idcase, SUM(cost) AS total_cost FROM event_log GROUP BY idcase ORDER BY total_cost DESC;
SELECT idcase, SUM(cost) AS total_cost FROM event_log GROUP BY idcase ORDER BY total_cost DESC LIMIT 1;
SELECT idcase FROM event_log WHERE cost = (SELECT MAX(cost) FROM event_log)
SELECT idcase FROM event_log WHERE cost = (SELECT MAX(cost) FROM event_log)
SELECT idcase FROM event_log WHERE cost = (SELECT MAX(cost) FROM event_log)
SELECT idcase, SUM(cost) AS total_cost FROM event_log GROUP BY idcase ORDER BY total_cost DESC;
SELECT activity, SUM(cost) AS total_cost FROM event_log GROUP BY activity ORDER BY total_cost DESC LIMIT 1;
SELECT activity, MAX(cost) FROM event_log GROUP BY activity;
SELECT activity, MAX(cost) FROM event_log;
SELECT activity, MAX(cost) FROM event_log;
SELECT activity, MAX(cost) FROM event_log GROUP BY activity;
SELECT * FROM event_log WHERE cost = (SELECT MAX(cost) FROM event_log)
SELECT * FROM event_log WHERE cost = (SELECT MAX(cost) FROM event_log);
SELECT * FROM event_log ORDER BY cost DESC;
SELECT * FROM event_log WHERE cost = (SELECT MAX(cost) FROM event_log)
SELECT * FROM event_log WHERE cost = (SELECT MAX(cost) FROM event_log)
SELECT * FROM event_log ORDER BY cost DESC;
SELECT * FROM event_log WHERE cost = (SELECT MAX(cost) FROM event_log)
SELECT * FROM event_log WHERE cost = (SELECT MAX(cost) FROM event_log)
SELECT activity, MAX(cost) FROM event_log GROUP BY activity;
SELECT * FROM event_log WHERE cost = (SELECT MAX(cost) FROM event_log);
SELECT * FROM event_log WHERE cost = (SELECT MAX(cost) FROM event_log)
SELECT activity, MAX(cost) FROM event_log;
SELECT activity, cost FROM event_log WHERE cost = (SELECT MAX(cost) FROM event_log)
SELECT * FROM event_log WHERE activity = 'início da viagem';
SELECT * FROM event_log WHERE activity = 'início da viagem';
SELECT * FROM event_log WHERE activity = 'início da viagem';
SELECT * FROM event_log WHERE activity = 'início da viagem';
SELECT * FROM event_log WHERE activity = 'início da viagem';
SELECT * FROM event_log WHERE activity = 'início da viagem';
SELECT * FROM event_log WHERE activity = 'início da viagem';
SELECT * FROM event_log WHERE activity = 'início da viagem';
SELECT * FROM event_log WHERE activity = 'início da viagem';
SELECT * FROM event_log WHERE activity = 'início da viagem';
SELECT * FROM event_log WHERE activity = 'início da viagem';
SELECT * FROM event_log WHERE activity = 'início da viagem';
SELECT * FROM event_log WHERE activity = 'início da viagem';
SELECT * FROM event_log WHERE activity = 'início da viagem';
SELECT * FROM event_log WHERE activity = 'início da viagem';
SELECT * FROM event_log WHERE activity = 'início da viagem';
SELECT * FROM event_log WHERE activity = 'start_trip';
SELECT * FROM event_log WHERE activity = 'start_trip';
SELECT activity, COUNT(*) AS total_registros FROM event_log GROUP BY activity;
SELECT activity, COUNT(*) AS total_execucoes FROM event_log GROUP BY activity;
SELECT activity, COUNT(*) AS total_executions FROM event_log GROUP BY activity;
SELECT activity, COUNT(*) AS num_events FROM event_log GROUP BY activity;
SELECT activity, COUNT(*) AS total_executions FROM event_log GROUP BY activity;
SELECT activity, COUNT(*) AS num_executions FROM event_log GROUP BY activity;
SELECT activity, COUNT(*) AS total_events FROM event_log GROUP BY activity;
SELECT activity, COUNT(*) AS quantidade_eventos FROM event_log GROUP BY activity;
SELECT activity, COUNT(*) AS quantidade_eventos FROM event_log GROUP BY activity;
SELECT activity, COUNT(*) AS quantidade_eventos FROM event_log GROUP BY activity;
SELECT activity, COUNT(*) AS quantidade_eventos FROM event_log GROUP BY activity;
SELECT activity, COUNT(*) AS num_events FROM event_log GROUP BY activity;
SELECT activity, COUNT(*) AS total_execucoes FROM event_log GROUP BY activity;
SELECT activity, COUNT(*) AS total_executions FROM event_log GROUP BY activity;
SELECT activity, COUNT(*) AS num_events FROM event_log GROUP BY activity;
SELECT activity, COUNT(activity) AS total_executions FROM event_log GROUP BY activity;
SELECT activity, COUNT(*) AS num_executions FROM event_log GROUP BY activity;
SELECT activity, COUNT(*) AS interventions FROM event_log GROUP BY activity;
SELECT action, COUNT(*) AS total_executions FROM ( SELECT 'INSERT' AS action UNION ALL SELECT 'UPDATE' AS action UNION ALL SELECT 'DELETE' AS action UNION ALL SELECT 'SELECT' AS action ) actions LEFT JOIN sqlite_stat1 ON 1 = 1;
SELECT activity, COUNT(*) AS interventions_count FROM event_log GROUP BY activity;
SELECT activity, COUNT(*) AS interventions FROM event_log GROUP BY activity;
SELECT activity, COUNT(*) AS interventions FROM event_log WHERE activity LIKE '%declaração%' GROUP BY activity;
SELECT activity, COUNT(*) AS interventions FROM event_log WHERE activity LIKE '%declaracao%' GROUP BY activity;
SELECT COUNT(DISTINCT activity) AS interventions FROM event_log;
SELECT "cost", "activity" FROM "event_log" ORDER BY "cost"
SELECT "cost", "activity" FROM "event_log" ORDER BY "cost"
SELECT "cost", "activity" FROM "event_log" ORDER BY "cost"
SELECT "cost", "activity" FROM "event_log" ORDER BY "cost"
SELECT "cost", "activity" FROM "event_log" ORDER BY "cost"
SELECT "cost", "activity" FROM "event_log" ORDER BY "cost"
SELECT activity, SUM(cost) AS total_cost FROM event_log GROUP BY activity ORDER BY total_cost DESC;
SELECT activity, SUM(cost) AS total_cost FROM event_log WHERE activity = 'processamento de declarações' GROUP BY activity ORDER BY total_cost DESC;
SELECT * FROM event_log WHERE activity = 'permissão';
SELECT * FROM event_log WHERE activity = 'permissão';
SELECT * FROM event_log WHERE activity = 'permissão';
SELECT * FROM event_log WHERE activity = 'permissão';
SELECT * FROM event_log WHERE activity = 'permissão';
SELECT * FROM event_log WHERE activity = 'permissão';
SELECT * FROM event_log WHERE activity = 'permissão'; As execuções da atividade 'permissão' estão associadas aos eventos registrados na tabela event_log que possuem a atividade 'permissão'. Esses eventos são caracterizados pela ação de conceder permissão ou autorização para realizar determinada atividade, seja em relação a recursos, casos ou outras entidades envolvidas.
SELECT Os eventos associados à execução da atividade 'permissão' são caracterizados pela atividade 'permissão' presente na coluna 'activity' da tabela 'event_log'.
SELECT * FROM event_log WHERE activity = 'permissão';
SELECT * FROM event_log WHERE activity = 'permissão';
SELECT As intervenções que geram uma permissão durante o processamento de uma declaração podem ser caracterizadas pela atividade registrada no campo "activity" da tabela "event_log". Essas intervenções provavelmente envolvem a solicitação de permissão para acessar recursos específicos, como arquivos, bancos de dados, sistemas ou informações confidenciais. Portanto, ao analisar os registros da tabela "event_log", é possível identificar as atividades que resultaram na geração de permissões durante o processamento de uma declaração.
SELECT "activity", "timestamp", "resource", "cost", "idcase" FROM event_log WHERE "activity" = "permissão" AND "idcase" = "declaração";
SELECT MAX(cost) FROM event_log;
SELECT MAX(cost) FROM event_log;
SELECT MAX(cost) FROM event_log;
SELECT MAX(cost) AS highest_cost FROM event_log;
SELECT MAX(cost) AS "Maior Custo" FROM event_log;
SELECT MAX(cost) AS "Maior valor gasto" FROM event_log;
SELECT idcase FROM event_log WHERE resource = 'Sara' AND idcase IN ( SELECT idcase FROM event_log WHERE resource = 'Thomas' )
SELECT idcase FROM event_log WHERE resource = 'Sara' AND idcase IN ( SELECT idcase FROM event_log WHERE resource = 'Thomas' )
SELECT idcase FROM event_log WHERE resource = 'Sara' OR resource = 'Thomas';
SELECT idcase FROM event_log WHERE resource = 'Sara' OR resource = 'Thomas' GROUP BY idcase HAVING COUNT(DISTINCT resource) = 2;
SELECT DISTINCT idcase FROM event_log WHERE resource = 'Sara' OR resource = 'Thomas' GROUP BY idcase HAVING COUNT(DISTINCT resource) = 2;
SELECT * FROM event_log WHERE resource = 'Sara' OR resource = 'Thomas' GROUP BY idcase HAVING COUNT(DISTINCT resource) = 2;
SELECT "resource", COUNT(*) AS "num_activities" FROM "event_log" WHERE "activity" = 'declaração rejeitada pela administração' GROUP BY "resource";
SELECT "resource", COUNT(*) AS "num_activities" FROM "event_log" WHERE "activity" = 'declaração rejeitada pela administração' GROUP BY "resource";
SELECT "resource", COUNT(*) AS "num_activities" FROM "event_log" WHERE "activity" = 'declaração rejeitada pela administração' GROUP BY "resource";
SELECT "resource", COUNT(*) FROM "event_log" WHERE "activity" = 'declaração rejeitada pela administração' GROUP BY "resource";
SELECT "resource", COUNT(*) AS "num_instances" FROM "event_log" WHERE "activity" = 'declaração rejeitada pela administração' GROUP BY "resource";
SELECT "resource", COUNT(*) AS "count" FROM "event_log" WHERE "activity" = 'declaração rejeitada pela administração' GROUP BY "resource";
SELECT "resource", COUNT(*) AS "quantidade" FROM "event_log" WHERE "activity" = 'declaração rejeitada pela administração' GROUP BY "resource";
SELECT resource, COUNT(*) AS instances FROM event_log WHERE activity = 'declaração rejeitada pela administração' GROUP BY resource;
SELECT "resource", COUNT(*) AS "num_associations" FROM "event_log" WHERE "activity" = 'declaração rejeitada pela administração' GROUP BY "resource";
SELECT "resource", COUNT(*) AS "total_events" FROM "event_log" WHERE "activity" = 'declaração rejeitada pela administração' GROUP BY "resource";
SELECT resource, COUNT(*) AS rejections_count FROM event_log WHERE activity = 'reject' AND resource IN (SELECT resource FROM event_log WHERE activity = 'admin') GROUP BY resource;
SELECT resource, idcase, COUNT(*) AS num_activities FROM event_log WHERE activity = 'declaração rejeitada pela administração' GROUP BY resource, idcase;
SELECT "resource", "idcase", COUNT(*) AS "num_activities" FROM "event_log" WHERE "activity" = 'declaração rejeitada pela administração' GROUP BY "resource", "idcase"
SELECT resource, idcase, COUNT(*) AS num_activities FROM event_log WHERE activity = 'declaração rejeitada pela administração' GROUP BY resource, idcase;
SELECT resource, idcase, COUNT(*) AS instances FROM event_log WHERE activity = 'declaração rejeitada pela administração' GROUP BY resource, idcase;
SELECT "resource", "idcase", COUNT(*) AS "count" FROM "event_log" WHERE "activity" = 'declaração rejeitada pela administração' GROUP BY "resource", "idcase"
SELECT "resource", "idcase", COUNT(*) AS "count" FROM "event_log" WHERE "activity" = 'declaração rejeitada pela administração' GROUP BY "resource", "idcase";
SELECT resource, idcase, COUNT(*) AS instances FROM event_log WHERE activity = 'declaração rejeitada pela administração' GROUP BY resource, idcase;
SELECT resource, idcase, COUNT(*) AS num_associations FROM event_log WHERE activity = 'declaração rejeitada pela administração' GROUP BY resource, idcase;
SELECT resource, idcase, COUNT(*) AS num_events FROM event_log WHERE activity = 'declaração rejeitada pela administração' GROUP BY resource, idcase;
SELECT resource, COUNT(*) AS rejections FROM event_log WHERE activity = 'reject' GROUP BY resource, idcase;
SELECT AVG(cost) FROM event_log WHERE activity NOT IN ('início da viagem', 'fim da viagem');
SELECT AVG(cost) FROM event_log WHERE activity NOT IN ('início da viagem', 'fim da viagem');
SELECT AVG(cost) FROM event_log WHERE activity NOT IN ('início da viagem', 'fim da viagem');
SELECT AVG(cost) FROM event_log WHERE activity NOT IN ('início da viagem', 'fim da viagem');
SELECT AVG(cost) FROM event_log WHERE activity NOT IN ('início da viagem', 'fim da viagem');
SELECT AVG(cost) FROM event_log WHERE activity NOT IN ('início da viagem', 'fim da viagem');
SELECT AVG(cost) FROM event_log WHERE activity NOT IN ('início da viagem', 'fim da viagem');
SELECT AVG(cost) FROM event_log WHERE activity NOT IN ('início da viagem', 'fim da viagem');
SELECT AVG(cost) FROM event_log WHERE activity NOT IN ('início da viagem', 'fim da viagem');
SELECT AVG(cost) FROM event_log WHERE activity NOT IN ('start_trip', 'end_trip');
SELECT * FROM event_log ORDER BY cost DESC LIMIT 5;
SELECT * FROM event_log ORDER BY cost DESC LIMIT 5;
SELECT * FROM event_log ORDER BY cost DESC LIMIT 5;
SELECT * FROM event_log ORDER BY cost DESC LIMIT 5;
SELECT * FROM event_log ORDER BY cost DESC LIMIT 5;
SELECT * FROM event_log ORDER BY cost DESC LIMIT 5;
SELECT * FROM event_log ORDER BY cost DESC LIMIT 5;
SELECT activity, resource, cost FROM event_log ORDER BY cost DESC LIMIT 5;
SELECT * FROM event_log ORDER BY cost DESC LIMIT 5;
SELECT activity, SUM(cost) AS total_cost FROM event_log GROUP BY activity ORDER BY total_cost DESC LIMIT 5;
SELECT * FROM event_log ORDER BY cost DESC LIMIT 5;
SELECT activity, MAX(cost) as highest_cost FROM event_log GROUP BY activity ORDER BY highest_cost DESC LIMIT 5;
SELECT * FROM event_log ORDER BY cost DESC LIMIT 5;
SELECT * FROM event_log ORDER BY cost DESC LIMIT 5;
SELECT activity, SUM(cost) AS total_cost FROM event_log GROUP BY activity ORDER BY total_cost DESC LIMIT 5;
SELECT activity, SUM(cost) AS total_cost FROM event_log GROUP BY activity ORDER BY total_cost DESC LIMIT 5;
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(id) > 1;
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(id) > 1;
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(id) > 1;
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(DISTINCT activity) > 1;
SELECT idcase, COUNT(id) AS num_events FROM event_log GROUP BY idcase HAVING COUNT(id) > 1;
SELECT activity, COUNT(DISTINCT idcase) AS interventions FROM event_log GROUP BY activity HAVING COUNT(DISTINCT idcase) > 1;
SELECT activity, COUNT(activity) AS occurrences FROM event_log GROUP BY activity HAVING COUNT(activity) > 1;
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(DISTINCT activity) > 1;
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(DISTINCT activity) > 1;
SELECT activity, COUNT(idcase) AS occurrences FROM event_log GROUP BY activity HAVING COUNT(idcase) > 1;
SELECT - UPDATE - INSERT - DELETE
SELECT "activity", "timestamp", "resource", "cost", "idcase" FROM event_log WHERE DATE(timestamp) IN ('2018-10-01', '2018-10-02');
SELECT * FROM event_log WHERE timestamp >= '2018-10-01' AND timestamp < '2018-10-03';
SELECT * FROM event_log WHERE timestamp >= '2018-10-01' AND timestamp <= '2018-10-02';
SELECT * FROM event_log WHERE timestamp BETWEEN '2018-10-01 00:00:00' AND '2018-10-02 23:59:59';
SELECT "activity", "timestamp", "resource", "cost", "idcase" FROM "event_log" WHERE "timestamp" BETWEEN '2018-10-01' AND '2018-10-02';
SELECT * FROM event_log WHERE timestamp BETWEEN '2018-10-01' AND '2018-10-02';
SELECT * FROM event_log WHERE timestamp BETWEEN '2018-10-01 00:00:00' AND '2018-10-02 23:59:59';
SELECT * FROM event_log WHERE timestamp BETWEEN '2018-10-01 00:00:00' AND '2018-10-02 23:59:59';
SELECT * FROM event_log WHERE timestamp >= '2018-10-01' AND timestamp < '2018-10-02';
SELECT "activity", "timestamp", "resource", "cost", "idcase" FROM event_log WHERE timestamp >= '2018-10-01 00:00:00' AND timestamp < '2018-10-03 00:00:00'
SELECT * FROM event_log WHERE timestamp BETWEEN '2018-10-01 00:00:00' AND '2018-10-02 23:59:59';
SELECT "activity", "timestamp", "resource", "cost", "idcase" FROM event_log WHERE timestamp >= '2018-10-01 00:00:00' AND timestamp < '2018-10-03 00:00:00'
SELECT * FROM event_log WHERE timestamp BETWEEN '2018-10-01 00:00:00' AND '2018-10-02 23:59:59';
SELECT * FROM event_log WHERE timestamp BETWEEN '2018-10-01' AND '2018-10-02';
SELECT * FROM event_log WHERE timestamp >= '2018-10-01 00:00:00' AND timestamp < '2018-10-03 00:00:00';
SELECT * FROM event_log WHERE timestamp BETWEEN '2018-10-01 00:00:00' AND '2018-10-02 23:59:59';
SELECT * FROM event_log WHERE timestamp >= '2018-10-01' AND timestamp < '2018-10-03'; Esta consulta irá retornar todos os registros da tabela "event_log" que ocorreram entre os dias 1 e 2 de outubro de 2018.
SELECT * FROM event_log WHERE timestamp >= '2018-10-01' AND timestamp <= '2018-10-02';
SELECT * FROM event_log WHERE timestamp >= '2018-10-01' AND timestamp <= '2018-10-02';
SELECT * FROM event_log WHERE resource LIKE 'M%'
SELECT * FROM event_log WHERE resource LIKE 'M%'
SELECT * FROM event_log WHERE resource LIKE 'M%'
SELECT * FROM event_log WHERE resource LIKE 'M%'
SELECT * FROM event_log WHERE resource LIKE 'M%'
SELECT "activity", "timestamp", "cost", "idcase" FROM event_log WHERE resource LIKE 'M%'
SELECT activity FROM event_log WHERE resource LIKE 'M%' ORDER BY timestamp;
SELECT * FROM event_log WHERE activity LIKE 'M%' ORDER BY timestamp;
SELECT activity, COUNT(activity) AS num_activities FROM event_log GROUP BY activity HAVING num_activities > 5;
SELECT activity, COUNT(*) AS num_registros FROM event_log GROUP BY activity HAVING num_registros > 5;
SELECT activity, COUNT(activity) AS frequency FROM event_log GROUP BY activity HAVING COUNT(activity) > 5;
SELECT activity, COUNT(*) AS occurrences FROM event_log GROUP BY activity HAVING COUNT(*) > 5;
SELECT activity FROM event_log GROUP BY activity HAVING COUNT(*) > 5;
SELECT activity FROM event_log GROUP BY activity HAVING COUNT(activity) > 5;
SELECT activity FROM event_log GROUP BY activity HAVING COUNT(*) > 5;
SELECT activity FROM event_log GROUP BY activity HAVING COUNT(activity) > 5;
SELECT activity FROM event_log GROUP BY activity HAVING COUNT(activity) > 5;
SELECT activity FROM event_log GROUP BY activity HAVING COUNT(*) > 5;
SELECT activity, COUNT(activity) AS frequency FROM event_log GROUP BY activity HAVING COUNT(activity) > 5;
SELECT activity, COUNT(activity) AS num_actions FROM event_log GROUP BY activity HAVING num_actions > 5;
SELECT activity, COUNT(activity) AS num_activities FROM event_log GROUP BY activity, idcase HAVING COUNT(activity) > 3;
SELECT activity FROM event_log GROUP BY activity, idcase HAVING COUNT(activity) > 3;
SELECT activity FROM event_log GROUP BY activity, idcase HAVING COUNT(*) > 3;
SELECT activity FROM event_log GROUP BY activity, idcase HAVING COUNT(*) > 3;
SELECT activity FROM event_log GROUP BY activity, idcase HAVING COUNT(*) > 3;
SELECT activity FROM event_log GROUP BY activity, idcase HAVING COUNT(*) > 3;
SELECT activity FROM event_log GROUP BY activity, idcase HAVING COUNT(activity) > 3;
SELECT activity FROM event_log GROUP BY activity, idcase HAVING COUNT(*) > 3;
SELECT activity FROM event_log GROUP BY activity, idcase HAVING COUNT(*) > 3;
SELECT activity, COUNT(activity) AS frequency FROM event_log GROUP BY activity, idcase HAVING COUNT(activity) > 3;
SELECT activity, COUNT(activity) AS num_actions FROM event_log GROUP BY activity HAVING COUNT(activity) > 3;
SELECT COUNT(*) FROM event_log WHERE idcase = 'declaração 56300';
SELECT COUNT(*) AS trace_size FROM event_log WHERE idcase = 'declaração 56300';
SELECT COUNT(*) FROM event_log WHERE idcase = 'declaração 56300';
SELECT COUNT(*) FROM event_log WHERE idcase = 'declaração 56300';
SELECT COUNT(*) FROM event_log WHERE idcase = 'declaração 56300';
SELECT COUNT(*) FROM event_log WHERE idcase = 'declaração 56300';
SELECT COUNT(*) AS total_actions FROM event_log WHERE idcase = '56300';
SELECT activity, COUNT(activity) AS num_executions FROM event_log WHERE timestamp < '2017-10-01' GROUP BY activity HAVING COUNT(activity) > 1;
SELECT activity, COUNT(activity) AS num_executions FROM event_log WHERE timestamp < '2017-10-01' GROUP BY activity HAVING COUNT(activity) > 1;
SELECT activity, COUNT(activity) AS num_executions FROM event_log WHERE timestamp < '2017-10-01' GROUP BY activity HAVING COUNT(activity) > 1;
SELECT activity, COUNT(activity) AS num_executions FROM event_log WHERE timestamp < '2017-10-01' GROUP BY activity HAVING COUNT(activity) > 1;
SELECT activity, COUNT(activity) AS num_executions FROM event_log WHERE timestamp < '2017-10-01' GROUP BY activity HAVING COUNT(activity) > 1;
SELECT activity, COUNT(activity) AS num_executions FROM event_log WHERE timestamp < '2017-10-01' GROUP BY activity HAVING COUNT(activity) > 1;
SELECT activity, COUNT(activity) AS num_executions FROM event_log WHERE timestamp < '2017-10-01' GROUP BY activity HAVING COUNT(activity) > 1;
SELECT activity, COUNT(activity) AS num_executions FROM event_log WHERE timestamp < '2017-10-01' GROUP BY activity HAVING COUNT(activity) > 1;
SELECT activity, COUNT(activity) AS num_executions FROM event_log WHERE timestamp < '2017-10-01' GROUP BY activity HAVING COUNT(activity) > 1;
SELECT activity, COUNT(*) AS num_executions FROM event_log WHERE timestamp < '2017-10-01' GROUP BY activity;
SELECT activity, COUNT(activity) AS num_occurrences FROM event_log WHERE timestamp < '2017-01-10' GROUP BY activity HAVING COUNT(activity) > 1;
SELECT resource, COUNT(DISTINCT idcase) AS cases_count FROM event_log GROUP BY resource;
SELECT resource, COUNT(DISTINCT idcase) AS instances_of_processes FROM event_log GROUP BY resource;
SELECT resource, COUNT(DISTINCT idcase) AS num_cases FROM event_log GROUP BY resource;
SELECT resource, COUNT(DISTINCT idcase) AS num_cases_worked FROM event_log GROUP BY resource;
SELECT resource, COUNT(DISTINCT idcase) AS num_cases FROM event_log GROUP BY resource;
SELECT resource, COUNT(DISTINCT idcase) AS num_cases_allocated FROM event_log GROUP BY resource;
SELECT resource, COUNT(DISTINCT idcase) AS num_cases FROM event_log GROUP BY resource;
SELECT resource, COUNT(DISTINCT idcase) AS cases_allocated FROM event_log GROUP BY resource;
SELECT resource, COUNT(DISTINCT idcase) AS instances_of_process FROM event_log GROUP BY resource;
SELECT resource, COUNT(DISTINCT idcase) AS instances_of_process FROM event_log GROUP BY resource;
SELECT resource, COUNT(DISTINCT idcase) AS num_declaracoes_trabalhadas FROM event_log GROUP BY resource;
SELECT resource, COUNT(*) AS total_events FROM event_log GROUP BY resource;
SELECT resource, COUNT(*) AS num_allocations FROM event_log GROUP BY resource;
SELECT resource, COUNT(resource) as total_actuations FROM event_log GROUP BY resource;
SELECT resource, COUNT(*) AS total_events FROM event_log GROUP BY resource;
SELECT resource, COUNT(*) AS num_occurrences FROM event_log GROUP BY resource;
SELECT resource, COUNT(*) AS num_activities FROM event_log GROUP BY resource;
SELECT resource, COUNT(*) AS occurrences FROM event_log GROUP BY resource;
SELECT "resource", COUNT(*) AS "interventions" FROM "event_log" GROUP BY "resource"
SELECT DISTINCT idcase FROM event_log WHERE resource IN ('Thomas', 'Diana', 'Sara');
SELECT DISTINCT idcase FROM event_log WHERE resource IN ('Thomas', 'Diana', 'Sara');
SELECT "idcase" FROM "event_log" WHERE "resource" IN ('Thomas', 'Diana', 'Sara');
SELECT DISTINCT idcase FROM event_log WHERE resource = 'Thomas' OR resource = 'Diana' OR resource = 'Sara';
SELECT * FROM event_log WHERE resource = 'Thomas' OR resource = 'Diana' OR resource = 'Sara';
SELECT resource, COUNT(DISTINCT idcase) AS cases_occurred FROM event_log WHERE timestamp BETWEEN '2017-05-01' AND '2017-06-01' GROUP BY resource;
SELECT resource, COUNT(DISTINCT idcase) AS num_cases FROM event_log WHERE timestamp BETWEEN '2017-05-01' AND '2017-06-01' GROUP BY resource;
SELECT resource, COUNT(DISTINCT idcase) AS num_cases FROM event_log WHERE timestamp BETWEEN '2017-05-01' AND '2017-06-01' GROUP BY resource;
SELECT resource, COUNT(DISTINCT idcase) AS cases_occurred FROM event_log WHERE timestamp BETWEEN '2017-05-01' AND '2017-06-01' GROUP BY resource;
SELECT resource, COUNT(DISTINCT idcase) AS cases_occurred FROM event_log WHERE timestamp BETWEEN '2017-05-01' AND '2017-06-01' GROUP BY resource;
SELECT resource, COUNT(DISTINCT idcase) AS instances FROM event_log WHERE timestamp BETWEEN '2017-05-01' AND '2017-06-01' GROUP BY resource;
SELECT resource, COUNT(DISTINCT idcase) AS instances FROM event_log WHERE timestamp BETWEEN '2017-05-01' AND '2017-06-01' GROUP BY resource;
SELECT "resource", COUNT(DISTINCT "idcase") AS "num_cases" FROM "event_log" WHERE "timestamp" BETWEEN '2017-05-01' AND '2017-06-01' GROUP BY "resource"
SELECT resource, COUNT(DISTINCT id) AS num_statements FROM event_log WHERE timestamp >= '2017-05-01' AND timestamp <= '2017-06-01' GROUP BY resource;
SELECT "resource", COUNT(DISTINCT "idcase") AS "casos_associados" FROM "event_log" WHERE "timestamp" BETWEEN '2017-05-01' AND '2017-06-01' GROUP BY "resource"
SELECT resource, COUNT(DISTINCT idcase) AS cases_associated FROM event_log WHERE timestamp BETWEEN '2017-05-01' AND '2017-06-01' GROUP BY resource;
SELECT resource, COUNT(DISTINCT idcase) AS num_cases FROM event_log WHERE timestamp BETWEEN '2017-05-01' AND '2017-06-01' GROUP BY resource;
SELECT activity, resource FROM event_log WHERE resource NOT IN ('Joshua', 'Teresa');
SELECT activity, resource FROM event_log WHERE resource NOT IN ('Joshua', 'Teresa');
SELECT "activity", "resource" FROM "event_log" WHERE "resource" NOT IN ('Joshua', 'Teresa');
SELECT DISTINCT activity, resource FROM event_log WHERE resource NOT IN ('Joshua', 'Teresa') AND idcase IS NOT NULL;
SELECT activity, resource FROM event_log WHERE activity LIKE '%gerenciamento de declarações%' AND resource NOT IN ('Joshua', 'Teresa');
SELECT idcase FROM event_log WHERE activity IN ('início da viagem', 'fim da viagem') GROUP BY idcase HAVING SUM(CASE WHEN activity = 'requisição de pagamento' THEN 1 ELSE 0 END) = 0 AND SUM(CASE WHEN activity = 'pagamento efetuado' THEN 1 ELSE 0 END) = 0;
SELECT idcase FROM event_log GROUP BY idcase HAVING SUM(CASE WHEN activity = 'início da viagem' THEN 1 ELSE 0 END) > 0 AND SUM(CASE WHEN activity = 'fim da viagem' THEN 1 ELSE 0 END) > 0 AND SUM(CASE WHEN activity = 'requisição de pagamento' THEN 1 ELSE 0 END) = 0 AND SUM(CASE WHEN activity = 'pagamento efetuado' THEN 1 ELSE 0 END) = 0;
SELECT idcase FROM event_log WHERE activity IN ('início da viagem', 'fim da viagem') GROUP BY idcase HAVING SUM(CASE WHEN activity = 'requisição de pagamento' THEN 1 ELSE 0 END) = 0 AND SUM(CASE WHEN activity = 'pagamento efetuado' THEN 1 ELSE 0 END) = 0;
SELECT idcase FROM event_log WHERE activity IN ('início da viagem', 'fim da viagem') GROUP BY idcase HAVING SUM(CASE WHEN activity = 'requisição de pagamento' THEN 1 ELSE 0 END) = 0 AND SUM(CASE WHEN activity = 'pagamento efetuado' THEN 1 ELSE 0 END) = 0;
SELECT idcase FROM event_log WHERE activity IN ('início da viagem', 'fim da viagem') GROUP BY idcase HAVING SUM(CASE WHEN activity = 'requisição de pagamento' THEN 1 ELSE 0 END) = 0 AND SUM(CASE WHEN activity = 'pagamento efetuado' THEN 1 ELSE 0 END) = 0;
SELECT idcase FROM event_log WHERE activity IN ('atividade iniciada', 'atividade finalizada') AND cost = 0;
SELECT idcase FROM event_log WHERE activity = 'start_trip' OR activity = 'end_trip' GROUP BY idcase HAVING SUM(CASE WHEN activity = 'request' THEN 1 ELSE 0 END) = 0 AND SUM(CASE WHEN activity = 'payment_made' THEN 1 ELSE 0 END) = 0;
SELECT idcase FROM event_log WHERE activity IN ('start trip', 'end trip') GROUP BY idcase HAVING SUM(CASE WHEN activity = 'request payment' THEN 1 ELSE 0 END) = 0 AND SUM(CASE WHEN activity = 'payment made' THEN 1 ELSE 0 END) = 0;
SELECT id, activity, timestamp, resource, cost, idcase FROM event_log WHERE activity = 'start_trip' OR activity = 'end_trip' AND idcase NOT IN ( SELECT idcase FROM event_log WHERE activity = 'request_payment' OR activity = 'payment_made' )
SELECT * FROM event_log WHERE activity = 'start' OR activity = 'end' AND cost = 0;
SELECT * FROM event_log WHERE resource IS NULL;
SELECT * FROM event_log WHERE resource IS NULL;
SELECT activity FROM event_log WHERE resource IS NULL;
SELECT * FROM event_log WHERE resource IS NULL;
SELECT * FROM event_log WHERE resource IS NULL;
SELECT activity FROM event_log WHERE resource IS NULL;
SELECT * FROM event_log WHERE resource IS NULL;
SELECT * FROM event_log WHERE activity = 'intervenção' AND (resource IS NULL OR resource = '')
SELECT DISTINCT idcase FROM event_log WHERE strftime('%Y-%m', timestamp) < '2017-03' GROUP BY idcase;
SELECT idcase FROM event_log WHERE strftime('%Y-%m', timestamp) < '2017-03';
SELECT idcase FROM event_log WHERE timestamp = (SELECT MIN(timestamp) FROM event_log) AND timestamp < '2017-03-01';
SELECT * FROM event_log WHERE timestamp < '2017-03-01';
SELECT DISTINCT idcase FROM event_log WHERE strftime('%Y-%m', timestamp) < '2017-03' GROUP BY idcase;
SELECT * FROM event_log WHERE timestamp < '2017-03-01' GROUP BY idcase;
SELECT * FROM event_log WHERE timestamp < '2017-03-01';
SELECT * FROM event_log WHERE timestamp < '2017-03-01';
SELECT * FROM event_log WHERE timestamp < '2017-03-01';
SELECT * FROM event_log WHERE timestamp < '2017-03-01';
SELECT idcase FROM event_log WHERE activity = 'início da viagem' AND timestamp >= '2017-03-01' AND timestamp < '2017-04-01';
SELECT idcase FROM event_log WHERE activity = 'início da viagem' AND timestamp BETWEEN '2017-03-01' AND '2017-03-31' ORDER BY timestamp LIMIT 1;
SELECT idcase FROM event_log WHERE activity = 'início da viagem' AND strftime('%Y-%m', timestamp) = '2017-03';
SELECT idcase FROM event_log WHERE activity = 'início da viagem' AND strftime('%Y-%m', timestamp) = '2017-03' ORDER BY timestamp LIMIT 1;
SELECT idcase FROM event_log WHERE activity = 'início da viagem' AND timestamp BETWEEN '2017-03-01' AND '2017-03-31' AND id = (SELECT MIN(id) FROM event_log WHERE idcase = event_log.idcase);
SELECT idcase FROM event_log WHERE activity = 'início da viagem' AND timestamp BETWEEN '2017-03-01' AND '2017-03-31';
SELECT "activity", "timestamp", "resource", "cost", "idcase" FROM event_log WHERE "activity" = 'start_trip' AND strftime('%Y', "timestamp") = '2017' AND strftime('%m', "timestamp") = '03';
SELECT "resource", COUNT(DISTINCT "id") AS "num_activities" FROM "event_log" GROUP BY "resource", "idcase" HAVING COUNT(DISTINCT "id") > 5;
SELECT resource FROM event_log GROUP BY resource, idcase HAVING COUNT(*) > 5;
SELECT resource, COUNT(resource) AS num_activities FROM event_log GROUP BY resource, idcase HAVING COUNT(resource) > 5;
SELECT "resource" FROM "event_log" GROUP BY "resource", "idcase" HAVING COUNT("resource") > 5;
SELECT "resource" FROM event_log GROUP BY "idcase", "resource" HAVING COUNT("id") > 5;
SELECT "resource" FROM event_log GROUP BY "resource", "idcase" HAVING COUNT("id") > 5;
SELECT resource FROM event_log GROUP BY resource, idcase HAVING COUNT(id) > 5;
SELECT "resource", COUNT("resource") AS "num_activities" FROM "event_log" GROUP BY "resource" HAVING COUNT("resource") > 5;
SELECT "resource", COUNT("resource") AS "num_activities" FROM "event_log" GROUP BY "resource" HAVING COUNT("resource") > 5;
SELECT resource FROM event_log GROUP BY resource, idcase HAVING COUNT(DISTINCT activity) > 5;
SELECT "resource" FROM "event_log" GROUP BY "resource" HAVING COUNT("activity") > 5;
SELECT activity, COUNT(activity) AS frequency FROM event_log GROUP BY activity ORDER BY frequency DESC;
SELECT activity, COUNT(activity) AS frequency FROM event_log GROUP BY activity ORDER BY frequency DESC;
SELECT activity, COUNT(activity) AS num_executions FROM event_log GROUP BY activity ORDER BY num_executions DESC;
SELECT activity, COUNT(activity) AS frequency FROM event_log GROUP BY activity ORDER BY frequency DESC;
SELECT "activity" FROM "event_log" GROUP BY "activity" ORDER BY COUNT(*) DESC;
SELECT resource, COUNT(*) AS total_activities FROM event_log WHERE activity = 'declaração final aprovada pelo supervisor' GROUP BY resource ORDER BY total_activities DESC LIMIT 10;
SELECT "resource", COUNT(*) AS "total_activities" FROM "event_log" WHERE "activity" = 'declaração final aprovada pelo supervisor' GROUP BY "resource" ORDER BY "total_activities" DESC LIMIT 10;
SELECT resource, COUNT(*) AS total_approvals FROM event_log WHERE activity = 'approval' AND resource IN ( SELECT resource FROM event_log WHERE activity = 'declaration' AND cost = 0 ) GROUP BY resource ORDER BY total_approvals DESC LIMIT 10;
SELECT resource, COUNT(*) AS num_activities FROM event_log WHERE activity = 'declaração final aprovada pelo supervisor' GROUP BY resource ORDER BY num_activities DESC;
SELECT "resource", COUNT(*) AS "num_associations" FROM "event_log" WHERE "activity" = 'declaração final aprovada pelo supervisor' GROUP BY "resource" ORDER BY "num_associations" DESC;
SELECT "resource", COUNT(*) AS "num_times" FROM "event_log" WHERE "activity" = 'declaração final aprovada pelo supervisor' GROUP BY "resource" ORDER BY COUNT(*) DESC;
SELECT resource, COUNT(*) AS num_activities FROM event_log WHERE activity = 'declaração final aprovada pelo supervisor' GROUP BY resource ORDER BY num_activities DESC;
SELECT resource FROM event_log WHERE activity = 'aprovar declaração' AND resource IN ( SELECT resource FROM event_log WHERE activity = 'posição de supervisor' ) ORDER BY resource;
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE activity = 'declaração aprovada pelo responsável pelo orçamento' AND (resource = 'Eugene' OR resource = 'Marie');
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE (resource = 'Eugene' OR resource = 'Marie') AND activity = 'declaração aprovada pelo responsável pelo orçamento';
SELECT COUNT(DISTINCT idcase) AS quantidade_casos FROM event_log WHERE activity = 'declaração aprovada pelo responsável pelo orçamento' AND (resource = 'Eugene' OR resource = 'Marie');
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE activity = 'declaração aprovada pelo responsável pelo orçamento' AND (resource = 'Eugene' OR resource = 'Marie');
SELECT COUNT(DISTINCT idcase) AS casos_relacionados FROM event_log WHERE activity = 'declaração aprovada pelo responsável pelo orçamento' AND (resource = 'Eugene' OR resource = 'Marie');
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE activity = 'declaração aprovada pelo responsável pelo orçamento' AND (resource = 'Eugine' OR resource = 'Marie');
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE activity = 'declaração aprovada pelo responsável pelo orçamento' AND (resource = 'Eugine' OR resource = 'Marie');
SELECT COUNT(*) AS "Quantidade de declarações aprovadas" FROM event_log WHERE activity = 'approval' AND resource IN ('Eugene', 'Marie') AND cost > 0;
SELECT COUNT(*) FROM event_log WHERE resource = 'Eugene' OR resource = 'Marie' AND activity = 'approved';
SELECT DISTINCT activity FROM event_log WHERE idcase = 'declaração 49464' AND activity NOT IN ( SELECT DISTINCT activity FROM event_log WHERE idcase = 'declaração 76667' );
SELECT DISTINCT activity FROM event_log WHERE idcase = 'declaração 49464' AND activity NOT IN ( SELECT activity FROM event_log WHERE idcase = 'declaração 76667' )
SELECT DISTINCT activity FROM event_log WHERE idcase = 'declaração 49464' AND activity NOT IN ( SELECT activity FROM event_log WHERE idcase = 'declaração 76667' );
SELECT A declaração 49464 criou uma tabela chamada "event_log" com cinco colunas: "id" (int), "activity" (texto), "timestamp" (data e hora), "resource" (texto) e "cost" (numérico). Além disso, definiu a coluna "id" como chave primária da tabela. Por outro lado, a declaração 76667 não foi fornecida, portanto não é possível determinar o que ocorreu nessa declaração em comparação com a declaração 49464.
SELECT "resource", COUNT(*) AS "num_occurrences" FROM "event_log" WHERE "activity" = 'declaração requisitada pelo funcionário' GROUP BY "resource" HAVING COUNT(*) > 2;
SELECT resource, COUNT(*) AS count FROM event_log WHERE activity = 'declaração requisitada pelo funcionário' GROUP BY resource HAVING COUNT(*) > 2;
SELECT "resource", COUNT(*) AS "count" FROM "event_log" WHERE "activity" = 'declaração requisitada pelo funcionário' GROUP BY "resource" HAVING COUNT(*) > 2;
SELECT "resource", COUNT(*) AS "count" FROM "event_log" WHERE "activity" = 'declaração requisitada pelo funcionário' GROUP BY "resource" HAVING COUNT(*) > 2;
SELECT "resource", COUNT(*) AS "num_occurrences" FROM "event_log" WHERE "activity" = 'declaração requisitada pelo funcionário' GROUP BY "resource" HAVING COUNT(*) > 2;
SELECT resource, COUNT(*) AS num_events FROM event_log WHERE activity = 'declaração requisitada pelo funcionário' GROUP BY resource HAVING COUNT(*) > 2;
SELECT resource AS "Nome do Funcionário", COUNT(*) AS "Quantidade de Requisições" FROM event_log WHERE activity = 'requisição de declaração' GROUP BY resource HAVING COUNT(*) > 2;
SELECT idcase FROM event_log WHERE activity = 'requisição de pagamento' AND timestamp BETWEEN '2017-05-01' AND '2017-05-10';
SELECT idcase FROM event_log WHERE activity = 'requisição de pagamento' AND timestamp >= '2017-05-01' AND timestamp < '2017-05-11'
SELECT idcase FROM event_log WHERE activity = 'requisição de pagamento' AND timestamp >= '2017-05-01' AND timestamp <= '2017-05-10';
SELECT "idcase" FROM "event_log" WHERE "activity" = 'requisição de pagamento' AND "timestamp" BETWEEN '2017-05-01' AND '2017-05-10';
SELECT DISTINCT idcase FROM event_log WHERE activity = 'requisição de pagamento' AND timestamp BETWEEN '2017-05-01' AND '2017-05-10';
SELECT idcase FROM event_log WHERE activity = 'requisição de pagamento' AND timestamp BETWEEN '2017-05-01' AND '2017-05-10';
SELECT idcase FROM event_log WHERE activity = 'payment' AND timestamp BETWEEN '2017-05-01' AND '2017-05-10';
SELECT activity, timestamp FROM event_log WHERE activity = 'requisição de pagamento' AND timestamp BETWEEN '2017-05-01' AND '2017-05-10';
SELECT idcase, COUNT(DISTINCT resource) AS num_resources FROM event_log GROUP BY idcase;
SELECT idcase, COUNT(DISTINCT resource) AS num_resources FROM event_log GROUP BY idcase;
SELECT idcase, COUNT(DISTINCT resource) AS num_resources FROM event_log GROUP BY idcase;
SELECT idcase, COUNT(DISTINCT resource) AS quantidade_recursos FROM event_log GROUP BY idcase;
SELECT idcase, COUNT(DISTINCT resource) AS num_resources FROM event_log GROUP BY idcase;
SELECT idcase, COUNT(DISTINCT resource) AS num_resources FROM event_log GROUP BY idcase;
SELECT idcase, SUM(cost) AS total_cost FROM event_log GROUP BY idcase;
SELECT COUNT(DISTINCT resource) AS num_employees, activity FROM event_log GROUP BY activity;
SELECT idcase FROM event_log WHERE resource = 'Christopher' GROUP BY idcase HAVING COUNT(DISTINCT activity) = 1;
SELECT idcase FROM event_log WHERE resource = 'Christopher' GROUP BY idcase HAVING COUNT(DISTINCT activity) = 1;
SELECT idcase FROM event_log WHERE resource = 'Christopher' GROUP BY idcase HAVING COUNT(DISTINCT resource) = 1;
SELECT idcase FROM event_log WHERE resource = 'Christopher' GROUP BY idcase HAVING COUNT(DISTINCT activity) = 1;
SELECT idcase FROM event_log WHERE resource = 'Christopher' GROUP BY idcase HAVING COUNT(DISTINCT resource) = 1;
SELECT idcase FROM event_log WHERE resource = 'Christopher' GROUP BY idcase HAVING COUNT(DISTINCT activity) = (SELECT COUNT(DISTINCT activity) FROM event_log WHERE resource = 'Christopher')
SELECT idcase FROM event_log WHERE resource = 'Christopher' GROUP BY idcase HAVING COUNT(DISTINCT activity) = (SELECT COUNT(DISTINCT activity) FROM event_log WHERE resource = 'Christopher')
SELECT "activity", "timestamp", "resource", "cost", "idcase" FROM event_log WHERE resource = 'Christopher';
SELECT idcase, resource FROM event_log GROUP BY idcase, resource HAVING COUNT(DISTINCT activity) = COUNT(DISTINCT resource)
SELECT idcase, resource FROM event_log GROUP BY idcase, resource HAVING COUNT(DISTINCT activity) = (SELECT COUNT(DISTINCT activity) FROM event_log)
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(DISTINCT resource) = 1;
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(DISTINCT resource) = 1;
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(DISTINCT resource) = 1;
SELECT idcase, resource FROM event_log GROUP BY idcase, resource HAVING COUNT(DISTINCT activity) = 1;
SELECT resource, COUNT(DISTINCT idcase) AS num_processes_executed FROM event_log GROUP BY resource HAVING COUNT(DISTINCT idcase) > 1;
SELECT DISTINCT resource FROM event_log GROUP BY resource HAVING COUNT(DISTINCT activity) = 1;
SELECT idcase, COUNT(DISTINCT DATE(timestamp)) AS num_events FROM event_log GROUP BY idcase HAVING num_events > 1;
SELECT idcase, COUNT(DISTINCT DATE(timestamp)) AS events_per_day FROM event_log GROUP BY idcase HAVING events_per_day > 1;
SELECT idcase FROM event_log WHERE DATE(timestamp) = DATE(timestamp) GROUP BY idcase HAVING COUNT(DISTINCT DATE(timestamp)) > 1;
SELECT idcase FROM event_log GROUP BY idcase, DATE(timestamp) HAVING COUNT(DISTINCT DATE(timestamp)) > 1;
SELECT idcase FROM event_log GROUP BY idcase, DATE(timestamp) HAVING COUNT(DISTINCT DATE(timestamp)) > 1;
SELECT activity, timestamp, COUNT(DISTINCT id) AS interventions FROM event_log GROUP BY activity, timestamp HAVING COUNT(DISTINCT id) > 1;
SELECT activity, timestamp, COUNT(*) AS interventions FROM event_log GROUP BY activity, timestamp HAVING COUNT(*) > 1;
SELECT resource, idcase, COUNT(*) AS num_events FROM event_log WHERE cost IS NULL GROUP BY resource, idcase;
SELECT resource, COUNT(*) AS num_events_with_null_cost FROM event_log WHERE cost IS NULL GROUP BY resource;
SELECT idcase, resource, COUNT(*) AS num_events FROM event_log WHERE cost IS NULL GROUP BY idcase, resource;
SELECT resource, COUNT(*) AS num_events_with_null_cost FROM event_log WHERE cost = 0 GROUP BY resource;
SELECT resource, idcase, COUNT(*) AS num_events FROM event_log WHERE cost = 0 GROUP BY resource, idcase;
SELECT resource, idcase, COUNT(*) AS num_events FROM event_log WHERE cost IS NULL GROUP BY resource, idcase;
SELECT resource, COUNT(*) AS interventions_without_cost FROM event_log WHERE activity = 'intervention' AND cost IS NULL GROUP BY resource;
SELECT resource, COUNT(*) AS interventions_without_cost FROM event_log WHERE cost IS NULL GROUP BY resource;
SELECT * FROM event_log WHERE activity = 'permissão rejeitada pelo diretor';
SELECT activity FROM event_log WHERE activity = 'permissão rejeitada pelo diretor';
SELECT * FROM event_log WHERE activity = 'permissão rejeitada pelo diretor';
SELECT * FROM event_log WHERE activity = 'permissão rejeitada pelo diretor';
SELECT * FROM event_log WHERE activity = 'permissão rejeitada pelo diretor';
SELECT DISTINCT activity FROM event_log WHERE idcase IN ( SELECT idcase FROM event_log WHERE activity = 'permissão rejeitada pelo diretor' )
SELECT activity FROM event_log WHERE activity LIKE '%permissão rejeitada%' AND resource = 'diretor';
SELECT activity FROM event_log WHERE activity = 'diretor rejeitando permissão';
SELECT DATE(timestamp) AS day, SUM(cost) AS total_cost FROM event_log GROUP BY day;
SELECT DATE(timestamp) AS day, SUM(cost) AS total_cost FROM event_log GROUP BY day;
SELECT strftime('%Y-%m-%d', timestamp) as day, SUM(cost) as total_cost FROM event_log GROUP BY day;
SELECT DATE(timestamp) AS day, SUM(cost) AS total_cost FROM event_log GROUP BY day;
SELECT strftime('%Y-%m-%d', timestamp) as day, SUM(cost) as total_cost FROM event_log GROUP BY day;
SELECT DATE(timestamp) AS day, SUM(cost) AS total_cost FROM event_log GROUP BY day;
SELECT DATE(timestamp) AS day, COUNT(*) AS total_events FROM event_log GROUP BY day;
SELECT DATE(timestamp) AS day, SUM(cost) AS total_cost FROM event_log WHERE activity = 'tratamento_declaracoes' GROUP BY day;
SELECT activity FROM event_log WHERE cost > 1000 AND (resource = 'supervisor' OR resource = 'diretor');
SELECT activity FROM event_log WHERE activity IN ('supervisor', 'diretor') AND cost > 1000;
SELECT activity FROM event_log WHERE cost > 1000 AND (resource = 'supervisor' OR resource = 'diretor associado');
SELECT activity FROM event_log WHERE (resource = 'supervisor' OR resource = 'diretor') AND cost > 1000;
SELECT activity FROM event_log WHERE cost > 1000 AND (resource = 'supervisor' OR resource = 'diretor');
SELECT activity FROM event_log WHERE (activity = 'supervisor' OR activity = 'diretor') AND cost > 1000;
SELECT idcase, COUNT(id) AS quantidade_eventos FROM event_log GROUP BY idcase;
SELECT idcase, COUNT(id) AS quantidade_eventos FROM event_log GROUP BY idcase;
SELECT idcase, COUNT(id) AS num_events FROM event_log GROUP BY idcase;
SELECT idcase, COUNT(id) AS event_count FROM event_log GROUP BY idcase;
SELECT idcase, COUNT(id) AS quantidade_eventos FROM event_log GROUP BY idcase;
SELECT idcase, COUNT(id) as num_events FROM event_log GROUP BY idcase;
SELECT activity, COUNT(*) AS interventions FROM event_log GROUP BY activity;
SELECT resource, COUNT(activity) AS tasks_assigned FROM event_log GROUP BY resource;
SELECT resource, COUNT(activity) AS total_tasks FROM event_log GROUP BY resource;
SELECT resource, COUNT(DISTINCT activity) AS num_activities FROM event_log GROUP BY resource;
SELECT resource, COUNT(DISTINCT activity) AS activity_count FROM event_log GROUP BY resource;
SELECT resource, COUNT(DISTINCT activity) AS num_activities FROM event_log GROUP BY resource;
SELECT "resource", COUNT("id") AS "quantidade_tarefas" FROM "event_log" GROUP BY "resource";
SELECT resource, COUNT(activity) AS actions_count FROM event_log GROUP BY resource;
SELECT idcase, COUNT(DISTINCT activity) AS activities_involved FROM event_log WHERE resource = 'Alexis' GROUP BY idcase;
SELECT "idcase", COUNT(DISTINCT "activity") AS "atividades_envolvidas" FROM "event_log" WHERE "resource" = 'Alexis' GROUP BY "idcase";
SELECT idcase, resource, COUNT(activity) AS num_activities FROM event_log WHERE resource = 'Alexis' GROUP BY idcase;
SELECT idcase, resource, COUNT(activity) AS num_activities FROM event_log WHERE resource = 'Alexis' GROUP BY idcase;
SELECT idcase, COUNT(DISTINCT activity) AS num_activities FROM event_log WHERE resource = 'Alexis' GROUP BY idcase;
SELECT resource, idcase, COUNT(DISTINCT activity) AS num_activities FROM event_log WHERE resource = 'Alexis' GROUP BY resource, idcase;
SELECT resource, idcase, COUNT(activity) AS num_tasks FROM event_log WHERE resource = 'Alexis' GROUP BY resource, idcase;
SELECT activity, COUNT(DISTINCT idcase) AS num_actions FROM event_log WHERE resource = 'Alexis' GROUP BY activity;
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE activity = 'permissão final aprovada pelo supervisor' AND idcase IN (SELECT idcase FROM event_log WHERE activity = 'início da viagem');
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE activity = 'permissão final aprovada pelo supervisor' AND timestamp < (SELECT MIN(timestamp) FROM event_log WHERE activity = 'início da viagem');
SELECT COUNT(DISTINCT e1."idcase") FROM event_log e1 JOIN event_log e2 ON e1."idcase" = e2."idcase" WHERE e1."activity" = 'início da viagem' AND e2."activity" = 'permissão final aprovada pelo supervisor' AND e1."timestamp" < e2."timestamp";
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE activity = 'permissão final aprovada pelo supervisor' AND timestamp < (SELECT MIN(timestamp) FROM event_log WHERE activity = 'início da viagem');
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE activity = 'início da viagem' AND timestamp > ( SELECT MAX(timestamp) FROM event_log WHERE activity = 'permissão final aprovada pelo supervisor' )
SELECT COUNT(*) FROM event_log e1 JOIN event_log e2 ON e1.idcase = e2.idcase WHERE e1.activity = 'start_trip' AND e2.activity = 'permission_approval' AND e2.resource = 'supervisor' AND e1.timestamp > e2.timestamp;
SELECT COUNT(*) FROM event_log WHERE activity = 'permissão com aprovação final do supervisor' AND timestamp < (SELECT MIN(timestamp) FROM event_log WHERE activity = 'início da viagem');
SELECT COUNT(*) FROM event_log WHERE activity = 'approval' AND idcase IN ( SELECT idcase FROM event_log WHERE activity = 'start_trip' )
SELECT activity, timestamp FROM event_log WHERE activity = 'fim da viagem' AND timestamp NOT LIKE '2017-12-12%'
SELECT * FROM event_log WHERE activity = 'fim da viagem' AND timestamp < '2017-12-12' OR activity = 'fim da viagem' AND timestamp > '2017-12-12';
SELECT * FROM event_log WHERE activity = 'fim da viagem' AND timestamp < '2017-12-12' OR timestamp > '2017-12-12';
SELECT * FROM event_log WHERE activity = 'fim da viagem' AND timestamp < '2017-12-12' OR timestamp > '2017-12-12';
SELECT * FROM event_log WHERE timestamp NOT LIKE '2017-12-12%' AND activity = 'fim da viagem';
SELECT * FROM event_log WHERE activity = 'fim da viagem' AND timestamp NOT LIKE '2017-12-12%';
SELECT DISTINCT activity FROM event_log WHERE timestamp NOT LIKE '2017-12-12%' AND activity LIKE '%fim de viagem%';
SELECT resource, COUNT(*) AS total_events FROM event_log GROUP BY resource;
SELECT resource, COUNT(*) AS num_events FROM event_log GROUP BY resource;
SELECT resource, COUNT(*) AS total_events FROM event_log GROUP BY resource;
SELECT resource, COUNT(DISTINCT id) AS num_execucoes FROM event_log GROUP BY resource;
SELECT resource, COUNT(*) AS total_events FROM event_log GROUP BY resource;
SELECT resource, COUNT(DISTINCT idcase) AS num_cases FROM event_log WHERE activity = 'processamento de declarações' GROUP BY resource;
SELECT resource, COUNT(activity) AS total_actions FROM event_log WHERE activity = 'declarations' GROUP BY resource;
SELECT resource, COUNT(DISTINCT activity) AS num_activities FROM event_log GROUP BY resource;
SELECT resource, COUNT(DISTINCT activity) AS num_activities FROM event_log GROUP BY resource;
SELECT resource, COUNT(DISTINCT activity) AS num_activities FROM event_log GROUP BY resource;
SELECT resource, COUNT(DISTINCT activity) AS num_activities FROM event_log GROUP BY resource;
SELECT resource, COUNT(activity) AS activity_count FROM event_log GROUP BY resource;
SELECT resource, COUNT(DISTINCT activity) AS num_actions FROM event_log GROUP BY resource;
SELECT DISTINCT activity FROM event_log WHERE resource = 'Virginia' AND activity NOT IN ( SELECT DISTINCT activity FROM event_log WHERE resource = 'Virginia' )
SELECT DISTINCT activity FROM event_log WHERE resource != 'Virginia';
SELECT DISTINCT activity FROM event_log WHERE resource = 'Virginia';
SELECT DISTINCT activity FROM event_log WHERE resource <> 'Virginia';
SELECT DISTINCT activity FROM event_log WHERE resource != 'Virginia';
SELECT DISTINCT activity FROM event_log WHERE resource = 'Virgínia';
SELECT AVG(cost) FROM event_log WHERE activity = 'rejeitada';
SELECT AVG(cost) FROM event_log WHERE activity = 'rejeitada';
SELECT AVG(cost) FROM event_log WHERE idcase IN ( SELECT idcase FROM event_log WHERE activity = 'rejeitada' )
SELECT AVG(cost) AS "Custo Médio" FROM event_log WHERE idcase IN ( SELECT idcase FROM event_log WHERE activity = 'rejeitada' )
SELECT AVG(cost) FROM event_log WHERE activity = 'rejeitada';
SELECT AVG(cost) FROM event_log WHERE activity = 'declaração de viagens' AND idcase IN ( SELECT idcase FROM event_log WHERE activity = 'rejeição' )
SELECT AVG(cost) FROM event_log WHERE activity LIKE '%rejeitada%' AND activity LIKE '%viagem%';
SELECT idcase, MAX(timestamp) - MIN(timestamp) AS duration FROM event_log WHERE activity = 'declaração aprovada pelo supervisor' GROUP BY idcase;
SELECT idcase, MAX(timestamp) - MIN(timestamp) AS duration FROM event_log WHERE activity = 'declaração aprovada pelo supervisor' GROUP BY idcase;
SELECT idcase, MAX(timestamp) - MIN(timestamp) AS duration FROM event_log WHERE activity = 'declaração aprovada pelo supervisor' GROUP BY idcase;
SELECT idcase, MAX(timestamp) - MIN(timestamp) AS duracao FROM event_log WHERE activity = 'declaração aprovada pelo supervisor' GROUP BY idcase;
SELECT idcase, MAX(timestamp) - MIN(timestamp) AS duration FROM event_log WHERE activity = 'declaração aprovada pelo supervisor' GROUP BY idcase;
SELECT AVG(cost) AS average_cost FROM event_log WHERE activity = 'declaração aprovada pelo supervisor';
SELECT SUM(cost) AS "Tempo gasto para uma declaração ser aprovada pelo supervisor" FROM event_log WHERE activity = 'approval' AND resource = 'supervisor';
SELECT COUNT(*) FROM event_log WHERE activity = 'declaração rejeitada pelo pré-aprovador';
SELECT COUNT(*) FROM event_log WHERE activity = 'declaração rejeitada pelo pré-aprovador';
SELECT COUNT(*) FROM event_log WHERE activity = 'declaração rejeitada pelo pré-aprovador';
SELECT COUNT(*) FROM event_log WHERE activity = 'declaração rejeitada pelo pré-aprovador';
SELECT COUNT(*) FROM event_log WHERE activity = 'declaração rejeitada pelo pré-aprovador';
SELECT COUNT(*) FROM event_log WHERE activity = 'declaração rejeitada pelo pré-aprovador';
SELECT COUNT(*) FROM event_log WHERE activity = 'rejeição na fase de pré-aprovação';
SELECT COUNT(*) FROM event_log WHERE activity = 'rejeitar declaração' AND resource = 'pré-aprovador';
SELECT idcase, timestamp FROM event_log WHERE activity = 'fim da viagem' ORDER BY resource;
SELECT idcase, timestamp FROM event_log WHERE activity = 'fim da viagem' ORDER BY resource;
SELECT "resource", "idcase", "timestamp" FROM event_log WHERE "activity" = 'fim da viagem' ORDER BY "resource";
SELECT idcase, timestamp FROM event_log WHERE activity = 'fim da viagem' ORDER BY resource;
SELECT activity, timestamp, resource FROM event_log WHERE activity = 'Fim da viagem' ORDER BY resource;
SELECT idcase, MAX(timestamp) AS data_finalizacao FROM event_log WHERE activity = 'fim_viagem' GROUP BY idcase ORDER BY resource;
SELECT idcase, COUNT(id) AS total_events FROM event_log GROUP BY idcase;
SELECT idcase, COUNT(*) AS num_events FROM event_log GROUP BY idcase;
SELECT idcase, COUNT(id) AS total_events FROM event_log GROUP BY idcase;
SELECT idcase, COUNT(id) AS total_events FROM event_log GROUP BY idcase;
SELECT idcase, COUNT(*) AS event_count FROM event_log GROUP BY idcase;
SELECT idcase, COUNT(*) AS event_count FROM event_log GROUP BY idcase;
SELECT idcase, COUNT(activity) AS total_actions FROM event_log WHERE activity = 'declaration of travel' GROUP BY idcase;
SELECT idcase, COUNT(DISTINCT activity) AS interventions FROM event_log WHERE activity LIKE '%declaração de viagem%' GROUP BY idcase;
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE activity = 'fim da viagem' AND timestamp BETWEEN '2017-05-02' AND '2017-05-12';
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE activity = 'fim da viagem' AND timestamp BETWEEN '2017-05-02' AND '2017-05-12';
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE activity = 'fim da viagem' AND timestamp BETWEEN '2017-05-02' AND '2017-05-12';
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE activity = 'fim da viagem' AND timestamp BETWEEN '2017-05-02' AND '2017-05-12';
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE activity = 'fim da viagem' AND timestamp BETWEEN '2017-05-02' AND '2017-05-12';
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE activity = 'fim da viagem' AND timestamp BETWEEN '2017-05-02' AND '2017-05-12';
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE activity = 'finalized' AND timestamp BETWEEN '2017-05-02' AND '2017-05-12';
SELECT COUNT(*) FROM event_log WHERE activity = 'final da viagem' AND timestamp BETWEEN '2017-05-02' AND '2017-05-12';
SELECT idcase, resource, id, MAX(timestamp) FROM event_log WHERE activity = 'envio de lembrete' GROUP BY idcase, resource, id ORDER BY MAX(timestamp) ASC;
SELECT "idcase", "resource", "id", "timestamp" FROM event_log WHERE activity = 'envio de lembrete' ORDER BY timestamp;
SELECT "idcase", "resource", "id", "timestamp" FROM event_log WHERE activity = 'envio de lembrete' ORDER BY timestamp;
SELECT idcase, resource, activity, timestamp FROM event_log WHERE activity = 'envio de lembrete' ORDER BY timestamp;
SELECT idcase, id, resource, timestamp FROM event_log WHERE activity = 'envio de lembrete' ORDER BY timestamp;
SELECT idcase, resource, id, timestamp FROM event_log WHERE activity = 'envio de lembrete' ORDER BY timestamp;
SELECT idcase, resource, id, timestamp FROM event_log WHERE activity = 'envio de lembretes' ORDER BY timestamp;
SELECT DISTINCT resource FROM event_log ORDER BY resource ASC;
SELECT DISTINCT resource FROM event_log ORDER BY resource ASC;
SELECT DISTINCT resource FROM event_log ORDER BY resource ASC;
SELECT DISTINCT resource FROM event_log ORDER BY resource;
SELECT DISTINCT resource FROM event_log ORDER BY resource ASC;
SELECT DISTINCT resource FROM event_log ORDER BY resource ASC;
SELECT DISTINCT resource FROM event_log WHERE activity = 'declaração' ORDER BY resource ASC;
SELECT DISTINCT "resource" FROM "event_log" GROUP BY "resource" HAVING COUNT(DISTINCT "idcase") > 200;
SELECT "resource" FROM event_log GROUP BY "resource" HAVING COUNT(DISTINCT "idcase") > 200;
SELECT "resource" FROM event_log WHERE activity = "declaração de viagem" GROUP BY "resource" HAVING COUNT(*) > 200;
SELECT DISTINCT resource FROM event_log WHERE activity = 'declaração de viagem' GROUP BY resource HAVING COUNT(*) > 200;
SELECT resource FROM event_log WHERE activity = 'declaração de viagem' GROUP BY resource HAVING COUNT(*) > 200;
SELECT resource FROM event_log WHERE activity = 'declaration of travel' GROUP BY resource HAVING COUNT(*) > 200;
SELECT "resource" FROM "event_log" WHERE "activity" = 'declaração de viagem' GROUP BY "resource" HAVING COUNT("resource") > 200;
SELECT COUNT(DISTINCT resource) AS total_recursos FROM event_log;
SELECT COUNT(DISTINCT resource) AS total_recursos FROM event_log;
SELECT COUNT(DISTINCT resource) FROM event_log WHERE activity = 'tratamento de declarações';
SELECT COUNT(DISTINCT resource) FROM event_log WHERE activity = 'tratamento de declarações';
SELECT COUNT(DISTINCT resource) FROM event_log; 
SELECT COUNT(DISTINCT resource) AS total_pessoas_associadas FROM event_log;
SELECT COUNT(DISTINCT resource) FROM event_log WHERE activity = 'gerenciamento de declarações';
SELECT COUNT(DISTINCT resource) FROM event_log WHERE activity = 'tratamento de declarações';
SELECT COUNT(DISTINCT resource) FROM event_log WHERE activity = 'processamento de declarações';
SELECT "activity" FROM "event_log" WHERE "activity" LIKE '%declaração%';
SELECT activity FROM event_log WHERE activity LIKE '%declaração%';
SELECT activity FROM event_log WHERE activity LIKE '%declaração%';
SELECT "activity" FROM "event_log" WHERE "activity" LIKE '%declaração%';
SELECT activity FROM event_log WHERE activity LIKE '%declaração%';
SELECT activity FROM event_log WHERE activity LIKE '%declaração%';
SELECT DISTINCT activity FROM event_log WHERE activity LIKE '%declaração%' AND idcase = 'viagem';
SELECT activity FROM event_log WHERE activity LIKE '%declaração%';
SELECT activity, AVG(cost) AS average_cost FROM event_log GROUP BY activity;
SELECT activity, AVG(cost) AS average_cost FROM event_log GROUP BY activity;
SELECT activity, AVG(cost) AS average_cost FROM event_log GROUP BY activity;
SELECT activity, AVG(cost) AS average_cost FROM event_log GROUP BY activity;
SELECT activity, AVG(cost) AS average_cost FROM event_log GROUP BY activity;
SELECT activity, AVG(cost) AS average_cost FROM event_log GROUP BY activity;
SELECT activity, AVG(cost) AS average_cost FROM event_log GROUP BY activity;
SELECT activity, AVG(cost) AS average_cost FROM event_log GROUP BY activity;
SELECT activity, AVG(cost) AS average_cost FROM event_log WHERE activity LIKE '%processamento das declarações de viagem%' GROUP BY activity;
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE cost IS NULL;
SELECT COUNT(*) FROM event_log WHERE cost IS NULL; 
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE cost IS NULL; 
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE cost IS NULL;
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE cost = 0;
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE cost = 0;
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE cost = 0;
SELECT COUNT(*) FROM event_log WHERE cost IS NULL; 
SELECT COUNT(*) FROM event_log WHERE cost = 0; 
SELECT DISTINCT activity FROM event_log WHERE activity LIKE '%permissão%' OR activity LIKE '%declaração%';
SELECT DISTINCT activity FROM event_log WHERE activity LIKE '%permisão%' OR activity LIKE '%declaração%';
SELECT DISTINCT activity FROM event_log WHERE activity LIKE '%permissão%' OR activity LIKE '%declaração%';
SELECT DISTINCT activity FROM event_log WHERE activity LIKE '%permissão%' OR activity LIKE '%declaração%';
SELECT DISTINCT activity FROM event_log WHERE activity LIKE '%permissão%' OR activity LIKE '%declaração%';
SELECT DISTINCT activity FROM event_log WHERE activity LIKE '%permissão%' OR activity LIKE '%declaração%';
SELECT activity FROM event_log WHERE activity LIKE '%permissão%' OR activity LIKE '%declaração%';
SELECT activity FROM event_log WHERE activity LIKE '%permissão%' OR activity LIKE '%declaração%';
SELECT No processo de gerenciamento de declarações em um banco de dados, as ações relacionadas a permissões incluem conceder ou revogar permissões de acesso a determinados usuários ou grupos de usuários para realizar operações específicas, como SELECT, INSERT, UPDATE, DELETE, entre outras, em tabelas ou colunas específicas. Já as declarações explícitas referem-se à definição de restrições ou condições específicas para garantir a integridade dos dados, como restrições de chave primária, chave estrangeira, restrições de verificação, entre outras. Essas declarações explícitas são utilizadas para garantir que os dados armazenados no banco de dados atendam a determinadas regras ou critérios estabelecidos.
SELECT COUNT(*) FROM event_log WHERE activity = 'declaração rejeitada pelo diretor';
SELECT COUNT(*) FROM event_log WHERE activity = 'declaração rejeitada pelo diretor';
SELECT COUNT(*) FROM event_log WHERE activity = 'declaração rejeitada pelo diretor';
SELECT COUNT(*) FROM event_log WHERE activity = 'declaração rejeitada pelo diretor';
SELECT COUNT(*) FROM event_log WHERE activity = 'declaração rejeitada pelo diretor';
SELECT COUNT(*) FROM event_log WHERE activity = 'declaração rejeitada pelo diretor'
SELECT COUNT(*) FROM event_log WHERE activity = 'declaração de rejeição de responsabilidade da direção';
SELECT AVG(cost) AS "Custo Médio do Evento" FROM event_log;
SELECT AVG(cost) AS average_cost FROM event_log;
SELECT AVG(cost) AS average_cost FROM event_log;
SELECT AVG(cost) AS average_cost FROM event_log;
SELECT AVG(cost) AS average_cost FROM event_log;
SELECT AVG(cost) AS average_cost FROM event_log;
SELECT AVG(cost) AS "Custo Médio da Execução de uma Atividade" FROM event_log;
SELECT AVG(cost) as average_cost FROM event_log;
SELECT AVG(cost) AS average_cost FROM event_log;
SELECT AVG(cost) AS "Custo Médio das Ações" FROM event_log WHERE activity = 'processamento de declaração';
SELECT resource, COUNT(DISTINCT idcase) AS num_cases FROM event_log GROUP BY resource;
SELECT resource, COUNT(DISTINCT idcase) AS num_cases FROM event_log GROUP BY resource;
SELECT resource, COUNT(DISTINCT idcase) AS num_cases FROM event_log GROUP BY resource;
SELECT resource, COUNT(DISTINCT idcase) AS num_cases FROM event_log GROUP BY resource;
SELECT resource, COUNT(DISTINCT idcase) AS num_cases FROM event_log GROUP BY resource;
SELECT resource, COUNT(DISTINCT idcase) AS num_cases FROM event_log GROUP BY resource;
SELECT "resource", COUNT(DISTINCT "idcase") AS "quantidade_de_casos_diferentes" FROM "event_log" GROUP BY "resource"
SELECT resource, COUNT(DISTINCT activity) AS num_activities FROM event_log GROUP BY resource;
SELECT COUNT(*) FROM event_log WHERE resource = 'Peter';
SELECT COUNT(*) FROM event_log WHERE resource = 'Peter';
SELECT COUNT(*) FROM event_log WHERE resource = 'Peter';
SELECT COUNT(activity) AS actions_performed FROM event_log WHERE resource = 'Peter';
SELECT resource FROM event_log GROUP BY resource HAVING COUNT(DISTINCT idcase) > 3;
SELECT resource FROM event_log GROUP BY resource HAVING COUNT(idcase) > 3;
SELECT resource FROM event_log GROUP BY resource HAVING COUNT(DISTINCT idcase) > 3;
SELECT COUNT(DISTINCT idcase) AS num_cases, resource FROM event_log GROUP BY resource HAVING num_cases > 3;
SELECT resource FROM event_log GROUP BY resource HAVING COUNT(DISTINCT idcase) > 3;
SELECT resource FROM event_log GROUP BY resource HAVING COUNT(DISTINCT idcase) > 3;
SELECT idcase FROM event_log WHERE activity = 'requisição de pagamento' GROUP BY idcase ORDER BY COUNT(*) ASC;
SELECT idcase FROM event_log WHERE activity = 'requisição de pagamento' GROUP BY idcase ORDER BY COUNT(*) ASC;
SELECT idcase FROM event_log WHERE activity LIKE '%requisição de pagamento%' GROUP BY idcase ORDER BY COUNT(id) ASC;
SELECT "idcase" FROM event_log WHERE activity = 'requisição de pagamento' GROUP BY idcase ORDER BY COUNT(*) ASC;
SELECT idcase FROM event_log WHERE activity = 'requisição de pagamento' GROUP BY idcase ORDER BY COUNT(id) ASC;
SELECT idcase FROM event_log WHERE activity = 'requisição de pagamento' GROUP BY idcase ORDER BY COUNT(id) ASC;
SELECT idcase, COUNT(activity) AS num_activities FROM event_log WHERE cost > 0 GROUP BY idcase ORDER BY num_activities;
SELECT activity, COUNT(*) AS num_actions FROM event_log WHERE activity = 'payment request' GROUP BY activity ORDER BY num_actions;
SELECT "timestamp" FROM event_log WHERE activity = 'fim da viagem' OR activity = 'declaração rejeitada pelo funcionário' ORDER BY "timestamp" ASC;
SELECT "timestamp" FROM "event_log" WHERE "activity" = 'fim da viagem' OR "activity" = 'declaração rejeitada pelo funcionário' ORDER BY "timestamp" ASC;
SELECT "timestamp" FROM "event_log" WHERE "activity" = 'fim da viagem' OR "activity" = 'declaração rejeitada pelo funcionário' ORDER BY "timestamp" ASC;
SELECT timestamp FROM event_log WHERE activity = 'fim da viagem' OR activity = 'declaração rejeitada pelo funcionário' ORDER BY timestamp;
SELECT "timestamp" FROM event_log WHERE activity = 'fim da viagem' OR activity = 'closed' ORDER BY "timestamp" ASC;
SELECT DISTINCT DATE(timestamp) AS date FROM event_log WHERE activity = 'fim da viagem' OR activity = 'declaração rejeitada pelo funcionário' ORDER BY date;
SELECT DISTINCT DATE(timestamp) AS "Data" FROM event_log WHERE activity = 'fim de viagem' OR activity = 'declaração rejeitada por funcionário' ORDER BY DATE(timestamp) ASC;
SELECT DISTINCT timestamp FROM event_log WHERE activity = 'fim de viagem' OR activity = 'rejeição de declaração por funcionário' ORDER BY timestamp;
SELECT "resource", COUNT(DISTINCT "activity") AS "occurrences" FROM "event_log" GROUP BY "resource" ORDER BY "resource" ASC;
SELECT "resource", COUNT("activity") AS "executions" FROM "event_log" GROUP BY "resource" ORDER BY "resource" ASC;
SELECT "resource", COUNT("activity") AS "execucoes" FROM "event_log" GROUP BY "resource" ORDER BY "resource" ASC;
SELECT "resource", COUNT("activity") AS "execucoes" FROM "event_log" GROUP BY "resource" ORDER BY "resource" ASC;
SELECT "resource", COUNT("activity") AS "quantidade_execucoes" FROM "event_log" GROUP BY "resource" ORDER BY "resource" ASC;
SELECT "resource", COUNT("activity") AS "num_executions" FROM "event_log" GROUP BY "resource" ORDER BY "resource" ASC;
SELECT "resource", COUNT(DISTINCT "activity") AS "occurrences" FROM "event_log" GROUP BY "resource" ORDER BY "resource" ASC;
SELECT "resource", "activity", COUNT("activity") FROM "event_log" GROUP BY "resource", "activity" ORDER BY "resource" ASC;
SELECT "resource", COUNT(DISTINCT "activity") AS "num_occurrences" FROM "event_log" GROUP BY "resource" ORDER BY "resource" ASC;
SELECT resource, COUNT(DISTINCT idcase) AS quantidade_atuacoes FROM event_log GROUP BY resource ORDER BY resource;
SELECT "resource" AS "Funcionário", "activity" AS "Ação", COUNT(*) AS "Quantidade de Vezes" FROM event_log GROUP BY "resource", "activity" ORDER BY "resource" ASC;
SELECT activity FROM event_log WHERE activity LIKE 'E%'
SELECT * FROM event_log WHERE activity LIKE 'E%';
SELECT * FROM event_log WHERE activity LIKE 'E%'
SELECT * FROM event_log WHERE activity LIKE 'E%';
SELECT activity FROM event_log WHERE activity LIKE 'E%'
SELECT activity FROM event_log WHERE activity LIKE 'E%'
SELECT activity FROM event_log WHERE activity LIKE 'E%';
SELECT DISTINCT activity FROM event_log WHERE activity LIKE 'E%'
SELECT "id", "activity", "resource", "cost" FROM "event_log" WHERE "cost" BETWEEN 50 AND 400;
SELECT "id", "activity", "resource", "cost" FROM "event_log" WHERE "cost" BETWEEN 50 AND 400;
SELECT "id", "activity", "resource", "cost" FROM event_log WHERE cost BETWEEN 50 AND 400;
SELECT id, activity, resource, cost FROM event_log WHERE cost BETWEEN 50 AND 400;
SELECT "id", "activity", "resource", "cost" FROM event_log WHERE cost BETWEEN 50 AND 400;
SELECT id, activity, resource, cost FROM event_log WHERE cost BETWEEN 50 AND 400;
SELECT id, activity, resource, cost FROM event_log WHERE cost BETWEEN 50 AND 400;
SELECT id, activity, resource, cost FROM event_log WHERE cost BETWEEN 50 AND 400;
SELECT id, activity, resource, cost FROM event_log WHERE cost BETWEEN 50 AND 400;
SELECT DISTINCT resource FROM event_log WHERE activity = 'declaração salva pelo funcionário';
SELECT DISTINCT resource FROM event_log WHERE activity = 'declaração salva pelo funcionário';
SELECT DISTINCT resource FROM event_log WHERE activity = 'declaração salva';
SELECT DISTINCT resource FROM event_log WHERE activity = 'salvar_declaração';
SELECT "activity" FROM "event_log" WHERE DATE("timestamp") = '2018-04-12';
SELECT activity FROM event_log WHERE timestamp LIKE '2018-04-12%'
SELECT activity FROM event_log WHERE timestamp = '2018-04-12';
SELECT "activity" FROM "event_log" WHERE DATE("timestamp") = '2018-04-12';
SELECT DISTINCT activity FROM event_log WHERE DATE(timestamp) = '2018-04-12';
SELECT DISTINCT activity FROM event_log WHERE DATE(timestamp) = '2018-04-12';
SELECT DISTINCT activity FROM event_log WHERE DATE(timestamp) = '2018-04-12';
SELECT DISTINCT activity FROM event_log WHERE DATE(timestamp) = '2018-04-12';
SELECT activity FROM event_log WHERE timestamp = '2018-04-12' AND activity LIKE '%declaração finalizada%';
SELECT id, activity, timestamp FROM event_log WHERE activity = 'permissão final aprovada pelo supervisor' OR activity = 'declaração aprovada pelo supervisor' ORDER BY timestamp;
SELECT id, activity, timestamp FROM event_log WHERE activity = 'permissão final aprovada pelo supervisor' OR activity = 'declaração aprovada pelo supervisor' ORDER BY timestamp;
SELECT id, activity, MAX(timestamp) as end_date FROM event_log WHERE activity = 'permissão final aprovada pelo supervisor' OR activity = 'declaração aprovada pelo supervisor' GROUP BY id, activity ORDER BY end_date;
SELECT id, activity, timestamp FROM event_log WHERE activity = 'permissão final aprovada pelo supervisor' OR activity = 'declaração aprovada pelo supervisor' ORDER BY timestamp;
SELECT id, activity, timestamp FROM event_log WHERE activity = 'permissão final aprovada pelo supervisor' OR activity = 'declaração aprovada pelo supervisor' ORDER BY timestamp;
SELECT id, activity, timestamp FROM event_log WHERE activity = 'permissão final aprovada pelo supervisor' OR activity = 'declaração aprovada pelo supervisor' ORDER BY timestamp;
SELECT id, activity, timestamp FROM event_log WHERE activity LIKE '%aprovação final de uma permissão%' OR activity LIKE '%aprovação de uma declaração por um supervisor%' ORDER BY timestamp;
SELECT id, activity, timestamp FROM event_log WHERE activity LIKE '%aprovação%' ORDER BY timestamp DESC;
SELECT * FROM event_log WHERE cost IS NOT NULL;
SELECT * FROM event_log WHERE cost IS NOT NULL;
SELECT * FROM event_log WHERE cost IS NOT NULL;
SELECT * FROM event_log WHERE cost IS NOT NULL;
SELECT * FROM event_log WHERE cost IS NOT NULL;
SELECT * FROM event_log WHERE cost IS NOT NULL;
SELECT * FROM event_log WHERE cost IS NOT NULL;
SELECT activity, timestamp, resource FROM event_log WHERE cost IS NOT NULL;
SELECT COUNT(*) FROM event_log WHERE activity = 'permissão final aprovada pelo diretor';
SELECT COUNT(*) FROM event_log WHERE activity = 'permissão final aprovada pelo diretor';
SELECT COUNT(*) FROM event_log WHERE activity = 'permissão final aprovada pelo diretor';
SELECT COUNT(*) FROM event_log WHERE activity = 'permissão final aprovada pelo diretor';
SELECT COUNT(*) FROM event_log WHERE activity = 'permissão final aprovada pelo diretor';
SELECT COUNT(*) FROM event_log WHERE activity = 'permissão final aprovada pelo diretor';
SELECT COUNT(*) FROM event_log WHERE activity = 'permissão final aprovada pelo diretor';
SELECT COUNT(*) FROM event_log WHERE activity = 'permissão final aprovada pelo diretor';
SELECT COUNT(*) FROM event_log WHERE activity = 'permissão final aprovada pelo diretor';
SELECT COUNT(*) FROM event_log WHERE activity = 'permissão final aprovada pelo diretor';
SELECT COUNT(*) FROM event_log WHERE activity = 'final permission granted by director';
SELECT COUNT(*) FROM event_log WHERE activity = 'final permission approved' AND resource = 'director';
SELECT "timestamp" FROM "event_log" WHERE "activity" = 'início da viagem' AND "resource" LIKE '%s' ORDER BY "timestamp";
SELECT timestamp FROM event_log WHERE activity = 'início da viagem' AND resource LIKE '%s';
SELECT timestamp FROM event_log WHERE activity = 'início da viagem' AND resource LIKE '%s' ORDER BY timestamp;
SELECT "timestamp" FROM event_log WHERE activity = 'início da viagem' AND resource LIKE '%s' ORDER BY "timestamp";
SELECT timestamp FROM event_log WHERE activity = 'início da viagem' AND resource LIKE '%s' ORDER BY timestamp;
SELECT "timestamp" FROM event_log WHERE activity = 'início da viagem' AND resource LIKE '%s' ORDER BY "timestamp";
SELECT "timestamp" FROM event_log WHERE activity = 'início da viagem' AND resource LIKE '%s' ORDER BY "timestamp";
SELECT "timestamp" FROM event_log WHERE activity = 'início da viagem' AND resource LIKE '%s' ORDER BY "timestamp";
SELECT DATE(timestamp) FROM event_log WHERE resource LIKE '%s' AND activity = 'start of trip';
SELECT DATE(timestamp) FROM event_log WHERE activity = 'start of trip' AND resource LIKE '%s';
SELECT activity, resource, SUM(cost) AS total_cost FROM event_log GROUP BY activity, resource;
SELECT activity, resource, SUM(cost) AS total_cost FROM event_log GROUP BY activity, resource;
SELECT SUM(cost) AS total_cost FROM event_log GROUP BY activity, resource;
SELECT activity, resource, SUM(cost) AS total_cost FROM event_log GROUP BY activity, resource;
SELECT activity, resource, SUM(cost) AS total_cost FROM event_log GROUP BY activity, resource;
SELECT activity, resource, SUM(cost) AS total_cost FROM event_log GROUP BY activity, resource;
SELECT activity, resource, SUM(cost) FROM event_log GROUP BY activity, resource;
SELECT activity, resource, SUM(cost) AS total_cost FROM event_log GROUP BY activity, resource;
SELECT COUNT(*) FROM event_log WHERE activity = 'início da viagem' OR activity = 'fim da viagem';
SELECT activity, COUNT(*) FROM event_log WHERE activity = 'início da viagem' OR activity = 'fim da viagem' GROUP BY activity;
SELECT activity, COUNT(*) AS total_occurrences FROM event_log WHERE activity = 'início da viagem' OR activity = 'fim da viagem' GROUP BY activity;
SELECT COUNT(*) FROM event_log WHERE activity = 'início da viagem' OR activity = 'fim da viagem';
SELECT activity, COUNT(*) AS count FROM event_log WHERE activity = 'início da viagem' OR activity = 'fim da viagem' GROUP BY activity;
SELECT COUNT(*) FROM event_log WHERE activity = 'início da viagem' OR activity = 'fim da viagem';
SELECT activity, COUNT(*) AS occurrences FROM event_log WHERE activity = 'início da viagem' OR activity = 'fim da viagem' GROUP BY activity;
SELECT activity, COUNT(*) AS count FROM event_log WHERE activity = 'início da viagem' OR activity = 'fim da viagem' GROUP BY activity;
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE activity = 'start_trip' OR activity = 'end_trip';
SELECT COUNT(*) FROM event_log WHERE activity = 'Início de viagem' OR activity = 'Fim de viagem' AND idcase = 'processamento de declarações de viagem';
SELECT activity, COUNT(activity) AS num_executions FROM event_log GROUP BY activity HAVING COUNT(activity) > 3;
SELECT activity, COUNT(activity) AS num_executions FROM event_log GROUP BY activity HAVING num_executions > 3;
SELECT activity, COUNT(activity) AS num_executions FROM event_log GROUP BY activity HAVING num_executions > 3;
SELECT activity, COUNT(activity) AS num_executions FROM event_log GROUP BY activity HAVING COUNT(activity) > 3;
SELECT activity, COUNT(activity) AS num_executions FROM event_log GROUP BY activity HAVING COUNT(activity) > 3;
SELECT activity FROM event_log GROUP BY activity HAVING COUNT(*) > 3;
SELECT activity FROM event_log GROUP BY activity HAVING COUNT(*) > 3;
SELECT activity FROM event_log GROUP BY activity HAVING COUNT(*) > 3;
SELECT activity, COUNT(activity) AS num_executions FROM event_log GROUP BY activity HAVING COUNT(activity) > 3;
SELECT activity, COUNT(*) AS num_registros FROM event_log WHERE activity = 'processamento das declarações de viagem' GROUP BY activity HAVING COUNT(*) > 3;
SELECT activity, resource FROM event_log ORDER BY timestamp DESC LIMIT 1;
SELECT activity, resource FROM event_log ORDER BY timestamp DESC LIMIT 1;
SELECT activity, resource FROM event_log ORDER BY timestamp DESC LIMIT 1;
SELECT "activity", "resource" FROM "event_log" ORDER BY "timestamp" DESC LIMIT 1;
SELECT activity, resource FROM event_log ORDER BY timestamp DESC LIMIT 1;
SELECT "activity", "resource" FROM "event_log" ORDER BY "timestamp" DESC LIMIT 1;
SELECT activity, resource FROM event_log ORDER BY timestamp DESC LIMIT 1;
SELECT resource FROM event_log WHERE activity = 'processamento de declarações de viagem' ORDER BY timestamp DESC LIMIT 1; 
SELECT resource, activity FROM event_log WHERE idcase = 'declarações de viagem' ORDER BY timestamp DESC LIMIT 1;
SELECT activity, resource FROM event_log WHERE timestamp > ( SELECT timestamp FROM event_log WHERE activity = 'fim da viagem' ) AND idcase = ( SELECT idcase FROM event_log WHERE activity = 'fim da viagem' ) ORDER BY timestamp;
SELECT event_log.idcase, event_log.activity, event_log.resource FROM event_log WHERE event_log.timestamp > ( SELECT MAX(timestamp) FROM event_log WHERE activity = 'fim da viagem' )
SELECT event_log.idcase, event_log.activity, event_log.resource FROM event_log WHERE event_log.timestamp > ( SELECT MAX(timestamp) FROM event_log WHERE activity = 'fim da viagem' )
SELECT event_log.activity, event_log.resource FROM event_log WHERE event_log.timestamp > ( SELECT MAX(timestamp) FROM event_log WHERE activity = 'fim da viagem' )
SELECT event_log.activity, event_log.resource FROM event_log WHERE event_log.timestamp > ( SELECT MAX(timestamp) FROM event_log WHERE activity = 'fim da viagem' )
SELECT event_log.activity, event_log.resource FROM event_log WHERE event_log.timestamp > ( SELECT MAX(timestamp) FROM event_log WHERE activity = 'fim da viagem' ) ORDER BY event_log.timestamp;
SELECT event_log.activity, event_log.resource, event_log.timestamp FROM event_log WHERE event_log.idcase IN ( SELECT idcase FROM event_log WHERE activity = 'fim da viagem' ) AND event_log.timestamp > ( SELECT timestamp FROM event_log WHERE activity = 'fim da viagem' )
SELECT event_log.idcase, event_log.activity, event_log.resource FROM event_log WHERE event_log.timestamp > ( SELECT MAX(timestamp) FROM event_log WHERE activity = 'fim da viagem' ) ORDER BY event_log.timestamp;
SELECT event_log.activity, event_log.resource FROM event_log WHERE event_log.timestamp > ( SELECT timestamp FROM event_log WHERE activity = 'fim da viagem' )
SELECT activity, resource FROM event_log WHERE timestamp > ( SELECT timestamp FROM event_log WHERE activity = 'fim da viagem' ) AND idcase = ( SELECT idcase FROM event_log WHERE activity = 'fim da viagem' ) ORDER BY timestamp;
SELECT event_log.activity, event_log.resource FROM event_log WHERE event_log.timestamp > ( SELECT MAX(timestamp) FROM event_log WHERE activity = 'fim da viagem' ) ORDER BY event_log.timestamp;
SELECT activity, resource FROM event_log WHERE timestamp > (SELECT timestamp FROM event_log WHERE activity = 'fim da viagem')
SELECT activity, resource FROM event_log WHERE timestamp > ( SELECT MAX(timestamp) FROM event_log WHERE activity = 'fim da viagem' )
SELECT idcase, activity, timestamp, resource FROM event_log WHERE timestamp > (SELECT timestamp FROM event_log WHERE activity = 'fim da viagem')
SELECT event_log.activity, event_log.timestamp, event_log.resource FROM event_log WHERE event_log.idcase IN ( SELECT idcase FROM event_log WHERE activity = 'fim da viagem' ) AND event_log.timestamp > ( SELECT timestamp FROM event_log WHERE activity = 'fim da viagem' ) ORDER BY event_log.timestamp;
SELECT idcase, activity, resource FROM event_log WHERE idcase IN ( SELECT idcase FROM event_log WHERE activity = 'end of trip' ) AND activity != 'end of trip';
SELECT activity, resource FROM event_log WHERE idcase = 'declaração de viagem' AND timestamp > ( SELECT timestamp FROM event_log WHERE idcase = 'declaração de viagem' AND activity = 'finalização da viagem' )
SELECT resource, COUNT(*) AS num_events FROM event_log WHERE activity <> 'fim da viagem' GROUP BY resource;
SELECT resource, COUNT(*) AS num_events FROM event_log WHERE activity != 'fim da viagem' GROUP BY resource;
SELECT resource, COUNT(*) AS num_events FROM event_log WHERE activity != 'fim da viagem' GROUP BY resource;
SELECT resource, COUNT(*) AS num_events FROM event_log WHERE activity <> 'fim da viagem' GROUP BY resource;
SELECT resource, COUNT(*) AS num_events FROM event_log WHERE activity <> 'fim da viagem' GROUP BY resource;
SELECT resource, COUNT(*) AS num_events FROM event_log WHERE activity <> 'fim da viagem' GROUP BY resource;
SELECT resource, COUNT(*) AS num_events FROM event_log WHERE activity <> 'fim da viagem' GROUP BY resource;
SELECT resource, COUNT(*) AS num_events FROM event_log WHERE activity != 'fim da viagem' GROUP BY resource;
SELECT resource, COUNT(*) AS num_events FROM event_log WHERE activity <> 'fim da viagem' GROUP BY resource;
SELECT resource, COUNT(*) AS num_events FROM event_log WHERE activity != 'fim da viagem' GROUP BY resource;
SELECT resource, COUNT(*) AS num_events FROM event_log WHERE activity <> 'fim da viagem' GROUP BY resource;
SELECT resource, COUNT(*) AS num_events FROM event_log WHERE activity <> 'fim da viagem' GROUP BY resource;
SELECT resource, COUNT(*) AS num_events FROM event_log WHERE activity <> 'fim da viagem' GROUP BY resource;
SELECT resource, COUNT(*) AS num_events FROM event_log WHERE activity <> 'fim da viagem' GROUP BY resource;
SELECT resource, COUNT(*) AS event_count FROM event_log WHERE activity <> 'fim da viagem' GROUP BY resource;
SELECT resource, COUNT(*) AS num_events FROM event_log WHERE activity != 'fim da viagem' GROUP BY resource;
SELECT resource, COUNT(*) AS event_count FROM event_log WHERE activity != 'fim da viagem' GROUP BY resource;
SELECT resource, COUNT(*) AS event_count FROM event_log WHERE activity <> 'fim da viagem' GROUP BY resource;
SELECT resource, COUNT(*) AS event_count FROM event_log WHERE activity <> 'fim da viagem' GROUP BY resource;
SELECT resource, COUNT(*) AS num_events FROM event_log WHERE activity <> 'fim da viagem' GROUP BY resource;
SELECT resource, COUNT(*) AS event_count FROM event_log WHERE activity <> 'fim da viagem' GROUP BY resource;
SELECT resource, COUNT(*) AS event_count FROM event_log WHERE activity <> 'fim da viagem' GROUP BY resource;
SELECT resource, COUNT(*) AS event_count FROM event_log WHERE activity != 'fim da viagem' GROUP BY resource;
SELECT resource, COUNT(*) AS event_count FROM event_log WHERE activity != 'fim da viagem' GROUP BY resource;
SELECT resource, COUNT(*) AS event_count FROM event_log WHERE activity <> 'fim da viagem' GROUP BY resource;
SELECT resource, COUNT(*) AS event_count FROM event_log WHERE activity <> 'fim da viagem' GROUP BY resource;
SELECT resource, COUNT(*) AS event_count FROM event_log WHERE activity <> 'fim da viagem' GROUP BY resource;
SELECT resource, COUNT(*) AS event_count FROM event_log WHERE activity <> 'fim da viagem' GROUP BY resource;
SELECT COUNT(DISTINCT id) FROM event_log WHERE activity = 'processamento de declaração de viagem' AND resource = 'funcionário' AND id NOT IN ( SELECT id FROM event_log WHERE activity = 'registro final de viagem' AND resource = 'funcionário' )
SELECT resource, COUNT(DISTINCT id) AS total_actions FROM event_log WHERE activity != 'end_trip' GROUP BY resource;
SELECT DISTINCT idcase FROM event_log ORDER BY MIN(timestamp) DESC;
SELECT DISTINCT idcase FROM event_log ORDER BY MIN(timestamp) DESC;
SELECT DISTINCT idcase FROM event_log ORDER BY MIN(timestamp) DESC;
SELECT "idcase" FROM event_log GROUP BY "idcase" ORDER BY MIN("timestamp") DESC;
SELECT idcase FROM event_log WHERE activity = 'declaração de viagem' ORDER BY timestamp;
SELECT idcase FROM event_log WHERE activity = 'travel' ORDER BY timestamp;
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE activity = 'requisição de pagamento';
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE activity = 'requisição de pagamento';
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE activity = 'requisição de pagamento';
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE activity = 'requisição de pagamento';
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE activity = 'requisição de pagamento';
SELECT COUNT(*) FROM event_log WHERE activity = 'requisição de pagamento';
SELECT COUNT(*) FROM event_log WHERE activity = 'payment request';
SELECT idcase FROM event_log WHERE activity = 'declaração final aprovada pelo diretor' ORDER BY timestamp DESC LIMIT 1;
SELECT MAX(timestamp) FROM event_log WHERE activity = 'declaração final aprovada pelo diretor';
SELECT idcase FROM event_log WHERE activity = 'declaração final aprovada pelo diretor' ORDER BY timestamp DESC LIMIT 1;
SELECT idcase FROM event_log WHERE activity = 'declaração final aprovada pelo diretor' ORDER BY timestamp DESC LIMIT 1;
SELECT idcase FROM event_log WHERE activity = 'declaração final aprovada pelo diretor' ORDER BY timestamp DESC LIMIT 1;
SELECT MAX(timestamp) FROM event_log WHERE activity = 'approval' AND resource = 'director';
SELECT activity, MAX(timestamp) FROM event_log WHERE activity = 'approval' GROUP BY activity;
SELECT resource FROM event_log WHERE activity = 'declaração aprovada pela administração';
SELECT resource, COUNT(*) AS total_activities FROM event_log WHERE activity = 'declaração aprovada pela administração' GROUP BY resource ORDER BY total_activities DESC LIMIT 1;
SELECT resource, COUNT(*) AS occurrences FROM event_log WHERE activity = 'declaração aprovada pela administração' GROUP BY resource ORDER BY occurrences DESC LIMIT 1;
SELECT resource, COUNT(*) AS total_events FROM event_log WHERE activity = 'declaração aprovada pela administração' GROUP BY resource ORDER BY total_events DESC LIMIT 1;
SELECT resource, COUNT(*) AS total_activities FROM event_log WHERE activity = 'declaração aprovada pela administração' GROUP BY resource ORDER BY total_activities DESC LIMIT 1;
SELECT resource, COUNT(*) AS approvals FROM event_log WHERE activity = 'approval' GROUP BY resource ORDER BY approvals DESC LIMIT 1;
SELECT resource, COUNT(*) AS total_approvals FROM event_log WHERE activity = 'approval' GROUP BY resource ORDER BY total_approvals DESC LIMIT 1;
SELECT resource, COUNT(DISTINCT idcase) AS cases_count FROM event_log WHERE timestamp = (SELECT MIN(timestamp) FROM event_log) GROUP BY resource;
SELECT resource, COUNT(DISTINCT idcase) AS num_cases FROM event_log WHERE id IN ( SELECT MIN(id) FROM event_log GROUP BY idcase ) GROUP BY resource;
SELECT resource, COUNT(*) FROM event_log WHERE activity = (SELECT MIN(activity) FROM event_log) GROUP BY resource;
SELECT resource, COUNT(*) AS num_instances FROM event_log WHERE id IN ( SELECT MIN(id) FROM event_log GROUP BY idcase ) GROUP BY resource;
SELECT resource, COUNT(DISTINCT idcase) AS first_activity_count FROM event_log WHERE id IN ( SELECT MIN(id) FROM event_log GROUP BY idcase ) GROUP BY resource;
SELECT resource, COUNT(DISTINCT idcase) AS num_actions FROM event_log WHERE activity = (SELECT MIN(timestamp) FROM event_log) GROUP BY resource;
SELECT resource, COUNT(DISTINCT idcase) AS processamentos_iniciados FROM event_log GROUP BY resource;
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE activity LIKE '%aprovada%';
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE activity LIKE '%aprovada%';
SELECT activity, COUNT(DISTINCT idcase) AS cases FROM event_log WHERE activity LIKE '%aprovada%' GROUP BY activity;
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE activity LIKE '%aprovada%';
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE activity LIKE '%aprovada%';
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE activity LIKE '%aprovada%';
SELECT COUNT(DISTINCT idcase) AS total_aprovadas FROM event_log WHERE activity = 'approved';
SELECT COUNT(*) FROM event_log WHERE activity LIKE '%aprovação%'; 
SELECT DATE(timestamp) AS day, COUNT(DISTINCT idcase) AS num_cases_rejected FROM event_log WHERE activity = 'rejeitada' GROUP BY day;
SELECT COUNT(DISTINCT idcase) as casos_rejeitados_por_dia FROM event_log WHERE activity = 'rejeitada' GROUP BY DATE(timestamp)
SELECT COUNT(DISTINCT idcase) as instances FROM event_log WHERE activity = 'rejeitada' GROUP BY DATE(timestamp);
SELECT DATE(timestamp) AS day, COUNT(DISTINCT idcase) AS cases FROM event_log WHERE activity = 'rejeitada' GROUP BY day;
SELECT COUNT(DISTINCT idcase) AS casos_rejeitados FROM event_log WHERE activity = 'rejeitada' AND timestamp >= DATE('now') AND timestamp < DATE('now', '+1 day');
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE activity = 'rejeitada' AND timestamp >= DATE('now') AND timestamp < DATE('now', '+1 day');
SELECT COUNT(*) AS "Declarações Rejeitadas por Dia" FROM event_log WHERE activity = 'rejeitada' GROUP BY DATE(timestamp);
SELECT DATE(timestamp) AS day, COUNT(*) AS rejections FROM event_log WHERE activity = 'rejection' GROUP BY day;
SELECT idcase, COUNT(*) AS num_events, (julianday(MAX(timestamp)) - julianday(MIN(timestamp))) * 24 AS duration_hours FROM event_log GROUP BY idcase ORDER BY num_events DESC LIMIT 5;
SELECT idcase, COUNT(*) AS num_events, (MAX(timestamp) - MIN(timestamp)) AS duration FROM event_log GROUP BY idcase ORDER BY num_events DESC LIMIT 5;
SELECT idcase, COUNT(id) AS num_events, (MAX(timestamp) - MIN(timestamp)) AS duration FROM event_log GROUP BY idcase ORDER BY num_events DESC LIMIT 5;
SELECT idcase, COUNT(*) AS num_events, (MAX(timestamp) - MIN(timestamp)) AS duration FROM event_log GROUP BY idcase ORDER BY num_events DESC LIMIT 5;
SELECT idcase, COUNT(activity) AS num_executions, MAX(timestamp) - MIN(timestamp) AS duration FROM event_log GROUP BY idcase ORDER BY num_executions DESC LIMIT 5;
SELECT idcase, COUNT(*) AS num_events, MAX(timestamp) - MIN(timestamp) AS duration FROM event_log GROUP BY idcase ORDER BY duration DESC LIMIT 5;
SELECT idcase, COUNT(*) AS num_events, (MAX(timestamp) - MIN(timestamp)) AS duration FROM event_log GROUP BY idcase ORDER BY num_events DESC LIMIT 5;
SELECT activity, COUNT(*) AS num_actions, MAX(timestamp) - MIN(timestamp) AS processing_time FROM event_log GROUP BY activity ORDER BY num_actions DESC LIMIT 5;
SELECT activity, SUM(cost) AS total_cost FROM event_log GROUP BY activity ORDER BY total_cost DESC LIMIT 5;
SELECT idcase, COUNT(*) AS event_count, MAX(timestamp) - MIN(timestamp) AS duration FROM event_log GROUP BY idcase HAVING COUNT(*) >= 20 ORDER BY event_count DESC LIMIT 5;
SELECT idcase, COUNT(*) AS num_events, MAX(timestamp) - MIN(timestamp) AS duration FROM event_log GROUP BY idcase HAVING num_events >= 20 ORDER BY num_events DESC LIMIT 5;
SELECT idcase, COUNT(activity) AS num_executions, MAX(timestamp) - MIN(timestamp) AS duration FROM event_log GROUP BY idcase HAVING num_executions >= 20 ORDER BY num_executions DESC LIMIT 5;
SELECT idcase, COUNT(*) AS num_events, MAX(timestamp) - MIN(timestamp) AS duration FROM event_log GROUP BY idcase HAVING num_events >= 20 ORDER BY duration DESC LIMIT 5;
SELECT idcase, COUNT(*) AS total_events, MAX(timestamp) - MIN(timestamp) AS duration FROM event_log GROUP BY idcase HAVING total_events >= 20 ORDER BY total_events DESC LIMIT 5;
SELECT idcase, COUNT(*) AS num_events, MAX(timestamp) - MIN(timestamp) AS execution_time FROM event_log GROUP BY idcase HAVING COUNT(*) >= 20 ORDER BY num_events DESC LIMIT 5;
SELECT activity, COUNT(*) AS num_events, MAX(timestamp) - MIN(timestamp) AS duration FROM event_log GROUP BY activity HAVING num_events >= 20 ORDER BY duration DESC LIMIT 5;
SELECT activity, COUNT(activity) AS num_actions, SUM(cost) AS total_cost FROM event_log GROUP BY activity HAVING num_actions >= 20 ORDER BY num_actions DESC LIMIT 5;
SELECT idcase, MAX(timestamp) as recent_timestamp FROM event_log WHERE activity != 'requisição de pagamento' GROUP BY idcase ORDER BY recent_timestamp DESC LIMIT 10;
SELECT * FROM event_log WHERE activity = 'declaração de viagem' AND id NOT IN ( SELECT id FROM event_log WHERE activity = 'requisição de pagamento' ) ORDER BY timestamp DESC LIMIT 10;
SELECT idcase, MAX(timestamp) AS recent_timestamp FROM event_log WHERE activity != 'requisição de pagamento' GROUP BY idcase ORDER BY recent_timestamp DESC LIMIT 10;
SELECT "idcase" FROM "event_log" WHERE "activity" != 'requisição de pagamento' ORDER BY "timestamp" DESC LIMIT 10;
SELECT idcase FROM event_log WHERE activity != 'requisição de pagamento' ORDER BY timestamp DESC LIMIT 10;
SELECT idcase, MAX(timestamp) FROM event_log WHERE activity != 'requisição de pagamento' GROUP BY idcase ORDER BY MAX(timestamp) DESC LIMIT 10;
SELECT idcase, MAX(timestamp) FROM event_log WHERE activity != 'requisição de pagamento' GROUP BY idcase ORDER BY MAX(timestamp) DESC LIMIT 10;
SELECT idcase FROM event_log WHERE activity != 'requisição de pagamento' ORDER BY timestamp DESC LIMIT 10;
SELECT idcase FROM event_log WHERE activity != 'requisição de pagamento' ORDER BY timestamp DESC LIMIT 10;
SELECT idcase FROM event_log WHERE activity != 'requisição de pagamento' ORDER BY timestamp DESC LIMIT 10;
SELECT idcase FROM event_log WHERE activity != 'requisição de pagamento' GROUP BY idcase ORDER BY MAX(timestamp) DESC LIMIT 10;
SELECT * FROM event_log WHERE activity = 'processamento' AND cost IS NULL ORDER BY timestamp DESC LIMIT 10;
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(id) <= 10;
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(id) <= 10;
SELECT idcase, COUNT(id) AS num_events FROM event_log GROUP BY idcase HAVING num_events <= 10;
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(id) <= 10;
SELECT idcase, COUNT(id) as num_events FROM event_log GROUP BY idcase HAVING num_events <= 10;
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(activity) <= 10;
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(id) <= 10;
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(id) <= 10;
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(id) <= 10;
SELECT idcase, COUNT(id) AS num_events FROM event_log GROUP BY idcase HAVING num_events <= 10;
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(activity) <= 10;
SELECT activity, COUNT(*) AS num_events FROM event_log GROUP BY activity HAVING num_events <= 10;
SELECT AVG(cost) FROM event_log WHERE activity = 'pagamento efetuado' AND timestamp < '2018-01-01';
SELECT AVG(cost) FROM event_log WHERE activity = 'pagamento efetuado' AND timestamp < '2018-01-01';
SELECT AVG(cost) FROM event_log WHERE activity = 'pagamento efetuado' AND timestamp < '2018-01-01';
SELECT AVG(cost) FROM event_log WHERE activity = 'pagamento efetuado' AND timestamp < '2018-01-01';
SELECT AVG(cost) FROM event_log WHERE activity = 'pagamento efetuado' AND timestamp < '2018-01-01';
SELECT AVG(cost) FROM event_log WHERE activity = 'pagamento efetuado' AND timestamp < '2018-01-01';
SELECT AVG(cost) FROM event_log WHERE activity = 'pagamento efetuado' AND timestamp < '2018-01-01';
SELECT AVG(cost) FROM event_log WHERE activity = 'pagamento efetuado' AND timestamp < '2018-01-01';
SELECT AVG(cost) FROM event_log WHERE activity = 'payment' AND timestamp < '2018-01-01';
SELECT idcase, COUNT(*) AS num_activities FROM event_log WHERE activity = 'permissão' GROUP BY idcase;
SELECT idcase, COUNT(activity) AS num_permissions FROM event_log WHERE activity = 'permissão' GROUP BY idcase;
SELECT idcase, COUNT(*) AS quantidade_permissoes FROM event_log WHERE activity = 'permissão' GROUP BY idcase;
SELECT idcase, COUNT(*) AS occurrences FROM event_log WHERE activity = 'permissão' GROUP BY idcase;
SELECT idcase, COUNT(*) AS total_permissoes FROM event_log WHERE activity = 'permissão' GROUP BY idcase;
SELECT idcase, COUNT(*) AS num_activities_permission FROM event_log WHERE activity = 'permissão' GROUP BY idcase;
SELECT idcase, COUNT(*) AS quantidade FROM event_log WHERE activity = 'permissão' GROUP BY idcase;
SELECT idcase, COUNT(*) AS num_events FROM event_log WHERE activity = 'permissão' GROUP BY idcase;
SELECT activity, COUNT(*) AS permissions_count FROM event_log WHERE activity = 'permission' GROUP BY activity;
SELECT COUNT(*) AS num_permissions, activity FROM event_log WHERE activity = 'permissão' GROUP BY activity;
SELECT COUNT(DISTINCT idcase) AS casos, resource FROM event_log WHERE activity = 'declaração rejeitada pelo supervisor' GROUP BY resource;
SELECT COUNT(DISTINCT idcase) AS quantidade_de_casos, resource FROM event_log WHERE activity = 'declaração rejeitada pelo supervisor' GROUP BY resource;
SELECT COUNT(DISTINCT idcase) AS quantidade_casos, resource FROM event_log WHERE activity = 'declaração rejeitada pelo supervisor' GROUP BY resource;
SELECT resource, COUNT(DISTINCT idcase) AS num_cases FROM event_log WHERE activity = 'declaração rejeitada pelo supervisor' GROUP BY resource;
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE activity = 'declaração rejeitada pelo supervisor';
SELECT "resource", COUNT(DISTINCT "idcase") FROM "event_log" WHERE "activity" = 'declaração rejeitada pelo supervisor' GROUP BY "resource";
SELECT COUNT(*) AS total_rejections, supervisor FROM event_log WHERE activity = 'Rejeição feita por supervisor' GROUP BY supervisor;
SELECT COUNT(*) AS "Total de declarações rejeitadas", "supervisor" AS "Supervisores envolvidos" FROM event_log WHERE "activity" = 'rejeitada' GROUP BY "supervisor";
SELECT activity, COUNT(DISTINCT idcase) AS num_cases FROM event_log GROUP BY activity;
SELECT activity, COUNT(DISTINCT idcase) AS quantidade_de_casos FROM event_log GROUP BY activity;
SELECT activity, COUNT(DISTINCT idcase) AS cases_count FROM event_log GROUP BY activity;
SELECT activity, COUNT(DISTINCT idcase) AS num_cases_executed FROM event_log GROUP BY activity;
SELECT activity, COUNT(DISTINCT idcase) AS num_cases FROM event_log GROUP BY activity;
SELECT activity, COUNT(DISTINCT idcase) AS num_cases FROM event_log GROUP BY activity;
SELECT activity, COUNT(idcase) AS num_declarations FROM event_log GROUP BY activity;
SELECT COUNT(*) FROM event_log WHERE activity = 'declaration of travel'; 
SELECT activity FROM event_log WHERE activity LIKE 'R%' AND timestamp > (SELECT MAX(timestamp) FROM event_log WHERE activity LIKE 'D%');
SELECT activity FROM event_log WHERE activity LIKE 'R%' AND timestamp > ALL (SELECT timestamp FROM event_log WHERE activity LIKE 'D%');
SELECT * FROM event_log WHERE activity LIKE 'R%' AND timestamp > ( SELECT MAX(timestamp) FROM event_log WHERE activity LIKE 'D%' )
SELECT * FROM event_log WHERE activity LIKE 'R%' AND timestamp > ALL (SELECT timestamp FROM event_log WHERE activity LIKE 'D%');
SELECT * FROM event_log WHERE activity LIKE 'R%' AND timestamp > (SELECT MAX(timestamp) FROM event_log WHERE activity LIKE 'D%');
SELECT * FROM event_log WHERE timestamp > ALL (SELECT timestamp FROM event_log WHERE activity LIKE 'D%') AND activity LIKE 'R%';
SELECT activity FROM event_log WHERE activity LIKE 'R%' AND timestamp > ( SELECT MAX(timestamp) FROM event_log WHERE activity LIKE 'D%' AND idcase = 'declaração' )
SELECT * FROM event_log WHERE activity LIKE 'R%' AND timestamp > ( SELECT MAX(timestamp) FROM event_log WHERE activity LIKE 'D%' )
SELECT activity, resource, COUNT(*) as num_executions FROM event_log GROUP BY activity, resource;
SELECT activity, resource, COUNT(*) as count FROM event_log GROUP BY activity, resource;
SELECT activity, resource, COUNT(*) as count FROM event_log GROUP BY activity, resource;
SELECT resource, activity, COUNT(*) as count FROM event_log GROUP BY resource, activity;
SELECT resource, activity, COUNT(*) as count FROM event_log GROUP BY resource, activity;
SELECT "resource", "activity", COUNT(*) AS "count" FROM "event_log" WHERE "activity" LIKE '%processamento de uma declaração%' GROUP BY "resource", "activity";
SELECT "activity", "resource", COUNT(*) AS "count" FROM event_log GROUP BY "activity", "resource"
SELECT DISTINCT activity FROM event_log WHERE timestamp >= '2018-01-01' AND timestamp < '2018-07-01';
SELECT "activity" FROM "event_log" WHERE "timestamp" >= '2018-01-01' AND "timestamp" < '2018-07-01';
SELECT DISTINCT activity FROM event_log WHERE timestamp >= '2018-01-01' AND timestamp < '2018-07-01';
SELECT DISTINCT activity FROM event_log WHERE timestamp BETWEEN '2018-01-01' AND '2018-07-31';
SELECT DISTINCT activity FROM event_log WHERE timestamp >= '2018-01-01' AND timestamp < '2018-07-01';
SELECT DISTINCT activity FROM event_log WHERE timestamp >= '2018-01-01' AND timestamp < '2018-07-01';
SELECT activity, timestamp, resource FROM event_log WHERE timestamp >= '2018-01-01' AND timestamp < '2018-07-01';
SELECT idcase FROM event_log WHERE resource = 'Wayne' ORDER BY idcase;
SELECT idcase FROM event_log WHERE resource = 'Wayne' ORDER BY idcase;
SELECT idcase FROM event_log WHERE resource = 'Wayne' ORDER BY idcase;
SELECT idcase FROM event_log WHERE resource = 'Wayne' ORDER BY idcase;
SELECT idcase FROM event_log WHERE resource = 'Wayne' GROUP BY idcase ORDER BY idcase;
SELECT DISTINCT idcase FROM event_log WHERE resource = 'Wayne' ORDER BY idcase;
SELECT "idcase" FROM "event_log" WHERE "resource" = 'Wayne' ORDER BY "idcase";
SELECT * FROM event_log WHERE resource = 'Wayne' ORDER BY idcase;
SELECT DISTINCT activity FROM event_log WHERE resource = 'Wayne' ORDER BY activity;
SELECT DISTINCT activity FROM event_log WHERE resource = 'Wayne' ORDER BY activity;
SELECT activity, COUNT(DISTINCT idcase) AS cases_executed FROM event_log WHERE date(timestamp) = '2018-03-12' GROUP BY activity;
SELECT activity, COUNT(DISTINCT idcase) AS instances_executed FROM event_log WHERE date(timestamp) = '2018-03-12' GROUP BY activity;
SELECT activity, COUNT(DISTINCT idcase) AS num_cases FROM event_log WHERE date(timestamp) = '2018-03-12' GROUP BY activity;
SELECT activity, COUNT(DISTINCT idcase) AS quantidade_de_casos FROM event_log WHERE timestamp <= '2018-03-12' AND activity IS NOT NULL GROUP BY activity;
SELECT activity, COUNT(DISTINCT idcase) AS num_cases FROM event_log WHERE timestamp = '2018-03-12' GROUP BY activity;
SELECT activity, COUNT(DISTINCT idcase) AS num_cases FROM event_log WHERE timestamp LIKE '2018-03-12%' GROUP BY activity;
SELECT activity, COUNT(*) AS total_executed FROM event_log WHERE timestamp >= '2018-03-12 00:00:00' AND timestamp < '2018-03-13 00:00:00' GROUP BY activity;
SELECT activity, COUNT(*) AS total_executed FROM event_log WHERE timestamp >= '2018-03-12 00:00:00' AND timestamp < '2018-03-13 00:00:00' GROUP BY activity;
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE activity LIKE 'permissão%';
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE activity LIKE 'permissão%'
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE activity LIKE 'permissão%'
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE activity LIKE 'permissão%' AND timestamp = (SELECT MIN(timestamp) FROM event_log WHERE idcase = event_log.idcase)
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE activity LIKE 'permissão%';
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE activity LIKE 'permissão%'
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE activity LIKE 'permissão%'
SELECT COUNT(*) FROM event_log WHERE activity = 'associação a uma permissão' AND idcase LIKE 'declaração de viagem%';
SELECT COUNT(*) FROM event_log WHERE activity = 'permission' AND idcase IN ( SELECT idcase FROM event_log WHERE activity = 'trip_request' AND timestamp = ( SELECT MIN(timestamp) FROM event_log WHERE activity = 'trip_request' ) )
SELECT idcase FROM event_log GROUP BY idcase HAVING SUM(CASE WHEN activity = 'requisição de pagamento' OR activity = 'pagamento efetuado' THEN 1 ELSE 0 END) = 0;
SELECT DISTINCT idcase FROM event_log WHERE activity NOT IN ('requisição de pagamento', 'pagamento efetuado');
SELECT idcase FROM event_log WHERE activity NOT IN ('requisição de pagamento', 'pagamento efetuado') GROUP BY idcase;
SELECT * FROM event_log WHERE activity NOT IN ('requisição de pagamento', 'pagamento efetuado') GROUP BY idcase;
SELECT idcase FROM event_log WHERE activity NOT IN ('requisição de pagamento', 'pagamento efetuado') GROUP BY idcase;
SELECT DISTINCT idcase FROM event_log WHERE activity NOT IN ('requisição de pagamento', 'pagamento efetuado');
SELECT idcase FROM event_log WHERE activity NOT IN ('requisição de pagamento', 'pagamento efetuado') GROUP BY idcase;
SELECT DISTINCT idcase FROM event_log WHERE activity NOT IN ('requisição de pagamento', 'pagamento efetuado');
SELECT idcase FROM event_log WHERE activity NOT IN ('requisição de pagamento', 'pagamento efetuado') GROUP BY idcase;
SELECT DISTINCT idcase FROM event_log WHERE activity NOT IN ('requisição de pagamento', 'pagamento efetuado');
SELECT COUNT(*) FROM event_log WHERE activity NOT IN ('payment made', 'payment requested');
SELECT "activity", "timestamp", "resource", "cost", "idcase" FROM event_log WHERE activity = 'requisição de pagamento' OR activity = 'pagamento efetuado';
SELECT * FROM event_log WHERE activity IN ('início da viagem', 'declaração requisitada pelo funcionário') ORDER BY timestamp, resource;
SELECT * FROM event_log WHERE activity = 'início da viagem' OR activity = 'declaração requisitada pelo funcionário' ORDER BY timestamp ASC, resource;
SELECT * FROM event_log WHERE activity IN ('início da viagem', 'declaração requisitada pelo funcionário') ORDER BY timestamp ASC, resource ASC;
SELECT * FROM event_log WHERE activity IN ('início da viagem', 'declaração requisitada pelo funcionário') ORDER BY timestamp, resource;
SELECT * FROM event_log WHERE activity IN ('início da viagem', 'declaração requisitada pelo funcionário') ORDER BY timestamp ASC, resource;
SELECT * FROM event_log WHERE activity IN ('início da viagem', 'declaração requisitada pelo funcionário') ORDER BY timestamp ASC, resource ASC;
SELECT * FROM event_log WHERE activity = 'início da viagem' OR activity = 'declaração requisitada pelo funcionário' ORDER BY timestamp, resource;
SELECT * FROM event_log WHERE activity IN ('início da viagem', 'declaração requisitada pelo funcionário') ORDER BY timestamp, resource;
SELECT * FROM event_log WHERE activity IN ('início da viagem', 'declaração requisitada pelo funcionário') ORDER BY timestamp, resource;
SELECT activity, timestamp, resource FROM event_log WHERE activity = 'início de viagem' OR activity = 'requisição de declaração por funcionário' ORDER BY timestamp, resource;
SELECT event_log.timestamp, event_log.resource FROM event_log WHERE event_log.activity = 'início de processamento de declaração' ORDER BY event_log.timestamp ASC, event_log.resource;
SELECT "resource", COUNT(*) AS "count" FROM "event_log" WHERE "activity" = 'declaração salva pelo funcionário' GROUP BY "resource" ORDER BY "resource";
SELECT "resource", COUNT(*) AS "num_activities" FROM "event_log" WHERE "activity" = 'declaração salva pelo funcionário' GROUP BY "resource" ORDER BY "resource";
SELECT "resource", COUNT(*) AS "num_records" FROM "event_log" WHERE "activity" = 'declaração salva pelo funcionário' GROUP BY "resource" ORDER BY "resource";
SELECT "resource", COUNT(*) AS "count" FROM "event_log" WHERE "activity" = 'declaração salva pelo funcionário' GROUP BY "resource" ORDER BY "resource";
SELECT "resource", COUNT(*) AS "ocorrencias" FROM "event_log" WHERE "activity" = 'declaração salva pelo funcionário' GROUP BY "resource" ORDER BY "resource";
SELECT "resource", COUNT(*) AS "count" FROM "event_log" WHERE "activity" = 'declaração salva pelo funcionário' GROUP BY "resource" ORDER BY "resource";
SELECT "resource", COUNT(*) AS "count" FROM "event_log" WHERE "activity" = 'declaração salva pelo funcionário' GROUP BY "resource" ORDER BY "resource";
SELECT resource, COUNT(*) AS associations FROM event_log WHERE activity = 'declaração salva pelo funcionário' GROUP BY resource ORDER BY resource;
SELECT "resource", COUNT(*) AS "count" FROM "event_log" WHERE "activity" = 'declaração salva pelo funcionário' GROUP BY "resource" ORDER BY "resource";
SELECT resource, COUNT(*) AS num_actions FROM event_log WHERE activity = 'save travel declaration' GROUP BY resource ORDER BY resource;
SELECT resource, COUNT(idcase) AS num_saved_declarations FROM event_log WHERE activity = 'save_declaration' GROUP BY resource ORDER BY resource;
SELECT activity, COUNT(DISTINCT idcase) AS num_cases_executed FROM event_log GROUP BY activity;
SELECT activity, COUNT(DISTINCT idcase) AS num_cases FROM event_log GROUP BY activity;
SELECT activity, COUNT(DISTINCT idcase) AS num_cases FROM event_log GROUP BY activity;
SELECT activity, COUNT(DISTINCT idcase) AS instances FROM event_log GROUP BY activity;
SELECT activity, COUNT(DISTINCT idcase) AS instances_executed FROM event_log GROUP BY activity;
SELECT activity, COUNT(DISTINCT idcase) AS num_cases FROM event_log GROUP BY activity;
SELECT activity, COUNT(DISTINCT idcase) AS num_cases_executed FROM event_log GROUP BY activity;
SELECT activity, COUNT(*) AS num_declarations FROM event_log GROUP BY activity;
SELECT activity, COUNT(*) AS total FROM event_log GROUP BY activity;
SELECT resource, COUNT(DISTINCT activity) AS activities_count FROM event_log GROUP BY resource;
SELECT resource, COUNT(DISTINCT activity) AS num_activities FROM event_log GROUP BY resource;
SELECT resource, COUNT(DISTINCT activity) AS num_activities FROM event_log GROUP BY resource;
SELECT resource, COUNT(DISTINCT activity) AS num_activities FROM event_log GROUP BY resource;
SELECT resource, COUNT(DISTINCT activity) AS num_activities FROM event_log GROUP BY resource;
SELECT resource, COUNT(DISTINCT activity) AS num_activities FROM event_log GROUP BY resource;
SELECT resource, COUNT(DISTINCT activity) AS num_activities FROM event_log GROUP BY resource;
SELECT resource, COUNT(DISTINCT activity) AS actions_count FROM event_log WHERE activity LIKE '%processamento das declarações de viagens%' GROUP BY resource;
SELECT resource, COUNT(DISTINCT activity) AS actions_executed FROM event_log GROUP BY resource;
SELECT "resource", COUNT(CASE WHEN "activity" = 'fim da viagem' OR "activity" = 'pagamento efetuado' THEN 1 END) AS "ocorrencias" FROM "event_log" GROUP BY "resource";
SELECT "resource", COUNT(CASE WHEN activity = 'fim da viagem' OR activity = 'pagamento efetuado' THEN 1 END) AS total_finalizacao FROM event_log GROUP BY "resource";
SELECT resource, COUNT(CASE WHEN activity = 'fim da viagem' OR activity = 'pagamento efetuado' THEN 1 END) AS total_ocorrencias FROM event_log GROUP BY resource;
SELECT resource, SUM(CASE WHEN activity = 'fim da viagem' OR activity = 'pagamento efetuado' THEN 1 ELSE 0 END) AS total_ocorrencias FROM event_log GROUP BY resource;
SELECT "resource", COUNT(*) AS "count" FROM "event_log" WHERE "activity" IN ('fim da viagem', 'pagamento efetuado') GROUP BY "resource";
SELECT "resource", COUNT(*) AS "total_execucoes" FROM "event_log" WHERE "activity" IN ('fim da viagem', 'pagamento efetuado') GROUP BY "resource";
SELECT resource, COUNT(*) AS total_finalizacoes FROM event_log WHERE activity IN ('fim de viagem', 'efetuação de pagamento') GROUP BY resource;
SELECT resource, COUNT(*) AS total_finalization_activities FROM event_log WHERE activity = 'finalização' GROUP BY resource;
SELECT resource, COUNT(*) AS occurrences FROM event_log WHERE activity = 'declaração rejeitada pelo pré-aprovador' GROUP BY resource;
SELECT resource, COUNT(DISTINCT idcase) AS num_cases FROM event_log WHERE activity = 'declaração rejeitada pelo pré-aprovador' GROUP BY resource;
SELECT resource, COUNT(DISTINCT idcase) AS instances_of_process FROM event_log WHERE activity = 'declaração rejeitada pelo pré-aprovador' GROUP BY resource;
SELECT resource, COUNT(*) AS occurrences FROM event_log WHERE activity = 'declaração rejeitada pelo pré-aprovador' AND timestamp = ( SELECT MIN(timestamp) FROM event_log WHERE activity = 'declaração rejeitada pelo pré-aprovador' AND idcase = event_log.idcase ) GROUP BY resource;
SELECT resource, COUNT(*) AS occurrences FROM event_log WHERE activity = 'declaração rejeitada pelo pré-aprovador' AND timestamp = ( SELECT MIN(timestamp) FROM event_log WHERE activity = 'declaração rejeitada pelo pré-aprovador' AND idcase = event_log.idcase ) GROUP BY resource;
SELECT COUNT(DISTINCT idcase) AS casos_rejeitados, resource FROM event_log WHERE activity = 'pre-aprovar' AND cost < 0 GROUP BY resource;
SELECT COUNT(DISTINCT idcase) AS num_declaracoes_rejeitadas, resource FROM event_log WHERE activity = 'rejeicao' AND resource IN ( SELECT DISTINCT resource FROM event_log WHERE activity = 'pre_aprovacao' ) GROUP BY resource;
SELECT idcase, COUNT(activity) AS occurrences FROM event_log WHERE activity <> 'fim da viagem' GROUP BY idcase;
SELECT idcase, COUNT(activity) AS occurrences FROM event_log WHERE activity <> 'fim da viagem' GROUP BY idcase;
SELECT idcase, COUNT(DISTINCT activity) AS num_activities FROM event_log WHERE activity <> 'fim da viagem' GROUP BY idcase;
SELECT idcase, COUNT(*) AS total_events FROM event_log WHERE activity = 'fim da viagem' GROUP BY idcase;
SELECT idcase, COUNT(DISTINCT activity) AS num_activities FROM event_log WHERE activity != 'fim da viagem' GROUP BY idcase;
SELECT idcase, COUNT(DISTINCT activity) AS num_activities FROM event_log WHERE activity != 'fim da viagem' GROUP BY idcase;
SELECT idcase, COUNT(*) AS eventos FROM event_log WHERE activity <> 'fim da viagem' GROUP BY idcase;
SELECT idcase, COUNT(*) AS quantidade_eventos FROM event_log WHERE activity = 'fim da viagem' GROUP BY idcase;
SELECT idcase, COUNT(*) AS num_events FROM event_log WHERE activity <> 'fim da viagem' GROUP BY idcase;
SELECT idcase, COUNT(*) AS actions_executed FROM event_log WHERE activity = 'end of trip' GROUP BY idcase;
SELECT COUNT(*) FROM event_log WHERE activity = 'end of trip'; 
SELECT activity FROM event_log WHERE resource = 'Thomas' AND timestamp >= '2018-01-01' AND timestamp < '2018-07-01';
SELECT DISTINCT activity FROM event_log WHERE resource = 'Thomas' AND timestamp >= '2018-01-01' AND timestamp < '2018-07-01';
SELECT activity FROM event_log WHERE resource = 'Thomas' AND timestamp >= '2018-01-01' AND timestamp < '2018-07-01';
SELECT DISTINCT activity FROM event_log WHERE resource = 'Thomas' AND timestamp >= '2018-01-01' AND timestamp < '2018-07-01';
SELECT activity FROM event_log WHERE resource = 'Thomas' AND timestamp BETWEEN '2018-01-01' AND '2018-07-31';
SELECT activity FROM event_log WHERE resource = 'Thomas' AND timestamp >= '2018-01-01' AND timestamp <= '2018-07-31';
SELECT activity FROM event_log WHERE resource = 'Thomas' AND timestamp >= '2018-01-01' AND timestamp < '2018-07-01';
SELECT DISTINCT activity FROM event_log WHERE timestamp >= '2018-01-01' AND timestamp < '2018-07-01' AND resource = 'Thomas';
SELECT DISTINCT activity FROM event_log WHERE resource = 'Thomas' AND timestamp >= '2018-01-01' AND timestamp < '2018-07-01';
SELECT idcase FROM event_log WHERE activity = 'declaração rejeitada pelo supervisor' ORDER BY timestamp ASC;
SELECT idcase FROM event_log WHERE activity = 'declaração rejeitada pelo supervisor' ORDER BY timestamp ASC;
SELECT idcase FROM event_log WHERE activity = 'declaração rejeitada pelo supervisor' ORDER BY timestamp;
SELECT idcase, timestamp FROM event_log WHERE activity = 'declaração rejeitada pelo supervisor' ORDER BY timestamp ASC;
SELECT idcase FROM event_log WHERE activity = 'declaração rejeitada pelo supervisor' ORDER BY timestamp;
SELECT idcase, timestamp FROM event_log WHERE activity = 'declaração rejeitada pelo supervisor' ORDER BY timestamp;
SELECT idcase FROM event_log WHERE activity = 'declaração rejeitada pelo supervisor' ORDER BY timestamp;
SELECT idcase, timestamp FROM event_log WHERE activity = 'declaração rejeitada pelo supervisor' ORDER BY timestamp;
SELECT idcase FROM event_log WHERE activity = 'Rejeição determinada por supervisor' ORDER BY timestamp;
SELECT * FROM event_log WHERE activity = 'Rejeitado pelo supervisor' ORDER BY timestamp;
SELECT idcase FROM event_log WHERE activity = 'início da viagem' AND timestamp < '2018-04-01' AND idcase NOT IN ( SELECT idcase FROM event_log WHERE activity = 'fim da viagem' )
SELECT DISTINCT idcase FROM event_log WHERE activity = 'início da viagem' AND idcase NOT IN ( SELECT idcase FROM event_log WHERE activity = 'fim da viagem' AND timestamp < '2018-04-01' )
SELECT idcase FROM event_log WHERE activity = 'início da viagem' AND timestamp < '2018-04-01' AND idcase NOT IN ( SELECT idcase FROM event_log WHERE activity = 'fim da viagem' )
SELECT idcase FROM event_log WHERE activity = 'início da viagem' AND timestamp < '2018-03-31' EXCEPT SELECT idcase FROM event_log WHERE activity = 'fim da viagem'
SELECT idcase FROM event_log WHERE activity = 'início da viagem' AND timestamp < '2018-03-31' EXCEPT SELECT idcase FROM event_log WHERE activity = 'fim da viagem';
SELECT idcase FROM event_log WHERE activity = 'início da viagem' AND timestamp < '2018-03-31' AND idcase NOT IN ( SELECT idcase FROM event_log WHERE activity = 'fim da viagem' )
SELECT idcase FROM event_log WHERE activity = 'início da viagem' AND timestamp < '2018-03-31' EXCEPT SELECT idcase FROM event_log WHERE activity = 'fim da viagem';
SELECT DISTINCT idcase FROM event_log WHERE activity = 'início da viagem' AND timestamp < '2018-03-31' AND idcase NOT IN ( SELECT idcase FROM event_log WHERE activity = 'fim da viagem' )
SELECT idcase FROM event_log WHERE activity = 'início da viagem' AND timestamp < '2018-03-31' AND idcase NOT IN ( SELECT idcase FROM event_log WHERE activity = 'fim da viagem' )
SELECT "activity" FROM "event_log" WHERE "timestamp" < '2018-03-31' AND "activity" = 'Início da viagem';
SELECT id, activity, timestamp, resource, cost, idcase FROM event_log WHERE activity = 'start_trip' AND timestamp < '2018-03-31' AND idcase NOT IN ( SELECT idcase FROM event_log WHERE activity = 'finish_trip' )
SELECT DISTINCT idcase FROM event_log WHERE activity = 'fim da viagem' AND idcase NOT IN ( SELECT idcase FROM event_log WHERE activity IN ('requisição de pagamento', 'pagamento efetuado') ) GROUP BY idcase HAVING COUNT(DISTINCT resource) > 1;
SELECT idcase FROM event_log WHERE activity = 'fim da viagem' GROUP BY idcase HAVING COUNT(DISTINCT resource) > 1 AND idcase NOT IN ( SELECT idcase FROM event_log WHERE activity = 'requisição de pagamento' OR activity = 'pagamento efetuado' )
SELECT idcase FROM event_log WHERE activity = 'fim da viagem' AND idcase NOT IN ( SELECT idcase FROM event_log WHERE activity IN ('requisição de pagamento', 'pagamento efetuado') ) GROUP BY idcase HAVING COUNT(DISTINCT resource) > 1;
SELECT idcase FROM event_log WHERE activity = 'fim da viagem' GROUP BY idcase HAVING COUNT(DISTINCT resource) > 1 AND SUM(CASE WHEN activity = 'requisição de pagamento' THEN 1 ELSE 0 END) = 0 AND SUM(CASE WHEN activity = 'pagamento efetuado' THEN 1 ELSE 0 END) = 0;
SELECT idcase FROM event_log WHERE activity = 'fim da viagem' GROUP BY idcase HAVING COUNT(DISTINCT resource) > 1 AND SUM(CASE WHEN activity = 'requisição de pagamento' THEN 1 ELSE 0 END) = 0 AND SUM(CASE WHEN activity = 'pagamento efetuado' THEN 1 ELSE 0 END) = 0;
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(DISTINCT resource) > 1 AND SUM(CASE WHEN activity = 'fim da viagem' THEN 1 ELSE 0 END) > 0 AND SUM(CASE WHEN activity = 'requisição de pagamento' THEN 1 ELSE 0 END) = 0 AND SUM(CASE WHEN activity = 'pagamento efetuado' THEN 1 ELSE 0 END) = 0;
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(DISTINCT resource) > 1 AND SUM(CASE WHEN activity = 'fim da viagem' THEN 1 ELSE 0 END) > 0 AND SUM(CASE WHEN activity = 'requisição de pagamento' THEN 1 ELSE 0 END) = 0 AND SUM(CASE WHEN activity = 'pagamento efetuado' THEN 1 ELSE 0 END) = 0;
SELECT id, activity, timestamp, resource, cost, idcase FROM event_log WHERE activity = 'finalized' AND cost = 0;
SELECT id, activity, timestamp, resource, cost, idcase FROM event_log WHERE activity = 'Fim de viagem' AND idcase NOT IN ( SELECT idcase FROM event_log WHERE activity = 'Requisição de pagamento' OR activity = 'Pagamento efetuado' )
SELECT idcase, COUNT(DISTINCT resource) AS quantidade_recursos, SUM(cost) AS custo_total FROM event_log GROUP BY idcase;
SELECT idcase, COUNT(DISTINCT resource) AS num_resources, SUM(cost) AS total_cost FROM event_log GROUP BY idcase;
SELECT idcase, COUNT(DISTINCT resource) AS num_resources, SUM(cost) AS total_cost FROM event_log GROUP BY idcase;
SELECT idcase, COUNT(DISTINCT resource) AS num_unique_resources, SUM(cost) AS total_cost FROM event_log GROUP BY idcase;
SELECT idcase, COUNT(DISTINCT resource) AS num_resources, SUM(cost) AS total_cost FROM event_log GROUP BY idcase;
SELECT idcase, SUM(cost) AS total_cost, COUNT(DISTINCT resource) AS total_resources FROM event_log GROUP BY idcase;
SELECT idcase, SUM(cost) AS total_cost, COUNT(DISTINCT resource) AS total_resources FROM event_log GROUP BY idcase;
SELECT idcase, SUM(cost) AS total_cost, COUNT(DISTINCT resource) AS total_resources FROM event_log GROUP BY idcase;
SELECT idcase, SUM(cost) AS total_cost, COUNT(DISTINCT resource) AS total_resources FROM event_log GROUP BY idcase;
SELECT resource, COUNT(DISTINCT resource) AS num_people, SUM(cost) AS total_cost FROM event_log WHERE activity = 'travel_statement' GROUP BY idcase;
SELECT idcase FROM event_log WHERE activity LIKE 'permissão%' GROUP BY idcase HAVING COUNT(DISTINCT activity) > 1;
SELECT idcase FROM event_log WHERE activity LIKE 'permissão%' GROUP BY idcase HAVING COUNT(DISTINCT activity) > 1;
SELECT idcase FROM event_log WHERE activity LIKE 'permissão%' GROUP BY idcase HAVING COUNT(DISTINCT activity) >= 2;
SELECT idcase FROM event_log WHERE activity LIKE 'permissão%' GROUP BY idcase HAVING COUNT(DISTINCT activity) > 1;
SELECT idcase FROM event_log WHERE activity LIKE 'permissão%' GROUP BY idcase HAVING COUNT(DISTINCT activity) > 1;
SELECT idcase FROM event_log WHERE activity LIKE 'permissão%' GROUP BY idcase HAVING COUNT(DISTINCT activity) > 1;
SELECT idcase, activity FROM event_log WHERE activity LIKE 'permissão%' GROUP BY idcase, activity HAVING COUNT(*) > 1;
SELECT idcase FROM event_log WHERE activity LIKE 'permissão%' GROUP BY idcase HAVING COUNT(DISTINCT activity) > 1;
SELECT Nenhuma ação relacionada a permissões foi executada durante o processamento da declaração CREATE TABLE "event_log".
SELECT "activity", COUNT(*) AS "num_actions" FROM "event_log" WHERE "activity" LIKE '%permissão%' GROUP BY "activity" HAVING COUNT(*) > 1;
SELECT id, MAX(timestamp) FROM event_log GROUP BY idcase;
SELECT idcase, MAX(id) AS last_event_id FROM event_log GROUP BY idcase ORDER BY timestamp;
SELECT idcase, MAX(timestamp) as last_event_timestamp FROM event_log GROUP BY idcase;
SELECT idcase, MAX(timestamp) as last_event_timestamp FROM event_log GROUP BY idcase ORDER BY last_event_timestamp DESC;
SELECT idcase, MAX(timestamp) as last_event_timestamp FROM event_log GROUP BY idcase;
SELECT idcase, MAX(timestamp) as last_event FROM event_log GROUP BY idcase;
SELECT idcase, MAX(timestamp) as last_event_timestamp FROM event_log GROUP BY idcase;
SELECT id, activity, timestamp, resource, cost, idcase FROM event_log ORDER BY timestamp DESC;
SELECT idcase, MAX(timestamp) as last_intervention FROM event_log WHERE activity = 'intervention' GROUP BY idcase;
SELECT activity FROM event_log GROUP BY activity HAVING COUNT(*) >= 100;
SELECT DISTINCT activity FROM event_log GROUP BY activity HAVING COUNT(activity) >= 100;
SELECT activity, COUNT(activity) AS total_occurrences FROM event_log GROUP BY activity HAVING COUNT(activity) >= 100;
SELECT DISTINCT activity FROM event_log GROUP BY activity HAVING COUNT(activity) >= 100;
SELECT activity, COUNT(*) as occurrences FROM event_log GROUP BY activity HAVING COUNT(*) >= 100;
SELECT activity, COUNT(*) as occurrences FROM event_log GROUP BY activity HAVING COUNT(*) >= 100;
SELECT activity, COUNT(*) as occurrences FROM event_log GROUP BY activity HAVING COUNT(*) >= 100;
SELECT activity, COUNT(*) as total_executions FROM event_log GROUP BY activity HAVING total_executions >= 100;
SELECT COUNT(DISTINCT idcase) AS quantidade_casos, CASE WHEN activity IN ('atividade_funcionário') THEN 'funcionário' WHEN activity IN ('atividade_supervisor') THEN 'supervisor' WHEN activity IN ('atividade_administracao') THEN 'administração' WHEN activity IN ('atividade_pre_aprovador') THEN 'pré-aprovador' WHEN activity IN ('atividade_responsavel_orcamento') THEN 'responsável pelo orçamento' WHEN activity IN ('atividade_supervisor') THEN 'supervisor' WHEN activity IN ('atividade_diretor') THEN 'diretor' END AS grupo FROM event_log GROUP BY grupo;
SELECT COUNT(DISTINCT idcase) AS num_cases, CASE WHEN activity IN ('funcionário', 'supervisor', 'administração', 'pré-aprovador', 'responsável pelo orçamento', 'supervisor', 'diretor') THEN activity ELSE 'Outro' END AS group FROM event_log GROUP BY group;
SELECT COUNT(DISTINCT idcase) AS quantidade_casos, CASE WHEN activity IN ('funcionário') THEN 'funcionário' WHEN activity IN ('supervisor') THEN 'supervisor' WHEN activity IN ('administração') THEN 'administração' WHEN activity IN ('pré-aprovador') THEN 'pré-aprovador' WHEN activity IN ('responsável pelo orçamento') THEN 'responsável pelo orçamento' WHEN activity IN ('diretor') THEN 'diretor' END AS grupo FROM event_log GROUP BY grupo;
SELECT COUNT(DISTINCT idcase) AS num_cases, CASE WHEN activity IN ('funcionário') THEN 'funcionário' WHEN activity IN ('supervisor') THEN 'supervisor' WHEN activity IN ('administração') THEN 'administração' WHEN activity IN ('pré-aprovador') THEN 'pré-aprovador' WHEN activity IN ('responsável pelo orçamento') THEN 'responsável pelo orçamento' WHEN activity IN ('diretor') THEN 'diretor' END AS group FROM event_log GROUP BY group;
SELECT COUNT(*) AS total_declaracoes, CASE WHEN activity IN ('funcionário') THEN 'funcionário' WHEN activity IN ('supervisor') THEN 'supervisor' WHEN activity IN ('administração') THEN 'administração' WHEN activity IN ('pré-aprovador') THEN 'pré-aprovador' WHEN activity IN ('responsável pelo orçamento') THEN 'responsável pelo orçamento' WHEN activity IN ('supervisor') THEN 'supervisor' WHEN activity IN ('diretor') THEN 'diretor' END AS grupo FROM event_log GROUP BY grupo;
SELECT activity, resource, COUNT(*) AS num_executions FROM event_log GROUP BY activity, resource ORDER BY CASE WHEN resource = 'funcionário' THEN 1 WHEN resource = 'supervisor' THEN 2 WHEN resource = 'administração' THEN 3 WHEN resource = 'pré-aprovador' THEN 4 WHEN resource = 'responsável pelo orçamento' THEN 5 WHEN resource = 'diretor' THEN 6 END, num_executions DESC;
SELECT activity, COUNT(activity) AS total_executions FROM event_log WHERE resource IN ('funcionário', 'supervisor', 'administração', 'pré-aprovador', 'responsável pelo orçamento', 'diretor') GROUP BY activity ORDER BY total_executions DESC;
SELECT SUBSTR(activity, INSTR(activity, ' ') + 1) AS group, COUNT(*) AS total_executions FROM event_log GROUP BY group ORDER BY total_executions DESC;
SELECT idcase FROM event_log WHERE timestamp > (SELECT MAX(timestamp) FROM event_log WHERE activity = 'finalização da viagem');
SELECT idcase FROM event_log WHERE activity = 'finalização da viagem' AND timestamp < (SELECT MAX(timestamp) FROM event_log WHERE idcase = event_log.idcase) GROUP BY idcase;
SELECT idcase FROM event_log WHERE activity = 'finalização da viagem' AND timestamp < (SELECT timestamp FROM event_log WHERE activity = 'finalização da viagem') GROUP BY idcase;
SELECT idcase FROM event_log WHERE timestamp > (SELECT MAX(timestamp) FROM event_log WHERE activity = 'finalização da viagem');
SELECT idcase FROM event_log WHERE activity <> 'finalização da viagem' AND timestamp > (SELECT MAX(timestamp) FROM event_log WHERE activity = 'finalização da viagem');
SELECT * FROM event_log WHERE activity = 'finalização da viagem';
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE timestamp = (SELECT MAX(timestamp) FROM event_log WHERE activity = 'envio de lembrete');
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE activity = 'envio de lembrete' AND timestamp = (SELECT MAX(timestamp) FROM event_log)
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE timestamp = (SELECT MAX(timestamp) FROM event_log WHERE activity = 'envio de lembrete');
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE activity = 'envio de lembrete' AND timestamp = (SELECT MAX(timestamp) FROM event_log WHERE idcase = event_log.idcase);
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE timestamp = (SELECT MAX(timestamp) FROM event_log WHERE activity = 'envio de lembrete');
SELECT COUNT(*) FROM event_log WHERE activity = 'envio de lembrete';
SELECT DISTINCT resource FROM event_log WHERE timestamp < '2018-03-31' OR timestamp > '2018-03-31'
SELECT DISTINCT resource FROM event_log WHERE timestamp >= '2018-03-31 00:00:00' AND timestamp < '2018-04-01 00:00:00' AND resource NOT IN (SELECT DISTINCT resource FROM event_log WHERE timestamp < '2018-03-31 00:00:00' OR timestamp >= '2018-04-01 00:00:00');
SELECT DISTINCT resource FROM event_log WHERE DATE(timestamp) != '2018-03-31';
SELECT DISTINCT resource FROM event_log WHERE timestamp >= '2018-03-31 00:00:00' AND timestamp < '2018-04-01 00:00:00' AND resource NOT IN ( SELECT DISTINCT resource FROM event_log WHERE timestamp < '2018-03-31 00:00:00' OR timestamp >= '2018-04-01 00:00:00' )
SELECT resource FROM event_log WHERE activity = 'declaration of travel' AND timestamp = '2018-03-31' AND resource NOT IN ( SELECT resource FROM event_log WHERE timestamp = '2018-03-31' AND activity <> 'declaration of travel' )
SELECT DISTINCT resource FROM event_log WHERE activity != 'processamento de declaração' AND timestamp = '2018-03-31';
SELECT activity, COUNT(*) AS num_events FROM event_log WHERE timestamp BETWEEN '2018-12-01' AND '2018-12-05' GROUP BY activity;
SELECT activity, COUNT(activity) AS frequency FROM event_log WHERE timestamp BETWEEN '2018-12-01' AND '2018-12-05' GROUP BY activity;
SELECT activity, COUNT(*) AS frequency FROM event_log WHERE timestamp BETWEEN '2018-12-01' AND '2018-12-05' GROUP BY activity;
SELECT activity, COUNT(*) AS frequency FROM event_log WHERE timestamp BETWEEN '2018-12-01' AND '2018-12-05' AND idcase IS NOT NULL GROUP BY activity;
SELECT activity, COUNT(*) AS num_executions FROM event_log WHERE timestamp BETWEEN '2018-12-01' AND '2018-12-05' AND idcase IS NOT NULL GROUP BY activity;
SELECT activity, COUNT(activity) AS frequency FROM event_log WHERE timestamp BETWEEN '2018-12-01' AND '2018-12-05' GROUP BY activity;
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE activity <> 'pagamento efetuado';
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE activity <> 'pagamento efetuado';
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE activity = 'pagamento efetuado' AND timestamp IS NULL;
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE activity != 'pagamento efetuado';
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE activity <> 'pagamento efetuado';
SELECT COUNT(*) FROM event_log WHERE cost IS NULL;
SELECT COUNT(*) FROM event_log WHERE activity = 'payment' AND cost IS NULL;
SELECT idcase FROM event_log WHERE activity <> 'realização de pagamento' GROUP BY idcase;
SELECT activity, COUNT(DISTINCT resource) AS num_resources FROM event_log GROUP BY activity;
SELECT activity, COUNT(DISTINCT resource) AS distinct_resources FROM event_log GROUP BY activity;
SELECT activity, COUNT(DISTINCT resource) AS num_resources FROM event_log GROUP BY activity;
SELECT activity, COUNT(DISTINCT resource) AS unique_resources FROM event_log GROUP BY activity;
SELECT activity, COUNT(DISTINCT resource) AS distinct_resources FROM event_log GROUP BY activity;
SELECT activity, COUNT(DISTINCT resource) AS num_employees FROM event_log GROUP BY activity;
SELECT DISTINCT activity FROM event_log WHERE id IN ( SELECT id - 1 FROM event_log WHERE activity = 'envio de lembrete' )
SELECT activity FROM event_log WHERE timestamp < (SELECT timestamp FROM event_log WHERE activity = 'envio de um lembrete') ORDER BY timestamp;
SELECT activity FROM event_log WHERE activity = 'envio de lembrete' AND idcase IN ( SELECT idcase FROM event_log WHERE activity = 'declaração de viagem' )
SELECT idcase, COUNT(id) AS num_events FROM event_log GROUP BY idcase;
SELECT idcase, COUNT(*) AS num_events FROM event_log GROUP BY idcase ORDER BY num_events;
SELECT COUNT(id) AS quantidade_eventos, COUNT(DISTINCT idcase) AS quantidade_casos FROM event_log GROUP BY idcase;
SELECT COUNT(DISTINCT idcase) as total_cases FROM ( SELECT idcase, COUNT(*) as event_count FROM event_log GROUP BY idcase ) as event_counts; 
SELECT COUNT(*) AS num_actions FROM event_log; 
SELECT AVG(SUM(cost)) AS average_total_cost FROM event_log GROUP BY idcase;
SELECT AVG(total_cost) AS average_total_cost FROM ( SELECT idcase, SUM(cost) AS total_cost FROM event_log GROUP BY idcase ) subquery;
SELECT AVG(total_cost) AS average_total_cost FROM ( SELECT idcase, SUM(cost) AS total_cost FROM event_log GROUP BY idcase ) subquery;
SELECT AVG(total_cost) AS average_total_cost FROM ( SELECT idcase, SUM(cost) AS total_cost FROM event_log GROUP BY idcase ) subquery;
SELECT AVG(SUM(cost)) AS average_total_cost FROM event_log GROUP BY idcase;
SELECT AVG(cost) AS average_cost FROM event_log WHERE activity = 'processing_declaration';
SELECT "resource", AVG("cost") AS "average_cost" FROM "event_log" GROUP BY "resource";
SELECT "resource", AVG("cost") AS "average_cost" FROM "event_log" GROUP BY "resource";
SELECT "resource", AVG("cost") AS "average_cost" FROM "event_log" GROUP BY "resource";
SELECT "resource", AVG("cost") AS "average_cost" FROM "event_log" GROUP BY "resource";
SELECT "resource", AVG("cost") AS "average_cost" FROM "event_log" GROUP BY "resource";
SELECT resource, AVG(cost) AS average_cost FROM event_log GROUP BY resource;
SELECT "resource", COUNT(*) AS frequency FROM event_log GROUP BY "resource" ORDER BY frequency DESC LIMIT 10;
SELECT "resource", COUNT("resource") AS "count" FROM "event_log" GROUP BY "resource" ORDER BY "count" DESC LIMIT 10;
SELECT "resource", COUNT("resource") AS "frequency" FROM "event_log" GROUP BY "resource" ORDER BY "frequency" DESC LIMIT 10;
SELECT "resource", COUNT("resource") AS "frequency" FROM "event_log" GROUP BY "resource" ORDER BY "frequency" DESC LIMIT 10;
SELECT "resource", COUNT("id") AS "num_events" FROM "event_log" GROUP BY "resource" ORDER BY "num_events" DESC LIMIT 10;
SELECT resource, COUNT(resource) AS total_requests FROM event_log WHERE activity = 'processamento de declarações de viagens' GROUP BY resource ORDER BY total_requests DESC LIMIT 10;
SELECT DATE(timestamp) AS day, COUNT(*) AS total_events FROM event_log GROUP BY day;
SELECT DATE(timestamp) AS day, activity, COUNT(*) AS occurrences FROM event_log GROUP BY day, activity;
SELECT DATE(timestamp) AS day, COUNT(*) AS actions_executed FROM event_log GROUP BY day;
SELECT idcase FROM event_log e1 WHERE EXISTS ( SELECT * FROM event_log e2 WHERE e1.id = e2.id - 1 AND e1.activity = e2.activity AND e1.resource <> e2.resource )
SELECT idcase, activity FROM event_log e1 WHERE EXISTS ( SELECT * FROM event_log e2 WHERE e1.id = e2.id - 1 AND e1.activity = e2.activity AND e1.resource <> e2.resource )
SELECT activity, COUNT(DISTINCT resource) AS num_resources FROM event_log GROUP BY activity HAVING COUNT(DISTINCT resource) > 1;
SELECT idcase, COUNT(*) AS num_events FROM event_log WHERE activity = 'declaração final aprovada pelo diretor' GROUP BY idcase;
SELECT COUNT(*) - 1 AS eventos_antecedentes FROM event_log WHERE activity = 'declaração final aprovada pelo diretor';
SELECT idcase, COUNT(*) AS intervenções_necessárias FROM event_log WHERE activity = 'approval' GROUP BY idcase;
SELECT idcase, timestamp AS requisicao_funcionario, (SELECT timestamp FROM event_log WHERE activity = 'permissão aprovada pela administração' AND idcase = el.idcase) AS aprovacao_administracao, (julianday((SELECT timestamp FROM event_log WHERE activity = 'permissão aprovada pela administração' AND idcase = el.idcase)) - julianday(timestamp)) AS tempo_passado FROM event_log el WHERE activity = 'permissão requisitada pelo funcionário';
SELECT idcase, timestamp AS timestamp_requisicao, LEAD(timestamp) OVER (PARTITION BY idcase ORDER BY timestamp) AS timestamp_aprovacao, julianday(LEAD(timestamp) OVER (PARTITION BY idcase ORDER BY timestamp)) - julianday(timestamp) AS intervalo_tempo FROM event_log WHERE activity = 'permissão requisitada pelo funcionário' OR activity = 'permissão aprovada pela administração';
SELECT TIMESTAMPDIFF(SECOND, MIN(timestamp) FILTER(WHERE activity = 'requisitar permissão'), MAX(timestamp) FILTER(WHERE activity = 'aprovar permissão')) AS tempo_passado FROM event_log WHERE activity IN ('requisitar permissão', 'aprovar permissão');
SELECT DISTINCT idcase FROM event_log WHERE activity = 'retrabalho';
SELECT idcase FROM event_log WHERE activity = 'retrabalho';
SELECT DISTINCT idcase FROM event_log WHERE activity = 'retrabalho';
SELECT - Não houve retrabalho nas declarações apresentadas.
SELECT Nenhuma das declarações apresentadas no esquema de banco de dados fornecido parece ter problemas que resultariam em retrabalho. Todas as declarações parecem estar corretas e bem estruturadas.
SELECT activity, resource, COUNT(*) AS num_executions FROM event_log GROUP BY activity, resource HAVING COUNT(*) > 1;
SELECT idcase, activity FROM event_log WHERE id IN ( SELECT id + 1 FROM event_log WHERE activity = ( SELECT activity FROM event_log GROUP BY activity HAVING COUNT(*) > 1 ) ) ORDER BY idcase;
SELECT id, activity, timestamp, resource, cost, idcase FROM event_log WHERE id IN ( SELECT id FROM event_log WHERE activity = ( SELECT activity FROM event_log GROUP BY activity HAVING COUNT(*) > 1 ) ORDER BY timestamp );
SELECT DISTINCT idcase FROM event_log e1 WHERE EXISTS ( SELECT * FROM event_log e2 WHERE e1.idcase = e2.idcase AND e1.activity = e2.activity AND e1.timestamp < e2.timestamp )
SELECT activity, COUNT(*) AS occurrences FROM event_log GROUP BY activity HAVING COUNT(*) > 1;
SELECT "activity", "timestamp", "resource" FROM event_log WHERE "idcase" IN ( SELECT "idcase" FROM event_log GROUP BY "idcase" HAVING COUNT(DISTINCT "activity") = 1 ) ORDER BY "timestamp";
SELECT activity, COUNT(*) as num_occurrences FROM event_log GROUP BY activity HAVING COUNT(*) >= 2;
SELECT DISTINCT resource FROM event_log WHERE activity = 'supervisor';
SELECT DISTINCT resource FROM event_log WHERE activity = 'supervisor_position' AND idcase = 'processing_declarations';
SELECT "resource" FROM event_log WHERE "activity" = "budgeting";
SELECT DISTINCT resource FROM event_log WHERE activity = 'responsável por orçamento' AND idcase = 'processamento de declarações';
